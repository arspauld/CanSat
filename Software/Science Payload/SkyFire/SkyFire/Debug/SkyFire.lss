
SkyFire.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000447a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000c2  00802000  0000447a  0000450e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000ec  008020c2  008020c2  000045d0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000045d0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000462c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000518  00000000  00000000  00004670  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000131a7  00000000  00000000  00004b88  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00004ac0  00000000  00000000  00017d2f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000948e  00000000  00000000  0001c7ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000142c  00000000  00000000  00025c80  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0003823d  00000000  00000000  000270ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000556e  00000000  00000000  0005f2e9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004e8  00000000  00000000  00064857  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00003664  00000000  00000000  00064d3f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	44 c1       	rjmp	.+648    	; 0x28a <__ctors_end>
       2:	00 00       	nop
       4:	68 c1       	rjmp	.+720    	; 0x2d6 <__bad_interrupt>
       6:	00 00       	nop
       8:	66 c1       	rjmp	.+716    	; 0x2d6 <__bad_interrupt>
       a:	00 00       	nop
       c:	64 c1       	rjmp	.+712    	; 0x2d6 <__bad_interrupt>
       e:	00 00       	nop
      10:	62 c1       	rjmp	.+708    	; 0x2d6 <__bad_interrupt>
      12:	00 00       	nop
      14:	60 c1       	rjmp	.+704    	; 0x2d6 <__bad_interrupt>
      16:	00 00       	nop
      18:	5e c1       	rjmp	.+700    	; 0x2d6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	5c c1       	rjmp	.+696    	; 0x2d6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	5a c1       	rjmp	.+692    	; 0x2d6 <__bad_interrupt>
      22:	00 00       	nop
      24:	58 c1       	rjmp	.+688    	; 0x2d6 <__bad_interrupt>
      26:	00 00       	nop
      28:	56 c1       	rjmp	.+684    	; 0x2d6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	54 c1       	rjmp	.+680    	; 0x2d6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	52 c1       	rjmp	.+676    	; 0x2d6 <__bad_interrupt>
      32:	00 00       	nop
      34:	07 c3       	rjmp	.+1550   	; 0x644 <__vector_13>
      36:	00 00       	nop
      38:	4e c1       	rjmp	.+668    	; 0x2d6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	4c c1       	rjmp	.+664    	; 0x2d6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	4a c1       	rjmp	.+660    	; 0x2d6 <__bad_interrupt>
      42:	00 00       	nop
      44:	48 c1       	rjmp	.+656    	; 0x2d6 <__bad_interrupt>
      46:	00 00       	nop
      48:	46 c1       	rjmp	.+652    	; 0x2d6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	44 c1       	rjmp	.+648    	; 0x2d6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	42 c1       	rjmp	.+644    	; 0x2d6 <__bad_interrupt>
      52:	00 00       	nop
      54:	40 c1       	rjmp	.+640    	; 0x2d6 <__bad_interrupt>
      56:	00 00       	nop
      58:	3e c1       	rjmp	.+636    	; 0x2d6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	3c c1       	rjmp	.+632    	; 0x2d6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	3a c1       	rjmp	.+628    	; 0x2d6 <__bad_interrupt>
      62:	00 00       	nop
      64:	38 c1       	rjmp	.+624    	; 0x2d6 <__bad_interrupt>
      66:	00 00       	nop
      68:	36 c1       	rjmp	.+620    	; 0x2d6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	34 c1       	rjmp	.+616    	; 0x2d6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	32 c1       	rjmp	.+612    	; 0x2d6 <__bad_interrupt>
      72:	00 00       	nop
      74:	30 c1       	rjmp	.+608    	; 0x2d6 <__bad_interrupt>
      76:	00 00       	nop
      78:	2e c1       	rjmp	.+604    	; 0x2d6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	2c c1       	rjmp	.+600    	; 0x2d6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	2a c1       	rjmp	.+596    	; 0x2d6 <__bad_interrupt>
      82:	00 00       	nop
      84:	28 c1       	rjmp	.+592    	; 0x2d6 <__bad_interrupt>
      86:	00 00       	nop
      88:	26 c1       	rjmp	.+588    	; 0x2d6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	24 c1       	rjmp	.+584    	; 0x2d6 <__bad_interrupt>
      8e:	00 00       	nop
      90:	22 c1       	rjmp	.+580    	; 0x2d6 <__bad_interrupt>
      92:	00 00       	nop
      94:	20 c1       	rjmp	.+576    	; 0x2d6 <__bad_interrupt>
      96:	00 00       	nop
      98:	1e c1       	rjmp	.+572    	; 0x2d6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	1c c1       	rjmp	.+568    	; 0x2d6 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	1a c1       	rjmp	.+564    	; 0x2d6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	18 c1       	rjmp	.+560    	; 0x2d6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	16 c1       	rjmp	.+556    	; 0x2d6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	14 c1       	rjmp	.+552    	; 0x2d6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	12 c1       	rjmp	.+548    	; 0x2d6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	10 c1       	rjmp	.+544    	; 0x2d6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	f7 c2       	rjmp	.+1518   	; 0x6a8 <__vector_46>
      ba:	00 00       	nop
      bc:	0c 94 be 12 	jmp	0x257c	; 0x257c <__vector_47>
      c0:	0a c1       	rjmp	.+532    	; 0x2d6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	08 c1       	rjmp	.+528    	; 0x2d6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	06 c1       	rjmp	.+524    	; 0x2d6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	04 c1       	rjmp	.+520    	; 0x2d6 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	02 c1       	rjmp	.+516    	; 0x2d6 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	00 c1       	rjmp	.+512    	; 0x2d6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	fe c0       	rjmp	.+508    	; 0x2d6 <__bad_interrupt>
      da:	00 00       	nop
      dc:	fc c0       	rjmp	.+504    	; 0x2d6 <__bad_interrupt>
      de:	00 00       	nop
      e0:	fa c0       	rjmp	.+500    	; 0x2d6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	f8 c0       	rjmp	.+496    	; 0x2d6 <__bad_interrupt>
      e6:	00 00       	nop
      e8:	0c 94 d2 12 	jmp	0x25a4	; 0x25a4 <__vector_58>
      ec:	f4 c0       	rjmp	.+488    	; 0x2d6 <__bad_interrupt>
      ee:	00 00       	nop
      f0:	f2 c0       	rjmp	.+484    	; 0x2d6 <__bad_interrupt>
      f2:	00 00       	nop
      f4:	f0 c0       	rjmp	.+480    	; 0x2d6 <__bad_interrupt>
      f6:	00 00       	nop
      f8:	ee c0       	rjmp	.+476    	; 0x2d6 <__bad_interrupt>
      fa:	00 00       	nop
      fc:	ec c0       	rjmp	.+472    	; 0x2d6 <__bad_interrupt>
      fe:	00 00       	nop
     100:	ea c0       	rjmp	.+468    	; 0x2d6 <__bad_interrupt>
     102:	00 00       	nop
     104:	e8 c0       	rjmp	.+464    	; 0x2d6 <__bad_interrupt>
     106:	00 00       	nop
     108:	e6 c0       	rjmp	.+460    	; 0x2d6 <__bad_interrupt>
     10a:	00 00       	nop
     10c:	e4 c0       	rjmp	.+456    	; 0x2d6 <__bad_interrupt>
     10e:	00 00       	nop
     110:	e2 c0       	rjmp	.+452    	; 0x2d6 <__bad_interrupt>
     112:	00 00       	nop
     114:	e0 c0       	rjmp	.+448    	; 0x2d6 <__bad_interrupt>
     116:	00 00       	nop
     118:	de c0       	rjmp	.+444    	; 0x2d6 <__bad_interrupt>
     11a:	00 00       	nop
     11c:	08 c1       	rjmp	.+528    	; 0x32e <__vector_71>
     11e:	00 00       	nop
     120:	43 c1       	rjmp	.+646    	; 0x3a8 <__vector_72>
     122:	00 00       	nop
     124:	7e c1       	rjmp	.+764    	; 0x422 <__vector_73>
     126:	00 00       	nop
     128:	b9 c1       	rjmp	.+882    	; 0x49c <__vector_74>
     12a:	00 00       	nop
     12c:	d4 c0       	rjmp	.+424    	; 0x2d6 <__bad_interrupt>
     12e:	00 00       	nop
     130:	d2 c0       	rjmp	.+420    	; 0x2d6 <__bad_interrupt>
     132:	00 00       	nop
     134:	d0 c0       	rjmp	.+416    	; 0x2d6 <__bad_interrupt>
     136:	00 00       	nop
     138:	ce c0       	rjmp	.+412    	; 0x2d6 <__bad_interrupt>
     13a:	00 00       	nop
     13c:	cc c0       	rjmp	.+408    	; 0x2d6 <__bad_interrupt>
     13e:	00 00       	nop
     140:	ca c0       	rjmp	.+404    	; 0x2d6 <__bad_interrupt>
     142:	00 00       	nop
     144:	c8 c0       	rjmp	.+400    	; 0x2d6 <__bad_interrupt>
     146:	00 00       	nop
     148:	c6 c0       	rjmp	.+396    	; 0x2d6 <__bad_interrupt>
     14a:	00 00       	nop
     14c:	c4 c0       	rjmp	.+392    	; 0x2d6 <__bad_interrupt>
     14e:	00 00       	nop
     150:	c2 c0       	rjmp	.+388    	; 0x2d6 <__bad_interrupt>
     152:	00 00       	nop
     154:	c0 c0       	rjmp	.+384    	; 0x2d6 <__bad_interrupt>
     156:	00 00       	nop
     158:	be c0       	rjmp	.+380    	; 0x2d6 <__bad_interrupt>
     15a:	00 00       	nop
     15c:	bc c0       	rjmp	.+376    	; 0x2d6 <__bad_interrupt>
     15e:	00 00       	nop
     160:	ba c0       	rjmp	.+372    	; 0x2d6 <__bad_interrupt>
     162:	00 00       	nop
     164:	b8 c0       	rjmp	.+368    	; 0x2d6 <__bad_interrupt>
     166:	00 00       	nop
     168:	b6 c0       	rjmp	.+364    	; 0x2d6 <__bad_interrupt>
     16a:	00 00       	nop
     16c:	0c 94 0c 13 	jmp	0x2618	; 0x2618 <__vector_91>
     170:	b2 c0       	rjmp	.+356    	; 0x2d6 <__bad_interrupt>
     172:	00 00       	nop
     174:	b0 c0       	rjmp	.+352    	; 0x2d6 <__bad_interrupt>
     176:	00 00       	nop
     178:	ae c0       	rjmp	.+348    	; 0x2d6 <__bad_interrupt>
     17a:	00 00       	nop
     17c:	ac c0       	rjmp	.+344    	; 0x2d6 <__bad_interrupt>
     17e:	00 00       	nop
     180:	aa c0       	rjmp	.+340    	; 0x2d6 <__bad_interrupt>
     182:	00 00       	nop
     184:	a8 c0       	rjmp	.+336    	; 0x2d6 <__bad_interrupt>
     186:	00 00       	nop
     188:	a6 c0       	rjmp	.+332    	; 0x2d6 <__bad_interrupt>
     18a:	00 00       	nop
     18c:	a4 c0       	rjmp	.+328    	; 0x2d6 <__bad_interrupt>
     18e:	00 00       	nop
     190:	a2 c0       	rjmp	.+324    	; 0x2d6 <__bad_interrupt>
     192:	00 00       	nop
     194:	a0 c0       	rjmp	.+320    	; 0x2d6 <__bad_interrupt>
     196:	00 00       	nop
     198:	9e c0       	rjmp	.+316    	; 0x2d6 <__bad_interrupt>
     19a:	00 00       	nop
     19c:	9c c0       	rjmp	.+312    	; 0x2d6 <__bad_interrupt>
     19e:	00 00       	nop
     1a0:	9a c0       	rjmp	.+308    	; 0x2d6 <__bad_interrupt>
     1a2:	00 00       	nop
     1a4:	98 c0       	rjmp	.+304    	; 0x2d6 <__bad_interrupt>
     1a6:	00 00       	nop
     1a8:	96 c0       	rjmp	.+300    	; 0x2d6 <__bad_interrupt>
     1aa:	00 00       	nop
     1ac:	94 c0       	rjmp	.+296    	; 0x2d6 <__bad_interrupt>
     1ae:	00 00       	nop
     1b0:	92 c0       	rjmp	.+292    	; 0x2d6 <__bad_interrupt>
     1b2:	00 00       	nop
     1b4:	90 c0       	rjmp	.+288    	; 0x2d6 <__bad_interrupt>
     1b6:	00 00       	nop
     1b8:	8e c0       	rjmp	.+284    	; 0x2d6 <__bad_interrupt>
     1ba:	00 00       	nop
     1bc:	8c c0       	rjmp	.+280    	; 0x2d6 <__bad_interrupt>
     1be:	00 00       	nop
     1c0:	8a c0       	rjmp	.+276    	; 0x2d6 <__bad_interrupt>
     1c2:	00 00       	nop
     1c4:	88 c0       	rjmp	.+272    	; 0x2d6 <__bad_interrupt>
     1c6:	00 00       	nop
     1c8:	86 c0       	rjmp	.+268    	; 0x2d6 <__bad_interrupt>
     1ca:	00 00       	nop
     1cc:	84 c0       	rjmp	.+264    	; 0x2d6 <__bad_interrupt>
     1ce:	00 00       	nop
     1d0:	82 c0       	rjmp	.+260    	; 0x2d6 <__bad_interrupt>
     1d2:	00 00       	nop
     1d4:	80 c0       	rjmp	.+256    	; 0x2d6 <__bad_interrupt>
     1d6:	00 00       	nop
     1d8:	7e c0       	rjmp	.+252    	; 0x2d6 <__bad_interrupt>
     1da:	00 00       	nop
     1dc:	7c c0       	rjmp	.+248    	; 0x2d6 <__bad_interrupt>
     1de:	00 00       	nop
     1e0:	7a c0       	rjmp	.+244    	; 0x2d6 <__bad_interrupt>
     1e2:	00 00       	nop
     1e4:	78 c0       	rjmp	.+240    	; 0x2d6 <__bad_interrupt>
     1e6:	00 00       	nop
     1e8:	76 c0       	rjmp	.+236    	; 0x2d6 <__bad_interrupt>
     1ea:	00 00       	nop
     1ec:	74 c0       	rjmp	.+232    	; 0x2d6 <__bad_interrupt>
     1ee:	00 00       	nop
     1f0:	72 c0       	rjmp	.+228    	; 0x2d6 <__bad_interrupt>
     1f2:	00 00       	nop
     1f4:	70 c0       	rjmp	.+224    	; 0x2d6 <__bad_interrupt>
     1f6:	00 00       	nop
     1f8:	6e c0       	rjmp	.+220    	; 0x2d6 <__bad_interrupt>
     1fa:	00 00       	nop
     1fc:	07 63       	ori	r16, 0x37	; 55
     1fe:	42 36       	cpi	r20, 0x62	; 98
     200:	b7 9b       	sbis	0x16, 7	; 22
     202:	d8 a7       	std	Y+40, r29	; 0x28
     204:	1a 39       	cpi	r17, 0x9A	; 154
     206:	68 56       	subi	r22, 0x68	; 104
     208:	18 ae       	std	Y+56, r1	; 0x38
     20a:	ba ab       	std	Y+50, r27	; 0x32
     20c:	55 8c       	ldd	r5, Z+29	; 0x1d
     20e:	1d 3c       	cpi	r17, 0xCD	; 205
     210:	b7 cc       	rjmp	.-1682   	; 0xfffffb80 <__eeprom_end+0xff7efb80>
     212:	57 63       	ori	r21, 0x37	; 55
     214:	bd 6d       	ori	r27, 0xDD	; 221
     216:	ed fd       	.word	0xfded	; ????
     218:	75 3e       	cpi	r23, 0xE5	; 229
     21a:	f6 17       	cp	r31, r22
     21c:	72 31       	cpi	r23, 0x12	; 18
     21e:	bf 00       	.word	0x00bf	; ????
     220:	00 00       	nop
     222:	80 3f       	cpi	r24, 0xF0	; 240
     224:	08 00       	.word	0x0008	; ????
     226:	00 00       	nop
     228:	be 92       	st	-X, r11
     22a:	24 49       	sbci	r18, 0x94	; 148
     22c:	12 3e       	cpi	r17, 0xE2	; 226
     22e:	ab aa       	std	Y+51, r10	; 0x33
     230:	aa 2a       	or	r10, r26
     232:	be cd       	rjmp	.-1156   	; 0xfffffdb0 <__eeprom_end+0xff7efdb0>
     234:	cc cc       	rjmp	.-1640   	; 0xfffffbce <__eeprom_end+0xff7efbce>
     236:	4c 3e       	cpi	r20, 0xEC	; 236
     238:	00 00       	nop
     23a:	00 80       	ld	r0, Z
     23c:	be ab       	std	Y+54, r27	; 0x36
     23e:	aa aa       	std	Y+50, r10	; 0x32
     240:	aa 3e       	cpi	r26, 0xEA	; 234
     242:	00 00       	nop
     244:	00 00       	nop
     246:	bf 00       	.word	0x00bf	; ????
     248:	00 00       	nop
     24a:	80 3f       	cpi	r24, 0xF0	; 240
     24c:	00 00       	nop
     24e:	00 00       	nop
     250:	00 08       	sbc	r0, r0
     252:	41 78       	andi	r20, 0x81	; 129
     254:	d3 bb       	out	0x13, r29	; 19
     256:	43 87       	std	Z+11, r20	; 0x0b
     258:	d1 13       	cpse	r29, r17
     25a:	3d 19       	sub	r19, r13
     25c:	0e 3c       	cpi	r16, 0xCE	; 206
     25e:	c3 bd       	out	0x23, r28	; 35
     260:	42 82       	std	Z+2, r4	; 0x02
     262:	ad 2b       	or	r26, r29
     264:	3e 68       	ori	r19, 0x8E	; 142
     266:	ec 82       	std	Y+4, r14	; 0x04
     268:	76 be       	out	0x36, r7	; 54
     26a:	d9 8f       	std	Y+25, r29	; 0x19
     26c:	e1 a9       	ldd	r30, Z+49	; 0x31
     26e:	3e 4c       	sbci	r19, 0xCE	; 206
     270:	80 ef       	ldi	r24, 0xF0	; 240
     272:	ff be       	out	0x3f, r15	; 63
     274:	01 c4       	rjmp	.+2050   	; 0xa78 <usart_init_rs232+0x12a>
     276:	ff 7f       	andi	r31, 0xFF	; 255
     278:	3f 00       	.word	0x003f	; ????
     27a:	00 00       	nop
	...

0000027e <__trampolines_end>:
     27e:	63 64       	ori	r22, 0x43	; 67
     280:	69 6e       	ori	r22, 0xE9	; 233
     282:	6f 70       	andi	r22, 0x0F	; 15
     284:	73 75       	andi	r23, 0x53	; 83
     286:	78 58       	subi	r23, 0x88	; 136
     288:	5b 00       	.word	0x005b	; ????

0000028a <__ctors_end>:
     28a:	11 24       	eor	r1, r1
     28c:	1f be       	out	0x3f, r1	; 63
     28e:	cf ef       	ldi	r28, 0xFF	; 255
     290:	cd bf       	out	0x3d, r28	; 61
     292:	df e3       	ldi	r29, 0x3F	; 63
     294:	de bf       	out	0x3e, r29	; 62
     296:	00 e0       	ldi	r16, 0x00	; 0
     298:	0c bf       	out	0x3c, r16	; 60
     29a:	18 be       	out	0x38, r1	; 56
     29c:	19 be       	out	0x39, r1	; 57
     29e:	1a be       	out	0x3a, r1	; 58
     2a0:	1b be       	out	0x3b, r1	; 59

000002a2 <__do_copy_data>:
     2a2:	10 e2       	ldi	r17, 0x20	; 32
     2a4:	a0 e0       	ldi	r26, 0x00	; 0
     2a6:	b0 e2       	ldi	r27, 0x20	; 32
     2a8:	ea e7       	ldi	r30, 0x7A	; 122
     2aa:	f4 e4       	ldi	r31, 0x44	; 68
     2ac:	00 e0       	ldi	r16, 0x00	; 0
     2ae:	0b bf       	out	0x3b, r16	; 59
     2b0:	02 c0       	rjmp	.+4      	; 0x2b6 <__do_copy_data+0x14>
     2b2:	07 90       	elpm	r0, Z+
     2b4:	0d 92       	st	X+, r0
     2b6:	a2 3c       	cpi	r26, 0xC2	; 194
     2b8:	b1 07       	cpc	r27, r17
     2ba:	d9 f7       	brne	.-10     	; 0x2b2 <__do_copy_data+0x10>
     2bc:	1b be       	out	0x3b, r1	; 59

000002be <__do_clear_bss>:
     2be:	21 e2       	ldi	r18, 0x21	; 33
     2c0:	a2 ec       	ldi	r26, 0xC2	; 194
     2c2:	b0 e2       	ldi	r27, 0x20	; 32
     2c4:	01 c0       	rjmp	.+2      	; 0x2c8 <.do_clear_bss_start>

000002c6 <.do_clear_bss_loop>:
     2c6:	1d 92       	st	X+, r1

000002c8 <.do_clear_bss_start>:
     2c8:	aa 37       	cpi	r26, 0x7A	; 122
     2ca:	b2 07       	cpc	r27, r18
     2cc:	e1 f7       	brne	.-8      	; 0x2c6 <.do_clear_bss_loop>
     2ce:	0e 94 d4 0b 	call	0x17a8	; 0x17a8 <main>
     2d2:	0c 94 9d 20 	jmp	0x413a	; 0x413a <_exit>
     2c8:	ae 3a       	cpi	r26, 0xAE	; 174
     2ca:	b2 07       	cpc	r27, r18
     2cc:	e1 f7       	brne	.-8      	; 0x2c6 <.do_clear_bss_loop>
     2ce:	0e 94 02 12 	call	0x2404	; 0x2404 <main>
     2d2:	0c 94 3b 22 	jmp	0x4476	; 0x4476 <_exit>

000002d6 <__bad_interrupt>:
     2d6:	94 ce       	rjmp	.-728    	; 0x0 <__vectors>

000002d8 <_read>:
#elif (defined(__GNUC__) && (XMEGA || MEGA) )

int _read (int *f); // Remove GCC compiler warning

int _read (int *f)
{
     2d8:	cf 93       	push	r28
     2da:	df 93       	push	r29
     2dc:	1f 92       	push	r1
     2de:	cd b7       	in	r28, 0x3d	; 61
     2e0:	de b7       	in	r29, 0x3e	; 62
	char c;
	ptr_get(stdio_base,&c);
     2e2:	80 91 28 21 	lds	r24, 0x2128	; 0x802128 <stdio_base>
     2e6:	90 91 29 21 	lds	r25, 0x2129	; 0x802129 <stdio_base+0x1>
     2ea:	e0 91 24 21 	lds	r30, 0x2124	; 0x802124 <ptr_get>
     2ee:	f0 91 25 21 	lds	r31, 0x2125	; 0x802125 <ptr_get+0x1>
     2f2:	be 01       	movw	r22, r28
     2f4:	6f 5f       	subi	r22, 0xFF	; 255
     2f6:	7f 4f       	sbci	r23, 0xFF	; 255
     2f8:	19 95       	eicall
	return c;
     2fa:	89 81       	ldd	r24, Y+1	; 0x01
}
     2fc:	08 2e       	mov	r0, r24
     2fe:	00 0c       	add	r0, r0
     300:	99 0b       	sbc	r25, r25
     302:	0f 90       	pop	r0
     304:	df 91       	pop	r29
     306:	cf 91       	pop	r28
     308:	08 95       	ret

0000030a <_write>:
#elif (defined(__GNUC__) && (XMEGA || MEGA))

int _write (char c, int *f);

int _write (char c, int *f)
{
     30a:	68 2f       	mov	r22, r24
	if (ptr_put(stdio_base, c) < 0) {
     30c:	80 91 28 21 	lds	r24, 0x2128	; 0x802128 <stdio_base>
     310:	90 91 29 21 	lds	r25, 0x2129	; 0x802129 <stdio_base+0x1>
     314:	e0 91 26 21 	lds	r30, 0x2126	; 0x802126 <ptr_put>
     318:	f0 91 27 21 	lds	r31, 0x2127	; 0x802127 <ptr_put+0x1>
     31c:	19 95       	eicall
     31e:	99 23       	and	r25, r25
     320:	1c f0       	brlt	.+6      	; 0x328 <_write+0x1e>
		return -1;
	}
	return 1;
     322:	81 e0       	ldi	r24, 0x01	; 1
     324:	90 e0       	ldi	r25, 0x00	; 0
     326:	08 95       	ret
int _write (char c, int *f);

int _write (char c, int *f)
{
	if (ptr_put(stdio_base, c) < 0) {
		return -1;
     328:	8f ef       	ldi	r24, 0xFF	; 255
     32a:	9f ef       	ldi	r25, 0xFF	; 255
	}
	return 1;
}
     32c:	08 95       	ret

0000032e <__vector_71>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCA_CH0_vect)
{
     32e:	1f 92       	push	r1
     330:	0f 92       	push	r0
     332:	0f b6       	in	r0, 0x3f	; 63
     334:	0f 92       	push	r0
     336:	11 24       	eor	r1, r1
     338:	08 b6       	in	r0, 0x38	; 56
     33a:	0f 92       	push	r0
     33c:	18 be       	out	0x38, r1	; 56
     33e:	09 b6       	in	r0, 0x39	; 57
     340:	0f 92       	push	r0
     342:	19 be       	out	0x39, r1	; 57
     344:	0b b6       	in	r0, 0x3b	; 59
     346:	0f 92       	push	r0
     348:	1b be       	out	0x3b, r1	; 59
     34a:	2f 93       	push	r18
     34c:	3f 93       	push	r19
     34e:	4f 93       	push	r20
     350:	5f 93       	push	r21
     352:	6f 93       	push	r22
     354:	7f 93       	push	r23
     356:	8f 93       	push	r24
     358:	9f 93       	push	r25
     35a:	af 93       	push	r26
     35c:	bf 93       	push	r27
     35e:	ef 93       	push	r30
     360:	ff 93       	push	r31
	adca_callback(&ADCA, ADC_CH0, adc_get_result(&ADCA, ADC_CH0));
     362:	40 91 24 02 	lds	r20, 0x0224	; 0x800224 <__TEXT_REGION_LENGTH__+0x700224>
     366:	50 91 25 02 	lds	r21, 0x0225	; 0x800225 <__TEXT_REGION_LENGTH__+0x700225>
     36a:	e0 91 2a 21 	lds	r30, 0x212A	; 0x80212a <adca_callback>
     36e:	f0 91 2b 21 	lds	r31, 0x212B	; 0x80212b <adca_callback+0x1>
     372:	61 e0       	ldi	r22, 0x01	; 1
     374:	80 e0       	ldi	r24, 0x00	; 0
     376:	92 e0       	ldi	r25, 0x02	; 2
     378:	19 95       	eicall
}
     37a:	ff 91       	pop	r31
     37c:	ef 91       	pop	r30
     37e:	bf 91       	pop	r27
     380:	af 91       	pop	r26
     382:	9f 91       	pop	r25
     384:	8f 91       	pop	r24
     386:	7f 91       	pop	r23
     388:	6f 91       	pop	r22
     38a:	5f 91       	pop	r21
     38c:	4f 91       	pop	r20
     38e:	3f 91       	pop	r19
     390:	2f 91       	pop	r18
     392:	0f 90       	pop	r0
     394:	0b be       	out	0x3b, r0	; 59
     396:	0f 90       	pop	r0
     398:	09 be       	out	0x39, r0	; 57
     39a:	0f 90       	pop	r0
     39c:	08 be       	out	0x38, r0	; 56
     39e:	0f 90       	pop	r0
     3a0:	0f be       	out	0x3f, r0	; 63
     3a2:	0f 90       	pop	r0
     3a4:	1f 90       	pop	r1
     3a6:	18 95       	reti

000003a8 <__vector_72>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCA_CH1_vect)
{
     3a8:	1f 92       	push	r1
     3aa:	0f 92       	push	r0
     3ac:	0f b6       	in	r0, 0x3f	; 63
     3ae:	0f 92       	push	r0
     3b0:	11 24       	eor	r1, r1
     3b2:	08 b6       	in	r0, 0x38	; 56
     3b4:	0f 92       	push	r0
     3b6:	18 be       	out	0x38, r1	; 56
     3b8:	09 b6       	in	r0, 0x39	; 57
     3ba:	0f 92       	push	r0
     3bc:	19 be       	out	0x39, r1	; 57
     3be:	0b b6       	in	r0, 0x3b	; 59
     3c0:	0f 92       	push	r0
     3c2:	1b be       	out	0x3b, r1	; 59
     3c4:	2f 93       	push	r18
     3c6:	3f 93       	push	r19
     3c8:	4f 93       	push	r20
     3ca:	5f 93       	push	r21
     3cc:	6f 93       	push	r22
     3ce:	7f 93       	push	r23
     3d0:	8f 93       	push	r24
     3d2:	9f 93       	push	r25
     3d4:	af 93       	push	r26
     3d6:	bf 93       	push	r27
     3d8:	ef 93       	push	r30
     3da:	ff 93       	push	r31
	adca_callback(&ADCA, ADC_CH1, adc_get_result(&ADCA, ADC_CH1));
     3dc:	40 91 2c 02 	lds	r20, 0x022C	; 0x80022c <__TEXT_REGION_LENGTH__+0x70022c>
     3e0:	50 91 2d 02 	lds	r21, 0x022D	; 0x80022d <__TEXT_REGION_LENGTH__+0x70022d>
     3e4:	e0 91 2a 21 	lds	r30, 0x212A	; 0x80212a <adca_callback>
     3e8:	f0 91 2b 21 	lds	r31, 0x212B	; 0x80212b <adca_callback+0x1>
     3ec:	62 e0       	ldi	r22, 0x02	; 2
     3ee:	80 e0       	ldi	r24, 0x00	; 0
     3f0:	92 e0       	ldi	r25, 0x02	; 2
     3f2:	19 95       	eicall
}
     3f4:	ff 91       	pop	r31
     3f6:	ef 91       	pop	r30
     3f8:	bf 91       	pop	r27
     3fa:	af 91       	pop	r26
     3fc:	9f 91       	pop	r25
     3fe:	8f 91       	pop	r24
     400:	7f 91       	pop	r23
     402:	6f 91       	pop	r22
     404:	5f 91       	pop	r21
     406:	4f 91       	pop	r20
     408:	3f 91       	pop	r19
     40a:	2f 91       	pop	r18
     40c:	0f 90       	pop	r0
     40e:	0b be       	out	0x3b, r0	; 59
     410:	0f 90       	pop	r0
     412:	09 be       	out	0x39, r0	; 57
     414:	0f 90       	pop	r0
     416:	08 be       	out	0x38, r0	; 56
     418:	0f 90       	pop	r0
     41a:	0f be       	out	0x3f, r0	; 63
     41c:	0f 90       	pop	r0
     41e:	1f 90       	pop	r1
     420:	18 95       	reti

00000422 <__vector_73>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCA_CH2_vect)
{
     422:	1f 92       	push	r1
     424:	0f 92       	push	r0
     426:	0f b6       	in	r0, 0x3f	; 63
     428:	0f 92       	push	r0
     42a:	11 24       	eor	r1, r1
     42c:	08 b6       	in	r0, 0x38	; 56
     42e:	0f 92       	push	r0
     430:	18 be       	out	0x38, r1	; 56
     432:	09 b6       	in	r0, 0x39	; 57
     434:	0f 92       	push	r0
     436:	19 be       	out	0x39, r1	; 57
     438:	0b b6       	in	r0, 0x3b	; 59
     43a:	0f 92       	push	r0
     43c:	1b be       	out	0x3b, r1	; 59
     43e:	2f 93       	push	r18
     440:	3f 93       	push	r19
     442:	4f 93       	push	r20
     444:	5f 93       	push	r21
     446:	6f 93       	push	r22
     448:	7f 93       	push	r23
     44a:	8f 93       	push	r24
     44c:	9f 93       	push	r25
     44e:	af 93       	push	r26
     450:	bf 93       	push	r27
     452:	ef 93       	push	r30
     454:	ff 93       	push	r31
	adca_callback(&ADCA, ADC_CH2, adc_get_result(&ADCA, ADC_CH2));
     456:	40 91 34 02 	lds	r20, 0x0234	; 0x800234 <__TEXT_REGION_LENGTH__+0x700234>
     45a:	50 91 35 02 	lds	r21, 0x0235	; 0x800235 <__TEXT_REGION_LENGTH__+0x700235>
     45e:	e0 91 2a 21 	lds	r30, 0x212A	; 0x80212a <adca_callback>
     462:	f0 91 2b 21 	lds	r31, 0x212B	; 0x80212b <adca_callback+0x1>
     466:	64 e0       	ldi	r22, 0x04	; 4
     468:	80 e0       	ldi	r24, 0x00	; 0
     46a:	92 e0       	ldi	r25, 0x02	; 2
     46c:	19 95       	eicall
}
     46e:	ff 91       	pop	r31
     470:	ef 91       	pop	r30
     472:	bf 91       	pop	r27
     474:	af 91       	pop	r26
     476:	9f 91       	pop	r25
     478:	8f 91       	pop	r24
     47a:	7f 91       	pop	r23
     47c:	6f 91       	pop	r22
     47e:	5f 91       	pop	r21
     480:	4f 91       	pop	r20
     482:	3f 91       	pop	r19
     484:	2f 91       	pop	r18
     486:	0f 90       	pop	r0
     488:	0b be       	out	0x3b, r0	; 59
     48a:	0f 90       	pop	r0
     48c:	09 be       	out	0x39, r0	; 57
     48e:	0f 90       	pop	r0
     490:	08 be       	out	0x38, r0	; 56
     492:	0f 90       	pop	r0
     494:	0f be       	out	0x3f, r0	; 63
     496:	0f 90       	pop	r0
     498:	1f 90       	pop	r1
     49a:	18 95       	reti

0000049c <__vector_74>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCA_CH3_vect)
{
     49c:	1f 92       	push	r1
     49e:	0f 92       	push	r0
     4a0:	0f b6       	in	r0, 0x3f	; 63
     4a2:	0f 92       	push	r0
     4a4:	11 24       	eor	r1, r1
     4a6:	08 b6       	in	r0, 0x38	; 56
     4a8:	0f 92       	push	r0
     4aa:	18 be       	out	0x38, r1	; 56
     4ac:	09 b6       	in	r0, 0x39	; 57
     4ae:	0f 92       	push	r0
     4b0:	19 be       	out	0x39, r1	; 57
     4b2:	0b b6       	in	r0, 0x3b	; 59
     4b4:	0f 92       	push	r0
     4b6:	1b be       	out	0x3b, r1	; 59
     4b8:	2f 93       	push	r18
     4ba:	3f 93       	push	r19
     4bc:	4f 93       	push	r20
     4be:	5f 93       	push	r21
     4c0:	6f 93       	push	r22
     4c2:	7f 93       	push	r23
     4c4:	8f 93       	push	r24
     4c6:	9f 93       	push	r25
     4c8:	af 93       	push	r26
     4ca:	bf 93       	push	r27
     4cc:	ef 93       	push	r30
     4ce:	ff 93       	push	r31
	adca_callback(&ADCA, ADC_CH3, adc_get_result(&ADCA, ADC_CH3));
     4d0:	40 91 3c 02 	lds	r20, 0x023C	; 0x80023c <__TEXT_REGION_LENGTH__+0x70023c>
     4d4:	50 91 3d 02 	lds	r21, 0x023D	; 0x80023d <__TEXT_REGION_LENGTH__+0x70023d>
     4d8:	e0 91 2a 21 	lds	r30, 0x212A	; 0x80212a <adca_callback>
     4dc:	f0 91 2b 21 	lds	r31, 0x212B	; 0x80212b <adca_callback+0x1>
     4e0:	68 e0       	ldi	r22, 0x08	; 8
     4e2:	80 e0       	ldi	r24, 0x00	; 0
     4e4:	92 e0       	ldi	r25, 0x02	; 2
     4e6:	19 95       	eicall
}
     4e8:	ff 91       	pop	r31
     4ea:	ef 91       	pop	r30
     4ec:	bf 91       	pop	r27
     4ee:	af 91       	pop	r26
     4f0:	9f 91       	pop	r25
     4f2:	8f 91       	pop	r24
     4f4:	7f 91       	pop	r23
     4f6:	6f 91       	pop	r22
     4f8:	5f 91       	pop	r21
     4fa:	4f 91       	pop	r20
     4fc:	3f 91       	pop	r19
     4fe:	2f 91       	pop	r18
     500:	0f 90       	pop	r0
     502:	0b be       	out	0x3b, r0	; 59
     504:	0f 90       	pop	r0
     506:	09 be       	out	0x39, r0	; 57
     508:	0f 90       	pop	r0
     50a:	08 be       	out	0x38, r0	; 56
     50c:	0f 90       	pop	r0
     50e:	0f be       	out	0x3f, r0	; 63
     510:	0f 90       	pop	r0
     512:	1f 90       	pop	r1
     514:	18 95       	reti

00000516 <twim_interrupt_handler>:
 * \brief Common TWI master interrupt service routine.
 *
 *  Check current status and calls the appropriate handler.
 */
static void twim_interrupt_handler(void)
{
     516:	cf 93       	push	r28
     518:	df 93       	push	r29
	uint8_t const master_status = transfer.bus->MASTER.STATUS;
     51a:	e0 91 c2 20 	lds	r30, 0x20C2	; 0x8020c2 <__data_end>
     51e:	f0 91 c3 20 	lds	r31, 0x20C3	; 0x8020c3 <__data_end+0x1>
     522:	84 81       	ldd	r24, Z+4	; 0x04

	if (master_status & TWI_MASTER_ARBLOST_bm) {
     524:	83 ff       	sbrs	r24, 3
     526:	08 c0       	rjmp	.+16     	; 0x538 <twim_interrupt_handler+0x22>

		transfer.bus->MASTER.STATUS = master_status | TWI_MASTER_ARBLOST_bm;
     528:	88 60       	ori	r24, 0x08	; 8
     52a:	84 83       	std	Z+4, r24	; 0x04
		transfer.bus->MASTER.CTRLC  = TWI_MASTER_CMD_STOP_gc;
     52c:	83 e0       	ldi	r24, 0x03	; 3
     52e:	83 83       	std	Z+3, r24	; 0x03
		transfer.status = ERR_BUSY;
     530:	86 ef       	ldi	r24, 0xF6	; 246
     532:	80 93 cc 20 	sts	0x20CC, r24	; 0x8020cc <__data_end+0xa>
     536:	83 c0       	rjmp	.+262    	; 0x63e <twim_interrupt_handler+0x128>

	} else if ((master_status & TWI_MASTER_BUSERR_bm) ||
     538:	98 2f       	mov	r25, r24
     53a:	94 71       	andi	r25, 0x14	; 20
     53c:	31 f0       	breq	.+12     	; 0x54a <twim_interrupt_handler+0x34>
		(master_status & TWI_MASTER_RXACK_bm)) {

		transfer.bus->MASTER.CTRLC = TWI_MASTER_CMD_STOP_gc;
     53e:	83 e0       	ldi	r24, 0x03	; 3
     540:	83 83       	std	Z+3, r24	; 0x03
		transfer.status = ERR_IO_ERROR;
     542:	8f ef       	ldi	r24, 0xFF	; 255
     544:	80 93 cc 20 	sts	0x20CC, r24	; 0x8020cc <__data_end+0xa>
     548:	7a c0       	rjmp	.+244    	; 0x63e <twim_interrupt_handler+0x128>

	} else if (master_status & TWI_MASTER_WIF_bm) {
     54a:	86 ff       	sbrs	r24, 6
     54c:	43 c0       	rjmp	.+134    	; 0x5d4 <twim_interrupt_handler+0xbe>
 *  Handles TWI transactions (master write) and responses to (N)ACK.
 */
static inline void twim_write_handler(void)
{
	TWI_t * const         bus = transfer.bus;
	twi_package_t * const pkg = transfer.pkg;
     54e:	c2 ec       	ldi	r28, 0xC2	; 194
     550:	d0 e2       	ldi	r29, 0x20	; 32
     552:	aa 81       	ldd	r26, Y+2	; 0x02
     554:	bb 81       	ldd	r27, Y+3	; 0x03

	if (transfer.addr_count < pkg->addr_length) {
     556:	8c 81       	ldd	r24, Y+4	; 0x04
     558:	9d 81       	ldd	r25, Y+5	; 0x05
     55a:	14 96       	adiw	r26, 0x04	; 4
     55c:	2d 91       	ld	r18, X+
     55e:	3c 91       	ld	r19, X
     560:	15 97       	sbiw	r26, 0x05	; 5
     562:	82 17       	cp	r24, r18
     564:	93 07       	cpc	r25, r19
     566:	6c f4       	brge	.+26     	; 0x582 <twim_interrupt_handler+0x6c>

		const uint8_t * const data = pkg->addr;
		bus->MASTER.DATA = data[transfer.addr_count++];
     568:	9c 01       	movw	r18, r24
     56a:	2f 5f       	subi	r18, 0xFF	; 255
     56c:	3f 4f       	sbci	r19, 0xFF	; 255
     56e:	20 93 c6 20 	sts	0x20C6, r18	; 0x8020c6 <__data_end+0x4>
     572:	30 93 c7 20 	sts	0x20C7, r19	; 0x8020c7 <__data_end+0x5>
     576:	a8 0f       	add	r26, r24
     578:	b9 1f       	adc	r27, r25
     57a:	11 96       	adiw	r26, 0x01	; 1
     57c:	8c 91       	ld	r24, X
     57e:	87 83       	std	Z+7, r24	; 0x07
     580:	5e c0       	rjmp	.+188    	; 0x63e <twim_interrupt_handler+0x128>

	} else if (transfer.data_count < pkg->length) {
     582:	80 91 c8 20 	lds	r24, 0x20C8	; 0x8020c8 <__data_end+0x6>
     586:	90 91 c9 20 	lds	r25, 0x20C9	; 0x8020c9 <__data_end+0x7>
     58a:	18 96       	adiw	r26, 0x08	; 8
     58c:	2d 91       	ld	r18, X+
     58e:	3c 91       	ld	r19, X
     590:	19 97       	sbiw	r26, 0x09	; 9
     592:	82 17       	cp	r24, r18
     594:	93 07       	cpc	r25, r19
     596:	c8 f4       	brcc	.+50     	; 0x5ca <twim_interrupt_handler+0xb4>

		if (transfer.read) {
     598:	20 91 ca 20 	lds	r18, 0x20CA	; 0x8020ca <__data_end+0x8>
     59c:	22 23       	and	r18, r18
     59e:	21 f0       	breq	.+8      	; 0x5a8 <twim_interrupt_handler+0x92>

			/* Send repeated START condition (Address|R/W=1). */

			bus->MASTER.ADDR |= 0x01;
     5a0:	86 81       	ldd	r24, Z+6	; 0x06
     5a2:	81 60       	ori	r24, 0x01	; 1
     5a4:	86 83       	std	Z+6, r24	; 0x06
     5a6:	4b c0       	rjmp	.+150    	; 0x63e <twim_interrupt_handler+0x128>

		} else {
			const uint8_t * const data = pkg->buffer;
     5a8:	16 96       	adiw	r26, 0x06	; 6
     5aa:	2d 91       	ld	r18, X+
     5ac:	3c 91       	ld	r19, X
     5ae:	17 97       	sbiw	r26, 0x07	; 7
			bus->MASTER.DATA = data[transfer.data_count++];
     5b0:	ac 01       	movw	r20, r24
     5b2:	4f 5f       	subi	r20, 0xFF	; 255
     5b4:	5f 4f       	sbci	r21, 0xFF	; 255
     5b6:	40 93 c8 20 	sts	0x20C8, r20	; 0x8020c8 <__data_end+0x6>
     5ba:	50 93 c9 20 	sts	0x20C9, r21	; 0x8020c9 <__data_end+0x7>
     5be:	d9 01       	movw	r26, r18
     5c0:	a8 0f       	add	r26, r24
     5c2:	b9 1f       	adc	r27, r25
     5c4:	8c 91       	ld	r24, X
     5c6:	87 83       	std	Z+7, r24	; 0x07
     5c8:	3a c0       	rjmp	.+116    	; 0x63e <twim_interrupt_handler+0x128>

	} else {

		/* Send STOP condition to complete the transaction. */

		bus->MASTER.CTRLC = TWI_MASTER_CMD_STOP_gc;
     5ca:	83 e0       	ldi	r24, 0x03	; 3
     5cc:	83 83       	std	Z+3, r24	; 0x03
		transfer.status = STATUS_OK;
     5ce:	10 92 cc 20 	sts	0x20CC, r1	; 0x8020cc <__data_end+0xa>
     5d2:	35 c0       	rjmp	.+106    	; 0x63e <twim_interrupt_handler+0x128>

	} else if (master_status & TWI_MASTER_WIF_bm) {

		twim_write_handler();

	} else if (master_status & TWI_MASTER_RIF_bm) {
     5d4:	88 23       	and	r24, r24
     5d6:	84 f5       	brge	.+96     	; 0x638 <twim_interrupt_handler+0x122>
 *  reading bytes from the TWI slave.
 */
static inline void twim_read_handler(void)
{
	TWI_t * const         bus = transfer.bus;
	twi_package_t * const pkg = transfer.pkg;
     5d8:	a2 ec       	ldi	r26, 0xC2	; 194
     5da:	b0 e2       	ldi	r27, 0x20	; 32
     5dc:	12 96       	adiw	r26, 0x02	; 2
     5de:	cd 91       	ld	r28, X+
     5e0:	dc 91       	ld	r29, X
     5e2:	13 97       	sbiw	r26, 0x03	; 3

	if (transfer.data_count < pkg->length) {
     5e4:	16 96       	adiw	r26, 0x06	; 6
     5e6:	8d 91       	ld	r24, X+
     5e8:	9c 91       	ld	r25, X
     5ea:	17 97       	sbiw	r26, 0x07	; 7
     5ec:	28 85       	ldd	r18, Y+8	; 0x08
     5ee:	39 85       	ldd	r19, Y+9	; 0x09
     5f0:	82 17       	cp	r24, r18
     5f2:	93 07       	cpc	r25, r19
     5f4:	d8 f4       	brcc	.+54     	; 0x62c <twim_interrupt_handler+0x116>

		uint8_t * const data = pkg->buffer;
     5f6:	6e 81       	ldd	r22, Y+6	; 0x06
     5f8:	7f 81       	ldd	r23, Y+7	; 0x07
		data[transfer.data_count++] = bus->MASTER.DATA;
     5fa:	9c 01       	movw	r18, r24
     5fc:	2f 5f       	subi	r18, 0xFF	; 255
     5fe:	3f 4f       	sbci	r19, 0xFF	; 255
     600:	20 93 c8 20 	sts	0x20C8, r18	; 0x8020c8 <__data_end+0x6>
     604:	30 93 c9 20 	sts	0x20C9, r19	; 0x8020c9 <__data_end+0x7>
     608:	47 81       	ldd	r20, Z+7	; 0x07
     60a:	db 01       	movw	r26, r22
     60c:	a8 0f       	add	r26, r24
     60e:	b9 1f       	adc	r27, r25
     610:	4c 93       	st	X, r20

		/* If there is more to read, issue ACK and start a byte read.
		 * Otherwise, issue NACK and STOP to complete the transaction.
		 */
		if (transfer.data_count < pkg->length) {
     612:	88 85       	ldd	r24, Y+8	; 0x08
     614:	99 85       	ldd	r25, Y+9	; 0x09
     616:	28 17       	cp	r18, r24
     618:	39 07       	cpc	r19, r25
     61a:	18 f4       	brcc	.+6      	; 0x622 <twim_interrupt_handler+0x10c>

			bus->MASTER.CTRLC = TWI_MASTER_CMD_RECVTRANS_gc;
     61c:	82 e0       	ldi	r24, 0x02	; 2
     61e:	83 83       	std	Z+3, r24	; 0x03
     620:	0e c0       	rjmp	.+28     	; 0x63e <twim_interrupt_handler+0x128>

		} else {

			bus->MASTER.CTRLC = TWI_MASTER_ACKACT_bm | TWI_MASTER_CMD_STOP_gc;
     622:	87 e0       	ldi	r24, 0x07	; 7
     624:	83 83       	std	Z+3, r24	; 0x03
			transfer.status = STATUS_OK;
     626:	10 92 cc 20 	sts	0x20CC, r1	; 0x8020cc <__data_end+0xa>
     62a:	09 c0       	rjmp	.+18     	; 0x63e <twim_interrupt_handler+0x128>

	} else {

		/* Issue STOP and buffer overflow condition. */

		bus->MASTER.CTRLC = TWI_MASTER_CMD_STOP_gc;
     62c:	83 e0       	ldi	r24, 0x03	; 3
     62e:	83 83       	std	Z+3, r24	; 0x03
		transfer.status = ERR_NO_MEMORY;
     630:	89 ef       	ldi	r24, 0xF9	; 249
     632:	80 93 cc 20 	sts	0x20CC, r24	; 0x8020cc <__data_end+0xa>
     636:	03 c0       	rjmp	.+6      	; 0x63e <twim_interrupt_handler+0x128>

		twim_read_handler();

	} else {

		transfer.status = ERR_PROTOCOL;
     638:	8b ef       	ldi	r24, 0xFB	; 251
     63a:	80 93 cc 20 	sts	0x20CC, r24	; 0x8020cc <__data_end+0xa>
	}
}
     63e:	df 91       	pop	r29
     640:	cf 91       	pop	r28
     642:	08 95       	ret

00000644 <__vector_13>:
 * parameters specified in the global \c transfer structure.
 */
static void twim_interrupt_handler(void);

#ifdef TWIC
ISR(TWIC_TWIM_vect) { twim_interrupt_handler(); }
     644:	1f 92       	push	r1
     646:	0f 92       	push	r0
     648:	0f b6       	in	r0, 0x3f	; 63
     64a:	0f 92       	push	r0
     64c:	11 24       	eor	r1, r1
     64e:	08 b6       	in	r0, 0x38	; 56
     650:	0f 92       	push	r0
     652:	18 be       	out	0x38, r1	; 56
     654:	09 b6       	in	r0, 0x39	; 57
     656:	0f 92       	push	r0
     658:	19 be       	out	0x39, r1	; 57
     65a:	0b b6       	in	r0, 0x3b	; 59
     65c:	0f 92       	push	r0
     65e:	1b be       	out	0x3b, r1	; 59
     660:	2f 93       	push	r18
     662:	3f 93       	push	r19
     664:	4f 93       	push	r20
     666:	5f 93       	push	r21
     668:	6f 93       	push	r22
     66a:	7f 93       	push	r23
     66c:	8f 93       	push	r24
     66e:	9f 93       	push	r25
     670:	af 93       	push	r26
     672:	bf 93       	push	r27
     674:	ef 93       	push	r30
     676:	ff 93       	push	r31
     678:	4e df       	rcall	.-356    	; 0x516 <twim_interrupt_handler>
     67a:	ff 91       	pop	r31
     67c:	ef 91       	pop	r30
     67e:	bf 91       	pop	r27
     680:	af 91       	pop	r26
     682:	9f 91       	pop	r25
     684:	8f 91       	pop	r24
     686:	7f 91       	pop	r23
     688:	6f 91       	pop	r22
     68a:	5f 91       	pop	r21
     68c:	4f 91       	pop	r20
     68e:	3f 91       	pop	r19
     690:	2f 91       	pop	r18
     692:	0f 90       	pop	r0
     694:	0b be       	out	0x3b, r0	; 59
     696:	0f 90       	pop	r0
     698:	09 be       	out	0x39, r0	; 57
     69a:	0f 90       	pop	r0
     69c:	08 be       	out	0x38, r0	; 56
     69e:	0f 90       	pop	r0
     6a0:	0f be       	out	0x3f, r0	; 63
     6a2:	0f 90       	pop	r0
     6a4:	1f 90       	pop	r1
     6a6:	18 95       	reti

000006a8 <__vector_46>:
#endif
#ifdef TWID
ISR(TWID_TWIM_vect) { twim_interrupt_handler(); }
#endif
#ifdef TWIE
ISR(TWIE_TWIM_vect) { twim_interrupt_handler(); }
     6a8:	1f 92       	push	r1
     6aa:	0f 92       	push	r0
     6ac:	0f b6       	in	r0, 0x3f	; 63
     6ae:	0f 92       	push	r0
     6b0:	11 24       	eor	r1, r1
     6b2:	08 b6       	in	r0, 0x38	; 56
     6b4:	0f 92       	push	r0
     6b6:	18 be       	out	0x38, r1	; 56
     6b8:	09 b6       	in	r0, 0x39	; 57
     6ba:	0f 92       	push	r0
     6bc:	19 be       	out	0x39, r1	; 57
     6be:	0b b6       	in	r0, 0x3b	; 59
     6c0:	0f 92       	push	r0
     6c2:	1b be       	out	0x3b, r1	; 59
     6c4:	2f 93       	push	r18
     6c6:	3f 93       	push	r19
     6c8:	4f 93       	push	r20
     6ca:	5f 93       	push	r21
     6cc:	6f 93       	push	r22
     6ce:	7f 93       	push	r23
     6d0:	8f 93       	push	r24
     6d2:	9f 93       	push	r25
     6d4:	af 93       	push	r26
     6d6:	bf 93       	push	r27
     6d8:	ef 93       	push	r30
     6da:	ff 93       	push	r31
     6dc:	1c df       	rcall	.-456    	; 0x516 <twim_interrupt_handler>
     6de:	ff 91       	pop	r31
     6e0:	ef 91       	pop	r30
     6e2:	bf 91       	pop	r27
     6e4:	af 91       	pop	r26
     6e6:	9f 91       	pop	r25
     6e8:	8f 91       	pop	r24
     6ea:	7f 91       	pop	r23
     6ec:	6f 91       	pop	r22
     6ee:	5f 91       	pop	r21
     6f0:	4f 91       	pop	r20
     6f2:	3f 91       	pop	r19
     6f4:	2f 91       	pop	r18
     6f6:	0f 90       	pop	r0
     6f8:	0b be       	out	0x3b, r0	; 59
     6fa:	0f 90       	pop	r0
     6fc:	09 be       	out	0x39, r0	; 57
     6fe:	0f 90       	pop	r0
     700:	08 be       	out	0x38, r0	; 56
     702:	0f 90       	pop	r0
     704:	0f be       	out	0x3f, r0	; 63
     706:	0f 90       	pop	r0
     708:	1f 90       	pop	r1
     70a:	18 95       	reti

0000070c <usart_putchar>:

	if (baud_offset != USART_BAUD_UNDEFINED) {
		(usart)->BAUDCTRLB = (uint8_t)((uint16_t)baudctrl);
		(usart)->BAUDCTRLA = (uint8_t)((uint16_t)baudctrl >> 8);
	}
}
     70c:	fc 01       	movw	r30, r24
     70e:	91 81       	ldd	r25, Z+1	; 0x01
     710:	95 ff       	sbrs	r25, 5
     712:	fd cf       	rjmp	.-6      	; 0x70e <usart_putchar+0x2>
     714:	60 83       	st	Z, r22
     716:	80 e0       	ldi	r24, 0x00	; 0
     718:	90 e0       	ldi	r25, 0x00	; 0
     71a:	08 95       	ret

0000071c <usart_getchar>:
     71c:	fc 01       	movw	r30, r24
     71e:	91 81       	ldd	r25, Z+1	; 0x01
     720:	99 23       	and	r25, r25
     722:	ec f7       	brge	.-6      	; 0x71e <usart_getchar+0x2>
     724:	80 81       	ld	r24, Z
     726:	08 95       	ret

00000728 <usart_set_baudrate>:
 * \retval true if the hardware supports the baud rate
 * \retval false if the hardware does not support the baud rate (i.e. it's
 *               either too high or too low.)
 */
bool usart_set_baudrate(USART_t *usart, uint32_t baud, uint32_t cpu_hz)
{
     728:	4f 92       	push	r4
     72a:	5f 92       	push	r5
     72c:	6f 92       	push	r6
     72e:	7f 92       	push	r7
     730:	8f 92       	push	r8
     732:	9f 92       	push	r9
     734:	af 92       	push	r10
     736:	bf 92       	push	r11
     738:	ef 92       	push	r14
     73a:	ff 92       	push	r15
     73c:	0f 93       	push	r16
     73e:	1f 93       	push	r17
     740:	cf 93       	push	r28
     742:	7c 01       	movw	r14, r24
     744:	4a 01       	movw	r8, r20
     746:	5b 01       	movw	r10, r22
     748:	28 01       	movw	r4, r16
     74a:	39 01       	movw	r6, r18
	/* 8 = (2^0) * 8 * (2^0) = (2^BSCALE_MIN) * 8 * (BSEL_MIN) */
	max_rate = cpu_hz / 8;
	/* 4194304 = (2^7) * 8 * (2^12) = (2^BSCALE_MAX) * 8 * (BSEL_MAX+1) */
	min_rate = cpu_hz / 4194304;

	if (!((usart)->CTRLB & USART_CLK2X_bm)) {
     74c:	fc 01       	movw	r30, r24
     74e:	84 81       	ldd	r24, Z+4	; 0x04
     750:	82 ff       	sbrs	r24, 2
     752:	16 c0       	rjmp	.+44     	; 0x780 <usart_set_baudrate+0x58>

	/*
	 * Check if the hardware supports the given baud rate
	 */
	/* 8 = (2^0) * 8 * (2^0) = (2^BSCALE_MIN) * 8 * (BSEL_MIN) */
	max_rate = cpu_hz / 8;
     754:	d9 01       	movw	r26, r18
     756:	c8 01       	movw	r24, r16
     758:	68 94       	set
     75a:	12 f8       	bld	r1, 2
     75c:	b6 95       	lsr	r27
     75e:	a7 95       	ror	r26
     760:	97 95       	ror	r25
     762:	87 95       	ror	r24
     764:	16 94       	lsr	r1
     766:	d1 f7       	brne	.-12     	; 0x75c <usart_set_baudrate+0x34>
	/* 4194304 = (2^7) * 8 * (2^12) = (2^BSCALE_MAX) * 8 * (BSEL_MAX+1) */
	min_rate = cpu_hz / 4194304;
     768:	b9 01       	movw	r22, r18
     76a:	a8 01       	movw	r20, r16
     76c:	03 2e       	mov	r0, r19
     76e:	36 e1       	ldi	r19, 0x16	; 22
     770:	76 95       	lsr	r23
     772:	67 95       	ror	r22
     774:	57 95       	ror	r21
     776:	47 95       	ror	r20
     778:	3a 95       	dec	r19
     77a:	d1 f7       	brne	.-12     	; 0x770 <usart_set_baudrate+0x48>
     77c:	30 2d       	mov	r19, r0
     77e:	15 c0       	rjmp	.+42     	; 0x7aa <usart_set_baudrate+0x82>

	if (!((usart)->CTRLB & USART_CLK2X_bm)) {
		max_rate /= 2;
     780:	d9 01       	movw	r26, r18
     782:	c8 01       	movw	r24, r16
     784:	68 94       	set
     786:	13 f8       	bld	r1, 3
     788:	b6 95       	lsr	r27
     78a:	a7 95       	ror	r26
     78c:	97 95       	ror	r25
     78e:	87 95       	ror	r24
     790:	16 94       	lsr	r1
     792:	d1 f7       	brne	.-12     	; 0x788 <usart_set_baudrate+0x60>
		min_rate /= 2;
     794:	b9 01       	movw	r22, r18
     796:	a8 01       	movw	r20, r16
     798:	03 2e       	mov	r0, r19
     79a:	37 e1       	ldi	r19, 0x17	; 23
     79c:	76 95       	lsr	r23
     79e:	67 95       	ror	r22
     7a0:	57 95       	ror	r21
     7a2:	47 95       	ror	r20
     7a4:	3a 95       	dec	r19
     7a6:	d1 f7       	brne	.-12     	; 0x79c <usart_set_baudrate+0x74>
     7a8:	30 2d       	mov	r19, r0
	}

	if ((baud > max_rate) || (baud < min_rate)) {
     7aa:	88 15       	cp	r24, r8
     7ac:	99 05       	cpc	r25, r9
     7ae:	aa 05       	cpc	r26, r10
     7b0:	bb 05       	cpc	r27, r11
     7b2:	08 f4       	brcc	.+2      	; 0x7b6 <usart_set_baudrate+0x8e>
     7b4:	a6 c0       	rjmp	.+332    	; 0x902 <usart_set_baudrate+0x1da>
     7b6:	84 16       	cp	r8, r20
     7b8:	95 06       	cpc	r9, r21
     7ba:	a6 06       	cpc	r10, r22
     7bc:	b7 06       	cpc	r11, r23
     7be:	08 f4       	brcc	.+2      	; 0x7c2 <usart_set_baudrate+0x9a>
     7c0:	a2 c0       	rjmp	.+324    	; 0x906 <usart_set_baudrate+0x1de>
		return false;
	}

	/* Check if double speed is enabled. */
	if (!((usart)->CTRLB & USART_CLK2X_bm)) {
     7c2:	f7 01       	movw	r30, r14
     7c4:	84 81       	ldd	r24, Z+4	; 0x04
     7c6:	82 fd       	sbrc	r24, 2
     7c8:	04 c0       	rjmp	.+8      	; 0x7d2 <usart_set_baudrate+0xaa>
		baud *= 2;
     7ca:	88 0c       	add	r8, r8
     7cc:	99 1c       	adc	r9, r9
     7ce:	aa 1c       	adc	r10, r10
     7d0:	bb 1c       	adc	r11, r11
	}

	/* Find the lowest possible exponent. */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;
     7d2:	c3 01       	movw	r24, r6
     7d4:	b2 01       	movw	r22, r4
     7d6:	a5 01       	movw	r20, r10
     7d8:	94 01       	movw	r18, r8
     7da:	0e 94 07 1a 	call	0x340e	; 0x340e <__udivmodsi4>

	for (exp = -7; exp < 7; exp++) {
		if (ratio < limit) {
     7de:	2f 3f       	cpi	r18, 0xFF	; 255
     7e0:	31 05       	cpc	r19, r1
     7e2:	41 05       	cpc	r20, r1
     7e4:	51 05       	cpc	r21, r1
     7e6:	08 f4       	brcc	.+2      	; 0x7ea <usart_set_baudrate+0xc2>
     7e8:	90 c0       	rjmp	.+288    	; 0x90a <usart_set_baudrate+0x1e2>
     7ea:	8f ef       	ldi	r24, 0xFF	; 255
     7ec:	90 e0       	ldi	r25, 0x00	; 0
     7ee:	a0 e0       	ldi	r26, 0x00	; 0
     7f0:	b0 e0       	ldi	r27, 0x00	; 0
     7f2:	c9 ef       	ldi	r28, 0xF9	; 249
     7f4:	05 c0       	rjmp	.+10     	; 0x800 <usart_set_baudrate+0xd8>
     7f6:	28 17       	cp	r18, r24
     7f8:	39 07       	cpc	r19, r25
     7fa:	4a 07       	cpc	r20, r26
     7fc:	5b 07       	cpc	r21, r27
     7fe:	58 f0       	brcs	.+22     	; 0x816 <usart_set_baudrate+0xee>
			break;
		}

		limit <<= 1;
     800:	88 0f       	add	r24, r24
     802:	99 1f       	adc	r25, r25
     804:	aa 1f       	adc	r26, r26
     806:	bb 1f       	adc	r27, r27

		if (exp < -3) {
     808:	cd 3f       	cpi	r28, 0xFD	; 253
     80a:	0c f4       	brge	.+2      	; 0x80e <usart_set_baudrate+0xe6>
			limit |= 1;
     80c:	81 60       	ori	r24, 0x01	; 1
     80e:	cf 5f       	subi	r28, 0xFF	; 255

	/* Find the lowest possible exponent. */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;

	for (exp = -7; exp < 7; exp++) {
     810:	c7 30       	cpi	r28, 0x07	; 7
     812:	89 f7       	brne	.-30     	; 0x7f6 <usart_set_baudrate+0xce>
     814:	4f c0       	rjmp	.+158    	; 0x8b4 <usart_set_baudrate+0x18c>
	 * point.
	 *
	 * The formula for calculating BSEL is slightly different when exp is
	 * negative than it is when exp is positive.
	 */
	if (exp < 0) {
     816:	cc 23       	and	r28, r28
     818:	0c f0       	brlt	.+2      	; 0x81c <usart_set_baudrate+0xf4>
     81a:	4c c0       	rjmp	.+152    	; 0x8b4 <usart_set_baudrate+0x18c>
		/* We are supposed to subtract 1, then apply BSCALE. We want to
		 * apply BSCALE first, so we need to turn everything inside the
		 * parenthesis into a single fractional expression.
		 */
		cpu_hz -= 8 * baud;
     81c:	d5 01       	movw	r26, r10
     81e:	c4 01       	movw	r24, r8
     820:	88 0f       	add	r24, r24
     822:	99 1f       	adc	r25, r25
     824:	aa 1f       	adc	r26, r26
     826:	bb 1f       	adc	r27, r27
     828:	88 0f       	add	r24, r24
     82a:	99 1f       	adc	r25, r25
     82c:	aa 1f       	adc	r26, r26
     82e:	bb 1f       	adc	r27, r27
     830:	88 0f       	add	r24, r24
     832:	99 1f       	adc	r25, r25
     834:	aa 1f       	adc	r26, r26
     836:	bb 1f       	adc	r27, r27
     838:	48 1a       	sub	r4, r24
     83a:	59 0a       	sbc	r5, r25
     83c:	6a 0a       	sbc	r6, r26
     83e:	7b 0a       	sbc	r7, r27
		/* If we end up with a left-shift after taking the final
		 * divide-by-8 into account, do the shift before the divide.
		 * Otherwise, left-shift the denominator instead (effectively
		 * resulting in an overall right shift.)
		 */
		if (exp <= -3) {
     840:	ce 3f       	cpi	r28, 0xFE	; 254
     842:	f4 f4       	brge	.+60     	; 0x880 <usart_set_baudrate+0x158>
			div = ((cpu_hz << (-exp - 3)) + baud / 2) / baud;
     844:	8d ef       	ldi	r24, 0xFD	; 253
     846:	9f ef       	ldi	r25, 0xFF	; 255
     848:	8c 1b       	sub	r24, r28
     84a:	91 09       	sbc	r25, r1
     84c:	c7 fd       	sbrc	r28, 7
     84e:	93 95       	inc	r25
     850:	04 c0       	rjmp	.+8      	; 0x85a <usart_set_baudrate+0x132>
     852:	44 0c       	add	r4, r4
     854:	55 1c       	adc	r5, r5
     856:	66 1c       	adc	r6, r6
     858:	77 1c       	adc	r7, r7
     85a:	8a 95       	dec	r24
     85c:	d2 f7       	brpl	.-12     	; 0x852 <usart_set_baudrate+0x12a>
     85e:	d5 01       	movw	r26, r10
     860:	c4 01       	movw	r24, r8
     862:	b6 95       	lsr	r27
     864:	a7 95       	ror	r26
     866:	97 95       	ror	r25
     868:	87 95       	ror	r24
     86a:	bc 01       	movw	r22, r24
     86c:	cd 01       	movw	r24, r26
     86e:	64 0d       	add	r22, r4
     870:	75 1d       	adc	r23, r5
     872:	86 1d       	adc	r24, r6
     874:	97 1d       	adc	r25, r7
     876:	a5 01       	movw	r20, r10
     878:	94 01       	movw	r18, r8
     87a:	0e 94 07 1a 	call	0x340e	; 0x340e <__udivmodsi4>
     87e:	37 c0       	rjmp	.+110    	; 0x8ee <usart_set_baudrate+0x1c6>
		} else {
			baud <<= exp + 3;
     880:	83 e0       	ldi	r24, 0x03	; 3
     882:	8c 0f       	add	r24, r28
     884:	a5 01       	movw	r20, r10
     886:	94 01       	movw	r18, r8
     888:	04 c0       	rjmp	.+8      	; 0x892 <usart_set_baudrate+0x16a>
     88a:	22 0f       	add	r18, r18
     88c:	33 1f       	adc	r19, r19
     88e:	44 1f       	adc	r20, r20
     890:	55 1f       	adc	r21, r21
     892:	8a 95       	dec	r24
     894:	d2 f7       	brpl	.-12     	; 0x88a <usart_set_baudrate+0x162>
			div = (cpu_hz + baud / 2) / baud;
     896:	da 01       	movw	r26, r20
     898:	c9 01       	movw	r24, r18
     89a:	b6 95       	lsr	r27
     89c:	a7 95       	ror	r26
     89e:	97 95       	ror	r25
     8a0:	87 95       	ror	r24
     8a2:	bc 01       	movw	r22, r24
     8a4:	cd 01       	movw	r24, r26
     8a6:	64 0d       	add	r22, r4
     8a8:	75 1d       	adc	r23, r5
     8aa:	86 1d       	adc	r24, r6
     8ac:	97 1d       	adc	r25, r7
     8ae:	0e 94 07 1a 	call	0x340e	; 0x340e <__udivmodsi4>
     8b2:	1d c0       	rjmp	.+58     	; 0x8ee <usart_set_baudrate+0x1c6>
		}
	} else {
		/* We will always do a right shift in this case, but we need to
		 * shift three extra positions because of the divide-by-8.
		 */
		baud <<= exp + 3;
     8b4:	83 e0       	ldi	r24, 0x03	; 3
     8b6:	8c 0f       	add	r24, r28
     8b8:	a5 01       	movw	r20, r10
     8ba:	94 01       	movw	r18, r8
     8bc:	04 c0       	rjmp	.+8      	; 0x8c6 <usart_set_baudrate+0x19e>
     8be:	22 0f       	add	r18, r18
     8c0:	33 1f       	adc	r19, r19
     8c2:	44 1f       	adc	r20, r20
     8c4:	55 1f       	adc	r21, r21
     8c6:	8a 95       	dec	r24
     8c8:	d2 f7       	brpl	.-12     	; 0x8be <usart_set_baudrate+0x196>
		div = (cpu_hz + baud / 2) / baud - 1;
     8ca:	da 01       	movw	r26, r20
     8cc:	c9 01       	movw	r24, r18
     8ce:	b6 95       	lsr	r27
     8d0:	a7 95       	ror	r26
     8d2:	97 95       	ror	r25
     8d4:	87 95       	ror	r24
     8d6:	bc 01       	movw	r22, r24
     8d8:	cd 01       	movw	r24, r26
     8da:	64 0d       	add	r22, r4
     8dc:	75 1d       	adc	r23, r5
     8de:	86 1d       	adc	r24, r6
     8e0:	97 1d       	adc	r25, r7
     8e2:	0e 94 07 1a 	call	0x340e	; 0x340e <__udivmodsi4>
     8e6:	21 50       	subi	r18, 0x01	; 1
     8e8:	31 09       	sbc	r19, r1
     8ea:	41 09       	sbc	r20, r1
     8ec:	51 09       	sbc	r21, r1
	}

	(usart)->BAUDCTRLB = (uint8_t)(((div >> 8) & 0X0F) | (exp << 4));
     8ee:	83 2f       	mov	r24, r19
     8f0:	8f 70       	andi	r24, 0x0F	; 15
     8f2:	c2 95       	swap	r28
     8f4:	c0 7f       	andi	r28, 0xF0	; 240
     8f6:	c8 2b       	or	r28, r24
     8f8:	f7 01       	movw	r30, r14
     8fa:	c7 83       	std	Z+7, r28	; 0x07
	(usart)->BAUDCTRLA = (uint8_t)div;
     8fc:	26 83       	std	Z+6, r18	; 0x06

	return true;
     8fe:	81 e0       	ldi	r24, 0x01	; 1
     900:	18 c0       	rjmp	.+48     	; 0x932 <usart_set_baudrate+0x20a>
		max_rate /= 2;
		min_rate /= 2;
	}

	if ((baud > max_rate) || (baud < min_rate)) {
		return false;
     902:	80 e0       	ldi	r24, 0x00	; 0
     904:	16 c0       	rjmp	.+44     	; 0x932 <usart_set_baudrate+0x20a>
     906:	80 e0       	ldi	r24, 0x00	; 0
     908:	14 c0       	rjmp	.+40     	; 0x932 <usart_set_baudrate+0x20a>
	if (exp < 0) {
		/* We are supposed to subtract 1, then apply BSCALE. We want to
		 * apply BSCALE first, so we need to turn everything inside the
		 * parenthesis into a single fractional expression.
		 */
		cpu_hz -= 8 * baud;
     90a:	d5 01       	movw	r26, r10
     90c:	c4 01       	movw	r24, r8
     90e:	88 0f       	add	r24, r24
     910:	99 1f       	adc	r25, r25
     912:	aa 1f       	adc	r26, r26
     914:	bb 1f       	adc	r27, r27
     916:	88 0f       	add	r24, r24
     918:	99 1f       	adc	r25, r25
     91a:	aa 1f       	adc	r26, r26
     91c:	bb 1f       	adc	r27, r27
     91e:	88 0f       	add	r24, r24
     920:	99 1f       	adc	r25, r25
     922:	aa 1f       	adc	r26, r26
     924:	bb 1f       	adc	r27, r27
     926:	48 1a       	sub	r4, r24
     928:	59 0a       	sbc	r5, r25
     92a:	6a 0a       	sbc	r6, r26
     92c:	7b 0a       	sbc	r7, r27

	/* Find the lowest possible exponent. */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;

	for (exp = -7; exp < 7; exp++) {
     92e:	c9 ef       	ldi	r28, 0xF9	; 249
     930:	89 cf       	rjmp	.-238    	; 0x844 <usart_set_baudrate+0x11c>

	(usart)->BAUDCTRLB = (uint8_t)(((div >> 8) & 0X0F) | (exp << 4));
	(usart)->BAUDCTRLA = (uint8_t)div;

	return true;
}
     932:	cf 91       	pop	r28
     934:	1f 91       	pop	r17
     936:	0f 91       	pop	r16
     938:	ff 90       	pop	r15
     93a:	ef 90       	pop	r14
     93c:	bf 90       	pop	r11
     93e:	af 90       	pop	r10
     940:	9f 90       	pop	r9
     942:	8f 90       	pop	r8
     944:	7f 90       	pop	r7
     946:	6f 90       	pop	r6
     948:	5f 90       	pop	r5
     94a:	4f 90       	pop	r4
     94c:	08 95       	ret

0000094e <usart_init_rs232>:
 *
 * \retval true if the initialization was successfull
 * \retval false if the initialization failed (error in baud rate calculation)
 */
bool usart_init_rs232(USART_t *usart, const usart_rs232_options_t *opt)
{
     94e:	0f 93       	push	r16
     950:	1f 93       	push	r17
     952:	cf 93       	push	r28
     954:	df 93       	push	r29
     956:	ec 01       	movw	r28, r24
     958:	8b 01       	movw	r16, r22
 *
 * \param module Pointer to the module's base address.
 */
static inline void sysclk_enable_peripheral_clock(const volatile void *module)
{
	if (module == NULL) {
     95a:	00 97       	sbiw	r24, 0x00	; 0
     95c:	09 f4       	brne	.+2      	; 0x960 <usart_init_rs232+0x12>
     95e:	be c0       	rjmp	.+380    	; 0xadc <usart_init_rs232+0x18e>
		Assert(false);
	}
#ifdef AES
	else if (module == &AES) {
     960:	80 3c       	cpi	r24, 0xC0	; 192
     962:	91 05       	cpc	r25, r1
     964:	21 f4       	brne	.+8      	; 0x96e <usart_init_rs232+0x20>
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_AES);
     966:	60 e1       	ldi	r22, 0x10	; 16
     968:	80 e0       	ldi	r24, 0x00	; 0
     96a:	41 d3       	rcall	.+1666   	; 0xfee <sysclk_enable_module>
     96c:	b7 c0       	rjmp	.+366    	; 0xadc <usart_init_rs232+0x18e>
	else if (module == &EBI) {
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_EBI);
	}
#endif
#ifdef RTC
	else if (module == &RTC) {
     96e:	c1 15       	cp	r28, r1
     970:	84 e0       	ldi	r24, 0x04	; 4
     972:	d8 07       	cpc	r29, r24
     974:	21 f4       	brne	.+8      	; 0x97e <usart_init_rs232+0x30>
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_RTC);
     976:	64 e0       	ldi	r22, 0x04	; 4
     978:	80 e0       	ldi	r24, 0x00	; 0
     97a:	39 d3       	rcall	.+1650   	; 0xfee <sysclk_enable_module>
     97c:	af c0       	rjmp	.+350    	; 0xadc <usart_init_rs232+0x18e>
	}
#endif
#ifdef EVSYS
	else if (module == &EVSYS) {
     97e:	c0 38       	cpi	r28, 0x80	; 128
     980:	e1 e0       	ldi	r30, 0x01	; 1
     982:	de 07       	cpc	r29, r30
     984:	21 f4       	brne	.+8      	; 0x98e <usart_init_rs232+0x40>
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_EVSYS);
     986:	62 e0       	ldi	r22, 0x02	; 2
     988:	80 e0       	ldi	r24, 0x00	; 0
     98a:	31 d3       	rcall	.+1634   	; 0xfee <sysclk_enable_module>
     98c:	a7 c0       	rjmp	.+334    	; 0xadc <usart_init_rs232+0x18e>
	}
#endif
#ifdef DMA
	else if (module == &DMA) {
     98e:	c1 15       	cp	r28, r1
     990:	f1 e0       	ldi	r31, 0x01	; 1
     992:	df 07       	cpc	r29, r31
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_DMA);
     994:	21 f4       	brne	.+8      	; 0x99e <usart_init_rs232+0x50>
     996:	61 e0       	ldi	r22, 0x01	; 1
     998:	80 e0       	ldi	r24, 0x00	; 0
     99a:	29 d3       	rcall	.+1618   	; 0xfee <sysclk_enable_module>
     99c:	9f c0       	rjmp	.+318    	; 0xadc <usart_init_rs232+0x18e>
	else if (module == &EDMA) {
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_EDMA);
	}
#endif
#ifdef ACA
	else if (module == &ACA) {
     99e:	c0 38       	cpi	r28, 0x80	; 128
     9a0:	83 e0       	ldi	r24, 0x03	; 3
     9a2:	d8 07       	cpc	r29, r24
		sysclk_enable_module(SYSCLK_PORT_A, SYSCLK_AC);
     9a4:	21 f4       	brne	.+8      	; 0x9ae <usart_init_rs232+0x60>
     9a6:	61 e0       	ldi	r22, 0x01	; 1
     9a8:	81 e0       	ldi	r24, 0x01	; 1
     9aa:	21 d3       	rcall	.+1602   	; 0xfee <sysclk_enable_module>
     9ac:	97 c0       	rjmp	.+302    	; 0xadc <usart_init_rs232+0x18e>
	else if (module == &ACB) {
		sysclk_enable_module(SYSCLK_PORT_B, SYSCLK_AC);
	}
#endif
#ifdef ADCA
	else if (module == &ADCA) {
     9ae:	c1 15       	cp	r28, r1
     9b0:	e2 e0       	ldi	r30, 0x02	; 2
     9b2:	de 07       	cpc	r29, r30
		sysclk_enable_module(SYSCLK_PORT_A, SYSCLK_ADC);
     9b4:	21 f4       	brne	.+8      	; 0x9be <usart_init_rs232+0x70>
     9b6:	62 e0       	ldi	r22, 0x02	; 2
     9b8:	81 e0       	ldi	r24, 0x01	; 1
     9ba:	19 d3       	rcall	.+1586   	; 0xfee <sysclk_enable_module>
     9bc:	8f c0       	rjmp	.+286    	; 0xadc <usart_init_rs232+0x18e>
	}
#endif
// Workaround for bad XMEGA D header file
#if !XMEGA_D
#ifdef DACB
	else if (module == &DACB) {
     9be:	c0 32       	cpi	r28, 0x20	; 32
     9c0:	f3 e0       	ldi	r31, 0x03	; 3
     9c2:	df 07       	cpc	r29, r31
		sysclk_enable_module(SYSCLK_PORT_B, SYSCLK_DAC);
     9c4:	21 f4       	brne	.+8      	; 0x9ce <usart_init_rs232+0x80>
     9c6:	64 e0       	ldi	r22, 0x04	; 4
     9c8:	82 e0       	ldi	r24, 0x02	; 2
     9ca:	11 d3       	rcall	.+1570   	; 0xfee <sysclk_enable_module>
	}
#endif
#endif // Workaround end
#ifdef TCC0
	else if (module == &TCC0) {
     9cc:	87 c0       	rjmp	.+270    	; 0xadc <usart_init_rs232+0x18e>
     9ce:	c1 15       	cp	r28, r1
     9d0:	88 e0       	ldi	r24, 0x08	; 8
     9d2:	d8 07       	cpc	r29, r24
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TC0);
     9d4:	21 f4       	brne	.+8      	; 0x9de <usart_init_rs232+0x90>
     9d6:	61 e0       	ldi	r22, 0x01	; 1
     9d8:	83 e0       	ldi	r24, 0x03	; 3
     9da:	09 d3       	rcall	.+1554   	; 0xfee <sysclk_enable_module>
	}
#endif
#ifdef TCD0
	else if (module == &TCD0) {
     9dc:	7f c0       	rjmp	.+254    	; 0xadc <usart_init_rs232+0x18e>
     9de:	c1 15       	cp	r28, r1
     9e0:	e9 e0       	ldi	r30, 0x09	; 9
     9e2:	de 07       	cpc	r29, r30
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC0);
     9e4:	21 f4       	brne	.+8      	; 0x9ee <usart_init_rs232+0xa0>
     9e6:	61 e0       	ldi	r22, 0x01	; 1
     9e8:	84 e0       	ldi	r24, 0x04	; 4
     9ea:	01 d3       	rcall	.+1538   	; 0xfee <sysclk_enable_module>
	}
#endif
#ifdef TCE0
	else if (module == &TCE0) {
     9ec:	77 c0       	rjmp	.+238    	; 0xadc <usart_init_rs232+0x18e>
     9ee:	c1 15       	cp	r28, r1
     9f0:	fa e0       	ldi	r31, 0x0A	; 10
     9f2:	df 07       	cpc	r29, r31
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TC0);
     9f4:	21 f4       	brne	.+8      	; 0x9fe <usart_init_rs232+0xb0>
     9f6:	61 e0       	ldi	r22, 0x01	; 1
     9f8:	85 e0       	ldi	r24, 0x05	; 5
     9fa:	f9 d2       	rcall	.+1522   	; 0xfee <sysclk_enable_module>
	else if (module == &TCF0) {
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_TC0);
	}
#endif
#ifdef TCC1
	else if (module == &TCC1) {
     9fc:	6f c0       	rjmp	.+222    	; 0xadc <usart_init_rs232+0x18e>
     9fe:	c0 34       	cpi	r28, 0x40	; 64
     a00:	88 e0       	ldi	r24, 0x08	; 8
     a02:	d8 07       	cpc	r29, r24
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TC1);
     a04:	21 f4       	brne	.+8      	; 0xa0e <usart_init_rs232+0xc0>
     a06:	62 e0       	ldi	r22, 0x02	; 2
     a08:	83 e0       	ldi	r24, 0x03	; 3
     a0a:	f1 d2       	rcall	.+1506   	; 0xfee <sysclk_enable_module>
	}
#endif
#ifdef TCD1
	else if (module == &TCD1) {
<<<<<<< HEAD
     a0c:	67 c0       	rjmp	.+206    	; 0xadc <usart_init_rs232+0x18e>
     a0e:	c0 34       	cpi	r28, 0x40	; 64
     a10:	e9 e0       	ldi	r30, 0x09	; 9
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC1);
     a12:	de 07       	cpc	r29, r30
     a14:	21 f4       	brne	.+8      	; 0xa1e <usart_init_rs232+0xd0>
     a16:	62 e0       	ldi	r22, 0x02	; 2
     a18:	84 e0       	ldi	r24, 0x04	; 4
     a1a:	e9 d2       	rcall	.+1490   	; 0xfee <sysclk_enable_module>
=======
     816:	67 c0       	rjmp	.+206    	; 0x8e6 <usart_init_rs232+0x18e>
     818:	c0 34       	cpi	r28, 0x40	; 64
     81a:	e9 e0       	ldi	r30, 0x09	; 9
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC1);
     81c:	de 07       	cpc	r29, r30
     81e:	21 f4       	brne	.+8      	; 0x828 <usart_init_rs232+0xd0>
     820:	62 e0       	ldi	r22, 0x02	; 2
     822:	84 e0       	ldi	r24, 0x04	; 4
     824:	f2 d2       	rcall	.+1508   	; 0xe0a <sysclk_enable_module>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	else if (module == &TCD5) {
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC5);
	}
#endif
#ifdef HIRESC
	else if (module == &HIRESC) {
<<<<<<< HEAD
     a1c:	5f c0       	rjmp	.+190    	; 0xadc <usart_init_rs232+0x18e>
     a1e:	c0 39       	cpi	r28, 0x90	; 144
     a20:	f8 e0       	ldi	r31, 0x08	; 8
			sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_HIRES);
     a22:	df 07       	cpc	r29, r31
     a24:	21 f4       	brne	.+8      	; 0xa2e <usart_init_rs232+0xe0>
     a26:	64 e0       	ldi	r22, 0x04	; 4
     a28:	83 e0       	ldi	r24, 0x03	; 3
     a2a:	e1 d2       	rcall	.+1474   	; 0xfee <sysclk_enable_module>
=======
     826:	5f c0       	rjmp	.+190    	; 0x8e6 <usart_init_rs232+0x18e>
     828:	c0 39       	cpi	r28, 0x90	; 144
     82a:	f8 e0       	ldi	r31, 0x08	; 8
			sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_HIRES);
     82c:	df 07       	cpc	r29, r31
     82e:	21 f4       	brne	.+8      	; 0x838 <usart_init_rs232+0xe0>
     830:	64 e0       	ldi	r22, 0x04	; 4
     832:	83 e0       	ldi	r24, 0x03	; 3
     834:	ea d2       	rcall	.+1492   	; 0xe0a <sysclk_enable_module>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	}
#endif
#ifdef HIRESD
	else if (module == &HIRESD) {
<<<<<<< HEAD
     a2c:	57 c0       	rjmp	.+174    	; 0xadc <usart_init_rs232+0x18e>
     a2e:	c0 39       	cpi	r28, 0x90	; 144
     a30:	89 e0       	ldi	r24, 0x09	; 9
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_HIRES);
     a32:	d8 07       	cpc	r29, r24
     a34:	21 f4       	brne	.+8      	; 0xa3e <usart_init_rs232+0xf0>
     a36:	64 e0       	ldi	r22, 0x04	; 4
     a38:	84 e0       	ldi	r24, 0x04	; 4
     a3a:	d9 d2       	rcall	.+1458   	; 0xfee <sysclk_enable_module>
=======
     836:	57 c0       	rjmp	.+174    	; 0x8e6 <usart_init_rs232+0x18e>
     838:	c0 39       	cpi	r28, 0x90	; 144
     83a:	89 e0       	ldi	r24, 0x09	; 9
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_HIRES);
     83c:	d8 07       	cpc	r29, r24
     83e:	21 f4       	brne	.+8      	; 0x848 <usart_init_rs232+0xf0>
     840:	64 e0       	ldi	r22, 0x04	; 4
     842:	84 e0       	ldi	r24, 0x04	; 4
     844:	e2 d2       	rcall	.+1476   	; 0xe0a <sysclk_enable_module>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	}
#endif
#ifdef HIRESE
	else if (module == &HIRESE) {
<<<<<<< HEAD
     a3c:	4f c0       	rjmp	.+158    	; 0xadc <usart_init_rs232+0x18e>
     a3e:	c0 39       	cpi	r28, 0x90	; 144
     a40:	ea e0       	ldi	r30, 0x0A	; 10
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_HIRES);
     a42:	de 07       	cpc	r29, r30
     a44:	21 f4       	brne	.+8      	; 0xa4e <usart_init_rs232+0x100>
     a46:	64 e0       	ldi	r22, 0x04	; 4
     a48:	85 e0       	ldi	r24, 0x05	; 5
=======
     846:	4f c0       	rjmp	.+158    	; 0x8e6 <usart_init_rs232+0x18e>
     848:	c0 39       	cpi	r28, 0x90	; 144
     84a:	ea e0       	ldi	r30, 0x0A	; 10
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_HIRES);
     84c:	de 07       	cpc	r29, r30
     84e:	21 f4       	brne	.+8      	; 0x858 <usart_init_rs232+0x100>
     850:	64 e0       	ldi	r22, 0x04	; 4
     852:	85 e0       	ldi	r24, 0x05	; 5
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	else if (module == &HIRESF) {
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_HIRES);
	}
#endif
#ifdef SPIC
	else if (module == &SPIC) {
<<<<<<< HEAD
     a4a:	d1 d2       	rcall	.+1442   	; 0xfee <sysclk_enable_module>
     a4c:	47 c0       	rjmp	.+142    	; 0xadc <usart_init_rs232+0x18e>
     a4e:	c0 3c       	cpi	r28, 0xC0	; 192
     a50:	f8 e0       	ldi	r31, 0x08	; 8
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_SPI);
     a52:	df 07       	cpc	r29, r31
     a54:	21 f4       	brne	.+8      	; 0xa5e <usart_init_rs232+0x110>
     a56:	68 e0       	ldi	r22, 0x08	; 8
     a58:	83 e0       	ldi	r24, 0x03	; 3
=======
     854:	da d2       	rcall	.+1460   	; 0xe0a <sysclk_enable_module>
     856:	47 c0       	rjmp	.+142    	; 0x8e6 <usart_init_rs232+0x18e>
     858:	c0 3c       	cpi	r28, 0xC0	; 192
     85a:	f8 e0       	ldi	r31, 0x08	; 8
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_SPI);
     85c:	df 07       	cpc	r29, r31
     85e:	21 f4       	brne	.+8      	; 0x868 <usart_init_rs232+0x110>
     860:	68 e0       	ldi	r22, 0x08	; 8
     862:	83 e0       	ldi	r24, 0x03	; 3
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	}
#endif
#ifdef SPID
	else if (module == &SPID) {
<<<<<<< HEAD
     a5a:	c9 d2       	rcall	.+1426   	; 0xfee <sysclk_enable_module>
     a5c:	3f c0       	rjmp	.+126    	; 0xadc <usart_init_rs232+0x18e>
     a5e:	c0 3c       	cpi	r28, 0xC0	; 192
     a60:	89 e0       	ldi	r24, 0x09	; 9
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_SPI);
     a62:	d8 07       	cpc	r29, r24
     a64:	21 f4       	brne	.+8      	; 0xa6e <usart_init_rs232+0x120>
     a66:	68 e0       	ldi	r22, 0x08	; 8
     a68:	84 e0       	ldi	r24, 0x04	; 4
=======
     864:	d2 d2       	rcall	.+1444   	; 0xe0a <sysclk_enable_module>
     866:	3f c0       	rjmp	.+126    	; 0x8e6 <usart_init_rs232+0x18e>
     868:	c0 3c       	cpi	r28, 0xC0	; 192
     86a:	89 e0       	ldi	r24, 0x09	; 9
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_SPI);
     86c:	d8 07       	cpc	r29, r24
     86e:	21 f4       	brne	.+8      	; 0x878 <usart_init_rs232+0x120>
     870:	68 e0       	ldi	r22, 0x08	; 8
     872:	84 e0       	ldi	r24, 0x04	; 4
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	else if (module == &SPIF) {
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_SPI);
	}
#endif
#ifdef USARTC0
	else if (module == &USARTC0) {
<<<<<<< HEAD
     a6a:	c1 d2       	rcall	.+1410   	; 0xfee <sysclk_enable_module>
     a6c:	37 c0       	rjmp	.+110    	; 0xadc <usart_init_rs232+0x18e>
     a6e:	c0 3a       	cpi	r28, 0xA0	; 160
     a70:	e8 e0       	ldi	r30, 0x08	; 8
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_USART0);
     a72:	de 07       	cpc	r29, r30
     a74:	21 f4       	brne	.+8      	; 0xa7e <usart_init_rs232+0x130>
     a76:	60 e1       	ldi	r22, 0x10	; 16
     a78:	83 e0       	ldi	r24, 0x03	; 3
=======
     874:	ca d2       	rcall	.+1428   	; 0xe0a <sysclk_enable_module>
     876:	37 c0       	rjmp	.+110    	; 0x8e6 <usart_init_rs232+0x18e>
     878:	c0 3a       	cpi	r28, 0xA0	; 160
     87a:	e8 e0       	ldi	r30, 0x08	; 8
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_USART0);
     87c:	de 07       	cpc	r29, r30
     87e:	21 f4       	brne	.+8      	; 0x888 <usart_init_rs232+0x130>
     880:	60 e1       	ldi	r22, 0x10	; 16
     882:	83 e0       	ldi	r24, 0x03	; 3
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	}
#endif
#ifdef USARTD0
	else if (module == &USARTD0) {
<<<<<<< HEAD
     a7a:	b9 d2       	rcall	.+1394   	; 0xfee <sysclk_enable_module>
     a7c:	2f c0       	rjmp	.+94     	; 0xadc <usart_init_rs232+0x18e>
     a7e:	c0 3a       	cpi	r28, 0xA0	; 160
     a80:	f9 e0       	ldi	r31, 0x09	; 9
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_USART0);
     a82:	df 07       	cpc	r29, r31
     a84:	21 f4       	brne	.+8      	; 0xa8e <usart_init_rs232+0x140>
     a86:	60 e1       	ldi	r22, 0x10	; 16
     a88:	84 e0       	ldi	r24, 0x04	; 4
=======
     884:	c2 d2       	rcall	.+1412   	; 0xe0a <sysclk_enable_module>
     886:	2f c0       	rjmp	.+94     	; 0x8e6 <usart_init_rs232+0x18e>
     888:	c0 3a       	cpi	r28, 0xA0	; 160
     88a:	f9 e0       	ldi	r31, 0x09	; 9
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_USART0);
     88c:	df 07       	cpc	r29, r31
     88e:	21 f4       	brne	.+8      	; 0x898 <usart_init_rs232+0x140>
     890:	60 e1       	ldi	r22, 0x10	; 16
     892:	84 e0       	ldi	r24, 0x04	; 4
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	}
#endif
#ifdef USARTE0
	else if (module == &USARTE0) {
<<<<<<< HEAD
     a8a:	b1 d2       	rcall	.+1378   	; 0xfee <sysclk_enable_module>
     a8c:	27 c0       	rjmp	.+78     	; 0xadc <usart_init_rs232+0x18e>
     a8e:	c0 3a       	cpi	r28, 0xA0	; 160
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_USART0);
     a90:	8a e0       	ldi	r24, 0x0A	; 10
     a92:	d8 07       	cpc	r29, r24
     a94:	21 f4       	brne	.+8      	; 0xa9e <usart_init_rs232+0x150>
     a96:	60 e1       	ldi	r22, 0x10	; 16
     a98:	85 e0       	ldi	r24, 0x05	; 5
=======
     894:	ba d2       	rcall	.+1396   	; 0xe0a <sysclk_enable_module>
     896:	27 c0       	rjmp	.+78     	; 0x8e6 <usart_init_rs232+0x18e>
     898:	c0 3a       	cpi	r28, 0xA0	; 160
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_USART0);
     89a:	8a e0       	ldi	r24, 0x0A	; 10
     89c:	d8 07       	cpc	r29, r24
     89e:	21 f4       	brne	.+8      	; 0x8a8 <usart_init_rs232+0x150>
     8a0:	60 e1       	ldi	r22, 0x10	; 16
     8a2:	85 e0       	ldi	r24, 0x05	; 5
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	else if (module == &USARTF0) {
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_USART0);
	}
#endif
#ifdef USARTC1
	else if (module == &USARTC1) {
<<<<<<< HEAD
     a9a:	a9 d2       	rcall	.+1362   	; 0xfee <sysclk_enable_module>
     a9c:	1f c0       	rjmp	.+62     	; 0xadc <usart_init_rs232+0x18e>
     a9e:	c0 3b       	cpi	r28, 0xB0	; 176
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_USART1);
     aa0:	e8 e0       	ldi	r30, 0x08	; 8
     aa2:	de 07       	cpc	r29, r30
     aa4:	21 f4       	brne	.+8      	; 0xaae <usart_init_rs232+0x160>
     aa6:	60 e2       	ldi	r22, 0x20	; 32
     aa8:	83 e0       	ldi	r24, 0x03	; 3
=======
     8a4:	b2 d2       	rcall	.+1380   	; 0xe0a <sysclk_enable_module>
     8a6:	1f c0       	rjmp	.+62     	; 0x8e6 <usart_init_rs232+0x18e>
     8a8:	c0 3b       	cpi	r28, 0xB0	; 176
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_USART1);
     8aa:	e8 e0       	ldi	r30, 0x08	; 8
     8ac:	de 07       	cpc	r29, r30
     8ae:	21 f4       	brne	.+8      	; 0x8b8 <usart_init_rs232+0x160>
     8b0:	60 e2       	ldi	r22, 0x20	; 32
     8b2:	83 e0       	ldi	r24, 0x03	; 3
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	}
#endif
#ifdef USARTD1
	else if (module == &USARTD1) {
<<<<<<< HEAD
     aaa:	a1 d2       	rcall	.+1346   	; 0xfee <sysclk_enable_module>
     aac:	17 c0       	rjmp	.+46     	; 0xadc <usart_init_rs232+0x18e>
     aae:	c0 3b       	cpi	r28, 0xB0	; 176
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_USART1);
     ab0:	f9 e0       	ldi	r31, 0x09	; 9
     ab2:	df 07       	cpc	r29, r31
     ab4:	21 f4       	brne	.+8      	; 0xabe <usart_init_rs232+0x170>
     ab6:	60 e2       	ldi	r22, 0x20	; 32
     ab8:	84 e0       	ldi	r24, 0x04	; 4
=======
     8b4:	aa d2       	rcall	.+1364   	; 0xe0a <sysclk_enable_module>
     8b6:	17 c0       	rjmp	.+46     	; 0x8e6 <usart_init_rs232+0x18e>
     8b8:	c0 3b       	cpi	r28, 0xB0	; 176
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_USART1);
     8ba:	f9 e0       	ldi	r31, 0x09	; 9
     8bc:	df 07       	cpc	r29, r31
     8be:	21 f4       	brne	.+8      	; 0x8c8 <usart_init_rs232+0x170>
     8c0:	60 e2       	ldi	r22, 0x20	; 32
     8c2:	84 e0       	ldi	r24, 0x04	; 4
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	else if (module == &USARTF1) {
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_USART1);
	}
#endif
#ifdef TWIC
	else if (module == &TWIC) {
<<<<<<< HEAD
     aba:	99 d2       	rcall	.+1330   	; 0xfee <sysclk_enable_module>
     abc:	0f c0       	rjmp	.+30     	; 0xadc <usart_init_rs232+0x18e>
     abe:	c0 38       	cpi	r28, 0x80	; 128
     ac0:	84 e0       	ldi	r24, 0x04	; 4
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TWI);
     ac2:	d8 07       	cpc	r29, r24
     ac4:	21 f4       	brne	.+8      	; 0xace <usart_init_rs232+0x180>
     ac6:	60 e4       	ldi	r22, 0x40	; 64
     ac8:	83 e0       	ldi	r24, 0x03	; 3
     aca:	91 d2       	rcall	.+1314   	; 0xfee <sysclk_enable_module>
=======
     8c4:	a2 d2       	rcall	.+1348   	; 0xe0a <sysclk_enable_module>
     8c6:	0f c0       	rjmp	.+30     	; 0x8e6 <usart_init_rs232+0x18e>
     8c8:	c0 38       	cpi	r28, 0x80	; 128
     8ca:	84 e0       	ldi	r24, 0x04	; 4
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TWI);
     8cc:	d8 07       	cpc	r29, r24
     8ce:	21 f4       	brne	.+8      	; 0x8d8 <usart_init_rs232+0x180>
     8d0:	60 e4       	ldi	r22, 0x40	; 64
     8d2:	83 e0       	ldi	r24, 0x03	; 3
     8d4:	9a d2       	rcall	.+1332   	; 0xe0a <sysclk_enable_module>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	else if (module == &TWID) {
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TWI);
	}
#endif
#ifdef TWIE
	else if (module == &TWIE) {
<<<<<<< HEAD
     acc:	07 c0       	rjmp	.+14     	; 0xadc <usart_init_rs232+0x18e>
     ace:	c0 3a       	cpi	r28, 0xA0	; 160
     ad0:	e4 e0       	ldi	r30, 0x04	; 4
     ad2:	de 07       	cpc	r29, r30
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TWI);
     ad4:	19 f4       	brne	.+6      	; 0xadc <usart_init_rs232+0x18e>
     ad6:	60 e4       	ldi	r22, 0x40	; 64
     ad8:	85 e0       	ldi	r24, 0x05	; 5
=======
     8d6:	07 c0       	rjmp	.+14     	; 0x8e6 <usart_init_rs232+0x18e>
     8d8:	c0 3a       	cpi	r28, 0xA0	; 160
     8da:	e4 e0       	ldi	r30, 0x04	; 4
     8dc:	de 07       	cpc	r29, r30
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TWI);
     8de:	19 f4       	brne	.+6      	; 0x8e6 <usart_init_rs232+0x18e>
     8e0:	60 e4       	ldi	r22, 0x40	; 64
     8e2:	85 e0       	ldi	r24, 0x05	; 5
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
 * - 0x2        : IrDA mode.
 * - 0x3        : Master SPI mode.
 */
static inline void usart_set_mode(USART_t *usart, USART_CMODE_t usartmode)
{
	(usart)->CTRLC = ((usart)->CTRLC & (~USART_CMODE_gm)) | usartmode;
<<<<<<< HEAD
     ada:	89 d2       	rcall	.+1298   	; 0xfee <sysclk_enable_module>
     adc:	8d 81       	ldd	r24, Y+5	; 0x05
     ade:	8f 73       	andi	r24, 0x3F	; 63
=======
     8e4:	92 d2       	rcall	.+1316   	; 0xe0a <sysclk_enable_module>
     8e6:	8d 81       	ldd	r24, Y+5	; 0x05
     8e8:	8f 73       	andi	r24, 0x3F	; 63
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
 *  \param twoStopBits Enable two stop bit mode. Use bool type.
 */
static inline void usart_format_set(USART_t *usart, USART_CHSIZE_t charSize,
		USART_PMODE_t parityMode, bool twoStopBits)
{
	(usart)->CTRLC = (uint8_t)charSize | parityMode
<<<<<<< HEAD
     ae0:	8d 83       	std	Y+5, r24	; 0x05
     ae2:	f8 01       	movw	r30, r16
     ae4:	95 81       	ldd	r25, Z+5	; 0x05
     ae6:	84 81       	ldd	r24, Z+4	; 0x04
     ae8:	89 2b       	or	r24, r25
     aea:	96 81       	ldd	r25, Z+6	; 0x06
     aec:	91 11       	cpse	r25, r1
     aee:	98 e0       	ldi	r25, 0x08	; 8
     af0:	89 2b       	or	r24, r25
=======
     8ea:	8d 83       	std	Y+5, r24	; 0x05
     8ec:	f8 01       	movw	r30, r16
     8ee:	95 81       	ldd	r25, Z+5	; 0x05
     8f0:	84 81       	ldd	r24, Z+4	; 0x04
     8f2:	89 2b       	or	r24, r25
     8f4:	96 81       	ldd	r25, Z+6	; 0x06
     8f6:	91 11       	cpse	r25, r1
     8f8:	98 e0       	ldi	r25, 0x08	; 8
     8fa:	89 2b       	or	r24, r25
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	bool result;
	sysclk_enable_peripheral_clock(usart);
	usart_set_mode(usart, USART_CMODE_ASYNCHRONOUS_gc);
	usart_format_set(usart, opt->charlength, opt->paritytype,
			opt->stopbits);
	result = usart_set_baudrate(usart, opt->baudrate, sysclk_get_per_hz());
<<<<<<< HEAD
     af2:	8d 83       	std	Y+5, r24	; 0x05
     af4:	f8 01       	movw	r30, r16
     af6:	40 81       	ld	r20, Z
     af8:	51 81       	ldd	r21, Z+1	; 0x01
     afa:	62 81       	ldd	r22, Z+2	; 0x02
     afc:	73 81       	ldd	r23, Z+3	; 0x03
     afe:	00 e0       	ldi	r16, 0x00	; 0
     b00:	18 e4       	ldi	r17, 0x48	; 72
     b02:	28 ee       	ldi	r18, 0xE8	; 232
     b04:	31 e0       	ldi	r19, 0x01	; 1
     b06:	ce 01       	movw	r24, r28
     b08:	0f de       	rcall	.-994    	; 0x728 <usart_set_baudrate>
=======
     8fc:	8d 83       	std	Y+5, r24	; 0x05
     8fe:	f8 01       	movw	r30, r16
     900:	40 81       	ld	r20, Z
     902:	51 81       	ldd	r21, Z+1	; 0x01
     904:	62 81       	ldd	r22, Z+2	; 0x02
     906:	73 81       	ldd	r23, Z+3	; 0x03
     908:	00 e0       	ldi	r16, 0x00	; 0
     90a:	18 e4       	ldi	r17, 0x48	; 72
     90c:	28 ee       	ldi	r18, 0xE8	; 232
     90e:	31 e0       	ldi	r19, 0x01	; 1
     910:	ce 01       	movw	r24, r28
     912:	0f de       	rcall	.-994    	; 0x532 <usart_set_baudrate>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
 *
 * \param usart Pointer to the USART module.
 */
static inline void usart_tx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_TXEN_bm;
<<<<<<< HEAD
     b0a:	9c 81       	ldd	r25, Y+4	; 0x04
     b0c:	98 60       	ori	r25, 0x08	; 8
     b0e:	9c 83       	std	Y+4, r25	; 0x04
=======
     914:	9c 81       	ldd	r25, Y+4	; 0x04
     916:	98 60       	ori	r25, 0x08	; 8
     918:	9c 83       	std	Y+4, r25	; 0x04
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
 *
 * \param usart Pointer to the USART module
 */
static inline void usart_rx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_RXEN_bm;
<<<<<<< HEAD
     b10:	9c 81       	ldd	r25, Y+4	; 0x04
     b12:	90 61       	ori	r25, 0x10	; 16
     b14:	9c 83       	std	Y+4, r25	; 0x04
=======
     91a:	9c 81       	ldd	r25, Y+4	; 0x04
     91c:	90 61       	ori	r25, 0x10	; 16
     91e:	9c 83       	std	Y+4, r25	; 0x04
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	usart_tx_enable(usart);
	usart_rx_enable(usart);

	return result;
}
<<<<<<< HEAD
     b16:	df 91       	pop	r29
     b18:	cf 91       	pop	r28
     b1a:	1f 91       	pop	r17
     b1c:	0f 91       	pop	r16
     b1e:	08 95       	ret

00000b20 <hall_sensor_init>:
=======
     920:	df 91       	pop	r29
     922:	cf 91       	pop	r28
     924:	1f 91       	pop	r17
     926:	0f 91       	pop	r16
     928:	08 95       	ret

0000092a <hall_sensor_init>:
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
 */

#include <asf.h>
#include "hall.h"

void hall_sensor_init(void){
<<<<<<< HEAD
     b20:	08 95       	ret

00000b22 <cam_switch>:
	PORTA.DIR |= PIN3_bm; // Sets A3 to output
	cam_switch();
}

void cam_switch(void){
	PORTA.OUT ^= PIN3_bm; // Changes A3 from high to low or vice-versa
     b22:	e0 e0       	ldi	r30, 0x00	; 0
     b24:	f6 e0       	ldi	r31, 0x06	; 6
     b26:	94 81       	ldd	r25, Z+4	; 0x04
     b28:	88 e0       	ldi	r24, 0x08	; 8
     b2a:	89 27       	eor	r24, r25
     b2c:	84 83       	std	Z+4, r24	; 0x04
     b2e:	08 95       	ret

00000b30 <cam_init>:
=======
     92a:	08 95       	ret

0000092c <cam_init>:
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347

#include "spy_cam.h"
#include <asf.h>

void cam_init(void){
<<<<<<< HEAD
	PORTA.DIR |= PIN3_bm; // Sets A3 to output
     b30:	e0 e0       	ldi	r30, 0x00	; 0
     b32:	f6 e0       	ldi	r31, 0x06	; 6
     b34:	80 81       	ld	r24, Z
     b36:	88 60       	ori	r24, 0x08	; 8
     b38:	80 83       	st	Z, r24
	cam_switch();
     b3a:	f3 cf       	rjmp	.-26     	; 0xb22 <cam_switch>
     b3c:	08 95       	ret

00000b3e <gps_uart_init>:
=======
	PORTA.DIR |= 0x08; // Sets A3 to output
     92c:	e0 e0       	ldi	r30, 0x00	; 0
     92e:	f6 e0       	ldi	r31, 0x06	; 6
     930:	80 81       	ld	r24, Z
     932:	88 60       	ori	r24, 0x08	; 8
     934:	80 83       	st	Z, r24
     936:	08 95       	ret

00000938 <cam_switch>:
}

void cam_switch(void){
	PORTA.OUT ^= 0x08; // Changes A3 from high to low or vice-versa
     938:	e0 e0       	ldi	r30, 0x00	; 0
     93a:	f6 e0       	ldi	r31, 0x06	; 6
     93c:	94 81       	ldd	r25, Z+4	; 0x04
     93e:	88 e0       	ldi	r24, 0x08	; 8
     940:	89 27       	eor	r24, r25
     942:	84 83       	std	Z+4, r24	; 0x04
     944:	08 95       	ret

00000946 <gps_uart_init>:
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347

#include <asf.h>
#include <string.h>
#include "mt3339.h"

void gps_uart_init(void){
<<<<<<< HEAD
     b3e:	cf 93       	push	r28
     b40:	df 93       	push	r29
     b42:	cd b7       	in	r28, 0x3d	; 61
     b44:	de b7       	in	r29, 0x3e	; 62
     b46:	27 97       	sbiw	r28, 0x07	; 7
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	de bf       	out	0x3e, r29	; 62
=======
     946:	cf 93       	push	r28
     948:	df 93       	push	r29
     94a:	cd b7       	in	r28, 0x3d	; 61
     94c:	de b7       	in	r29, 0x3e	; 62
     94e:	27 97       	sbiw	r28, 0x07	; 7
     950:	cd bf       	out	0x3d, r28	; 61
     952:	de bf       	out	0x3e, r29	; 62
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_USART1);
	}
#endif
#ifdef USARTD1
	else if (module == &USARTD1) {
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_USART1);
<<<<<<< HEAD
     b4c:	60 e2       	ldi	r22, 0x20	; 32
     b4e:	84 e0       	ldi	r24, 0x04	; 4
     b50:	4e d2       	rcall	.+1180   	; 0xfee <sysclk_enable_module>
=======
     954:	60 e2       	ldi	r22, 0x20	; 32
     956:	84 e0       	ldi	r24, 0x04	; 4
     958:	58 d2       	rcall	.+1200   	; 0xe0a <sysclk_enable_module>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
		.charlength =	GPS_TERMINAL_SERIAL_CHAR_LEN,
		.paritytype =	GPS_TERMINAL_SERIAL_PARITY,
		.stopbits	=	GPS_TERMINAL_SERIAL_STOP_BIT
	};

	GPS_TERMINAL_PORT.DIR |= GPS_TERMINAL_TX_PIN; // Puts pin to output
<<<<<<< HEAD
     b52:	e0 e6       	ldi	r30, 0x60	; 96
     b54:	f6 e0       	ldi	r31, 0x06	; 6
     b56:	80 81       	ld	r24, Z
     b58:	80 68       	ori	r24, 0x80	; 128
     b5a:	80 83       	st	Z, r24
=======
     95a:	e0 e6       	ldi	r30, 0x60	; 96
     95c:	f6 e0       	ldi	r31, 0x06	; 6
     95e:	80 81       	ld	r24, Z
     960:	80 68       	ori	r24, 0x80	; 128
     962:	80 83       	st	Z, r24
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
static inline bool usart_serial_init(usart_if usart, const
		usart_serial_options_t *options)
{
	// USART options.
	usart_rs232_options_t usart_rs232_options;
	usart_rs232_options.charlength   = options->charlength;
<<<<<<< HEAD
     b5c:	e6 e0       	ldi	r30, 0x06	; 6
     b5e:	f0 e2       	ldi	r31, 0x20	; 32
     b60:	84 81       	ldd	r24, Z+4	; 0x04
     b62:	8d 83       	std	Y+5, r24	; 0x05
	usart_rs232_options.paritytype   = options->paritytype;
     b64:	85 81       	ldd	r24, Z+5	; 0x05
     b66:	8e 83       	std	Y+6, r24	; 0x06
	usart_rs232_options.stopbits     = options->stopbits;
     b68:	86 81       	ldd	r24, Z+6	; 0x06
     b6a:	8f 83       	std	Y+7, r24	; 0x07
	usart_rs232_options.baudrate     = options->baudrate;
     b6c:	80 81       	ld	r24, Z
     b6e:	91 81       	ldd	r25, Z+1	; 0x01
     b70:	a2 81       	ldd	r26, Z+2	; 0x02
     b72:	b3 81       	ldd	r27, Z+3	; 0x03
     b74:	89 83       	std	Y+1, r24	; 0x01
     b76:	9a 83       	std	Y+2, r25	; 0x02
     b78:	ab 83       	std	Y+3, r26	; 0x03
     b7a:	bc 83       	std	Y+4, r27	; 0x04
=======
     964:	e6 e0       	ldi	r30, 0x06	; 6
     966:	f0 e2       	ldi	r31, 0x20	; 32
     968:	84 81       	ldd	r24, Z+4	; 0x04
     96a:	8d 83       	std	Y+5, r24	; 0x05
	usart_rs232_options.paritytype   = options->paritytype;
     96c:	85 81       	ldd	r24, Z+5	; 0x05
     96e:	8e 83       	std	Y+6, r24	; 0x06
	usart_rs232_options.stopbits     = options->stopbits;
     970:	86 81       	ldd	r24, Z+6	; 0x06
     972:	8f 83       	std	Y+7, r24	; 0x07
	usart_rs232_options.baudrate     = options->baudrate;
     974:	80 81       	ld	r24, Z
     976:	91 81       	ldd	r25, Z+1	; 0x01
     978:	a2 81       	ldd	r26, Z+2	; 0x02
     97a:	b3 81       	ldd	r27, Z+3	; 0x03
     97c:	89 83       	std	Y+1, r24	; 0x01
     97e:	9a 83       	std	Y+2, r25	; 0x02
     980:	ab 83       	std	Y+3, r26	; 0x03
     982:	bc 83       	std	Y+4, r27	; 0x04
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
		sysclk_enable_module(SYSCLK_PORT_D,PR_USART0_bm);
	}
#endif
#ifdef USARTD1
	if((uint16_t)usart == (uint16_t)&USARTD1) {
		sysclk_enable_module(SYSCLK_PORT_D,PR_USART1_bm);
<<<<<<< HEAD
     b7c:	60 e2       	ldi	r22, 0x20	; 32
     b7e:	84 e0       	ldi	r24, 0x04	; 4
     b80:	36 d2       	rcall	.+1132   	; 0xfee <sysclk_enable_module>
=======
     984:	60 e2       	ldi	r22, 0x20	; 32
     986:	84 e0       	ldi	r24, 0x04	; 4
     988:	40 d2       	rcall	.+1152   	; 0xe0a <sysclk_enable_module>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
#ifdef USARTF1
	if((uint16_t)usart == (uint16_t)&USARTF1) {
		sysclk_enable_module(SYSCLK_PORT_F,PR_USART1_bm);
	}
#endif
	if (usart_init_rs232(usart, &usart_rs232_options)) {
<<<<<<< HEAD
     b82:	be 01       	movw	r22, r28
     b84:	6f 5f       	subi	r22, 0xFF	; 255
     b86:	7f 4f       	sbci	r23, 0xFF	; 255
     b88:	80 eb       	ldi	r24, 0xB0	; 176
     b8a:	99 e0       	ldi	r25, 0x09	; 9
     b8c:	e0 de       	rcall	.-576    	; 0x94e <usart_init_rs232>

	usart_serial_init(GPS_TERMINAL_SERIAL,&gps_config);
}
     b8e:	27 96       	adiw	r28, 0x07	; 7
     b90:	cd bf       	out	0x3d, r28	; 61
     b92:	de bf       	out	0x3e, r29	; 62
     b94:	df 91       	pop	r29
     b96:	cf 91       	pop	r28
     b98:	08 95       	ret

00000b9a <__portable_avr_delay_cycles>:
=======
     98a:	be 01       	movw	r22, r28
     98c:	6f 5f       	subi	r22, 0xFF	; 255
     98e:	7f 4f       	sbci	r23, 0xFF	; 255
     990:	80 eb       	ldi	r24, 0xB0	; 176
     992:	99 e0       	ldi	r25, 0x09	; 9
     994:	e1 de       	rcall	.-574    	; 0x758 <usart_init_rs232>

	usart_serial_init(GPS_TERMINAL_SERIAL,&gps_config);
}
     996:	27 96       	adiw	r28, 0x07	; 7
     998:	cd bf       	out	0x3d, r28	; 61
     99a:	de bf       	out	0x3e, r29	; 62
     99c:	df 91       	pop	r29
     99e:	cf 91       	pop	r28
     9a0:	08 95       	ret

000009a2 <__portable_avr_delay_cycles>:
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
 *
 * @{
 */
__always_optimize
static inline void __portable_avr_delay_cycles(unsigned long n)
{
<<<<<<< HEAD
     b9a:	04 c0       	rjmp	.+8      	; 0xba4 <__portable_avr_delay_cycles+0xa>
	while (n) {
		barrier();
		n--;
     b9c:	61 50       	subi	r22, 0x01	; 1
     b9e:	71 09       	sbc	r23, r1
     ba0:	81 09       	sbc	r24, r1
     ba2:	91 09       	sbc	r25, r1
=======
     9a2:	04 c0       	rjmp	.+8      	; 0x9ac <__portable_avr_delay_cycles+0xa>
	while (n) {
		barrier();
		n--;
     9a4:	61 50       	subi	r22, 0x01	; 1
     9a6:	71 09       	sbc	r23, r1
     9a8:	81 09       	sbc	r24, r1
     9aa:	91 09       	sbc	r25, r1
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
 * @{
 */
__always_optimize
static inline void __portable_avr_delay_cycles(unsigned long n)
{
	while (n) {
<<<<<<< HEAD
     ba4:	61 15       	cp	r22, r1
     ba6:	71 05       	cpc	r23, r1
     ba8:	81 05       	cpc	r24, r1
     baa:	91 05       	cpc	r25, r1
     bac:	b9 f7       	brne	.-18     	; 0xb9c <__portable_avr_delay_cycles+0x2>
     bae:	08 95       	ret

00000bb0 <flip_ms5607>:
=======
     9ac:	61 15       	cp	r22, r1
     9ae:	71 05       	cpc	r23, r1
     9b0:	81 05       	cpc	r24, r1
     9b2:	91 05       	cpc	r25, r1
     9b4:	b9 f7       	brne	.-18     	; 0x9a4 <__portable_avr_delay_cycles+0x2>
     9b6:	08 95       	ret

000009b8 <flip_ms5607>:
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347

	return rx_data;
}

void flip_ms5607(void){
	MS5607_PORT.OUT ^= MS5607_PIN;
<<<<<<< HEAD
     bb0:	e0 e4       	ldi	r30, 0x40	; 64
     bb2:	f6 e0       	ldi	r31, 0x06	; 6
     bb4:	94 81       	ldd	r25, Z+4	; 0x04
     bb6:	80 e1       	ldi	r24, 0x10	; 16
     bb8:	89 27       	eor	r24, r25
     bba:	84 83       	std	Z+4, r24	; 0x04
     bbc:	08 95       	ret

00000bbe <ms5607_init>:
=======
     9b8:	e0 e4       	ldi	r30, 0x40	; 64
     9ba:	f6 e0       	ldi	r31, 0x06	; 6
     9bc:	94 81       	ldd	r25, Z+4	; 0x04
     9be:	80 e1       	ldi	r24, 0x10	; 16
     9c0:	89 27       	eor	r24, r25
     9c2:	84 83       	std	Z+4, r24	; 0x04
     9c4:	08 95       	ret

000009c6 <ms5607_init>:
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
#include <asf.h>
#include "ms5607.h"
#include "spi_controller.h"

void ms5607_init(void){
	PORTC.OUT |= 0x10; // makes the 4th pin on Port C be set on high (0b00010000)
<<<<<<< HEAD
     bbe:	e0 e4       	ldi	r30, 0x40	; 64
     bc0:	f6 e0       	ldi	r31, 0x06	; 6
     bc2:	84 81       	ldd	r24, Z+4	; 0x04
     bc4:	80 61       	ori	r24, 0x10	; 16
     bc6:	84 83       	std	Z+4, r24	; 0x04

	// Resets the ms5607
	flip_ms5607();
     bc8:	f3 df       	rcall	.-26     	; 0xbb0 <flip_ms5607>
	spi_write(CMD_MS5607_RESET);
     bca:	8e e1       	ldi	r24, 0x1E	; 30
     bcc:	7d d0       	rcall	.+250    	; 0xcc8 <spi_write>
	delay_ms(3);
     bce:	60 e8       	ldi	r22, 0x80	; 128
     bd0:	7e e3       	ldi	r23, 0x3E	; 62
     bd2:	80 e0       	ldi	r24, 0x00	; 0
     bd4:	90 e0       	ldi	r25, 0x00	; 0
	flip_ms5607();
     bd6:	e1 df       	rcall	.-62     	; 0xb9a <__portable_avr_delay_cycles>
     bd8:	eb df       	rcall	.-42     	; 0xbb0 <flip_ms5607>
	delay_ms(2);
     bda:	6b ea       	ldi	r22, 0xAB	; 171
     bdc:	79 e2       	ldi	r23, 0x29	; 41
     bde:	80 e0       	ldi	r24, 0x00	; 0
     be0:	90 e0       	ldi	r25, 0x00	; 0
     be2:	db cf       	rjmp	.-74     	; 0xb9a <__portable_avr_delay_cycles>
     be4:	08 95       	ret

00000be6 <ms5607_read>:
=======
     9c6:	e0 e4       	ldi	r30, 0x40	; 64
     9c8:	f6 e0       	ldi	r31, 0x06	; 6
     9ca:	84 81       	ldd	r24, Z+4	; 0x04
     9cc:	80 61       	ori	r24, 0x10	; 16
     9ce:	84 83       	std	Z+4, r24	; 0x04
	delay_ms(5);
     9d0:	6b e2       	ldi	r22, 0x2B	; 43
     9d2:	78 e6       	ldi	r23, 0x68	; 104
     9d4:	80 e0       	ldi	r24, 0x00	; 0
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	e4 df       	rcall	.-56     	; 0x9a2 <__portable_avr_delay_cycles>

	// Resets the ms5607
	flip_ms5607();
     9da:	ee df       	rcall	.-36     	; 0x9b8 <flip_ms5607>
	spi_write(CMD_MS5607_RESET);
     9dc:	8e e1       	ldi	r24, 0x1E	; 30
     9de:	82 d0       	rcall	.+260    	; 0xae4 <spi_write>
     9e0:	60 e8       	ldi	r22, 0x80	; 128
	delay_ms(3);
     9e2:	7e e3       	ldi	r23, 0x3E	; 62
     9e4:	80 e0       	ldi	r24, 0x00	; 0
     9e6:	90 e0       	ldi	r25, 0x00	; 0
     9e8:	dc df       	rcall	.-72     	; 0x9a2 <__portable_avr_delay_cycles>
	flip_ms5607();
     9ea:	e6 df       	rcall	.-52     	; 0x9b8 <flip_ms5607>
	delay_ms(2);
     9ec:	6b ea       	ldi	r22, 0xAB	; 171
     9ee:	79 e2       	ldi	r23, 0x29	; 41
     9f0:	80 e0       	ldi	r24, 0x00	; 0
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	d6 cf       	rjmp	.-84     	; 0x9a2 <__portable_avr_delay_cycles>
     9f6:	08 95       	ret

000009f8 <ms5607_read>:
     9f8:	cf 93       	push	r28
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
}

uint16_t ms5607_read(uint16_t comm)
{
<<<<<<< HEAD
     be6:	cf 93       	push	r28
     be8:	df 93       	push	r29
     bea:	c8 2f       	mov	r28, r24
	uint16_t rx_data = 0; // temporary 16-bit value
	flip_ms5607(); // select our spi device
     bec:	e1 df       	rcall	.-62     	; 0xbb0 <flip_ms5607>
	spi_write(comm); // write a specified command to ask for data
     bee:	8c 2f       	mov	r24, r28
=======
     9fa:	df 93       	push	r29
     9fc:	c8 2f       	mov	r28, r24
	uint16_t rx_data = 0; // temporary 16-bit value
	flip_ms5607(); // select our spi device
     9fe:	dc df       	rcall	.-72     	; 0x9b8 <flip_ms5607>
	spi_write(comm); // write a specified command to ask for data
     a00:	8c 2f       	mov	r24, r28
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347

	/*typecast this expression from an 8-bit to a 16-bit and shift it 8 bits to the left
	  meaning the returned value is now in the upper 8 bits rx_data*/
	rx_data = (uint16_t)spi_read()<<8;
<<<<<<< HEAD
     bf0:	6b d0       	rcall	.+214    	; 0xcc8 <spi_write>
     bf2:	5f d0       	rcall	.+190    	; 0xcb2 <spi_read>
     bf4:	c8 2f       	mov	r28, r24
     bf6:	d0 e0       	ldi	r29, 0x00	; 0
     bf8:	dc 2f       	mov	r29, r28

	// OR the second byte with the 16-bit variable, the returned value is now in the lower 8 bits of 'rx_data'
	rx_data |= spi_read();
     bfa:	cc 27       	eor	r28, r28
     bfc:	5a d0       	rcall	.+180    	; 0xcb2 <spi_read>
     bfe:	c8 2b       	or	r28, r24

	flip_ms5607(); // end spi exchange
     c00:	d7 df       	rcall	.-82     	; 0xbb0 <flip_ms5607>
     c02:	ce 01       	movw	r24, r28

	return rx_data; // return the 16-bit value
}
     c04:	df 91       	pop	r29
     c06:	cf 91       	pop	r28
     c08:	08 95       	ret

00000c0a <ms5607_convert_d1>:
     c0a:	cf 92       	push	r12

uint32_t ms5607_convert_d1(void)
{
     c0c:	df 92       	push	r13
     c0e:	ef 92       	push	r14
     c10:	ff 92       	push	r15
	uint32_t rx_data = 0; // temporary 16-bit value
	// CONVERT D1
	flip_ms5607(); // select our spi device
     c12:	ce df       	rcall	.-100    	; 0xbb0 <flip_ms5607>
	spi_write(CMD_MS5607_D1_4096); // write a specified command to ask for data
     c14:	88 e4       	ldi	r24, 0x48	; 72
     c16:	58 d0       	rcall	.+176    	; 0xcc8 <spi_write>
	delay_ms(10);
     c18:	66 e5       	ldi	r22, 0x56	; 86
     c1a:	70 ed       	ldi	r23, 0xD0	; 208
     c1c:	80 e0       	ldi	r24, 0x00	; 0
     c1e:	90 e0       	ldi	r25, 0x00	; 0
	flip_ms5607();
     c20:	bc df       	rcall	.-136    	; 0xb9a <__portable_avr_delay_cycles>

	flip_ms5607();
     c22:	c6 df       	rcall	.-116    	; 0xbb0 <flip_ms5607>
     c24:	c5 df       	rcall	.-118    	; 0xbb0 <flip_ms5607>
	spi_write(CMD_MS5607_READ_ADC);
     c26:	80 e0       	ldi	r24, 0x00	; 0
     c28:	4f d0       	rcall	.+158    	; 0xcc8 <spi_write>
     c2a:	43 d0       	rcall	.+134    	; 0xcb2 <spi_read>
	rx_data  = (uint32_t) spi_read()<<16;
     c2c:	c8 2e       	mov	r12, r24
     c2e:	d1 2c       	mov	r13, r1
     c30:	e1 2c       	mov	r14, r1
     c32:	f1 2c       	mov	r15, r1
     c34:	76 01       	movw	r14, r12
     c36:	dd 24       	eor	r13, r13
	rx_data |= (uint32_t) spi_read()<<8;
     c38:	cc 24       	eor	r12, r12
     c3a:	3b d0       	rcall	.+118    	; 0xcb2 <spi_read>
     c3c:	d8 2a       	or	r13, r24
	rx_data |= spi_read();
     c3e:	39 d0       	rcall	.+114    	; 0xcb2 <spi_read>
     c40:	c8 2a       	or	r12, r24
     c42:	b6 df       	rcall	.-148    	; 0xbb0 <flip_ms5607>
	flip_ms5607();
     c44:	c7 01       	movw	r24, r14
     c46:	b6 01       	movw	r22, r12

	return rx_data;
}
     c48:	ff 90       	pop	r15
     c4a:	ef 90       	pop	r14
     c4c:	df 90       	pop	r13
     c4e:	cf 90       	pop	r12
     c50:	08 95       	ret

00000c52 <ms5607_convert_d2>:
     c52:	cf 92       	push	r12
     c54:	df 92       	push	r13

uint32_t ms5607_convert_d2(void)
{
     c56:	ef 92       	push	r14
     c58:	ff 92       	push	r15
	uint32_t rx_data = 0; // temporary 16-bit value
	// CONVERT D2
	flip_ms5607(); // select our spi device
     c5a:	aa df       	rcall	.-172    	; 0xbb0 <flip_ms5607>
	spi_write(CMD_MS5607_D2_4096); // write a specified command to ask for data
     c5c:	88 e5       	ldi	r24, 0x58	; 88
     c5e:	34 d0       	rcall	.+104    	; 0xcc8 <spi_write>
	delay_ms(10);
     c60:	66 e5       	ldi	r22, 0x56	; 86
     c62:	70 ed       	ldi	r23, 0xD0	; 208
     c64:	80 e0       	ldi	r24, 0x00	; 0
     c66:	90 e0       	ldi	r25, 0x00	; 0
	flip_ms5607();
     c68:	98 df       	rcall	.-208    	; 0xb9a <__portable_avr_delay_cycles>

	flip_ms5607();
     c6a:	a2 df       	rcall	.-188    	; 0xbb0 <flip_ms5607>
     c6c:	a1 df       	rcall	.-190    	; 0xbb0 <flip_ms5607>
	spi_write(CMD_MS5607_READ_ADC);
     c6e:	80 e0       	ldi	r24, 0x00	; 0
     c70:	2b d0       	rcall	.+86     	; 0xcc8 <spi_write>
     c72:	1f d0       	rcall	.+62     	; 0xcb2 <spi_read>
	rx_data  = (uint32_t) spi_read()<<16;
     c74:	c8 2e       	mov	r12, r24
     c76:	d1 2c       	mov	r13, r1
     c78:	e1 2c       	mov	r14, r1
     c7a:	f1 2c       	mov	r15, r1
     c7c:	76 01       	movw	r14, r12
     c7e:	dd 24       	eor	r13, r13
	rx_data |= (uint32_t) spi_read()<<8;
     c80:	cc 24       	eor	r12, r12
     c82:	17 d0       	rcall	.+46     	; 0xcb2 <spi_read>
     c84:	d8 2a       	or	r13, r24
	rx_data |= spi_read();
     c86:	15 d0       	rcall	.+42     	; 0xcb2 <spi_read>
     c88:	c8 2a       	or	r12, r24
     c8a:	92 df       	rcall	.-220    	; 0xbb0 <flip_ms5607>
	flip_ms5607();
     c8c:	c7 01       	movw	r24, r14
     c8e:	b6 01       	movw	r22, r12

	return rx_data;
}
     c90:	ff 90       	pop	r15
     c92:	ef 90       	pop	r14
     c94:	df 90       	pop	r13
     c96:	cf 90       	pop	r12
     c98:	08 95       	ret

00000c9a <spi_init>:
     c9a:	e0 e4       	ldi	r30, 0x40	; 64
     c9c:	f6 e0       	ldi	r31, 0x06	; 6
	SPIC.CTRL = 0x5C; //enables SPI and puts a prescaler of 16 idling high and transmitting MSB first on rising signal
=======
     a02:	70 d0       	rcall	.+224    	; 0xae4 <spi_write>
     a04:	5f d0       	rcall	.+190    	; 0xac4 <spi_read>
     a06:	c8 2f       	mov	r28, r24
     a08:	d0 e0       	ldi	r29, 0x00	; 0
     a0a:	dc 2f       	mov	r29, r28

	// OR the second byte with the 16-bit variable, the returned value is now in the lower 8 bits of 'rx_data'
	rx_data |= spi_read();
     a0c:	cc 27       	eor	r28, r28
     a0e:	5a d0       	rcall	.+180    	; 0xac4 <spi_read>
     a10:	c8 2b       	or	r28, r24

	flip_ms5607(); // end spi exchange
     a12:	d2 df       	rcall	.-92     	; 0x9b8 <flip_ms5607>
     a14:	ce 01       	movw	r24, r28

	return rx_data; // return the 16-bit value
}
     a16:	df 91       	pop	r29
     a18:	cf 91       	pop	r28
     a1a:	08 95       	ret

00000a1c <ms5607_convert_d1>:
     a1c:	cf 92       	push	r12

uint32_t ms5607_convert_d1(void)
{
     a1e:	df 92       	push	r13
     a20:	ef 92       	push	r14
     a22:	ff 92       	push	r15
	uint32_t rx_data = 0; // temporary 16-bit value
	// CONVERT D1
	flip_ms5607(); // select our spi device
     a24:	c9 df       	rcall	.-110    	; 0x9b8 <flip_ms5607>
	spi_write(CMD_MS5607_D1_4096); // write a specified command to ask for data
     a26:	88 e4       	ldi	r24, 0x48	; 72
     a28:	5d d0       	rcall	.+186    	; 0xae4 <spi_write>
	delay_ms(10);
     a2a:	66 e5       	ldi	r22, 0x56	; 86
     a2c:	70 ed       	ldi	r23, 0xD0	; 208
     a2e:	80 e0       	ldi	r24, 0x00	; 0
     a30:	90 e0       	ldi	r25, 0x00	; 0
	flip_ms5607();
     a32:	b7 df       	rcall	.-146    	; 0x9a2 <__portable_avr_delay_cycles>

	flip_ms5607();
     a34:	c1 df       	rcall	.-126    	; 0x9b8 <flip_ms5607>
     a36:	c0 df       	rcall	.-128    	; 0x9b8 <flip_ms5607>
	spi_write(CMD_MS5607_READ_ADC);
     a38:	80 e0       	ldi	r24, 0x00	; 0
     a3a:	54 d0       	rcall	.+168    	; 0xae4 <spi_write>
     a3c:	43 d0       	rcall	.+134    	; 0xac4 <spi_read>
	rx_data  = (uint32_t) spi_read()<<16;
     a3e:	c8 2e       	mov	r12, r24
     a40:	d1 2c       	mov	r13, r1
     a42:	e1 2c       	mov	r14, r1
     a44:	f1 2c       	mov	r15, r1
     a46:	76 01       	movw	r14, r12
     a48:	dd 24       	eor	r13, r13
	rx_data |= (uint32_t) spi_read()<<8;
     a4a:	cc 24       	eor	r12, r12
     a4c:	3b d0       	rcall	.+118    	; 0xac4 <spi_read>
     a4e:	d8 2a       	or	r13, r24
	rx_data |= spi_read();
     a50:	39 d0       	rcall	.+114    	; 0xac4 <spi_read>
     a52:	c8 2a       	or	r12, r24
     a54:	b1 df       	rcall	.-158    	; 0x9b8 <flip_ms5607>
	flip_ms5607();
     a56:	c7 01       	movw	r24, r14
     a58:	b6 01       	movw	r22, r12

	return rx_data;
}
     a5a:	ff 90       	pop	r15
     a5c:	ef 90       	pop	r14
     a5e:	df 90       	pop	r13
     a60:	cf 90       	pop	r12
     a62:	08 95       	ret

00000a64 <ms5607_convert_d2>:
     a64:	cf 92       	push	r12
     a66:	df 92       	push	r13

uint32_t ms5607_convert_d2(void)
{
     a68:	ef 92       	push	r14
     a6a:	ff 92       	push	r15
	uint32_t rx_data = 0; // temporary 16-bit value
	// CONVERT D2
	flip_ms5607(); // select our spi device
     a6c:	a5 df       	rcall	.-182    	; 0x9b8 <flip_ms5607>
	spi_write(CMD_MS5607_D2_4096); // write a specified command to ask for data
     a6e:	88 e5       	ldi	r24, 0x58	; 88
     a70:	39 d0       	rcall	.+114    	; 0xae4 <spi_write>
	delay_ms(10);
     a72:	66 e5       	ldi	r22, 0x56	; 86
     a74:	70 ed       	ldi	r23, 0xD0	; 208
     a76:	80 e0       	ldi	r24, 0x00	; 0
     a78:	90 e0       	ldi	r25, 0x00	; 0
	flip_ms5607();
     a7a:	93 df       	rcall	.-218    	; 0x9a2 <__portable_avr_delay_cycles>

	flip_ms5607();
     a7c:	9d df       	rcall	.-198    	; 0x9b8 <flip_ms5607>
     a7e:	9c df       	rcall	.-200    	; 0x9b8 <flip_ms5607>
	spi_write(CMD_MS5607_READ_ADC);
     a80:	80 e0       	ldi	r24, 0x00	; 0
     a82:	30 d0       	rcall	.+96     	; 0xae4 <spi_write>
     a84:	1f d0       	rcall	.+62     	; 0xac4 <spi_read>
	rx_data  = (uint32_t) spi_read()<<16;
     a86:	c8 2e       	mov	r12, r24
     a88:	d1 2c       	mov	r13, r1
     a8a:	e1 2c       	mov	r14, r1
     a8c:	f1 2c       	mov	r15, r1
     a8e:	76 01       	movw	r14, r12
     a90:	dd 24       	eor	r13, r13
	rx_data |= (uint32_t) spi_read()<<8;
     a92:	cc 24       	eor	r12, r12
     a94:	17 d0       	rcall	.+46     	; 0xac4 <spi_read>
     a96:	d8 2a       	or	r13, r24
	rx_data |= spi_read();
     a98:	15 d0       	rcall	.+42     	; 0xac4 <spi_read>
     a9a:	c8 2a       	or	r12, r24
     a9c:	8d df       	rcall	.-230    	; 0x9b8 <flip_ms5607>
	flip_ms5607();
     a9e:	c7 01       	movw	r24, r14
     aa0:	b6 01       	movw	r22, r12

	return rx_data;
}
     aa2:	ff 90       	pop	r15
     aa4:	ef 90       	pop	r14
     aa6:	df 90       	pop	r13
     aa8:	cf 90       	pop	r12
     aaa:	08 95       	ret

00000aac <spi_init>:
     aac:	68 e0       	ldi	r22, 0x08	; 8
     aae:	83 e0       	ldi	r24, 0x03	; 3
	PORTC.DIR |= 0b10110000;
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
}

void spi_select(uint8_t port)
{
	PORTC.OUT ^= port; //switches SS
<<<<<<< HEAD
     c9e:	80 81       	ld	r24, Z
     ca0:	80 6b       	ori	r24, 0xB0	; 176
     ca2:	80 83       	st	Z, r24
     ca4:	68 e0       	ldi	r22, 0x08	; 8
     ca6:	83 e0       	ldi	r24, 0x03	; 3
     ca8:	a2 d1       	rcall	.+836    	; 0xfee <sysclk_enable_module>
     caa:	8c e5       	ldi	r24, 0x5C	; 92
     cac:	80 93 c0 08 	sts	0x08C0, r24	; 0x8008c0 <__TEXT_REGION_LENGTH__+0x7008c0>
     cb0:	08 95       	ret

00000cb2 <spi_read>:
}

uint8_t spi_read(void)
{
	SPIC.DATA = 0xFF; // make the DATA register something we know
     cb2:	8f ef       	ldi	r24, 0xFF	; 255
     cb4:	80 93 c3 08 	sts	0x08C3, r24	; 0x8008c3 <__TEXT_REGION_LENGTH__+0x7008c3>
	while(!(SPIC.STATUS>>7));
     cb8:	e0 ec       	ldi	r30, 0xC0	; 192
     cba:	f8 e0       	ldi	r31, 0x08	; 8
     cbc:	82 81       	ldd	r24, Z+2	; 0x02
     cbe:	88 23       	and	r24, r24
     cc0:	ec f7       	brge	.-6      	; 0xcbc <spi_read+0xa>

	return SPIC.DATA; // return the data from this function
     cc2:	80 91 c3 08 	lds	r24, 0x08C3	; 0x8008c3 <__TEXT_REGION_LENGTH__+0x7008c3>
}
     cc6:	08 95       	ret

00000cc8 <spi_write>:
=======
     ab0:	ac d1       	rcall	.+856    	; 0xe0a <sysclk_enable_module>
     ab2:	81 e5       	ldi	r24, 0x51	; 81
     ab4:	80 93 c0 08 	sts	0x08C0, r24	; 0x8008c0 <__TEXT_REGION_LENGTH__+0x7008c0>
     ab8:	e0 e4       	ldi	r30, 0x40	; 64
     aba:	f6 e0       	ldi	r31, 0x06	; 6
     abc:	80 81       	ld	r24, Z
     abe:	80 6b       	ori	r24, 0xB0	; 176
     ac0:	80 83       	st	Z, r24
     ac2:	08 95       	ret

00000ac4 <spi_read>:

uint8_t spi_read(void)
{
	uint8_t iter_max = 100;
	uint8_t count = 0;
	SPIC.DATA = 0xFF; // make the DATA register something we know
     ac4:	e0 ec       	ldi	r30, 0xC0	; 192
     ac6:	f8 e0       	ldi	r31, 0x08	; 8
     ac8:	8f ef       	ldi	r24, 0xFF	; 255
     aca:	83 83       	std	Z+3, r24	; 0x03
	while(!(SPIC.STATUS>>7) && count < iter_max){ // wait for the SPI interrupt flag to let us know the transfer is complete
     acc:	82 81       	ldd	r24, Z+2	; 0x02
     ace:	88 23       	and	r24, r24
     ad0:	34 f0       	brlt	.+12     	; 0xade <spi_read+0x1a>
     ad2:	84 e6       	ldi	r24, 0x64	; 100
     ad4:	92 81       	ldd	r25, Z+2	; 0x02
     ad6:	99 23       	and	r25, r25
     ad8:	14 f0       	brlt	.+4      	; 0xade <spi_read+0x1a>
     ada:	81 50       	subi	r24, 0x01	; 1
     adc:	d9 f7       	brne	.-10     	; 0xad4 <spi_read+0x10>
		count++;
	}

	return SPIC.DATA; // return the data from this function
     ade:	80 91 c3 08 	lds	r24, 0x08C3	; 0x8008c3 <__TEXT_REGION_LENGTH__+0x7008c3>
}
     ae2:	08 95       	ret

00000ae4 <spi_write>:
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347

void spi_write(uint8_t data)
{
	SPIC.DATA = data; // write the data we want to send to the data register
<<<<<<< HEAD
     cc8:	80 93 c3 08 	sts	0x08C3, r24	; 0x8008c3 <__TEXT_REGION_LENGTH__+0x7008c3>
	while(!(SPIC.STATUS>>7)); // wait to ensure the data is sent before we do anything else
     ccc:	e0 ec       	ldi	r30, 0xC0	; 192
     cce:	f8 e0       	ldi	r31, 0x08	; 8
     cd0:	82 81       	ldd	r24, Z+2	; 0x02
     cd2:	88 23       	and	r24, r24
     cd4:	ec f7       	brge	.-6      	; 0xcd0 <spi_write+0x8>
     cd6:	08 95       	ret

00000cd8 <usart_serial_getchar>:
=======
     ae4:	80 93 c3 08 	sts	0x08C3, r24	; 0x8008c3 <__TEXT_REGION_LENGTH__+0x7008c3>
	while(!(SPIC.STATUS>>7)); // wait to ensure the data is sent before we do anything else
     ae8:	e0 ec       	ldi	r30, 0xC0	; 192
     aea:	f8 e0       	ldi	r31, 0x08	; 8
     aec:	82 81       	ldd	r24, Z+2	; 0x02
     aee:	88 23       	and	r24, r24
     af0:	ec f7       	brge	.-6      	; 0xaec <spi_write+0x8>
     af2:	08 95       	ret

00000af4 <usart_serial_getchar>:
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
 * \param usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if usart, uint8_t *data)
{
<<<<<<< HEAD
     cd8:	cf 93       	push	r28
     cda:	df 93       	push	r29
     cdc:	eb 01       	movw	r28, r22
	*data = usart_getchar(usart);
     cde:	1e dd       	rcall	.-1476   	; 0x71c <usart_getchar>
     ce0:	88 83       	st	Y, r24
}
     ce2:	df 91       	pop	r29
     ce4:	cf 91       	pop	r28
     ce6:	08 95       	ret

00000ce8 <usart_serial_putchar>:
=======
     af4:	cf 93       	push	r28
     af6:	df 93       	push	r29
     af8:	eb 01       	movw	r28, r22
	*data = usart_getchar(usart);
     afa:	15 dd       	rcall	.-1494   	; 0x526 <usart_getchar>
     afc:	88 83       	st	Y, r24
}
     afe:	df 91       	pop	r29
     b00:	cf 91       	pop	r28
     b02:	08 95       	ret

00000b04 <usart_serial_putchar>:
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
 *
 * \return Status code
 */
static inline enum status_code usart_serial_putchar(usart_if usart, uint8_t c)
{
	return usart_putchar(usart, c);
<<<<<<< HEAD
     ce8:	11 cd       	rjmp	.-1502   	; 0x70c <usart_putchar>
}
     cea:	08 95       	ret

00000cec <data_terminal_init>:
=======
     b04:	08 cd       	rjmp	.-1520   	; 0x516 <usart_putchar>
}
     b06:	08 95       	ret

00000b08 <data_terminal_init>:

>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
#include <asf.h>
#include "data_logger.h"

void data_terminal_init()
{
<<<<<<< HEAD
     cec:	cf 93       	push	r28
     cee:	df 93       	push	r29
     cf0:	cd b7       	in	r28, 0x3d	; 61
     cf2:	de b7       	in	r29, 0x3e	; 62
     cf4:	27 97       	sbiw	r28, 0x07	; 7
     cf6:	cd bf       	out	0x3d, r28	; 61
     cf8:	de bf       	out	0x3e, r29	; 62
=======
     b08:	cf 93       	push	r28
     b0a:	df 93       	push	r29
     b0c:	cd b7       	in	r28, 0x3d	; 61
     b0e:	de b7       	in	r29, 0x3e	; 62
     b10:	27 97       	sbiw	r28, 0x07	; 7
     b12:	cd bf       	out	0x3d, r28	; 61
     b14:	de bf       	out	0x3e, r29	; 62
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_USART0);
	}
#endif
#ifdef USARTE0
	else if (module == &USARTE0) {
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_USART0);
<<<<<<< HEAD
     cfa:	60 e1       	ldi	r22, 0x10	; 16
     cfc:	85 e0       	ldi	r24, 0x05	; 5
     cfe:	77 d1       	rcall	.+750    	; 0xfee <sysclk_enable_module>
=======
     b16:	60 e1       	ldi	r22, 0x10	; 16
     b18:	85 e0       	ldi	r24, 0x05	; 5
     b1a:	77 d1       	rcall	.+750    	; 0xe0a <sysclk_enable_module>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
		.charlength =	UART_TERMINAL_SERIAL_CHAR_LEN,
		.paritytype =	UART_TERMINAL_SERIAL_PARITY,
		.stopbits	=	UART_TERMINAL_SERIAL_STOP_BIT
	};

	UART_TERMINAL_PORT.DIR |= UART_TERMINAL_TX_PIN;	// set the USART transmit pin to output
<<<<<<< HEAD
     d00:	e0 e8       	ldi	r30, 0x80	; 128
     d02:	f6 e0       	ldi	r31, 0x06	; 6
     d04:	80 81       	ld	r24, Z
     d06:	88 60       	ori	r24, 0x08	; 8
     d08:	80 83       	st	Z, r24
=======
     b1c:	e0 e8       	ldi	r30, 0x80	; 128
     b1e:	f6 e0       	ldi	r31, 0x06	; 6
     b20:	80 81       	ld	r24, Z
     b22:	88 60       	ori	r24, 0x08	; 8
     b24:	80 83       	st	Z, r24
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
<<<<<<< HEAD
     d0a:	80 ea       	ldi	r24, 0xA0	; 160
     d0c:	9a e0       	ldi	r25, 0x0A	; 10
     d0e:	80 93 28 21 	sts	0x2128, r24	; 0x802128 <stdio_base>
     d12:	90 93 29 21 	sts	0x2129, r25	; 0x802129 <stdio_base+0x1>
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
     d16:	84 e7       	ldi	r24, 0x74	; 116
     d18:	96 e0       	ldi	r25, 0x06	; 6
     d1a:	80 93 26 21 	sts	0x2126, r24	; 0x802126 <ptr_put>
     d1e:	90 93 27 21 	sts	0x2127, r25	; 0x802127 <ptr_put+0x1>
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
     d22:	8c e6       	ldi	r24, 0x6C	; 108
     d24:	96 e0       	ldi	r25, 0x06	; 6
     d26:	80 93 24 21 	sts	0x2124, r24	; 0x802124 <ptr_get>
     d2a:	90 93 25 21 	sts	0x2125, r25	; 0x802125 <ptr_get+0x1>
=======
     b26:	80 ea       	ldi	r24, 0xA0	; 160
     b28:	9a e0       	ldi	r25, 0x0A	; 10
     b2a:	80 93 f4 20 	sts	0x20F4, r24	; 0x8020f4 <stdio_base>
     b2e:	90 93 f5 20 	sts	0x20F5, r25	; 0x8020f5 <stdio_base+0x1>
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
     b32:	82 e8       	ldi	r24, 0x82	; 130
     b34:	95 e0       	ldi	r25, 0x05	; 5
     b36:	80 93 f2 20 	sts	0x20F2, r24	; 0x8020f2 <ptr_put>
     b3a:	90 93 f3 20 	sts	0x20F3, r25	; 0x8020f3 <ptr_put+0x1>
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
     b3e:	8a e7       	ldi	r24, 0x7A	; 122
     b40:	95 e0       	ldi	r25, 0x05	; 5
     b42:	80 93 f0 20 	sts	0x20F0, r24	; 0x8020f0 <ptr_get>
     b46:	90 93 f1 20 	sts	0x20F1, r25	; 0x8020f1 <ptr_get+0x1>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
static inline bool usart_serial_init(usart_if usart, const
		usart_serial_options_t *options)
{
	// USART options.
	usart_rs232_options_t usart_rs232_options;
	usart_rs232_options.charlength   = options->charlength;
<<<<<<< HEAD
     d2e:	ed e0       	ldi	r30, 0x0D	; 13
     d30:	f0 e2       	ldi	r31, 0x20	; 32
     d32:	84 81       	ldd	r24, Z+4	; 0x04
     d34:	8d 83       	std	Y+5, r24	; 0x05
	usart_rs232_options.paritytype   = options->paritytype;
     d36:	85 81       	ldd	r24, Z+5	; 0x05
     d38:	8e 83       	std	Y+6, r24	; 0x06
	usart_rs232_options.stopbits     = options->stopbits;
     d3a:	86 81       	ldd	r24, Z+6	; 0x06
     d3c:	8f 83       	std	Y+7, r24	; 0x07
	usart_rs232_options.baudrate     = options->baudrate;
     d3e:	80 81       	ld	r24, Z
     d40:	91 81       	ldd	r25, Z+1	; 0x01
     d42:	a2 81       	ldd	r26, Z+2	; 0x02
     d44:	b3 81       	ldd	r27, Z+3	; 0x03
     d46:	89 83       	std	Y+1, r24	; 0x01
     d48:	9a 83       	std	Y+2, r25	; 0x02
     d4a:	ab 83       	std	Y+3, r26	; 0x03
     d4c:	bc 83       	std	Y+4, r27	; 0x04
=======
     b4a:	ed e0       	ldi	r30, 0x0D	; 13
     b4c:	f0 e2       	ldi	r31, 0x20	; 32
     b4e:	84 81       	ldd	r24, Z+4	; 0x04
     b50:	8d 83       	std	Y+5, r24	; 0x05
	usart_rs232_options.paritytype   = options->paritytype;
     b52:	85 81       	ldd	r24, Z+5	; 0x05
     b54:	8e 83       	std	Y+6, r24	; 0x06
	usart_rs232_options.stopbits     = options->stopbits;
     b56:	86 81       	ldd	r24, Z+6	; 0x06
     b58:	8f 83       	std	Y+7, r24	; 0x07
	usart_rs232_options.baudrate     = options->baudrate;
     b5a:	80 81       	ld	r24, Z
     b5c:	91 81       	ldd	r25, Z+1	; 0x01
     b5e:	a2 81       	ldd	r26, Z+2	; 0x02
     b60:	b3 81       	ldd	r27, Z+3	; 0x03
     b62:	89 83       	std	Y+1, r24	; 0x01
     b64:	9a 83       	std	Y+2, r25	; 0x02
     b66:	ab 83       	std	Y+3, r26	; 0x03
     b68:	bc 83       	std	Y+4, r27	; 0x04
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
		sysclk_enable_module(SYSCLK_PORT_D,PR_USART1_bm);
	}
#endif
#ifdef USARTE0
	if((uint16_t)usart == (uint16_t)&USARTE0) {
		sysclk_enable_module(SYSCLK_PORT_E,PR_USART0_bm);
<<<<<<< HEAD
     d4e:	60 e1       	ldi	r22, 0x10	; 16
     d50:	85 e0       	ldi	r24, 0x05	; 5
     d52:	4d d1       	rcall	.+666    	; 0xfee <sysclk_enable_module>
=======
     b6a:	60 e1       	ldi	r22, 0x10	; 16
     b6c:	85 e0       	ldi	r24, 0x05	; 5
     b6e:	4d d1       	rcall	.+666    	; 0xe0a <sysclk_enable_module>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
#ifdef USARTF1
	if((uint16_t)usart == (uint16_t)&USARTF1) {
		sysclk_enable_module(SYSCLK_PORT_F,PR_USART1_bm);
	}
#endif
	if (usart_init_rs232(usart, &usart_rs232_options)) {
<<<<<<< HEAD
     d54:	be 01       	movw	r22, r28
     d56:	6f 5f       	subi	r22, 0xFF	; 255
     d58:	7f 4f       	sbci	r23, 0xFF	; 255
     d5a:	80 ea       	ldi	r24, 0xA0	; 160
     d5c:	9a e0       	ldi	r25, 0x0A	; 10
     d5e:	f7 dd       	rcall	.-1042   	; 0x94e <usart_init_rs232>
=======
     b70:	be 01       	movw	r22, r28
     b72:	6f 5f       	subi	r22, 0xFF	; 255
     b74:	7f 4f       	sbci	r23, 0xFF	; 255
     b76:	80 ea       	ldi	r24, 0xA0	; 160
     b78:	9a e0       	ldi	r25, 0x0A	; 10
     b7a:	ee dd       	rcall	.-1060   	; 0x758 <usart_init_rs232>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
# endif

# if defined(__GNUC__)
#  if (XMEGA || MEGA_RF)
	// For AVR GCC libc print redirection uses fdevopen.
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
<<<<<<< HEAD
     d60:	6c e6       	ldi	r22, 0x6C	; 108
     d62:	71 e0       	ldi	r23, 0x01	; 1
     d64:	85 e8       	ldi	r24, 0x85	; 133
     d66:	91 e0       	ldi	r25, 0x01	; 1
     d68:	0e 94 82 1a 	call	0x3504	; 0x3504 <fdevopen>
=======
     b7c:	6c e6       	ldi	r22, 0x6C	; 108
     b7e:	71 e0       	ldi	r23, 0x01	; 1
     b80:	85 e8       	ldi	r24, 0x85	; 133
     b82:	91 e0       	ldi	r25, 0x01	; 1
     b84:	0e 94 e4 18 	call	0x31c8	; 0x31c8 <fdevopen>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347

	stdio_serial_init(UART_TERMINAL_SERIAL, &usart_config); // function maps the serial output to printf, not necessary to know how it works
<<<<<<< HEAD
}
     d6c:	27 96       	adiw	r28, 0x07	; 7
     d6e:	cd bf       	out	0x3d, r28	; 61
     d70:	de bf       	out	0x3e, r29	; 62
     d72:	df 91       	pop	r29
     d74:	cf 91       	pop	r28
     d76:	08 95       	ret

00000d78 <rb16_write>:
=======
     b88:	27 96       	adiw	r28, 0x07	; 7
     b8a:	cd bf       	out	0x3d, r28	; 61
     b8c:	de bf       	out	0x3e, r29	; 62
     b8e:	df 91       	pop	r29
     b90:	cf 91       	pop	r28
     b92:	08 95       	ret

00000b94 <rb16_write>:
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	}
	else
	{
		buffer->tail = (buffer->tail + move_distance) % buffer->array_length; //Modulus is so that we don't point to above the buffer's location
	}
}
<<<<<<< HEAD
     d78:	cf 93       	push	r28
     d7a:	df 93       	push	r29
     d7c:	fc 01       	movw	r30, r24
     d7e:	41 15       	cp	r20, r1
     d80:	51 05       	cpc	r21, r1
     d82:	b1 f1       	breq	.+108    	; 0xdf0 <rb16_write+0x78>
     d84:	80 e0       	ldi	r24, 0x00	; 0
     d86:	90 e0       	ldi	r25, 0x00	; 0
     d88:	20 e0       	ldi	r18, 0x00	; 0
     d8a:	88 0f       	add	r24, r24
     d8c:	99 1f       	adc	r25, r25
     d8e:	db 01       	movw	r26, r22
     d90:	a8 0f       	add	r26, r24
     d92:	b9 1f       	adc	r27, r25
     d94:	8d 91       	ld	r24, X+
     d96:	9c 91       	ld	r25, X
     d98:	a2 81       	ldd	r26, Z+2	; 0x02
     d9a:	b3 81       	ldd	r27, Z+3	; 0x03
     d9c:	aa 0f       	add	r26, r26
     d9e:	bb 1f       	adc	r27, r27
     da0:	c6 81       	ldd	r28, Z+6	; 0x06
     da2:	d7 81       	ldd	r29, Z+7	; 0x07
     da4:	ac 0f       	add	r26, r28
     da6:	bd 1f       	adc	r27, r29
     da8:	8d 93       	st	X+, r24
     daa:	9c 93       	st	X, r25
     dac:	82 81       	ldd	r24, Z+2	; 0x02
     dae:	93 81       	ldd	r25, Z+3	; 0x03
     db0:	01 96       	adiw	r24, 0x01	; 1
     db2:	82 83       	std	Z+2, r24	; 0x02
     db4:	93 83       	std	Z+3, r25	; 0x03
     db6:	a0 81       	ld	r26, Z
     db8:	b1 81       	ldd	r27, Z+1	; 0x01
     dba:	8a 17       	cp	r24, r26
     dbc:	9b 07       	cpc	r25, r27
     dbe:	11 f4       	brne	.+4      	; 0xdc4 <rb16_write+0x4c>
     dc0:	12 82       	std	Z+2, r1	; 0x02
     dc2:	13 82       	std	Z+3, r1	; 0x03
     dc4:	82 81       	ldd	r24, Z+2	; 0x02
     dc6:	93 81       	ldd	r25, Z+3	; 0x03
     dc8:	c4 81       	ldd	r28, Z+4	; 0x04
     dca:	d5 81       	ldd	r29, Z+5	; 0x05
     dcc:	8c 17       	cp	r24, r28
     dce:	9d 07       	cpc	r25, r29
     dd0:	49 f4       	brne	.+18     	; 0xde4 <rb16_write+0x6c>
     dd2:	01 96       	adiw	r24, 0x01	; 1
     dd4:	a8 17       	cp	r26, r24
     dd6:	b9 07       	cpc	r27, r25
     dd8:	19 f0       	breq	.+6      	; 0xde0 <rb16_write+0x68>
     dda:	84 83       	std	Z+4, r24	; 0x04
     ddc:	95 83       	std	Z+5, r25	; 0x05
     dde:	02 c0       	rjmp	.+4      	; 0xde4 <rb16_write+0x6c>
     de0:	14 82       	std	Z+4, r1	; 0x04
     de2:	15 82       	std	Z+5, r1	; 0x05
     de4:	2f 5f       	subi	r18, 0xFF	; 255
     de6:	82 2f       	mov	r24, r18
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	84 17       	cp	r24, r20
     dec:	95 07       	cpc	r25, r21
     dee:	68 f2       	brcs	.-102    	; 0xd8a <rb16_write+0x12>
     df0:	df 91       	pop	r29
     df2:	cf 91       	pop	r28
     df4:	08 95       	ret

00000df6 <rb16_init>:
     df6:	fc 01       	movw	r30, r24
     df8:	12 82       	std	Z+2, r1	; 0x02
     dfa:	13 82       	std	Z+3, r1	; 0x03
     dfc:	14 82       	std	Z+4, r1	; 0x04
     dfe:	15 82       	std	Z+5, r1	; 0x05
     e00:	66 83       	std	Z+6, r22	; 0x06
     e02:	77 83       	std	Z+7, r23	; 0x07
     e04:	40 83       	st	Z, r20
     e06:	51 83       	std	Z+1, r21	; 0x01
     e08:	08 95       	ret

00000e0a <rb16_get_nth>:
     e0a:	dc 01       	movw	r26, r24
     e0c:	12 96       	adiw	r26, 0x02	; 2
     e0e:	ed 91       	ld	r30, X+
     e10:	fc 91       	ld	r31, X
     e12:	13 97       	sbiw	r26, 0x03	; 3
     e14:	cb 01       	movw	r24, r22
     e16:	01 96       	adiw	r24, 0x01	; 1
     e18:	e8 17       	cp	r30, r24
     e1a:	f9 07       	cpc	r31, r25
     e1c:	78 f0       	brcs	.+30     	; 0xe3c <rb16_get_nth+0x32>
     e1e:	e1 50       	subi	r30, 0x01	; 1
     e20:	f0 48       	sbci	r31, 0x80	; 128
     e22:	e6 1b       	sub	r30, r22
     e24:	f7 0b       	sbc	r31, r23
     e26:	ee 0f       	add	r30, r30
     e28:	ff 1f       	adc	r31, r31
     e2a:	16 96       	adiw	r26, 0x06	; 6
     e2c:	8d 91       	ld	r24, X+
     e2e:	9c 91       	ld	r25, X
     e30:	17 97       	sbiw	r26, 0x07	; 7
     e32:	e8 0f       	add	r30, r24
     e34:	f9 1f       	adc	r31, r25
     e36:	80 81       	ld	r24, Z
     e38:	91 81       	ldd	r25, Z+1	; 0x01
     e3a:	08 95       	ret
     e3c:	2d 91       	ld	r18, X+
     e3e:	3c 91       	ld	r19, X
     e40:	11 97       	sbiw	r26, 0x01	; 1
     e42:	e2 0f       	add	r30, r18
     e44:	f3 1f       	adc	r31, r19
     e46:	e1 50       	subi	r30, 0x01	; 1
     e48:	f0 48       	sbci	r31, 0x80	; 128
     e4a:	e6 1b       	sub	r30, r22
     e4c:	f7 0b       	sbc	r31, r23
     e4e:	ee 0f       	add	r30, r30
     e50:	ff 1f       	adc	r31, r31
     e52:	16 96       	adiw	r26, 0x06	; 6
     e54:	8d 91       	ld	r24, X+
     e56:	9c 91       	ld	r25, X
     e58:	17 97       	sbiw	r26, 0x07	; 7
     e5a:	e8 0f       	add	r30, r24
     e5c:	f9 1f       	adc	r31, r25
     e5e:	80 81       	ld	r24, Z
     e60:	91 81       	ldd	r25, Z+1	; 0x01
     e62:	08 95       	ret

00000e64 <rb32_write>:
     e64:	cf 92       	push	r12
     e66:	df 92       	push	r13
     e68:	ef 92       	push	r14
     e6a:	ff 92       	push	r15
     e6c:	cf 93       	push	r28
     e6e:	df 93       	push	r29
     e70:	fc 01       	movw	r30, r24
     e72:	41 15       	cp	r20, r1
     e74:	51 05       	cpc	r21, r1
     e76:	09 f4       	brne	.+2      	; 0xe7a <rb32_write+0x16>
     e78:	3f c0       	rjmp	.+126    	; 0xef8 <rb32_write+0x94>
     e7a:	80 e0       	ldi	r24, 0x00	; 0
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	20 e0       	ldi	r18, 0x00	; 0
     e80:	88 0f       	add	r24, r24
     e82:	99 1f       	adc	r25, r25
     e84:	88 0f       	add	r24, r24
     e86:	99 1f       	adc	r25, r25
     e88:	db 01       	movw	r26, r22
     e8a:	a8 0f       	add	r26, r24
     e8c:	b9 1f       	adc	r27, r25
     e8e:	cd 90       	ld	r12, X+
     e90:	dd 90       	ld	r13, X+
     e92:	ed 90       	ld	r14, X+
     e94:	fc 90       	ld	r15, X
     e96:	a2 81       	ldd	r26, Z+2	; 0x02
     e98:	b3 81       	ldd	r27, Z+3	; 0x03
     e9a:	aa 0f       	add	r26, r26
     e9c:	bb 1f       	adc	r27, r27
     e9e:	aa 0f       	add	r26, r26
     ea0:	bb 1f       	adc	r27, r27
     ea2:	86 81       	ldd	r24, Z+6	; 0x06
     ea4:	97 81       	ldd	r25, Z+7	; 0x07
     ea6:	a8 0f       	add	r26, r24
     ea8:	b9 1f       	adc	r27, r25
     eaa:	cd 92       	st	X+, r12
     eac:	dd 92       	st	X+, r13
     eae:	ed 92       	st	X+, r14
     eb0:	fc 92       	st	X, r15
     eb2:	13 97       	sbiw	r26, 0x03	; 3
     eb4:	82 81       	ldd	r24, Z+2	; 0x02
     eb6:	93 81       	ldd	r25, Z+3	; 0x03
     eb8:	01 96       	adiw	r24, 0x01	; 1
     eba:	82 83       	std	Z+2, r24	; 0x02
     ebc:	93 83       	std	Z+3, r25	; 0x03
     ebe:	a0 81       	ld	r26, Z
     ec0:	b1 81       	ldd	r27, Z+1	; 0x01
     ec2:	8a 17       	cp	r24, r26
     ec4:	9b 07       	cpc	r25, r27
     ec6:	11 f4       	brne	.+4      	; 0xecc <rb32_write+0x68>
     ec8:	12 82       	std	Z+2, r1	; 0x02
     eca:	13 82       	std	Z+3, r1	; 0x03
     ecc:	82 81       	ldd	r24, Z+2	; 0x02
     ece:	93 81       	ldd	r25, Z+3	; 0x03
     ed0:	c4 81       	ldd	r28, Z+4	; 0x04
     ed2:	d5 81       	ldd	r29, Z+5	; 0x05
     ed4:	8c 17       	cp	r24, r28
     ed6:	9d 07       	cpc	r25, r29
     ed8:	49 f4       	brne	.+18     	; 0xeec <rb32_write+0x88>
     eda:	01 96       	adiw	r24, 0x01	; 1
     edc:	a8 17       	cp	r26, r24
     ede:	b9 07       	cpc	r27, r25
     ee0:	19 f0       	breq	.+6      	; 0xee8 <rb32_write+0x84>
     ee2:	84 83       	std	Z+4, r24	; 0x04
     ee4:	95 83       	std	Z+5, r25	; 0x05
     ee6:	02 c0       	rjmp	.+4      	; 0xeec <rb32_write+0x88>
     ee8:	14 82       	std	Z+4, r1	; 0x04
     eea:	15 82       	std	Z+5, r1	; 0x05
     eec:	2f 5f       	subi	r18, 0xFF	; 255
     eee:	82 2f       	mov	r24, r18
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	84 17       	cp	r24, r20
     ef4:	95 07       	cpc	r25, r21
     ef6:	20 f2       	brcs	.-120    	; 0xe80 <rb32_write+0x1c>
     ef8:	df 91       	pop	r29
     efa:	cf 91       	pop	r28
     efc:	ff 90       	pop	r15
     efe:	ef 90       	pop	r14
     f00:	df 90       	pop	r13
     f02:	cf 90       	pop	r12
     f04:	08 95       	ret

00000f06 <rb32_init>:
     f06:	fc 01       	movw	r30, r24
     f08:	12 82       	std	Z+2, r1	; 0x02
     f0a:	13 82       	std	Z+3, r1	; 0x03
     f0c:	14 82       	std	Z+4, r1	; 0x04
     f0e:	15 82       	std	Z+5, r1	; 0x05
     f10:	66 83       	std	Z+6, r22	; 0x06
     f12:	77 83       	std	Z+7, r23	; 0x07
     f14:	40 83       	st	Z, r20
     f16:	51 83       	std	Z+1, r21	; 0x01
     f18:	08 95       	ret

00000f1a <rb32_get_nth>:
=======
     b94:	cf 93       	push	r28
     b96:	df 93       	push	r29
     b98:	fc 01       	movw	r30, r24
     b9a:	41 15       	cp	r20, r1
     b9c:	51 05       	cpc	r21, r1
     b9e:	b1 f1       	breq	.+108    	; 0xc0c <rb16_write+0x78>
     ba0:	80 e0       	ldi	r24, 0x00	; 0
     ba2:	90 e0       	ldi	r25, 0x00	; 0
     ba4:	20 e0       	ldi	r18, 0x00	; 0
     ba6:	88 0f       	add	r24, r24
     ba8:	99 1f       	adc	r25, r25
     baa:	db 01       	movw	r26, r22
     bac:	a8 0f       	add	r26, r24
     bae:	b9 1f       	adc	r27, r25
     bb0:	8d 91       	ld	r24, X+
     bb2:	9c 91       	ld	r25, X
     bb4:	a2 81       	ldd	r26, Z+2	; 0x02
     bb6:	b3 81       	ldd	r27, Z+3	; 0x03
     bb8:	aa 0f       	add	r26, r26
     bba:	bb 1f       	adc	r27, r27
     bbc:	c6 81       	ldd	r28, Z+6	; 0x06
     bbe:	d7 81       	ldd	r29, Z+7	; 0x07
     bc0:	ac 0f       	add	r26, r28
     bc2:	bd 1f       	adc	r27, r29
     bc4:	8d 93       	st	X+, r24
     bc6:	9c 93       	st	X, r25
     bc8:	82 81       	ldd	r24, Z+2	; 0x02
     bca:	93 81       	ldd	r25, Z+3	; 0x03
     bcc:	01 96       	adiw	r24, 0x01	; 1
     bce:	82 83       	std	Z+2, r24	; 0x02
     bd0:	93 83       	std	Z+3, r25	; 0x03
     bd2:	a0 81       	ld	r26, Z
     bd4:	b1 81       	ldd	r27, Z+1	; 0x01
     bd6:	8a 17       	cp	r24, r26
     bd8:	9b 07       	cpc	r25, r27
     bda:	11 f4       	brne	.+4      	; 0xbe0 <rb16_write+0x4c>
     bdc:	12 82       	std	Z+2, r1	; 0x02
     bde:	13 82       	std	Z+3, r1	; 0x03
     be0:	82 81       	ldd	r24, Z+2	; 0x02
     be2:	93 81       	ldd	r25, Z+3	; 0x03
     be4:	c4 81       	ldd	r28, Z+4	; 0x04
     be6:	d5 81       	ldd	r29, Z+5	; 0x05
     be8:	8c 17       	cp	r24, r28
     bea:	9d 07       	cpc	r25, r29
     bec:	49 f4       	brne	.+18     	; 0xc00 <rb16_write+0x6c>
     bee:	01 96       	adiw	r24, 0x01	; 1
     bf0:	a8 17       	cp	r26, r24
     bf2:	b9 07       	cpc	r27, r25
     bf4:	19 f0       	breq	.+6      	; 0xbfc <rb16_write+0x68>
     bf6:	84 83       	std	Z+4, r24	; 0x04
     bf8:	95 83       	std	Z+5, r25	; 0x05
     bfa:	02 c0       	rjmp	.+4      	; 0xc00 <rb16_write+0x6c>
     bfc:	14 82       	std	Z+4, r1	; 0x04
     bfe:	15 82       	std	Z+5, r1	; 0x05
     c00:	2f 5f       	subi	r18, 0xFF	; 255
     c02:	82 2f       	mov	r24, r18
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	84 17       	cp	r24, r20
     c08:	95 07       	cpc	r25, r21
     c0a:	68 f2       	brcs	.-102    	; 0xba6 <rb16_write+0x12>
     c0c:	df 91       	pop	r29
     c0e:	cf 91       	pop	r28
     c10:	08 95       	ret

00000c12 <rb16_init>:
     c12:	fc 01       	movw	r30, r24
     c14:	12 82       	std	Z+2, r1	; 0x02
     c16:	13 82       	std	Z+3, r1	; 0x03
     c18:	14 82       	std	Z+4, r1	; 0x04
     c1a:	15 82       	std	Z+5, r1	; 0x05
     c1c:	66 83       	std	Z+6, r22	; 0x06
     c1e:	77 83       	std	Z+7, r23	; 0x07
     c20:	40 83       	st	Z, r20
     c22:	51 83       	std	Z+1, r21	; 0x01
     c24:	08 95       	ret

00000c26 <rb16_get_nth>:
     c26:	dc 01       	movw	r26, r24
     c28:	12 96       	adiw	r26, 0x02	; 2
     c2a:	ed 91       	ld	r30, X+
     c2c:	fc 91       	ld	r31, X
     c2e:	13 97       	sbiw	r26, 0x03	; 3
     c30:	cb 01       	movw	r24, r22
     c32:	01 96       	adiw	r24, 0x01	; 1
     c34:	e8 17       	cp	r30, r24
     c36:	f9 07       	cpc	r31, r25
     c38:	78 f0       	brcs	.+30     	; 0xc58 <rb16_get_nth+0x32>
     c3a:	e1 50       	subi	r30, 0x01	; 1
     c3c:	f0 48       	sbci	r31, 0x80	; 128
     c3e:	e6 1b       	sub	r30, r22
     c40:	f7 0b       	sbc	r31, r23
     c42:	ee 0f       	add	r30, r30
     c44:	ff 1f       	adc	r31, r31
     c46:	16 96       	adiw	r26, 0x06	; 6
     c48:	8d 91       	ld	r24, X+
     c4a:	9c 91       	ld	r25, X
     c4c:	17 97       	sbiw	r26, 0x07	; 7
     c4e:	e8 0f       	add	r30, r24
     c50:	f9 1f       	adc	r31, r25
     c52:	80 81       	ld	r24, Z
     c54:	91 81       	ldd	r25, Z+1	; 0x01
     c56:	08 95       	ret
     c58:	2d 91       	ld	r18, X+
     c5a:	3c 91       	ld	r19, X
     c5c:	11 97       	sbiw	r26, 0x01	; 1
     c5e:	e2 0f       	add	r30, r18
     c60:	f3 1f       	adc	r31, r19
     c62:	e1 50       	subi	r30, 0x01	; 1
     c64:	f0 48       	sbci	r31, 0x80	; 128
     c66:	e6 1b       	sub	r30, r22
     c68:	f7 0b       	sbc	r31, r23
     c6a:	ee 0f       	add	r30, r30
     c6c:	ff 1f       	adc	r31, r31
     c6e:	16 96       	adiw	r26, 0x06	; 6
     c70:	8d 91       	ld	r24, X+
     c72:	9c 91       	ld	r25, X
     c74:	17 97       	sbiw	r26, 0x07	; 7
     c76:	e8 0f       	add	r30, r24
     c78:	f9 1f       	adc	r31, r25
     c7a:	80 81       	ld	r24, Z
     c7c:	91 81       	ldd	r25, Z+1	; 0x01
     c7e:	08 95       	ret

00000c80 <rb32_write>:
     c80:	cf 92       	push	r12
     c82:	df 92       	push	r13
     c84:	ef 92       	push	r14
     c86:	ff 92       	push	r15
     c88:	cf 93       	push	r28
     c8a:	df 93       	push	r29
     c8c:	fc 01       	movw	r30, r24
     c8e:	41 15       	cp	r20, r1
     c90:	51 05       	cpc	r21, r1
     c92:	09 f4       	brne	.+2      	; 0xc96 <rb32_write+0x16>
     c94:	3f c0       	rjmp	.+126    	; 0xd14 <rb32_write+0x94>
     c96:	80 e0       	ldi	r24, 0x00	; 0
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	20 e0       	ldi	r18, 0x00	; 0
     c9c:	88 0f       	add	r24, r24
     c9e:	99 1f       	adc	r25, r25
     ca0:	88 0f       	add	r24, r24
     ca2:	99 1f       	adc	r25, r25
     ca4:	db 01       	movw	r26, r22
     ca6:	a8 0f       	add	r26, r24
     ca8:	b9 1f       	adc	r27, r25
     caa:	cd 90       	ld	r12, X+
     cac:	dd 90       	ld	r13, X+
     cae:	ed 90       	ld	r14, X+
     cb0:	fc 90       	ld	r15, X
     cb2:	a2 81       	ldd	r26, Z+2	; 0x02
     cb4:	b3 81       	ldd	r27, Z+3	; 0x03
     cb6:	aa 0f       	add	r26, r26
     cb8:	bb 1f       	adc	r27, r27
     cba:	aa 0f       	add	r26, r26
     cbc:	bb 1f       	adc	r27, r27
     cbe:	86 81       	ldd	r24, Z+6	; 0x06
     cc0:	97 81       	ldd	r25, Z+7	; 0x07
     cc2:	a8 0f       	add	r26, r24
     cc4:	b9 1f       	adc	r27, r25
     cc6:	cd 92       	st	X+, r12
     cc8:	dd 92       	st	X+, r13
     cca:	ed 92       	st	X+, r14
     ccc:	fc 92       	st	X, r15
     cce:	13 97       	sbiw	r26, 0x03	; 3
     cd0:	82 81       	ldd	r24, Z+2	; 0x02
     cd2:	93 81       	ldd	r25, Z+3	; 0x03
     cd4:	01 96       	adiw	r24, 0x01	; 1
     cd6:	82 83       	std	Z+2, r24	; 0x02
     cd8:	93 83       	std	Z+3, r25	; 0x03
     cda:	a0 81       	ld	r26, Z
     cdc:	b1 81       	ldd	r27, Z+1	; 0x01
     cde:	8a 17       	cp	r24, r26
     ce0:	9b 07       	cpc	r25, r27
     ce2:	11 f4       	brne	.+4      	; 0xce8 <rb32_write+0x68>
     ce4:	12 82       	std	Z+2, r1	; 0x02
     ce6:	13 82       	std	Z+3, r1	; 0x03
     ce8:	82 81       	ldd	r24, Z+2	; 0x02
     cea:	93 81       	ldd	r25, Z+3	; 0x03
     cec:	c4 81       	ldd	r28, Z+4	; 0x04
     cee:	d5 81       	ldd	r29, Z+5	; 0x05
     cf0:	8c 17       	cp	r24, r28
     cf2:	9d 07       	cpc	r25, r29
     cf4:	49 f4       	brne	.+18     	; 0xd08 <rb32_write+0x88>
     cf6:	01 96       	adiw	r24, 0x01	; 1
     cf8:	a8 17       	cp	r26, r24
     cfa:	b9 07       	cpc	r27, r25
     cfc:	19 f0       	breq	.+6      	; 0xd04 <rb32_write+0x84>
     cfe:	84 83       	std	Z+4, r24	; 0x04
     d00:	95 83       	std	Z+5, r25	; 0x05
     d02:	02 c0       	rjmp	.+4      	; 0xd08 <rb32_write+0x88>
     d04:	14 82       	std	Z+4, r1	; 0x04
     d06:	15 82       	std	Z+5, r1	; 0x05
     d08:	2f 5f       	subi	r18, 0xFF	; 255
     d0a:	82 2f       	mov	r24, r18
     d0c:	90 e0       	ldi	r25, 0x00	; 0
     d0e:	84 17       	cp	r24, r20
     d10:	95 07       	cpc	r25, r21
     d12:	20 f2       	brcs	.-120    	; 0xc9c <rb32_write+0x1c>
     d14:	df 91       	pop	r29
     d16:	cf 91       	pop	r28
     d18:	ff 90       	pop	r15
     d1a:	ef 90       	pop	r14
     d1c:	df 90       	pop	r13
     d1e:	cf 90       	pop	r12
     d20:	08 95       	ret

00000d22 <rb32_init>:
     d22:	fc 01       	movw	r30, r24
     d24:	12 82       	std	Z+2, r1	; 0x02
     d26:	13 82       	std	Z+3, r1	; 0x03
     d28:	14 82       	std	Z+4, r1	; 0x04
     d2a:	15 82       	std	Z+5, r1	; 0x05
     d2c:	66 83       	std	Z+6, r22	; 0x06
     d2e:	77 83       	std	Z+7, r23	; 0x07
     d30:	40 83       	st	Z, r20
     d32:	51 83       	std	Z+1, r21	; 0x01
     d34:	08 95       	ret

00000d36 <rb32_get_nth>:
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	}
}

int32_t rb32_get_nth(RingBuffer32_t* buffer, uint16_t index)
//Returns the nth newest value in the RingBuffer
{
<<<<<<< HEAD
     f1a:	dc 01       	movw	r26, r24
=======
     d36:	dc 01       	movw	r26, r24
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	//Does not do bounds checking, so be careful in usage
	//	Verify index < rb16_length() to guard against requesting a value beyond what the buffer currently stores
	//	Verify index < buffer->array_length to guard against requesting a value from some random memory location

	//Most recent value is in head - 1
	if (index + 1 <= buffer->head) //Value is between zero and buffer->head
<<<<<<< HEAD
     f1c:	12 96       	adiw	r26, 0x02	; 2
     f1e:	ed 91       	ld	r30, X+
     f20:	fc 91       	ld	r31, X
     f22:	13 97       	sbiw	r26, 0x03	; 3
     f24:	cb 01       	movw	r24, r22
     f26:	01 96       	adiw	r24, 0x01	; 1
     f28:	e8 17       	cp	r30, r24
     f2a:	f9 07       	cpc	r31, r25
     f2c:	98 f0       	brcs	.+38     	; 0xf54 <rb32_get_nth+0x3a>
		return buffer->buffer[buffer->head - index - 1];
     f2e:	e1 50       	subi	r30, 0x01	; 1
     f30:	f0 4c       	sbci	r31, 0xC0	; 192
     f32:	e6 1b       	sub	r30, r22
     f34:	f7 0b       	sbc	r31, r23
     f36:	ee 0f       	add	r30, r30
     f38:	ff 1f       	adc	r31, r31
     f3a:	ee 0f       	add	r30, r30
     f3c:	ff 1f       	adc	r31, r31
     f3e:	16 96       	adiw	r26, 0x06	; 6
     f40:	8d 91       	ld	r24, X+
     f42:	9c 91       	ld	r25, X
     f44:	17 97       	sbiw	r26, 0x07	; 7
     f46:	e8 0f       	add	r30, r24
     f48:	f9 1f       	adc	r31, r25
     f4a:	60 81       	ld	r22, Z
     f4c:	71 81       	ldd	r23, Z+1	; 0x01
     f4e:	82 81       	ldd	r24, Z+2	; 0x02
     f50:	93 81       	ldd	r25, Z+3	; 0x03
     f52:	08 95       	ret
	else
		return buffer->buffer[buffer->array_length - 1 - index + buffer->head];
     f54:	2d 91       	ld	r18, X+
     f56:	3c 91       	ld	r19, X
     f58:	11 97       	sbiw	r26, 0x01	; 1
     f5a:	e2 0f       	add	r30, r18
     f5c:	f3 1f       	adc	r31, r19
     f5e:	e1 50       	subi	r30, 0x01	; 1
     f60:	f0 4c       	sbci	r31, 0xC0	; 192
     f62:	e6 1b       	sub	r30, r22
     f64:	f7 0b       	sbc	r31, r23
     f66:	ee 0f       	add	r30, r30
     f68:	ff 1f       	adc	r31, r31
     f6a:	ee 0f       	add	r30, r30
     f6c:	ff 1f       	adc	r31, r31
     f6e:	16 96       	adiw	r26, 0x06	; 6
     f70:	8d 91       	ld	r24, X+
     f72:	9c 91       	ld	r25, X
     f74:	17 97       	sbiw	r26, 0x07	; 7
     f76:	e8 0f       	add	r30, r24
     f78:	f9 1f       	adc	r31, r25
     f7a:	60 81       	ld	r22, Z
     f7c:	71 81       	ldd	r23, Z+1	; 0x01
     f7e:	82 81       	ldd	r24, Z+2	; 0x02
     f80:	93 81       	ldd	r25, Z+3	; 0x03
}
     f82:	08 95       	ret

00000f84 <sysclk_init>:
=======
     d38:	12 96       	adiw	r26, 0x02	; 2
     d3a:	ed 91       	ld	r30, X+
     d3c:	fc 91       	ld	r31, X
     d3e:	13 97       	sbiw	r26, 0x03	; 3
     d40:	cb 01       	movw	r24, r22
     d42:	01 96       	adiw	r24, 0x01	; 1
     d44:	e8 17       	cp	r30, r24
     d46:	f9 07       	cpc	r31, r25
     d48:	98 f0       	brcs	.+38     	; 0xd70 <rb32_get_nth+0x3a>
		return buffer->buffer[buffer->head - index - 1];
     d4a:	e1 50       	subi	r30, 0x01	; 1
     d4c:	f0 4c       	sbci	r31, 0xC0	; 192
     d4e:	e6 1b       	sub	r30, r22
     d50:	f7 0b       	sbc	r31, r23
     d52:	ee 0f       	add	r30, r30
     d54:	ff 1f       	adc	r31, r31
     d56:	ee 0f       	add	r30, r30
     d58:	ff 1f       	adc	r31, r31
     d5a:	16 96       	adiw	r26, 0x06	; 6
     d5c:	8d 91       	ld	r24, X+
     d5e:	9c 91       	ld	r25, X
     d60:	17 97       	sbiw	r26, 0x07	; 7
     d62:	e8 0f       	add	r30, r24
     d64:	f9 1f       	adc	r31, r25
     d66:	60 81       	ld	r22, Z
     d68:	71 81       	ldd	r23, Z+1	; 0x01
     d6a:	82 81       	ldd	r24, Z+2	; 0x02
     d6c:	93 81       	ldd	r25, Z+3	; 0x03
     d6e:	08 95       	ret
	else
		return buffer->buffer[buffer->array_length - 1 - index + buffer->head];
     d70:	2d 91       	ld	r18, X+
     d72:	3c 91       	ld	r19, X
     d74:	11 97       	sbiw	r26, 0x01	; 1
     d76:	e2 0f       	add	r30, r18
     d78:	f3 1f       	adc	r31, r19
     d7a:	e1 50       	subi	r30, 0x01	; 1
     d7c:	f0 4c       	sbci	r31, 0xC0	; 192
     d7e:	e6 1b       	sub	r30, r22
     d80:	f7 0b       	sbc	r31, r23
     d82:	ee 0f       	add	r30, r30
     d84:	ff 1f       	adc	r31, r31
     d86:	ee 0f       	add	r30, r30
     d88:	ff 1f       	adc	r31, r31
     d8a:	16 96       	adiw	r26, 0x06	; 6
     d8c:	8d 91       	ld	r24, X+
     d8e:	9c 91       	ld	r25, X
     d90:	17 97       	sbiw	r26, 0x07	; 7
     d92:	e8 0f       	add	r30, r24
     d94:	f9 1f       	adc	r31, r25
     d96:	60 81       	ld	r22, Z
     d98:	71 81       	ldd	r23, Z+1	; 0x01
     d9a:	82 81       	ldd	r24, Z+2	; 0x02
     d9c:	93 81       	ldd	r25, Z+3	; 0x03
}
     d9e:	08 95       	ret

00000da0 <sysclk_init>:
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
#  include <nvm.h>
#endif


void sysclk_init(void)
{
<<<<<<< HEAD
     f84:	cf 93       	push	r28
     f86:	df 93       	push	r29
     f88:	1f 92       	push	r1
     f8a:	1f 92       	push	r1
     f8c:	cd b7       	in	r28, 0x3d	; 61
     f8e:	de b7       	in	r29, 0x3e	; 62
=======
     da0:	cf 93       	push	r28
     da2:	df 93       	push	r29
     da4:	1f 92       	push	r1
     da6:	1f 92       	push	r1
     da8:	cd b7       	in	r28, 0x3d	; 61
     daa:	de b7       	in	r29, 0x3e	; 62
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
#endif
	bool need_rc2mhz = false;

	/* Turn off all peripheral clocks that can be turned off. */
	for (i = 0; i <= SYSCLK_PORT_F; i++) {
		*(reg++) = 0xff;
<<<<<<< HEAD
     f90:	8f ef       	ldi	r24, 0xFF	; 255
     f92:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x700070>
     f96:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <__TEXT_REGION_LENGTH__+0x700071>
     f9a:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__TEXT_REGION_LENGTH__+0x700072>
     f9e:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x700073>
     fa2:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x700074>
     fa6:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <__TEXT_REGION_LENGTH__+0x700075>
     faa:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <__TEXT_REGION_LENGTH__+0x700076>
=======
     dac:	8f ef       	ldi	r24, 0xFF	; 255
     dae:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x700070>
     db2:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <__TEXT_REGION_LENGTH__+0x700071>
     db6:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__TEXT_REGION_LENGTH__+0x700072>
     dba:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x700073>
     dbe:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x700074>
     dc2:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <__TEXT_REGION_LENGTH__+0x700075>
     dc6:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <__TEXT_REGION_LENGTH__+0x700076>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
<<<<<<< HEAD
     fae:	8f b7       	in	r24, 0x3f	; 63
     fb0:	8a 83       	std	Y+2, r24	; 0x02
	cpu_irq_disable();
     fb2:	f8 94       	cli
	return flags;
     fb4:	9a 81       	ldd	r25, Y+2	; 0x02
=======
     dca:	8f b7       	in	r24, 0x3f	; 63
     dcc:	8a 83       	std	Y+2, r24	; 0x02
	cpu_irq_disable();
     dce:	f8 94       	cli
	return flags;
     dd0:	9a 81       	ldd	r25, Y+2	; 0x02
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	irqflags_t flags;

	Assert(id != OSC_ID_USBSOF);

	flags = cpu_irq_save();
	OSC.CTRL |= id;
<<<<<<< HEAD
     fb6:	e0 e5       	ldi	r30, 0x50	; 80
     fb8:	f0 e0       	ldi	r31, 0x00	; 0
     fba:	80 81       	ld	r24, Z
     fbc:	82 60       	ori	r24, 0x02	; 2
     fbe:	80 83       	st	Z, r24
=======
     dd2:	e0 e5       	ldi	r30, 0x50	; 80
     dd4:	f0 e0       	ldi	r31, 0x00	; 0
     dd6:	80 81       	ld	r24, Z
     dd8:	82 60       	ori	r24, 0x02	; 2
     dda:	80 83       	st	Z, r24
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
<<<<<<< HEAD
     fc0:	9f bf       	out	0x3f, r25	; 63
=======
     ddc:	9f bf       	out	0x3f, r25	; 63
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347

static inline bool osc_is_ready(uint8_t id)
{
	Assert(id != OSC_ID_USBSOF);

	return OSC.STATUS & id;
<<<<<<< HEAD
     fc2:	81 81       	ldd	r24, Z+1	; 0x01
=======
     dde:	81 81       	ldd	r24, Z+1	; 0x01
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
<<<<<<< HEAD
     fc4:	81 ff       	sbrs	r24, 1
     fc6:	fd cf       	rjmp	.-6      	; 0xfc2 <sysclk_init+0x3e>
=======
     de0:	81 ff       	sbrs	r24, 1
     de2:	fd cf       	rjmp	.-6      	; 0xdde <sysclk_init+0x3e>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
		default:
			//unhandled_case(CONFIG_SYSCLK_SOURCE);
			return;
		}

		ccp_write_io((uint8_t *)&CLK.CTRL, CONFIG_SYSCLK_SOURCE);
<<<<<<< HEAD
     fc8:	61 e0       	ldi	r22, 0x01	; 1
     fca:	80 e4       	ldi	r24, 0x40	; 64
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	25 d0       	rcall	.+74     	; 0x101a <ccp_write_io>
=======
     de4:	61 e0       	ldi	r22, 0x01	; 1
     de6:	80 e4       	ldi	r24, 0x40	; 64
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	25 d0       	rcall	.+74     	; 0xe36 <ccp_write_io>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
<<<<<<< HEAD
     fd0:	8f b7       	in	r24, 0x3f	; 63
     fd2:	89 83       	std	Y+1, r24	; 0x01
	cpu_irq_disable();
     fd4:	f8 94       	cli
	return flags;
     fd6:	99 81       	ldd	r25, Y+1	; 0x01
=======
     dec:	8f b7       	in	r24, 0x3f	; 63
     dee:	89 83       	std	Y+1, r24	; 0x01
	cpu_irq_disable();
     df0:	f8 94       	cli
	return flags;
     df2:	99 81       	ldd	r25, Y+1	; 0x01
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	irqflags_t flags;

	Assert(id != OSC_ID_USBSOF);

	flags = cpu_irq_save();
	OSC.CTRL &= ~id;
<<<<<<< HEAD
     fd8:	e0 e5       	ldi	r30, 0x50	; 80
     fda:	f0 e0       	ldi	r31, 0x00	; 0
     fdc:	80 81       	ld	r24, Z
     fde:	8e 7f       	andi	r24, 0xFE	; 254
     fe0:	80 83       	st	Z, r24
=======
     df4:	e0 e5       	ldi	r30, 0x50	; 80
     df6:	f0 e0       	ldi	r31, 0x00	; 0
     df8:	80 81       	ld	r24, Z
     dfa:	8e 7f       	andi	r24, 0xFE	; 254
     dfc:	80 83       	st	Z, r24
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
<<<<<<< HEAD
     fe2:	9f bf       	out	0x3f, r25	; 63
=======
     dfe:	9f bf       	out	0x3f, r25	; 63
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	}

#ifdef CONFIG_RTC_SOURCE
	sysclk_rtcsrc_enable(CONFIG_RTC_SOURCE);
#endif
}
<<<<<<< HEAD
     fe4:	0f 90       	pop	r0
     fe6:	0f 90       	pop	r0
     fe8:	df 91       	pop	r29
     fea:	cf 91       	pop	r28
     fec:	08 95       	ret

00000fee <sysclk_enable_module>:

void sysclk_enable_module(enum sysclk_port_id port, uint8_t id)
{
     fee:	cf 93       	push	r28
     ff0:	df 93       	push	r29
     ff2:	1f 92       	push	r1
     ff4:	cd b7       	in	r28, 0x3d	; 61
     ff6:	de b7       	in	r29, 0x3e	; 62
=======
     e00:	0f 90       	pop	r0
     e02:	0f 90       	pop	r0
     e04:	df 91       	pop	r29
     e06:	cf 91       	pop	r28
     e08:	08 95       	ret

00000e0a <sysclk_enable_module>:

void sysclk_enable_module(enum sysclk_port_id port, uint8_t id)
{
     e0a:	cf 93       	push	r28
     e0c:	df 93       	push	r29
     e0e:	1f 92       	push	r1
     e10:	cd b7       	in	r28, 0x3d	; 61
     e12:	de b7       	in	r29, 0x3e	; 62
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
<<<<<<< HEAD
     ff8:	9f b7       	in	r25, 0x3f	; 63
     ffa:	99 83       	std	Y+1, r25	; 0x01
	cpu_irq_disable();
     ffc:	f8 94       	cli
	return flags;
     ffe:	99 81       	ldd	r25, Y+1	; 0x01
	irqflags_t flags = cpu_irq_save();

	*((uint8_t *)&PR.PRGEN + port) &= ~id;
    1000:	e8 2f       	mov	r30, r24
    1002:	f0 e0       	ldi	r31, 0x00	; 0
    1004:	e0 59       	subi	r30, 0x90	; 144
    1006:	ff 4f       	sbci	r31, 0xFF	; 255
    1008:	60 95       	com	r22
    100a:	80 81       	ld	r24, Z
    100c:	68 23       	and	r22, r24
    100e:	60 83       	st	Z, r22
=======
     e14:	9f b7       	in	r25, 0x3f	; 63
     e16:	99 83       	std	Y+1, r25	; 0x01
	cpu_irq_disable();
     e18:	f8 94       	cli
	return flags;
     e1a:	99 81       	ldd	r25, Y+1	; 0x01
	irqflags_t flags = cpu_irq_save();

	*((uint8_t *)&PR.PRGEN + port) &= ~id;
     e1c:	e8 2f       	mov	r30, r24
     e1e:	f0 e0       	ldi	r31, 0x00	; 0
     e20:	e0 59       	subi	r30, 0x90	; 144
     e22:	ff 4f       	sbci	r31, 0xFF	; 255
     e24:	60 95       	com	r22
     e26:	80 81       	ld	r24, Z
     e28:	68 23       	and	r22, r24
     e2a:	60 83       	st	Z, r22
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
<<<<<<< HEAD
    1010:	9f bf       	out	0x3f, r25	; 63

	cpu_irq_restore(flags);
}
    1012:	0f 90       	pop	r0
    1014:	df 91       	pop	r29
    1016:	cf 91       	pop	r28
    1018:	08 95       	ret

0000101a <ccp_write_io>:
=======
     e2c:	9f bf       	out	0x3f, r25	; 63

	cpu_irq_restore(flags);
}
     e2e:	0f 90       	pop	r0
     e30:	df 91       	pop	r29
     e32:	cf 91       	pop	r28
     e34:	08 95       	ret

00000e36 <ccp_write_io>:
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347

	PUBLIC_FUNCTION(ccp_write_io)

#if defined(__GNUC__)

	out     RAMPZ, r1               // Reset bits 23:16 of Z
<<<<<<< HEAD
    101a:	1b be       	out	0x3b, r1	; 59
	movw    r30, r24                // Load addr into Z
    101c:	fc 01       	movw	r30, r24
	ldi     r18, CCP_IOREG          // Load magic CCP value
    101e:	28 ed       	ldi	r18, 0xD8	; 216
	out     CCP, r18                // Start CCP handshake
    1020:	24 bf       	out	0x34, r18	; 52
	st      Z, r22                  // Write value to I/O register
    1022:	60 83       	st	Z, r22
	ret                             // Return to caller
    1024:	08 95       	ret

00001026 <__portable_avr_delay_cycles>:
=======
     e36:	1b be       	out	0x3b, r1	; 59
	movw    r30, r24                // Load addr into Z
     e38:	fc 01       	movw	r30, r24
	ldi     r18, CCP_IOREG          // Load magic CCP value
     e3a:	28 ed       	ldi	r18, 0xD8	; 216
	out     CCP, r18                // Start CCP handshake
     e3c:	24 bf       	out	0x34, r18	; 52
	st      Z, r22                  // Write value to I/O register
     e3e:	60 83       	st	Z, r22
	ret                             // Return to caller
     e40:	08 95       	ret

00000e42 <__portable_avr_delay_cycles>:

	NVM.CMD = ERASE_EEPROM;
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	CCP = CCP_IOREG_MODE;
	NVM.CTRLA = CTRLA_CMDEX_BYTE;
	while(NVM.STATUS>>7);
}
<<<<<<< HEAD
    1026:	04 c0       	rjmp	.+8      	; 0x1030 <__portable_avr_delay_cycles+0xa>
    1028:	61 50       	subi	r22, 0x01	; 1
    102a:	71 09       	sbc	r23, r1
    102c:	81 09       	sbc	r24, r1
    102e:	91 09       	sbc	r25, r1
    1030:	61 15       	cp	r22, r1
    1032:	71 05       	cpc	r23, r1
    1034:	81 05       	cpc	r24, r1
    1036:	91 05       	cpc	r25, r1
    1038:	b9 f7       	brne	.-18     	; 0x1028 <__portable_avr_delay_cycles+0x2>
    103a:	08 95       	ret

0000103c <pressure_init>:
    103c:	cf 93       	push	r28
    103e:	df 93       	push	r29
    1040:	be dd       	rcall	.-1156   	; 0xbbe <ms5607_init>
    1042:	82 ea       	ldi	r24, 0xA2	; 162
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	cf dd       	rcall	.-1122   	; 0xbe6 <ms5607_read>
    1048:	cf e0       	ldi	r28, 0x0F	; 15
    104a:	d1 e2       	ldi	r29, 0x21	; 33
    104c:	88 83       	st	Y, r24
    104e:	99 83       	std	Y+1, r25	; 0x01
    1050:	84 ea       	ldi	r24, 0xA4	; 164
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	c8 dd       	rcall	.-1136   	; 0xbe6 <ms5607_read>
    1056:	8a 83       	std	Y+2, r24	; 0x02
    1058:	9b 83       	std	Y+3, r25	; 0x03
    105a:	86 ea       	ldi	r24, 0xA6	; 166
    105c:	90 e0       	ldi	r25, 0x00	; 0
    105e:	c3 dd       	rcall	.-1146   	; 0xbe6 <ms5607_read>
    1060:	8c 83       	std	Y+4, r24	; 0x04
    1062:	9d 83       	std	Y+5, r25	; 0x05
    1064:	88 ea       	ldi	r24, 0xA8	; 168
    1066:	90 e0       	ldi	r25, 0x00	; 0
    1068:	be dd       	rcall	.-1156   	; 0xbe6 <ms5607_read>
    106a:	8e 83       	std	Y+6, r24	; 0x06
    106c:	9f 83       	std	Y+7, r25	; 0x07
    106e:	8a ea       	ldi	r24, 0xAA	; 170
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	b9 dd       	rcall	.-1166   	; 0xbe6 <ms5607_read>
    1074:	88 87       	std	Y+8, r24	; 0x08
    1076:	99 87       	std	Y+9, r25	; 0x09
    1078:	8c ea       	ldi	r24, 0xAC	; 172
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	b4 dd       	rcall	.-1176   	; 0xbe6 <ms5607_read>
    107e:	8a 87       	std	Y+10, r24	; 0x0a
    1080:	9b 87       	std	Y+11, r25	; 0x0b
    1082:	9f 93       	push	r25
    1084:	8f 93       	push	r24
    1086:	89 85       	ldd	r24, Y+9	; 0x09
    1088:	8f 93       	push	r24
    108a:	88 85       	ldd	r24, Y+8	; 0x08
    108c:	8f 93       	push	r24
    108e:	8f 81       	ldd	r24, Y+7	; 0x07
    1090:	8f 93       	push	r24
    1092:	8e 81       	ldd	r24, Y+6	; 0x06
    1094:	8f 93       	push	r24
    1096:	8d 81       	ldd	r24, Y+5	; 0x05
    1098:	8f 93       	push	r24
    109a:	8c 81       	ldd	r24, Y+4	; 0x04
    109c:	8f 93       	push	r24
    109e:	8b 81       	ldd	r24, Y+3	; 0x03
    10a0:	8f 93       	push	r24
    10a2:	8a 81       	ldd	r24, Y+2	; 0x02
    10a4:	8f 93       	push	r24
    10a6:	89 81       	ldd	r24, Y+1	; 0x01
    10a8:	8f 93       	push	r24
    10aa:	88 81       	ld	r24, Y
    10ac:	8f 93       	push	r24
    10ae:	86 ea       	ldi	r24, 0xA6	; 166
    10b0:	90 e2       	ldi	r25, 0x20	; 32
    10b2:	9f 93       	push	r25
    10b4:	8f 93       	push	r24
    10b6:	0e 94 cc 1a 	call	0x3598	; 0x3598 <printf>
    10ba:	8d b7       	in	r24, 0x3d	; 61
    10bc:	9e b7       	in	r25, 0x3e	; 62
    10be:	0e 96       	adiw	r24, 0x0e	; 14
    10c0:	8d bf       	out	0x3d, r24	; 61
    10c2:	9e bf       	out	0x3e, r25	; 62
    10c4:	df 91       	pop	r29
    10c6:	cf 91       	pop	r28
    10c8:	08 95       	ret

000010ca <gps_init>:
    10ca:	39 dd       	rcall	.-1422   	; 0xb3e <gps_uart_init>
    10cc:	6b ea       	ldi	r22, 0xAB	; 171
    10ce:	79 e2       	ldi	r23, 0x29	; 41
    10d0:	80 e0       	ldi	r24, 0x00	; 0
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	a8 df       	rcall	.-176    	; 0x1026 <__portable_avr_delay_cycles>
    10d6:	80 e3       	ldi	r24, 0x30	; 48
    10d8:	80 93 b3 09 	sts	0x09B3, r24	; 0x8009b3 <__TEXT_REGION_LENGTH__+0x7009b3>
    10dc:	08 95       	ret

000010de <release>:
    10de:	80 eb       	ldi	r24, 0xB0	; 176
    10e0:	94 e0       	ldi	r25, 0x04	; 4
    10e2:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <__TEXT_REGION_LENGTH__+0x700928>
    10e6:	90 93 29 09 	sts	0x0929, r25	; 0x800929 <__TEXT_REGION_LENGTH__+0x700929>
    10ea:	81 e0       	ldi	r24, 0x01	; 1
    10ec:	80 93 22 21 	sts	0x2122, r24	; 0x802122 <released>
    10f0:	08 95       	ret

000010f2 <get_pressure>:
    10f2:	4f 92       	push	r4
    10f4:	5f 92       	push	r5
    10f6:	6f 92       	push	r6
    10f8:	7f 92       	push	r7
    10fa:	8f 92       	push	r8
    10fc:	9f 92       	push	r9
    10fe:	af 92       	push	r10
    1100:	bf 92       	push	r11
    1102:	cf 92       	push	r12
    1104:	df 92       	push	r13
    1106:	ef 92       	push	r14
    1108:	ff 92       	push	r15
    110a:	cf 93       	push	r28
    110c:	df 93       	push	r29
    110e:	6b ea       	ldi	r22, 0xAB	; 171
    1110:	76 ea       	ldi	r23, 0xA6	; 166
    1112:	80 e0       	ldi	r24, 0x00	; 0
    1114:	90 e0       	ldi	r25, 0x00	; 0
    1116:	87 df       	rcall	.-242    	; 0x1026 <__portable_avr_delay_cycles>
    1118:	78 dd       	rcall	.-1296   	; 0xc0a <ms5607_convert_d1>
    111a:	6b 01       	movw	r12, r22
    111c:	7c 01       	movw	r14, r24
    111e:	6b ea       	ldi	r22, 0xAB	; 171
    1120:	76 ea       	ldi	r23, 0xA6	; 166
    1122:	80 e0       	ldi	r24, 0x00	; 0
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	7f df       	rcall	.-258    	; 0x1026 <__portable_avr_delay_cycles>
    1128:	94 dd       	rcall	.-1240   	; 0xc52 <ms5607_convert_d2>
    112a:	0e 94 43 17 	call	0x2e86	; 0x2e86 <__floatunsisf>
    112e:	4b 01       	movw	r8, r22
    1130:	5c 01       	movw	r10, r24
    1132:	cf e0       	ldi	r28, 0x0F	; 15
    1134:	d1 e2       	ldi	r29, 0x21	; 33
    1136:	68 85       	ldd	r22, Y+8	; 0x08
    1138:	79 85       	ldd	r23, Y+9	; 0x09
    113a:	80 e0       	ldi	r24, 0x00	; 0
    113c:	90 e0       	ldi	r25, 0x00	; 0
    113e:	0e 94 43 17 	call	0x2e86	; 0x2e86 <__floatunsisf>
    1142:	20 e0       	ldi	r18, 0x00	; 0
    1144:	30 e0       	ldi	r19, 0x00	; 0
    1146:	40 e8       	ldi	r20, 0x80	; 128
    1148:	53 e4       	ldi	r21, 0x43	; 67
    114a:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    114e:	9b 01       	movw	r18, r22
    1150:	ac 01       	movw	r20, r24
    1152:	c5 01       	movw	r24, r10
    1154:	b4 01       	movw	r22, r8
    1156:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__subsf3>
    115a:	4b 01       	movw	r8, r22
    115c:	5c 01       	movw	r10, r24
    115e:	6c 81       	ldd	r22, Y+4	; 0x04
    1160:	7d 81       	ldd	r23, Y+5	; 0x05
    1162:	80 e0       	ldi	r24, 0x00	; 0
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	0e 94 43 17 	call	0x2e86	; 0x2e86 <__floatunsisf>
    116a:	a5 01       	movw	r20, r10
    116c:	94 01       	movw	r18, r8
    116e:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    1172:	20 e0       	ldi	r18, 0x00	; 0
    1174:	30 e0       	ldi	r19, 0x00	; 0
    1176:	40 e0       	ldi	r20, 0x00	; 0
    1178:	5c e3       	ldi	r21, 0x3C	; 60
    117a:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    117e:	2b 01       	movw	r4, r22
    1180:	3c 01       	movw	r6, r24
    1182:	68 81       	ld	r22, Y
    1184:	79 81       	ldd	r23, Y+1	; 0x01
    1186:	80 e0       	ldi	r24, 0x00	; 0
    1188:	90 e0       	ldi	r25, 0x00	; 0
    118a:	0e 94 43 17 	call	0x2e86	; 0x2e86 <__floatunsisf>
    118e:	20 e0       	ldi	r18, 0x00	; 0
    1190:	30 e0       	ldi	r19, 0x00	; 0
    1192:	40 e8       	ldi	r20, 0x80	; 128
    1194:	57 e4       	ldi	r21, 0x47	; 71
    1196:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    119a:	9b 01       	movw	r18, r22
    119c:	ac 01       	movw	r20, r24
    119e:	c3 01       	movw	r24, r6
    11a0:	b2 01       	movw	r22, r4
    11a2:	0e 94 08 16 	call	0x2c10	; 0x2c10 <__addsf3>
    11a6:	2b 01       	movw	r4, r22
    11a8:	3c 01       	movw	r6, r24
    11aa:	c7 01       	movw	r24, r14
    11ac:	b6 01       	movw	r22, r12
    11ae:	0e 94 43 17 	call	0x2e86	; 0x2e86 <__floatunsisf>
    11b2:	9b 01       	movw	r18, r22
    11b4:	ac 01       	movw	r20, r24
    11b6:	c3 01       	movw	r24, r6
    11b8:	b2 01       	movw	r22, r4
    11ba:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    11be:	20 e0       	ldi	r18, 0x00	; 0
    11c0:	30 e0       	ldi	r19, 0x00	; 0
    11c2:	40 e0       	ldi	r20, 0x00	; 0
    11c4:	55 e3       	ldi	r21, 0x35	; 53
    11c6:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    11ca:	6b 01       	movw	r12, r22
    11cc:	7c 01       	movw	r14, r24
    11ce:	6e 81       	ldd	r22, Y+6	; 0x06
    11d0:	7f 81       	ldd	r23, Y+7	; 0x07
    11d2:	80 e0       	ldi	r24, 0x00	; 0
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	0e 94 43 17 	call	0x2e86	; 0x2e86 <__floatunsisf>
    11da:	a5 01       	movw	r20, r10
    11dc:	94 01       	movw	r18, r8
    11de:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    11e2:	20 e0       	ldi	r18, 0x00	; 0
    11e4:	30 e0       	ldi	r19, 0x00	; 0
    11e6:	40 e8       	ldi	r20, 0x80	; 128
    11e8:	5c e3       	ldi	r21, 0x3C	; 60
    11ea:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    11ee:	4b 01       	movw	r8, r22
    11f0:	5c 01       	movw	r10, r24
    11f2:	6a 81       	ldd	r22, Y+2	; 0x02
    11f4:	7b 81       	ldd	r23, Y+3	; 0x03
    11f6:	80 e0       	ldi	r24, 0x00	; 0
    11f8:	90 e0       	ldi	r25, 0x00	; 0
    11fa:	0e 94 43 17 	call	0x2e86	; 0x2e86 <__floatunsisf>
    11fe:	20 e0       	ldi	r18, 0x00	; 0
    1200:	30 e0       	ldi	r19, 0x00	; 0
    1202:	40 e0       	ldi	r20, 0x00	; 0
    1204:	58 e4       	ldi	r21, 0x48	; 72
    1206:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    120a:	9b 01       	movw	r18, r22
    120c:	ac 01       	movw	r20, r24
    120e:	c5 01       	movw	r24, r10
    1210:	b4 01       	movw	r22, r8
    1212:	0e 94 08 16 	call	0x2c10	; 0x2c10 <__addsf3>
    1216:	9b 01       	movw	r18, r22
    1218:	ac 01       	movw	r20, r24
    121a:	c7 01       	movw	r24, r14
    121c:	b6 01       	movw	r22, r12
    121e:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__subsf3>
    1222:	20 e0       	ldi	r18, 0x00	; 0
    1224:	30 e0       	ldi	r19, 0x00	; 0
    1226:	40 e0       	ldi	r20, 0x00	; 0
    1228:	58 e3       	ldi	r21, 0x38	; 56
    122a:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    122e:	df 91       	pop	r29
    1230:	cf 91       	pop	r28
    1232:	ff 90       	pop	r15
    1234:	ef 90       	pop	r14
    1236:	df 90       	pop	r13
    1238:	cf 90       	pop	r12
    123a:	bf 90       	pop	r11
    123c:	af 90       	pop	r10
    123e:	9f 90       	pop	r9
    1240:	8f 90       	pop	r8
    1242:	7f 90       	pop	r7
    1244:	6f 90       	pop	r6
    1246:	5f 90       	pop	r5
    1248:	4f 90       	pop	r4
    124a:	08 95       	ret

0000124c <get_altitude>:
    124c:	4f 92       	push	r4
    124e:	5f 92       	push	r5
    1250:	6f 92       	push	r6
    1252:	7f 92       	push	r7
    1254:	8f 92       	push	r8
    1256:	9f 92       	push	r9
    1258:	af 92       	push	r10
    125a:	bf 92       	push	r11
    125c:	cf 92       	push	r12
    125e:	df 92       	push	r13
    1260:	ef 92       	push	r14
    1262:	ff 92       	push	r15
    1264:	2b 01       	movw	r4, r22
    1266:	3c 01       	movw	r6, r24
    1268:	c0 90 21 20 	lds	r12, 0x2021	; 0x802021 <L>
    126c:	d0 90 22 20 	lds	r13, 0x2022	; 0x802022 <L+0x1>
    1270:	e0 90 23 20 	lds	r14, 0x2023	; 0x802023 <L+0x2>
    1274:	f0 90 24 20 	lds	r15, 0x2024	; 0x802024 <L+0x3>
    1278:	20 91 25 20 	lds	r18, 0x2025	; 0x802025 <R>
    127c:	30 91 26 20 	lds	r19, 0x2026	; 0x802026 <R+0x1>
    1280:	40 91 27 20 	lds	r20, 0x2027	; 0x802027 <R+0x2>
    1284:	50 91 28 20 	lds	r21, 0x2028	; 0x802028 <R+0x3>
    1288:	c7 01       	movw	r24, r14
    128a:	b6 01       	movw	r22, r12
    128c:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    1290:	20 91 1d 20 	lds	r18, 0x201D	; 0x80201d <g_0>
    1294:	30 91 1e 20 	lds	r19, 0x201E	; 0x80201e <g_0+0x1>
    1298:	40 91 1f 20 	lds	r20, 0x201F	; 0x80201f <g_0+0x2>
    129c:	50 91 20 20 	lds	r21, 0x2020	; 0x802020 <g_0+0x3>
    12a0:	0e 94 70 16 	call	0x2ce0	; 0x2ce0 <__divsf3>
    12a4:	4b 01       	movw	r8, r22
    12a6:	5c 01       	movw	r10, r24
    12a8:	a3 01       	movw	r20, r6
    12aa:	92 01       	movw	r18, r4
    12ac:	60 91 2d 20 	lds	r22, 0x202D	; 0x80202d <ground_p>
    12b0:	70 91 2e 20 	lds	r23, 0x202E	; 0x80202e <ground_p+0x1>
    12b4:	80 91 2f 20 	lds	r24, 0x202F	; 0x80202f <ground_p+0x2>
    12b8:	90 91 30 20 	lds	r25, 0x2030	; 0x802030 <ground_p+0x3>
    12bc:	0e 94 70 16 	call	0x2ce0	; 0x2ce0 <__divsf3>
    12c0:	a5 01       	movw	r20, r10
    12c2:	94 01       	movw	r18, r8
    12c4:	0e 94 6c 18 	call	0x30d8	; 0x30d8 <pow>
    12c8:	20 e0       	ldi	r18, 0x00	; 0
    12ca:	30 e0       	ldi	r19, 0x00	; 0
    12cc:	40 e8       	ldi	r20, 0x80	; 128
    12ce:	5f e3       	ldi	r21, 0x3F	; 63
    12d0:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__subsf3>
    12d4:	20 91 29 20 	lds	r18, 0x2029	; 0x802029 <ground_t>
    12d8:	30 91 2a 20 	lds	r19, 0x202A	; 0x80202a <ground_t+0x1>
    12dc:	40 91 2b 20 	lds	r20, 0x202B	; 0x80202b <ground_t+0x2>
    12e0:	50 91 2c 20 	lds	r21, 0x202C	; 0x80202c <ground_t+0x3>
    12e4:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    12e8:	a7 01       	movw	r20, r14
    12ea:	96 01       	movw	r18, r12
    12ec:	0e 94 70 16 	call	0x2ce0	; 0x2ce0 <__divsf3>
    12f0:	20 91 1d 21 	lds	r18, 0x211D	; 0x80211d <ground_a>
    12f4:	30 91 1e 21 	lds	r19, 0x211E	; 0x80211e <ground_a+0x1>
    12f8:	40 91 1f 21 	lds	r20, 0x211F	; 0x80211f <ground_a+0x2>
    12fc:	50 91 20 21 	lds	r21, 0x2120	; 0x802120 <ground_a+0x3>
    1300:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__subsf3>
    1304:	ff 90       	pop	r15
    1306:	ef 90       	pop	r14
    1308:	df 90       	pop	r13
    130a:	cf 90       	pop	r12
    130c:	bf 90       	pop	r11
    130e:	af 90       	pop	r10
    1310:	9f 90       	pop	r9
    1312:	8f 90       	pop	r8
    1314:	7f 90       	pop	r7
    1316:	6f 90       	pop	r6
    1318:	5f 90       	pop	r5
    131a:	4f 90       	pop	r4
    131c:	08 95       	ret

0000131e <diff>:
    131e:	2f 92       	push	r2
    1320:	3f 92       	push	r3
    1322:	4f 92       	push	r4
    1324:	5f 92       	push	r5
    1326:	6f 92       	push	r6
    1328:	7f 92       	push	r7
    132a:	8f 92       	push	r8
    132c:	9f 92       	push	r9
    132e:	af 92       	push	r10
    1330:	bf 92       	push	r11
    1332:	cf 92       	push	r12
    1334:	df 92       	push	r13
    1336:	ef 92       	push	r14
    1338:	ff 92       	push	r15
    133a:	0f 93       	push	r16
    133c:	1f 93       	push	r17
    133e:	cf 93       	push	r28
    1340:	df 93       	push	r29
    1342:	00 d0       	rcall	.+0      	; 0x1344 <diff+0x26>
    1344:	00 d0       	rcall	.+0      	; 0x1346 <diff+0x28>
    1346:	cd b7       	in	r28, 0x3d	; 61
    1348:	de b7       	in	r29, 0x3e	; 62
    134a:	6c 01       	movw	r12, r24
    134c:	80 91 16 20 	lds	r24, 0x2016	; 0x802016 <data_samples>
    1350:	88 23       	and	r24, r24
    1352:	09 f4       	brne	.+2      	; 0x1356 <diff+0x38>
    1354:	6c c0       	rjmp	.+216    	; 0x142e <diff+0x110>
    1356:	00 e0       	ldi	r16, 0x00	; 0
    1358:	10 e0       	ldi	r17, 0x00	; 0
    135a:	41 2c       	mov	r4, r1
    135c:	51 2c       	mov	r5, r1
    135e:	32 01       	movw	r6, r4
    1360:	86 2e       	mov	r8, r22
    1362:	91 2c       	mov	r9, r1
    1364:	a1 2c       	mov	r10, r1
    1366:	b1 2c       	mov	r11, r1
    1368:	89 82       	std	Y+1, r8	; 0x01
    136a:	9a 82       	std	Y+2, r9	; 0x02
    136c:	ab 82       	std	Y+3, r10	; 0x03
    136e:	bc 82       	std	Y+4, r11	; 0x04
    1370:	b8 01       	movw	r22, r16
    1372:	c6 01       	movw	r24, r12
    1374:	4a dd       	rcall	.-1388   	; 0xe0a <rb16_get_nth>
    1376:	5c 01       	movw	r10, r24
    1378:	18 01       	movw	r2, r16
    137a:	2f ef       	ldi	r18, 0xFF	; 255
    137c:	22 1a       	sub	r2, r18
    137e:	32 0a       	sbc	r3, r18
    1380:	b1 01       	movw	r22, r2
    1382:	c6 01       	movw	r24, r12
    1384:	42 dd       	rcall	.-1404   	; 0xe0a <rb16_get_nth>
    1386:	7c 01       	movw	r14, r24
    1388:	b8 01       	movw	r22, r16
    138a:	6e 5f       	subi	r22, 0xFE	; 254
    138c:	7f 4f       	sbci	r23, 0xFF	; 255
    138e:	c6 01       	movw	r24, r12
    1390:	3c dd       	rcall	.-1416   	; 0xe0a <rb16_get_nth>
    1392:	a5 01       	movw	r20, r10
    1394:	bb 0c       	add	r11, r11
    1396:	66 0b       	sbc	r22, r22
    1398:	77 0b       	sbc	r23, r23
    139a:	8a 01       	movw	r16, r20
    139c:	9b 01       	movw	r18, r22
    139e:	00 0f       	add	r16, r16
    13a0:	11 1f       	adc	r17, r17
    13a2:	22 1f       	adc	r18, r18
    13a4:	33 1f       	adc	r19, r19
    13a6:	40 0f       	add	r20, r16
    13a8:	51 1f       	adc	r21, r17
    13aa:	62 1f       	adc	r22, r18
    13ac:	73 1f       	adc	r23, r19
    13ae:	87 01       	movw	r16, r14
    13b0:	ff 0c       	add	r15, r15
    13b2:	22 0b       	sbc	r18, r18
    13b4:	33 0b       	sbc	r19, r19
    13b6:	78 01       	movw	r14, r16
    13b8:	89 01       	movw	r16, r18
    13ba:	ee 0c       	add	r14, r14
    13bc:	ff 1c       	adc	r15, r15
    13be:	00 1f       	adc	r16, r16
    13c0:	11 1f       	adc	r17, r17
    13c2:	ee 0c       	add	r14, r14
    13c4:	ff 1c       	adc	r15, r15
    13c6:	00 1f       	adc	r16, r16
    13c8:	11 1f       	adc	r17, r17
    13ca:	4a 01       	movw	r8, r20
    13cc:	5b 01       	movw	r10, r22
    13ce:	8e 18       	sub	r8, r14
    13d0:	9f 08       	sbc	r9, r15
    13d2:	a0 0a       	sbc	r10, r16
    13d4:	b1 0a       	sbc	r11, r17
    13d6:	ac 01       	movw	r20, r24
    13d8:	99 0f       	add	r25, r25
    13da:	66 0b       	sbc	r22, r22
    13dc:	77 0b       	sbc	r23, r23
    13de:	d5 01       	movw	r26, r10
    13e0:	c4 01       	movw	r24, r8
    13e2:	84 0f       	add	r24, r20
    13e4:	95 1f       	adc	r25, r21
    13e6:	a6 1f       	adc	r26, r22
    13e8:	b7 1f       	adc	r27, r23
    13ea:	9c 01       	movw	r18, r24
    13ec:	ad 01       	movw	r20, r26
    13ee:	69 81       	ldd	r22, Y+1	; 0x01
    13f0:	7a 81       	ldd	r23, Y+2	; 0x02
    13f2:	8b 81       	ldd	r24, Y+3	; 0x03
    13f4:	9c 81       	ldd	r25, Y+4	; 0x04
    13f6:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <__mulsi3>
    13fa:	0e 94 45 17 	call	0x2e8a	; 0x2e8a <__floatsisf>
    13fe:	20 e0       	ldi	r18, 0x00	; 0
    1400:	30 e0       	ldi	r19, 0x00	; 0
    1402:	40 e0       	ldi	r20, 0x00	; 0
    1404:	5f e3       	ldi	r21, 0x3F	; 63
    1406:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    140a:	9b 01       	movw	r18, r22
    140c:	ac 01       	movw	r20, r24
    140e:	c3 01       	movw	r24, r6
    1410:	b2 01       	movw	r22, r4
    1412:	0e 94 08 16 	call	0x2c10	; 0x2c10 <__addsf3>
    1416:	2b 01       	movw	r4, r22
    1418:	3c 01       	movw	r6, r24
    141a:	80 91 16 20 	lds	r24, 0x2016	; 0x802016 <data_samples>
    141e:	81 01       	movw	r16, r2
    1420:	28 2f       	mov	r18, r24
    1422:	30 e0       	ldi	r19, 0x00	; 0
    1424:	22 16       	cp	r2, r18
    1426:	33 06       	cpc	r3, r19
    1428:	08 f4       	brcc	.+2      	; 0x142c <diff+0x10e>
    142a:	a2 cf       	rjmp	.-188    	; 0x1370 <diff+0x52>
    142c:	03 c0       	rjmp	.+6      	; 0x1434 <diff+0x116>
    142e:	41 2c       	mov	r4, r1
    1430:	51 2c       	mov	r5, r1
    1432:	32 01       	movw	r6, r4
    1434:	68 2f       	mov	r22, r24
    1436:	70 e0       	ldi	r23, 0x00	; 0
    1438:	80 e0       	ldi	r24, 0x00	; 0
    143a:	90 e0       	ldi	r25, 0x00	; 0
    143c:	0e 94 45 17 	call	0x2e8a	; 0x2e8a <__floatsisf>
    1440:	9b 01       	movw	r18, r22
    1442:	ac 01       	movw	r20, r24
    1444:	c3 01       	movw	r24, r6
    1446:	b2 01       	movw	r22, r4
    1448:	0e 94 70 16 	call	0x2ce0	; 0x2ce0 <__divsf3>
    144c:	20 e0       	ldi	r18, 0x00	; 0
    144e:	30 e0       	ldi	r19, 0x00	; 0
    1450:	48 ec       	ldi	r20, 0xC8	; 200
    1452:	52 e4       	ldi	r21, 0x42	; 66
    1454:	0e 94 70 16 	call	0x2ce0	; 0x2ce0 <__divsf3>
    1458:	26 96       	adiw	r28, 0x06	; 6
    145a:	cd bf       	out	0x3d, r28	; 61
    145c:	de bf       	out	0x3e, r29	; 62
    145e:	df 91       	pop	r29
    1460:	cf 91       	pop	r28
    1462:	1f 91       	pop	r17
    1464:	0f 91       	pop	r16
    1466:	ff 90       	pop	r15
    1468:	ef 90       	pop	r14
    146a:	df 90       	pop	r13
    146c:	cf 90       	pop	r12
    146e:	bf 90       	pop	r11
    1470:	af 90       	pop	r10
    1472:	9f 90       	pop	r9
    1474:	8f 90       	pop	r8
    1476:	7f 90       	pop	r7
    1478:	6f 90       	pop	r6
    147a:	5f 90       	pop	r5
    147c:	4f 90       	pop	r4
    147e:	3f 90       	pop	r3
    1480:	2f 90       	pop	r2
    1482:	08 95       	ret

00001484 <data_check>:
    1484:	3f 92       	push	r3
    1486:	4f 92       	push	r4
    1488:	5f 92       	push	r5
    148a:	6f 92       	push	r6
    148c:	7f 92       	push	r7
    148e:	8f 92       	push	r8
    1490:	9f 92       	push	r9
    1492:	af 92       	push	r10
    1494:	bf 92       	push	r11
    1496:	cf 92       	push	r12
    1498:	df 92       	push	r13
    149a:	ef 92       	push	r14
    149c:	ff 92       	push	r15
    149e:	0f 93       	push	r16
    14a0:	1f 93       	push	r17
    14a2:	cf 93       	push	r28
    14a4:	df 93       	push	r29
    14a6:	00 d0       	rcall	.+0      	; 0x14a8 <data_check+0x24>
    14a8:	00 d0       	rcall	.+0      	; 0x14aa <data_check+0x26>
    14aa:	cd b7       	in	r28, 0x3d	; 61
    14ac:	de b7       	in	r29, 0x3e	; 62
    14ae:	8c 01       	movw	r16, r24
    14b0:	19 82       	std	Y+1, r1	; 0x01
    14b2:	1a 82       	std	Y+2, r1	; 0x02
    14b4:	c1 2c       	mov	r12, r1
    14b6:	d1 2c       	mov	r13, r1
    14b8:	76 01       	movw	r14, r12
    14ba:	69 81       	ldd	r22, Y+1	; 0x01
    14bc:	7a 81       	ldd	r23, Y+2	; 0x02
    14be:	c8 01       	movw	r24, r16
    14c0:	2c dd       	rcall	.-1448   	; 0xf1a <rb32_get_nth>
    14c2:	4b 01       	movw	r8, r22
    14c4:	5c 01       	movw	r10, r24
    14c6:	21 e6       	ldi	r18, 0x61	; 97
    14c8:	82 1a       	sub	r8, r18
    14ca:	2e ea       	ldi	r18, 0xAE	; 174
    14cc:	92 0a       	sbc	r9, r18
    14ce:	2a e0       	ldi	r18, 0x0A	; 10
    14d0:	a2 0a       	sbc	r10, r18
    14d2:	b1 08       	sbc	r11, r1
    14d4:	2f e7       	ldi	r18, 0x7F	; 127
    14d6:	82 16       	cp	r8, r18
    14d8:	2a e1       	ldi	r18, 0x1A	; 26
    14da:	92 06       	cpc	r9, r18
    14dc:	26 e0       	ldi	r18, 0x06	; 6
    14de:	a2 06       	cpc	r10, r18
    14e0:	b1 04       	cpc	r11, r1
    14e2:	80 f4       	brcc	.+32     	; 0x1504 <data_check+0x80>
    14e4:	0e 94 45 17 	call	0x2e8a	; 0x2e8a <__floatsisf>
    14e8:	20 e0       	ldi	r18, 0x00	; 0
    14ea:	30 e0       	ldi	r19, 0x00	; 0
    14ec:	40 ea       	ldi	r20, 0xA0	; 160
    14ee:	50 e4       	ldi	r21, 0x40	; 64
    14f0:	0e 94 70 16 	call	0x2ce0	; 0x2ce0 <__divsf3>
    14f4:	9b 01       	movw	r18, r22
    14f6:	ac 01       	movw	r20, r24
    14f8:	c7 01       	movw	r24, r14
    14fa:	b6 01       	movw	r22, r12
    14fc:	0e 94 08 16 	call	0x2c10	; 0x2c10 <__addsf3>
    1500:	6b 01       	movw	r12, r22
    1502:	7c 01       	movw	r14, r24
    1504:	89 81       	ldd	r24, Y+1	; 0x01
    1506:	9a 81       	ldd	r25, Y+2	; 0x02
    1508:	01 96       	adiw	r24, 0x01	; 1
    150a:	89 83       	std	Y+1, r24	; 0x01
    150c:	9a 83       	std	Y+2, r25	; 0x02
    150e:	05 97       	sbiw	r24, 0x05	; 5
    1510:	a1 f6       	brne	.-88     	; 0x14ba <data_check+0x36>
    1512:	19 82       	std	Y+1, r1	; 0x01
    1514:	1a 82       	std	Y+2, r1	; 0x02
    1516:	81 2c       	mov	r8, r1
    1518:	91 2c       	mov	r9, r1
    151a:	54 01       	movw	r10, r8
    151c:	69 81       	ldd	r22, Y+1	; 0x01
    151e:	7a 81       	ldd	r23, Y+2	; 0x02
    1520:	c8 01       	movw	r24, r16
    1522:	fb dc       	rcall	.-1546   	; 0xf1a <rb32_get_nth>
    1524:	2b 01       	movw	r4, r22
    1526:	3c 01       	movw	r6, r24
    1528:	21 e6       	ldi	r18, 0x61	; 97
    152a:	42 1a       	sub	r4, r18
    152c:	2e ea       	ldi	r18, 0xAE	; 174
    152e:	52 0a       	sbc	r5, r18
    1530:	2a e0       	ldi	r18, 0x0A	; 10
    1532:	62 0a       	sbc	r6, r18
    1534:	71 08       	sbc	r7, r1
    1536:	2f e7       	ldi	r18, 0x7F	; 127
    1538:	42 16       	cp	r4, r18
    153a:	2a e1       	ldi	r18, 0x1A	; 26
    153c:	52 06       	cpc	r5, r18
    153e:	26 e0       	ldi	r18, 0x06	; 6
    1540:	62 06       	cpc	r6, r18
    1542:	71 04       	cpc	r7, r1
    1544:	90 f4       	brcc	.+36     	; 0x156a <data_check+0xe6>
    1546:	0e 94 45 17 	call	0x2e8a	; 0x2e8a <__floatsisf>
    154a:	a7 01       	movw	r20, r14
    154c:	96 01       	movw	r18, r12
    154e:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__subsf3>
    1552:	9b 01       	movw	r18, r22
    1554:	ac 01       	movw	r20, r24
    1556:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    155a:	9b 01       	movw	r18, r22
    155c:	ac 01       	movw	r20, r24
    155e:	c5 01       	movw	r24, r10
    1560:	b4 01       	movw	r22, r8
    1562:	0e 94 08 16 	call	0x2c10	; 0x2c10 <__addsf3>
    1566:	4b 01       	movw	r8, r22
    1568:	5c 01       	movw	r10, r24
    156a:	89 81       	ldd	r24, Y+1	; 0x01
    156c:	9a 81       	ldd	r25, Y+2	; 0x02
    156e:	01 96       	adiw	r24, 0x01	; 1
    1570:	89 83       	std	Y+1, r24	; 0x01
    1572:	9a 83       	std	Y+2, r25	; 0x02
    1574:	05 97       	sbiw	r24, 0x05	; 5
    1576:	91 f6       	brne	.-92     	; 0x151c <data_check+0x98>
    1578:	20 e0       	ldi	r18, 0x00	; 0
    157a:	30 e0       	ldi	r19, 0x00	; 0
    157c:	40 e8       	ldi	r20, 0x80	; 128
    157e:	5e e3       	ldi	r21, 0x3E	; 62
    1580:	c5 01       	movw	r24, r10
    1582:	b4 01       	movw	r22, r8
    1584:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    1588:	69 83       	std	Y+1, r22	; 0x01
    158a:	7a 83       	std	Y+2, r23	; 0x02
    158c:	8b 83       	std	Y+3, r24	; 0x03
    158e:	9c 83       	std	Y+4, r25	; 0x04
    1590:	1d 82       	std	Y+5, r1	; 0x05
    1592:	1e 82       	std	Y+6, r1	; 0x06
    1594:	31 2c       	mov	r3, r1
    1596:	41 2c       	mov	r4, r1
    1598:	51 2c       	mov	r5, r1
    159a:	32 01       	movw	r6, r4
    159c:	6d 81       	ldd	r22, Y+5	; 0x05
    159e:	7e 81       	ldd	r23, Y+6	; 0x06
    15a0:	c8 01       	movw	r24, r16
    15a2:	bb dc       	rcall	.-1674   	; 0xf1a <rb32_get_nth>
    15a4:	4b 01       	movw	r8, r22
    15a6:	5c 01       	movw	r10, r24
    15a8:	21 e6       	ldi	r18, 0x61	; 97
    15aa:	82 1a       	sub	r8, r18
    15ac:	2e ea       	ldi	r18, 0xAE	; 174
    15ae:	92 0a       	sbc	r9, r18
    15b0:	2a e0       	ldi	r18, 0x0A	; 10
    15b2:	a2 0a       	sbc	r10, r18
    15b4:	b1 08       	sbc	r11, r1
    15b6:	2f e7       	ldi	r18, 0x7F	; 127
    15b8:	82 16       	cp	r8, r18
    15ba:	2a e1       	ldi	r18, 0x1A	; 26
    15bc:	92 06       	cpc	r9, r18
    15be:	26 e0       	ldi	r18, 0x06	; 6
    15c0:	a2 06       	cpc	r10, r18
    15c2:	b1 04       	cpc	r11, r1
    15c4:	50 f5       	brcc	.+84     	; 0x161a <data_check+0x196>
    15c6:	0e 94 45 17 	call	0x2e8a	; 0x2e8a <__floatsisf>
    15ca:	4b 01       	movw	r8, r22
    15cc:	5c 01       	movw	r10, r24
    15ce:	a7 01       	movw	r20, r14
    15d0:	96 01       	movw	r18, r12
    15d2:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <__subsf3>
    15d6:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    15da:	9b 01       	movw	r18, r22
    15dc:	77 23       	and	r23, r23
    15de:	24 f4       	brge	.+8      	; 0x15e8 <data_check+0x164>
    15e0:	22 27       	eor	r18, r18
    15e2:	33 27       	eor	r19, r19
    15e4:	26 1b       	sub	r18, r22
    15e6:	37 0b       	sbc	r19, r23
    15e8:	b9 01       	movw	r22, r18
    15ea:	33 0f       	add	r19, r19
    15ec:	88 0b       	sbc	r24, r24
    15ee:	99 0b       	sbc	r25, r25
    15f0:	0e 94 45 17 	call	0x2e8a	; 0x2e8a <__floatsisf>
    15f4:	9b 01       	movw	r18, r22
    15f6:	ac 01       	movw	r20, r24
    15f8:	69 81       	ldd	r22, Y+1	; 0x01
    15fa:	7a 81       	ldd	r23, Y+2	; 0x02
    15fc:	8b 81       	ldd	r24, Y+3	; 0x03
    15fe:	9c 81       	ldd	r25, Y+4	; 0x04
    1600:	0e 94 05 18 	call	0x300a	; 0x300a <__gesf2>
    1604:	88 23       	and	r24, r24
    1606:	4c f0       	brlt	.+18     	; 0x161a <data_check+0x196>
    1608:	a5 01       	movw	r20, r10
    160a:	94 01       	movw	r18, r8
    160c:	c3 01       	movw	r24, r6
    160e:	b2 01       	movw	r22, r4
    1610:	0e 94 08 16 	call	0x2c10	; 0x2c10 <__addsf3>
    1614:	2b 01       	movw	r4, r22
    1616:	3c 01       	movw	r6, r24
    1618:	33 94       	inc	r3
    161a:	8d 81       	ldd	r24, Y+5	; 0x05
    161c:	9e 81       	ldd	r25, Y+6	; 0x06
    161e:	01 96       	adiw	r24, 0x01	; 1
    1620:	8d 83       	std	Y+5, r24	; 0x05
    1622:	9e 83       	std	Y+6, r25	; 0x06
    1624:	05 97       	sbiw	r24, 0x05	; 5
    1626:	09 f0       	breq	.+2      	; 0x162a <data_check+0x1a6>
    1628:	b9 cf       	rjmp	.-142    	; 0x159c <data_check+0x118>
    162a:	33 20       	and	r3, r3
    162c:	69 f0       	breq	.+26     	; 0x1648 <data_check+0x1c4>
    162e:	63 2d       	mov	r22, r3
    1630:	70 e0       	ldi	r23, 0x00	; 0
    1632:	80 e0       	ldi	r24, 0x00	; 0
    1634:	90 e0       	ldi	r25, 0x00	; 0
    1636:	0e 94 43 17 	call	0x2e86	; 0x2e86 <__floatunsisf>
    163a:	9b 01       	movw	r18, r22
    163c:	ac 01       	movw	r20, r24
    163e:	c3 01       	movw	r24, r6
    1640:	b2 01       	movw	r22, r4
    1642:	0e 94 70 16 	call	0x2ce0	; 0x2ce0 <__divsf3>
    1646:	04 c0       	rjmp	.+8      	; 0x1650 <data_check+0x1cc>
    1648:	60 e0       	ldi	r22, 0x00	; 0
    164a:	70 e0       	ldi	r23, 0x00	; 0
    164c:	80 e8       	ldi	r24, 0x80	; 128
    164e:	9f eb       	ldi	r25, 0xBF	; 191
    1650:	26 96       	adiw	r28, 0x06	; 6
    1652:	cd bf       	out	0x3d, r28	; 61
    1654:	de bf       	out	0x3e, r29	; 62
    1656:	df 91       	pop	r29
    1658:	cf 91       	pop	r28
    165a:	1f 91       	pop	r17
    165c:	0f 91       	pop	r16
    165e:	ff 90       	pop	r15
    1660:	ef 90       	pop	r14
    1662:	df 90       	pop	r13
    1664:	cf 90       	pop	r12
    1666:	bf 90       	pop	r11
    1668:	af 90       	pop	r10
    166a:	9f 90       	pop	r9
    166c:	8f 90       	pop	r8
    166e:	7f 90       	pop	r7
    1670:	6f 90       	pop	r6
    1672:	5f 90       	pop	r5
    1674:	4f 90       	pop	r4
    1676:	3f 90       	pop	r3
    1678:	08 95       	ret

0000167a <data_collect>:
    167a:	af 92       	push	r10
    167c:	bf 92       	push	r11
    167e:	cf 92       	push	r12
    1680:	df 92       	push	r13
    1682:	ef 92       	push	r14
    1684:	ff 92       	push	r15
    1686:	0f 93       	push	r16
    1688:	1f 93       	push	r17
    168a:	cf 93       	push	r28
    168c:	df 93       	push	r29
    168e:	00 d0       	rcall	.+0      	; 0x1690 <data_collect+0x16>
    1690:	00 d0       	rcall	.+0      	; 0x1692 <data_collect+0x18>
    1692:	cd b7       	in	r28, 0x3d	; 61
    1694:	de b7       	in	r29, 0x3e	; 62
    1696:	5c 01       	movw	r10, r24
    1698:	8b 01       	movw	r16, r22
    169a:	2b dd       	rcall	.-1450   	; 0x10f2 <get_pressure>
    169c:	20 e0       	ldi	r18, 0x00	; 0
    169e:	30 e0       	ldi	r19, 0x00	; 0
    16a0:	40 e2       	ldi	r20, 0x20	; 32
    16a2:	51 e4       	ldi	r21, 0x41	; 65
    16a4:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    16a8:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    16ac:	69 83       	std	Y+1, r22	; 0x01
    16ae:	7a 83       	std	Y+2, r23	; 0x02
    16b0:	8b 83       	std	Y+3, r24	; 0x03
    16b2:	9c 83       	std	Y+4, r25	; 0x04
    16b4:	41 e0       	ldi	r20, 0x01	; 1
    16b6:	50 e0       	ldi	r21, 0x00	; 0
    16b8:	be 01       	movw	r22, r28
    16ba:	6f 5f       	subi	r22, 0xFF	; 255
    16bc:	7f 4f       	sbci	r23, 0xFF	; 255
    16be:	c8 01       	movw	r24, r16
    16c0:	d1 db       	rcall	.-2142   	; 0xe64 <rb32_write>
    16c2:	c8 01       	movw	r24, r16
    16c4:	df de       	rcall	.-578    	; 0x1484 <data_check>
    16c6:	20 e0       	ldi	r18, 0x00	; 0
    16c8:	30 e0       	ldi	r19, 0x00	; 0
    16ca:	40 e2       	ldi	r20, 0x20	; 32
    16cc:	51 e4       	ldi	r21, 0x41	; 65
    16ce:	0e 94 70 16 	call	0x2ce0	; 0x2ce0 <__divsf3>
    16d2:	6b 01       	movw	r12, r22
    16d4:	7c 01       	movw	r14, r24
    16d6:	20 e0       	ldi	r18, 0x00	; 0
    16d8:	30 e0       	ldi	r19, 0x00	; 0
    16da:	40 e8       	ldi	r20, 0x80	; 128
    16dc:	5f eb       	ldi	r21, 0xBF	; 191
    16de:	0e 94 6c 16 	call	0x2cd8	; 0x2cd8 <__cmpsf2>
    16e2:	88 23       	and	r24, r24
    16e4:	81 f1       	breq	.+96     	; 0x1746 <data_collect+0xcc>
    16e6:	c0 92 ff 20 	sts	0x20FF, r12	; 0x8020ff <press>
    16ea:	d0 92 00 21 	sts	0x2100, r13	; 0x802100 <press+0x1>
    16ee:	e0 92 01 21 	sts	0x2101, r14	; 0x802101 <press+0x2>
    16f2:	f0 92 02 21 	sts	0x2102, r15	; 0x802102 <press+0x3>
    16f6:	c7 01       	movw	r24, r14
    16f8:	b6 01       	movw	r22, r12
    16fa:	a8 dd       	rcall	.-1200   	; 0x124c <get_altitude>
    16fc:	60 93 f7 20 	sts	0x20F7, r22	; 0x8020f7 <alt>
    1700:	70 93 f8 20 	sts	0x20F8, r23	; 0x8020f8 <alt+0x1>
    1704:	80 93 f9 20 	sts	0x20F9, r24	; 0x8020f9 <alt+0x2>
    1708:	90 93 fa 20 	sts	0x20FA, r25	; 0x8020fa <alt+0x3>
    170c:	20 e0       	ldi	r18, 0x00	; 0
    170e:	30 e0       	ldi	r19, 0x00	; 0
    1710:	48 ec       	ldi	r20, 0xC8	; 200
    1712:	52 e4       	ldi	r21, 0x42	; 66
    1714:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    1718:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    171c:	6d 83       	std	Y+5, r22	; 0x05
    171e:	7e 83       	std	Y+6, r23	; 0x06
    1720:	41 e0       	ldi	r20, 0x01	; 1
    1722:	50 e0       	ldi	r21, 0x00	; 0
    1724:	be 01       	movw	r22, r28
    1726:	6b 5f       	subi	r22, 0xFB	; 251
    1728:	7f 4f       	sbci	r23, 0xFF	; 255
    172a:	c5 01       	movw	r24, r10
    172c:	25 db       	rcall	.-2486   	; 0xd78 <rb16_write>
    172e:	60 91 19 20 	lds	r22, 0x2019	; 0x802019 <rate>
    1732:	c5 01       	movw	r24, r10
    1734:	f4 dd       	rcall	.-1048   	; 0x131e <diff>
    1736:	60 93 ef 20 	sts	0x20EF, r22	; 0x8020ef <velocity>
    173a:	70 93 f0 20 	sts	0x20F0, r23	; 0x8020f0 <velocity+0x1>
    173e:	80 93 f1 20 	sts	0x20F1, r24	; 0x8020f1 <velocity+0x2>
    1742:	90 93 f2 20 	sts	0x20F2, r25	; 0x8020f2 <velocity+0x3>
    1746:	83 e3       	ldi	r24, 0x33	; 51
    1748:	93 e9       	ldi	r25, 0x93	; 147
    174a:	a7 e9       	ldi	r26, 0x97	; 151
    174c:	b3 e4       	ldi	r27, 0x43	; 67
    174e:	80 93 fb 20 	sts	0x20FB, r24	; 0x8020fb <temp>
    1752:	90 93 fc 20 	sts	0x20FC, r25	; 0x8020fc <temp+0x1>
    1756:	a0 93 fd 20 	sts	0x20FD, r26	; 0x8020fd <temp+0x2>
    175a:	b0 93 fe 20 	sts	0x20FE, r27	; 0x8020fe <temp+0x3>
    175e:	26 96       	adiw	r28, 0x06	; 6
    1760:	cd bf       	out	0x3d, r28	; 61
    1762:	de bf       	out	0x3e, r29	; 62
    1764:	df 91       	pop	r29
    1766:	cf 91       	pop	r28
    1768:	1f 91       	pop	r17
    176a:	0f 91       	pop	r16
    176c:	ff 90       	pop	r15
    176e:	ef 90       	pop	r14
    1770:	df 90       	pop	r13
    1772:	cf 90       	pop	r12
    1774:	bf 90       	pop	r11
    1776:	af 90       	pop	r10
    1778:	08 95       	ret

0000177a <state_check>:
    177a:	cf 92       	push	r12
    177c:	df 92       	push	r13
    177e:	ef 92       	push	r14
    1780:	ff 92       	push	r15
    1782:	c0 90 ef 20 	lds	r12, 0x20EF	; 0x8020ef <velocity>
    1786:	d0 90 f0 20 	lds	r13, 0x20F0	; 0x8020f0 <velocity+0x1>
    178a:	e0 90 f1 20 	lds	r14, 0x20F1	; 0x8020f1 <velocity+0x2>
    178e:	f0 90 f2 20 	lds	r15, 0x20F2	; 0x8020f2 <velocity+0x3>
    1792:	c7 01       	movw	r24, r14
    1794:	b6 01       	movw	r22, r12
    1796:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    179a:	9b 01       	movw	r18, r22
    179c:	77 23       	and	r23, r23
    179e:	24 f4       	brge	.+8      	; 0x17a8 <state_check+0x2e>
    17a0:	22 27       	eor	r18, r18
    17a2:	33 27       	eor	r19, r19
    17a4:	26 1b       	sub	r18, r22
    17a6:	37 0b       	sbc	r19, r23
    17a8:	26 30       	cpi	r18, 0x06	; 6
    17aa:	31 05       	cpc	r19, r1
    17ac:	8c f0       	brlt	.+34     	; 0x17d0 <state_check+0x56>
    17ae:	20 e0       	ldi	r18, 0x00	; 0
    17b0:	30 e0       	ldi	r19, 0x00	; 0
    17b2:	a9 01       	movw	r20, r18
    17b4:	c7 01       	movw	r24, r14
    17b6:	b6 01       	movw	r22, r12
    17b8:	0e 94 6c 16 	call	0x2cd8	; 0x2cd8 <__cmpsf2>
    17bc:	88 23       	and	r24, r24
    17be:	24 f0       	brlt	.+8      	; 0x17c8 <state_check+0x4e>
    17c0:	81 e0       	ldi	r24, 0x01	; 1
    17c2:	80 93 23 21 	sts	0x2123, r24	; 0x802123 <state>
    17c6:	24 c0       	rjmp	.+72     	; 0x1810 <state_check+0x96>
    17c8:	82 e0       	ldi	r24, 0x02	; 2
    17ca:	80 93 23 21 	sts	0x2123, r24	; 0x802123 <state>
    17ce:	20 c0       	rjmp	.+64     	; 0x1810 <state_check+0x96>
    17d0:	10 92 23 21 	sts	0x2123, r1	; 0x802123 <state>
    17d4:	20 e0       	ldi	r18, 0x00	; 0
    17d6:	30 e0       	ldi	r19, 0x00	; 0
    17d8:	48 e4       	ldi	r20, 0x48	; 72
    17da:	52 e4       	ldi	r21, 0x42	; 66
    17dc:	60 91 f7 20 	lds	r22, 0x20F7	; 0x8020f7 <alt>
    17e0:	70 91 f8 20 	lds	r23, 0x20F8	; 0x8020f8 <alt+0x1>
    17e4:	80 91 f9 20 	lds	r24, 0x20F9	; 0x8020f9 <alt+0x2>
    17e8:	90 91 fa 20 	lds	r25, 0x20FA	; 0x8020fa <alt+0x3>
    17ec:	0e 94 05 18 	call	0x300a	; 0x300a <__gesf2>
    17f0:	18 16       	cp	r1, r24
    17f2:	24 f0       	brlt	.+8      	; 0x17fc <state_check+0x82>
    17f4:	80 91 21 21 	lds	r24, 0x2121	; 0x802121 <reset_received>
    17f8:	88 23       	and	r24, r24
    17fa:	19 f0       	breq	.+6      	; 0x1802 <state_check+0x88>
    17fc:	81 e0       	ldi	r24, 0x01	; 1
    17fe:	80 93 23 21 	sts	0x2123, r24	; 0x802123 <state>
    1802:	80 91 22 21 	lds	r24, 0x2122	; 0x802122 <released>
    1806:	88 23       	and	r24, r24
    1808:	19 f0       	breq	.+6      	; 0x1810 <state_check+0x96>
    180a:	83 e0       	ldi	r24, 0x03	; 3
    180c:	80 93 23 21 	sts	0x2123, r24	; 0x802123 <state>
    1810:	ff 90       	pop	r15
    1812:	ef 90       	pop	r14
    1814:	df 90       	pop	r13
    1816:	cf 90       	pop	r12
    1818:	08 95       	ret

0000181a <servo_pid>:
    181a:	8f 92       	push	r8
    181c:	9f 92       	push	r9
    181e:	af 92       	push	r10
    1820:	bf 92       	push	r11
    1822:	cf 92       	push	r12
    1824:	df 92       	push	r13
    1826:	ef 92       	push	r14
    1828:	ff 92       	push	r15
    182a:	0f 93       	push	r16
    182c:	1f 93       	push	r17
    182e:	cf 93       	push	r28
    1830:	df 93       	push	r29
    1832:	7c 01       	movw	r14, r24
    1834:	c0 e0       	ldi	r28, 0x00	; 0
    1836:	d0 e0       	ldi	r29, 0x00	; 0
    1838:	00 e0       	ldi	r16, 0x00	; 0
    183a:	10 e0       	ldi	r17, 0x00	; 0
    183c:	be 01       	movw	r22, r28
    183e:	c7 01       	movw	r24, r14
    1840:	e4 da       	rcall	.-2616   	; 0xe0a <rb16_get_nth>
    1842:	08 0f       	add	r16, r24
    1844:	19 1f       	adc	r17, r25
    1846:	21 96       	adiw	r28, 0x01	; 1
    1848:	ca 30       	cpi	r28, 0x0A	; 10
    184a:	d1 05       	cpc	r29, r1
    184c:	b9 f7       	brne	.-18     	; 0x183c <servo_pid+0x22>
    184e:	60 e0       	ldi	r22, 0x00	; 0
    1850:	70 e0       	ldi	r23, 0x00	; 0
    1852:	c7 01       	movw	r24, r14
    1854:	da da       	rcall	.-2636   	; 0xe0a <rb16_get_nth>
    1856:	ec 01       	movw	r28, r24
    1858:	60 91 19 20 	lds	r22, 0x2019	; 0x802019 <rate>
    185c:	c7 01       	movw	r24, r14
    185e:	5f dd       	rcall	.-1346   	; 0x131e <diff>
    1860:	6b 01       	movw	r12, r22
    1862:	7c 01       	movw	r14, r24
    1864:	be 01       	movw	r22, r28
    1866:	dd 0f       	add	r29, r29
    1868:	88 0b       	sbc	r24, r24
    186a:	99 0b       	sbc	r25, r25
    186c:	0e 94 45 17 	call	0x2e8a	; 0x2e8a <__floatsisf>
    1870:	20 e0       	ldi	r18, 0x00	; 0
    1872:	30 e0       	ldi	r19, 0x00	; 0
    1874:	a9 01       	movw	r20, r18
    1876:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    187a:	20 e0       	ldi	r18, 0x00	; 0
    187c:	30 e0       	ldi	r19, 0x00	; 0
    187e:	48 ec       	ldi	r20, 0xC8	; 200
    1880:	52 e4       	ldi	r21, 0x42	; 66
    1882:	0e 94 70 16 	call	0x2ce0	; 0x2ce0 <__divsf3>
    1886:	4b 01       	movw	r8, r22
    1888:	5c 01       	movw	r10, r24
    188a:	b8 01       	movw	r22, r16
    188c:	11 0f       	add	r17, r17
    188e:	88 0b       	sbc	r24, r24
    1890:	99 0b       	sbc	r25, r25
    1892:	0e 94 45 17 	call	0x2e8a	; 0x2e8a <__floatsisf>
    1896:	20 e0       	ldi	r18, 0x00	; 0
    1898:	30 e0       	ldi	r19, 0x00	; 0
    189a:	a9 01       	movw	r20, r18
    189c:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    18a0:	20 e0       	ldi	r18, 0x00	; 0
    18a2:	30 e0       	ldi	r19, 0x00	; 0
    18a4:	48 ec       	ldi	r20, 0xC8	; 200
    18a6:	52 e4       	ldi	r21, 0x42	; 66
    18a8:	0e 94 70 16 	call	0x2ce0	; 0x2ce0 <__divsf3>
    18ac:	9b 01       	movw	r18, r22
    18ae:	ac 01       	movw	r20, r24
    18b0:	c5 01       	movw	r24, r10
    18b2:	b4 01       	movw	r22, r8
    18b4:	0e 94 08 16 	call	0x2c10	; 0x2c10 <__addsf3>
    18b8:	4b 01       	movw	r8, r22
    18ba:	5c 01       	movw	r10, r24
    18bc:	20 e0       	ldi	r18, 0x00	; 0
    18be:	30 e0       	ldi	r19, 0x00	; 0
    18c0:	a9 01       	movw	r20, r18
    18c2:	c7 01       	movw	r24, r14
    18c4:	b6 01       	movw	r22, r12
    18c6:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    18ca:	9b 01       	movw	r18, r22
    18cc:	ac 01       	movw	r20, r24
    18ce:	c5 01       	movw	r24, r10
    18d0:	b4 01       	movw	r22, r8
    18d2:	0e 94 08 16 	call	0x2c10	; 0x2c10 <__addsf3>
    18d6:	20 e0       	ldi	r18, 0x00	; 0
    18d8:	30 e8       	ldi	r19, 0x80	; 128
    18da:	4b eb       	ldi	r20, 0xBB	; 187
    18dc:	54 e4       	ldi	r21, 0x44	; 68
    18de:	0e 94 08 16 	call	0x2c10	; 0x2c10 <__addsf3>
    18e2:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <__fixunssfsi>
    18e6:	60 93 1b 20 	sts	0x201B, r22	; 0x80201b <servo_pulse>
    18ea:	70 93 1c 20 	sts	0x201C, r23	; 0x80201c <servo_pulse+0x1>
    18ee:	80 e0       	ldi	r24, 0x00	; 0
    18f0:	90 e0       	ldi	r25, 0x00	; 0
    18f2:	0e 94 43 17 	call	0x2e86	; 0x2e86 <__floatunsisf>
    18f6:	20 e0       	ldi	r18, 0x00	; 0
    18f8:	30 e0       	ldi	r19, 0x00	; 0
    18fa:	4a e7       	ldi	r20, 0x7A	; 122
    18fc:	54 e4       	ldi	r21, 0x44	; 68
    18fe:	0e 94 70 16 	call	0x2ce0	; 0x2ce0 <__divsf3>
    1902:	20 e0       	ldi	r18, 0x00	; 0
    1904:	30 e0       	ldi	r19, 0x00	; 0
    1906:	4a ef       	ldi	r20, 0xFA	; 250
    1908:	53 e4       	ldi	r21, 0x43	; 67
    190a:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    190e:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <__fixunssfsi>
    1912:	60 93 28 09 	sts	0x0928, r22	; 0x800928 <__TEXT_REGION_LENGTH__+0x700928>
    1916:	70 93 29 09 	sts	0x0929, r23	; 0x800929 <__TEXT_REGION_LENGTH__+0x700929>
    191a:	df 91       	pop	r29
    191c:	cf 91       	pop	r28
    191e:	1f 91       	pop	r17
    1920:	0f 91       	pop	r16
    1922:	ff 90       	pop	r15
    1924:	ef 90       	pop	r14
    1926:	df 90       	pop	r13
    1928:	cf 90       	pop	r12
    192a:	bf 90       	pop	r11
    192c:	af 90       	pop	r10
    192e:	9f 90       	pop	r9
    1930:	8f 90       	pop	r8
    1932:	08 95       	ret

00001934 <clock_init>:
    1934:	61 e0       	ldi	r22, 0x01	; 1
    1936:	85 e0       	ldi	r24, 0x05	; 5
    1938:	5a db       	rcall	.-2380   	; 0xfee <sysclk_enable_module>
    193a:	e0 e0       	ldi	r30, 0x00	; 0
    193c:	fa e0       	ldi	r31, 0x0A	; 10
    193e:	87 e0       	ldi	r24, 0x07	; 7
    1940:	80 83       	st	Z, r24
    1942:	81 e1       	ldi	r24, 0x11	; 17
    1944:	9a e7       	ldi	r25, 0x7A	; 122
    1946:	86 a3       	std	Z+38, r24	; 0x26
    1948:	97 a3       	std	Z+39, r25	; 0x27
    194a:	81 e0       	ldi	r24, 0x01	; 1
    194c:	86 83       	std	Z+6, r24	; 0x06
    194e:	08 95       	ret

00001950 <cali_alt>:
    1950:	80 91 ff 20 	lds	r24, 0x20FF	; 0x8020ff <press>
    1954:	90 91 00 21 	lds	r25, 0x2100	; 0x802100 <press+0x1>
    1958:	a0 91 01 21 	lds	r26, 0x2101	; 0x802101 <press+0x2>
    195c:	b0 91 02 21 	lds	r27, 0x2102	; 0x802102 <press+0x3>
    1960:	80 93 2d 20 	sts	0x202D, r24	; 0x80202d <ground_p>
    1964:	90 93 2e 20 	sts	0x202E, r25	; 0x80202e <ground_p+0x1>
    1968:	a0 93 2f 20 	sts	0x202F, r26	; 0x80202f <ground_p+0x2>
    196c:	b0 93 30 20 	sts	0x2030, r27	; 0x802030 <ground_p+0x3>
    1970:	83 e3       	ldi	r24, 0x33	; 51
    1972:	93 e9       	ldi	r25, 0x93	; 147
    1974:	a7 e9       	ldi	r26, 0x97	; 151
    1976:	b3 e4       	ldi	r27, 0x43	; 67
    1978:	80 93 29 20 	sts	0x2029, r24	; 0x802029 <ground_t>
    197c:	90 93 2a 20 	sts	0x202A, r25	; 0x80202a <ground_t+0x1>
    1980:	a0 93 2b 20 	sts	0x202B, r26	; 0x80202b <ground_t+0x2>
    1984:	b0 93 2c 20 	sts	0x202C, r27	; 0x80202c <ground_t+0x3>
    1988:	08 95       	ret

0000198a <send_gps>:
    198a:	8f 92       	push	r8
    198c:	9f 92       	push	r9
    198e:	af 92       	push	r10
    1990:	bf 92       	push	r11
    1992:	cf 92       	push	r12
    1994:	df 92       	push	r13
    1996:	ef 92       	push	r14
    1998:	ff 92       	push	r15
    199a:	0f 93       	push	r16
    199c:	1f 93       	push	r17
    199e:	cf 93       	push	r28
    19a0:	df 93       	push	r29
    19a2:	cd b7       	in	r28, 0x3d	; 61
    19a4:	de b7       	in	r29, 0x3e	; 62
    19a6:	c6 54       	subi	r28, 0x46	; 70
    19a8:	d1 09       	sbc	r29, r1
    19aa:	cd bf       	out	0x3d, r28	; 61
    19ac:	de bf       	out	0x3e, r29	; 62
    19ae:	60 91 e3 20 	lds	r22, 0x20E3	; 0x8020e3 <gps_long>
    19b2:	70 91 e4 20 	lds	r23, 0x20E4	; 0x8020e4 <gps_long+0x1>
    19b6:	80 91 e5 20 	lds	r24, 0x20E5	; 0x8020e5 <gps_long+0x2>
    19ba:	90 91 e6 20 	lds	r25, 0x20E6	; 0x8020e6 <gps_long+0x3>
    19be:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    19c2:	16 2f       	mov	r17, r22
    19c4:	07 2f       	mov	r16, r23
    19c6:	c0 90 e7 20 	lds	r12, 0x20E7	; 0x8020e7 <gps_lat>
    19ca:	d0 90 e8 20 	lds	r13, 0x20E8	; 0x8020e8 <gps_lat+0x1>
    19ce:	e0 90 e9 20 	lds	r14, 0x20E9	; 0x8020e9 <gps_lat+0x2>
    19d2:	f0 90 ea 20 	lds	r15, 0x20EA	; 0x8020ea <gps_lat+0x3>
    19d6:	a6 2f       	mov	r26, r22
    19d8:	b7 2f       	mov	r27, r23
    19da:	bb 23       	and	r27, r27
    19dc:	1c f4       	brge	.+6      	; 0x19e4 <send_gps+0x5a>
    19de:	b1 95       	neg	r27
    19e0:	a1 95       	neg	r26
    19e2:	b1 09       	sbc	r27, r1
    19e4:	20 e4       	ldi	r18, 0x40	; 64
    19e6:	32 e4       	ldi	r19, 0x42	; 66
    19e8:	4f e0       	ldi	r20, 0x0F	; 15
    19ea:	50 e0       	ldi	r21, 0x00	; 0
    19ec:	0e 94 5e 1a 	call	0x34bc	; 0x34bc <__mulshisi3>
    19f0:	0f 2e       	mov	r0, r31
    19f2:	f0 e4       	ldi	r31, 0x40	; 64
    19f4:	8f 2e       	mov	r8, r31
    19f6:	f2 e4       	ldi	r31, 0x42	; 66
    19f8:	9f 2e       	mov	r9, r31
    19fa:	ff e0       	ldi	r31, 0x0F	; 15
    19fc:	af 2e       	mov	r10, r31
    19fe:	b1 2c       	mov	r11, r1
    1a00:	f0 2d       	mov	r31, r0
    1a02:	0e 94 29 1a 	call	0x3452	; 0x3452 <__divmodsi4>
    1a06:	9f 93       	push	r25
    1a08:	8f 93       	push	r24
    1a0a:	7f 93       	push	r23
    1a0c:	6f 93       	push	r22
    1a0e:	0f 93       	push	r16
    1a10:	1f 93       	push	r17
    1a12:	20 e0       	ldi	r18, 0x00	; 0
    1a14:	34 e2       	ldi	r19, 0x24	; 36
    1a16:	44 e7       	ldi	r20, 0x74	; 116
    1a18:	59 e4       	ldi	r21, 0x49	; 73
    1a1a:	c7 01       	movw	r24, r14
    1a1c:	b6 01       	movw	r22, r12
    1a1e:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    1a22:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    1a26:	a5 01       	movw	r20, r10
    1a28:	94 01       	movw	r18, r8
    1a2a:	0e 94 29 1a 	call	0x3452	; 0x3452 <__divmodsi4>
    1a2e:	9f 93       	push	r25
    1a30:	8f 93       	push	r24
    1a32:	7f 93       	push	r23
    1a34:	6f 93       	push	r22
    1a36:	c7 01       	movw	r24, r14
    1a38:	b6 01       	movw	r22, r12
    1a3a:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    1a3e:	7f 93       	push	r23
    1a40:	6f 93       	push	r22
    1a42:	80 91 15 20 	lds	r24, 0x2015	; 0x802015 <gps_msg+0x1>
    1a46:	8f 93       	push	r24
    1a48:	80 91 14 20 	lds	r24, 0x2014	; 0x802014 <gps_msg>
    1a4c:	8f 93       	push	r24
    1a4e:	8e 01       	movw	r16, r28
    1a50:	0f 5f       	subi	r16, 0xFF	; 255
    1a52:	1f 4f       	sbci	r17, 0xFF	; 255
    1a54:	1f 93       	push	r17
    1a56:	0f 93       	push	r16
    1a58:	0e 94 df 1a 	call	0x35be	; 0x35be <sprintf>
    1a5c:	1f 93       	push	r17
    1a5e:	0f 93       	push	r16
    1a60:	0e 94 cc 1a 	call	0x3598	; 0x3598 <printf>
    1a64:	cd bf       	out	0x3d, r28	; 61
    1a66:	de bf       	out	0x3e, r29	; 62
    1a68:	ca 5b       	subi	r28, 0xBA	; 186
    1a6a:	df 4f       	sbci	r29, 0xFF	; 255
    1a6c:	cd bf       	out	0x3d, r28	; 61
    1a6e:	de bf       	out	0x3e, r29	; 62
    1a70:	df 91       	pop	r29
    1a72:	cf 91       	pop	r28
    1a74:	1f 91       	pop	r17
    1a76:	0f 91       	pop	r16
    1a78:	ff 90       	pop	r15
    1a7a:	ef 90       	pop	r14
    1a7c:	df 90       	pop	r13
    1a7e:	cf 90       	pop	r12
    1a80:	bf 90       	pop	r11
    1a82:	af 90       	pop	r10
    1a84:	9f 90       	pop	r9
    1a86:	8f 90       	pop	r8
    1a88:	08 95       	ret

00001a8a <packet>:
    1a8a:	2f 92       	push	r2
    1a8c:	3f 92       	push	r3
    1a8e:	4f 92       	push	r4
    1a90:	5f 92       	push	r5
    1a92:	6f 92       	push	r6
    1a94:	7f 92       	push	r7
    1a96:	8f 92       	push	r8
    1a98:	9f 92       	push	r9
    1a9a:	af 92       	push	r10
    1a9c:	bf 92       	push	r11
    1a9e:	cf 92       	push	r12
    1aa0:	df 92       	push	r13
    1aa2:	ef 92       	push	r14
    1aa4:	ff 92       	push	r15
    1aa6:	0f 93       	push	r16
    1aa8:	1f 93       	push	r17
    1aaa:	cf 93       	push	r28
    1aac:	df 93       	push	r29
    1aae:	00 91 03 21 	lds	r16, 0x2103	; 0x802103 <packets>
    1ab2:	10 91 04 21 	lds	r17, 0x2104	; 0x802104 <packets+0x1>
    1ab6:	0f 5f       	subi	r16, 0xFF	; 255
    1ab8:	1f 4f       	sbci	r17, 0xFF	; 255
    1aba:	00 93 03 21 	sts	0x2103, r16	; 0x802103 <packets>
    1abe:	10 93 04 21 	sts	0x2104, r17	; 0x802104 <packets+0x1>
    1ac2:	60 91 df 20 	lds	r22, 0x20DF	; 0x8020df <gps_alt>
    1ac6:	70 91 e0 20 	lds	r23, 0x20E0	; 0x8020e0 <gps_alt+0x1>
    1aca:	80 91 e1 20 	lds	r24, 0x20E1	; 0x8020e1 <gps_alt+0x2>
    1ace:	90 91 e2 20 	lds	r25, 0x20E2	; 0x8020e2 <gps_alt+0x3>
    1ad2:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    1ad6:	36 2e       	mov	r3, r22
    1ad8:	27 2e       	mov	r2, r23
    1ada:	40 90 e3 20 	lds	r4, 0x20E3	; 0x8020e3 <gps_long>
    1ade:	50 90 e4 20 	lds	r5, 0x20E4	; 0x8020e4 <gps_long+0x1>
    1ae2:	60 90 e5 20 	lds	r6, 0x20E5	; 0x8020e5 <gps_long+0x2>
    1ae6:	70 90 e6 20 	lds	r7, 0x20E6	; 0x8020e6 <gps_long+0x3>
    1aea:	80 90 e7 20 	lds	r8, 0x20E7	; 0x8020e7 <gps_lat>
    1aee:	90 90 e8 20 	lds	r9, 0x20E8	; 0x8020e8 <gps_lat+0x1>
    1af2:	a0 90 e9 20 	lds	r10, 0x20E9	; 0x8020e9 <gps_lat+0x2>
    1af6:	b0 90 ea 20 	lds	r11, 0x20EA	; 0x8020ea <gps_lat+0x3>
    1afa:	60 91 eb 20 	lds	r22, 0x20EB	; 0x8020eb <gps_t>
    1afe:	70 91 ec 20 	lds	r23, 0x20EC	; 0x8020ec <gps_t+0x1>
    1b02:	80 91 ed 20 	lds	r24, 0x20ED	; 0x8020ed <gps_t+0x2>
    1b06:	90 91 ee 20 	lds	r25, 0x20EE	; 0x8020ee <gps_t+0x3>
    1b0a:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    1b0e:	6b 01       	movw	r12, r22
    1b10:	7c 01       	movw	r14, r24
    1b12:	c0 91 07 21 	lds	r28, 0x2107	; 0x802107 <timer>
    1b16:	d0 91 08 21 	lds	r29, 0x2108	; 0x802108 <timer+0x1>
    1b1a:	60 91 cd 20 	lds	r22, 0x20CD	; 0x8020cd <angle>
    1b1e:	70 91 ce 20 	lds	r23, 0x20CE	; 0x8020ce <angle+0x1>
    1b22:	80 91 cf 20 	lds	r24, 0x20CF	; 0x8020cf <angle+0x2>
    1b26:	90 91 d0 20 	lds	r25, 0x20D0	; 0x8020d0 <angle+0x3>
    1b2a:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    1b2e:	7f 93       	push	r23
    1b30:	6f 93       	push	r22
    1b32:	80 91 23 21 	lds	r24, 0x2123	; 0x802123 <state>
    1b36:	1f 92       	push	r1
    1b38:	8f 93       	push	r24
    1b3a:	60 91 d1 20 	lds	r22, 0x20D1	; 0x8020d1 <rpm>
    1b3e:	70 91 d2 20 	lds	r23, 0x20D2	; 0x8020d2 <rpm+0x1>
    1b42:	80 91 d3 20 	lds	r24, 0x20D3	; 0x8020d3 <rpm+0x2>
    1b46:	90 91 d4 20 	lds	r25, 0x20D4	; 0x8020d4 <rpm+0x3>
    1b4a:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    1b4e:	7f 93       	push	r23
    1b50:	6f 93       	push	r22
    1b52:	60 91 d5 20 	lds	r22, 0x20D5	; 0x8020d5 <roll>
    1b56:	70 91 d6 20 	lds	r23, 0x20D6	; 0x8020d6 <roll+0x1>
    1b5a:	80 91 d7 20 	lds	r24, 0x20D7	; 0x8020d7 <roll+0x2>
    1b5e:	90 91 d8 20 	lds	r25, 0x20D8	; 0x8020d8 <roll+0x3>
    1b62:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    1b66:	7f 93       	push	r23
    1b68:	6f 93       	push	r22
    1b6a:	60 91 d9 20 	lds	r22, 0x20D9	; 0x8020d9 <pitch>
    1b6e:	70 91 da 20 	lds	r23, 0x20DA	; 0x8020da <pitch+0x1>
    1b72:	80 91 db 20 	lds	r24, 0x20DB	; 0x8020db <pitch+0x2>
    1b76:	90 91 dc 20 	lds	r25, 0x20DC	; 0x8020dc <pitch+0x3>
    1b7a:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    1b7e:	7f 93       	push	r23
    1b80:	6f 93       	push	r22
    1b82:	80 91 de 20 	lds	r24, 0x20DE	; 0x8020de <gps_sats+0x1>
    1b86:	8f 93       	push	r24
    1b88:	80 91 dd 20 	lds	r24, 0x20DD	; 0x8020dd <gps_sats>
    1b8c:	8f 93       	push	r24
    1b8e:	83 2d       	mov	r24, r3
    1b90:	92 2d       	mov	r25, r2
    1b92:	88 0f       	add	r24, r24
    1b94:	99 1f       	adc	r25, r25
    1b96:	9c 01       	movw	r18, r24
    1b98:	22 0f       	add	r18, r18
    1b9a:	33 1f       	adc	r19, r19
    1b9c:	22 0f       	add	r18, r18
    1b9e:	33 1f       	adc	r19, r19
    1ba0:	82 0f       	add	r24, r18
    1ba2:	93 1f       	adc	r25, r19
    1ba4:	6a e0       	ldi	r22, 0x0A	; 10
    1ba6:	70 e0       	ldi	r23, 0x00	; 0
    1ba8:	0e 94 f4 19 	call	0x33e8	; 0x33e8 <__divmodhi4>
    1bac:	9f 93       	push	r25
    1bae:	8f 93       	push	r24
    1bb0:	2f 92       	push	r2
    1bb2:	3f 92       	push	r3
    1bb4:	20 e0       	ldi	r18, 0x00	; 0
    1bb6:	34 e2       	ldi	r19, 0x24	; 36
    1bb8:	44 e7       	ldi	r20, 0x74	; 116
    1bba:	59 e4       	ldi	r21, 0x49	; 73
    1bbc:	c3 01       	movw	r24, r6
    1bbe:	b2 01       	movw	r22, r4
    1bc0:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    1bc4:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    1bc8:	20 e4       	ldi	r18, 0x40	; 64
    1bca:	32 e4       	ldi	r19, 0x42	; 66
    1bcc:	4f e0       	ldi	r20, 0x0F	; 15
    1bce:	50 e0       	ldi	r21, 0x00	; 0
    1bd0:	0e 94 29 1a 	call	0x3452	; 0x3452 <__divmodsi4>
    1bd4:	9b 01       	movw	r18, r22
    1bd6:	77 23       	and	r23, r23
    1bd8:	24 f4       	brge	.+8      	; 0x1be2 <packet+0x158>
    1bda:	22 27       	eor	r18, r18
    1bdc:	33 27       	eor	r19, r19
    1bde:	26 1b       	sub	r18, r22
    1be0:	37 0b       	sbc	r19, r23
    1be2:	c9 01       	movw	r24, r18
    1be4:	33 0f       	add	r19, r19
    1be6:	aa 0b       	sbc	r26, r26
    1be8:	bb 0b       	sbc	r27, r27
    1bea:	bf 93       	push	r27
    1bec:	af 93       	push	r26
    1bee:	9f 93       	push	r25
    1bf0:	8f 93       	push	r24
    1bf2:	c3 01       	movw	r24, r6
    1bf4:	b2 01       	movw	r22, r4
    1bf6:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    1bfa:	7f 93       	push	r23
    1bfc:	6f 93       	push	r22
    1bfe:	20 e0       	ldi	r18, 0x00	; 0
    1c00:	34 e2       	ldi	r19, 0x24	; 36
    1c02:	44 e7       	ldi	r20, 0x74	; 116
    1c04:	59 e4       	ldi	r21, 0x49	; 73
    1c06:	c5 01       	movw	r24, r10
    1c08:	b4 01       	movw	r22, r8
    1c0a:	0e 94 09 18 	call	0x3012	; 0x3012 <__mulsf3>
    1c0e:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    1c12:	20 e4       	ldi	r18, 0x40	; 64
    1c14:	32 e4       	ldi	r19, 0x42	; 66
    1c16:	4f e0       	ldi	r20, 0x0F	; 15
    1c18:	50 e0       	ldi	r21, 0x00	; 0
    1c1a:	0e 94 29 1a 	call	0x3452	; 0x3452 <__divmodsi4>
    1c1e:	9f 93       	push	r25
    1c20:	8f 93       	push	r24
    1c22:	7f 93       	push	r23
    1c24:	6f 93       	push	r22
    1c26:	c5 01       	movw	r24, r10
    1c28:	b4 01       	movw	r22, r8
    1c2a:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    1c2e:	7f 93       	push	r23
    1c30:	6f 93       	push	r22
    1c32:	0f 2e       	mov	r0, r31
    1c34:	f4 e6       	ldi	r31, 0x64	; 100
    1c36:	8f 2e       	mov	r8, r31
    1c38:	91 2c       	mov	r9, r1
    1c3a:	a1 2c       	mov	r10, r1
    1c3c:	b1 2c       	mov	r11, r1
    1c3e:	f0 2d       	mov	r31, r0
    1c40:	c7 01       	movw	r24, r14
    1c42:	b6 01       	movw	r22, r12
    1c44:	a5 01       	movw	r20, r10
    1c46:	94 01       	movw	r18, r8
    1c48:	0e 94 29 1a 	call	0x3452	; 0x3452 <__divmodsi4>
    1c4c:	7f 93       	push	r23
    1c4e:	6f 93       	push	r22
    1c50:	c7 01       	movw	r24, r14
    1c52:	b6 01       	movw	r22, r12
    1c54:	20 e1       	ldi	r18, 0x10	; 16
    1c56:	37 e2       	ldi	r19, 0x27	; 39
    1c58:	40 e0       	ldi	r20, 0x00	; 0
    1c5a:	50 e0       	ldi	r21, 0x00	; 0
    1c5c:	0e 94 29 1a 	call	0x3452	; 0x3452 <__divmodsi4>
    1c60:	f2 2e       	mov	r15, r18
    1c62:	e3 2e       	mov	r14, r19
    1c64:	a5 01       	movw	r20, r10
    1c66:	94 01       	movw	r18, r8
    1c68:	0e 94 29 1a 	call	0x3452	; 0x3452 <__divmodsi4>
    1c6c:	3f 93       	push	r19
    1c6e:	2f 93       	push	r18
    1c70:	ef 92       	push	r14
    1c72:	ff 92       	push	r15
    1c74:	60 91 f3 20 	lds	r22, 0x20F3	; 0x8020f3 <volt>
    1c78:	70 91 f4 20 	lds	r23, 0x20F4	; 0x8020f4 <volt+0x1>
    1c7c:	80 91 f5 20 	lds	r24, 0x20F5	; 0x8020f5 <volt+0x2>
    1c80:	90 91 f6 20 	lds	r25, 0x20F6	; 0x8020f6 <volt+0x3>
    1c84:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    1c88:	7f 93       	push	r23
    1c8a:	6f 93       	push	r22
    1c8c:	23 e3       	ldi	r18, 0x33	; 51
    1c8e:	33 e9       	ldi	r19, 0x93	; 147
    1c90:	48 e8       	ldi	r20, 0x88	; 136
    1c92:	53 e4       	ldi	r21, 0x43	; 67
    1c94:	60 91 fb 20 	lds	r22, 0x20FB	; 0x8020fb <temp>
    1c98:	70 91 fc 20 	lds	r23, 0x20FC	; 0x8020fc <temp+0x1>
    1c9c:	80 91 fd 20 	lds	r24, 0x20FD	; 0x8020fd <temp+0x2>
    1ca0:	90 91 fe 20 	lds	r25, 0x20FE	; 0x8020fe <temp+0x3>
    1ca4:	b4 d7       	rcall	.+3944   	; 0x2c0e <__subsf3>
    1ca6:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    1caa:	7f 93       	push	r23
    1cac:	6f 93       	push	r22
    1cae:	60 91 ff 20 	lds	r22, 0x20FF	; 0x8020ff <press>
    1cb2:	70 91 00 21 	lds	r23, 0x2100	; 0x802100 <press+0x1>
    1cb6:	80 91 01 21 	lds	r24, 0x2101	; 0x802101 <press+0x2>
    1cba:	90 91 02 21 	lds	r25, 0x2102	; 0x802102 <press+0x3>
    1cbe:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    1cc2:	9f 93       	push	r25
    1cc4:	8f 93       	push	r24
    1cc6:	7f 93       	push	r23
    1cc8:	6f 93       	push	r22
    1cca:	60 91 f7 20 	lds	r22, 0x20F7	; 0x8020f7 <alt>
    1cce:	70 91 f8 20 	lds	r23, 0x20F8	; 0x8020f8 <alt+0x1>
    1cd2:	80 91 f9 20 	lds	r24, 0x20F9	; 0x8020f9 <alt+0x2>
    1cd6:	90 91 fa 20 	lds	r25, 0x20FA	; 0x8020fa <alt+0x3>
    1cda:	0e 94 12 17 	call	0x2e24	; 0x2e24 <__fixsfsi>
    1cde:	7f 93       	push	r23
    1ce0:	6f 93       	push	r22
    1ce2:	1f 93       	push	r17
    1ce4:	0f 93       	push	r16
    1ce6:	9e 01       	movw	r18, r28
    1ce8:	ad ec       	ldi	r26, 0xCD	; 205
    1cea:	bc ec       	ldi	r27, 0xCC	; 204
    1cec:	0e 94 45 1a 	call	0x348a	; 0x348a <__umulhisi3>
    1cf0:	96 95       	lsr	r25
    1cf2:	87 95       	ror	r24
    1cf4:	96 95       	lsr	r25
    1cf6:	87 95       	ror	r24
    1cf8:	96 95       	lsr	r25
    1cfa:	87 95       	ror	r24
    1cfc:	9c 01       	movw	r18, r24
    1cfe:	22 0f       	add	r18, r18
    1d00:	33 1f       	adc	r19, r19
    1d02:	88 0f       	add	r24, r24
    1d04:	99 1f       	adc	r25, r25
    1d06:	88 0f       	add	r24, r24
    1d08:	99 1f       	adc	r25, r25
    1d0a:	88 0f       	add	r24, r24
    1d0c:	99 1f       	adc	r25, r25
    1d0e:	82 0f       	add	r24, r18
    1d10:	93 1f       	adc	r25, r19
    1d12:	9e 01       	movw	r18, r28
    1d14:	28 1b       	sub	r18, r24
    1d16:	39 0b       	sbc	r19, r25
    1d18:	c9 01       	movw	r24, r18
    1d1a:	9f 93       	push	r25
    1d1c:	2f 93       	push	r18
    1d1e:	9e 01       	movw	r18, r28
    1d20:	0e 94 45 1a 	call	0x348a	; 0x348a <__umulhisi3>
    1d24:	96 95       	lsr	r25
    1d26:	87 95       	ror	r24
    1d28:	96 95       	lsr	r25
    1d2a:	87 95       	ror	r24
    1d2c:	96 95       	lsr	r25
    1d2e:	87 95       	ror	r24
    1d30:	9f 93       	push	r25
    1d32:	8f 93       	push	r24
    1d34:	80 91 18 20 	lds	r24, 0x2018	; 0x802018 <format+0x1>
    1d38:	8f 93       	push	r24
    1d3a:	80 91 17 20 	lds	r24, 0x2017	; 0x802017 <format>
    1d3e:	8f 93       	push	r24
    1d40:	c0 e4       	ldi	r28, 0x40	; 64
    1d42:	d1 e2       	ldi	r29, 0x21	; 33
    1d44:	df 93       	push	r29
    1d46:	cf 93       	push	r28
    1d48:	0e 94 df 1a 	call	0x35be	; 0x35be <sprintf>
    1d4c:	2d b7       	in	r18, 0x3d	; 61
    1d4e:	3e b7       	in	r19, 0x3e	; 62
    1d50:	2a 5c       	subi	r18, 0xCA	; 202
    1d52:	3f 4f       	sbci	r19, 0xFF	; 255
    1d54:	2d bf       	out	0x3d, r18	; 61
    1d56:	3e bf       	out	0x3e, r19	; 62
    1d58:	df 93       	push	r29
    1d5a:	cf 93       	push	r28
    1d5c:	0e 94 cc 1a 	call	0x3598	; 0x3598 <printf>
    1d60:	0f 90       	pop	r0
    1d62:	0f 90       	pop	r0
    1d64:	df 91       	pop	r29
    1d66:	cf 91       	pop	r28
    1d68:	1f 91       	pop	r17
    1d6a:	0f 91       	pop	r16
    1d6c:	ff 90       	pop	r15
    1d6e:	ef 90       	pop	r14
    1d70:	df 90       	pop	r13
    1d72:	cf 90       	pop	r12
    1d74:	bf 90       	pop	r11
    1d76:	af 90       	pop	r10
    1d78:	9f 90       	pop	r9
    1d7a:	8f 90       	pop	r8
    1d7c:	7f 90       	pop	r7
    1d7e:	6f 90       	pop	r6
    1d80:	5f 90       	pop	r5
    1d82:	4f 90       	pop	r4
    1d84:	3f 90       	pop	r3
    1d86:	2f 90       	pop	r2
    1d88:	08 95       	ret

00001d8a <eeprom_write_const>:
    1d8a:	5f 92       	push	r5
    1d8c:	6f 92       	push	r6
    1d8e:	7f 92       	push	r7
    1d90:	8f 92       	push	r8
    1d92:	9f 92       	push	r9
    1d94:	af 92       	push	r10
    1d96:	bf 92       	push	r11
    1d98:	cf 92       	push	r12
    1d9a:	df 92       	push	r13
    1d9c:	ef 92       	push	r14
    1d9e:	ff 92       	push	r15
    1da0:	0f 93       	push	r16
    1da2:	1f 93       	push	r17
    1da4:	cf 93       	push	r28
    1da6:	df 93       	push	r29
    1da8:	cd b7       	in	r28, 0x3d	; 61
    1daa:	de b7       	in	r29, 0x3e	; 62
    1dac:	a0 97       	sbiw	r28, 0x20	; 32
    1dae:	cd bf       	out	0x3d, r28	; 61
    1db0:	de bf       	out	0x3e, r29	; 62
    1db2:	60 91 2d 20 	lds	r22, 0x202D	; 0x80202d <ground_p>
    1db6:	70 91 2e 20 	lds	r23, 0x202E	; 0x80202e <ground_p+0x1>
    1dba:	80 91 2f 20 	lds	r24, 0x202F	; 0x80202f <ground_p+0x2>
    1dbe:	90 91 30 20 	lds	r25, 0x2030	; 0x802030 <ground_p+0x3>
    1dc2:	fb d7       	rcall	.+4086   	; 0x2dba <__fixunssfdi>
    1dc4:	12 2f       	mov	r17, r18
    1dc6:	63 2e       	mov	r6, r19
    1dc8:	74 2e       	mov	r7, r20
    1dca:	85 2e       	mov	r8, r21
    1dcc:	96 2e       	mov	r9, r22
    1dce:	a7 2e       	mov	r10, r23
    1dd0:	b8 2e       	mov	r11, r24
    1dd2:	c9 2e       	mov	r12, r25
    1dd4:	60 91 29 20 	lds	r22, 0x2029	; 0x802029 <ground_t>
    1dd8:	70 91 2a 20 	lds	r23, 0x202A	; 0x80202a <ground_t+0x1>
    1ddc:	80 91 2b 20 	lds	r24, 0x202B	; 0x80202b <ground_t+0x2>
    1de0:	90 91 2c 20 	lds	r25, 0x202C	; 0x80202c <ground_t+0x3>
    1de4:	ea d7       	rcall	.+4052   	; 0x2dba <__fixunssfdi>
    1de6:	e2 2f       	mov	r30, r18
    1de8:	53 2e       	mov	r5, r19
    1dea:	d4 2e       	mov	r13, r20
    1dec:	e5 2e       	mov	r14, r21
    1dee:	f6 2e       	mov	r15, r22
    1df0:	b7 2f       	mov	r27, r23
    1df2:	a8 2f       	mov	r26, r24
    1df4:	f9 2f       	mov	r31, r25
    1df6:	19 83       	std	Y+1, r17	; 0x01
    1df8:	21 2f       	mov	r18, r17
    1dfa:	36 2d       	mov	r19, r6
    1dfc:	47 2d       	mov	r20, r7
    1dfe:	58 2d       	mov	r21, r8
    1e00:	69 2d       	mov	r22, r9
    1e02:	7a 2d       	mov	r23, r10
    1e04:	8b 2d       	mov	r24, r11
    1e06:	9c 2d       	mov	r25, r12
    1e08:	08 e0       	ldi	r16, 0x08	; 8
    1e0a:	0e 94 66 1a 	call	0x34cc	; 0x34cc <__lshrdi3>
    1e0e:	2a 83       	std	Y+2, r18	; 0x02
    1e10:	21 2f       	mov	r18, r17
    1e12:	36 2d       	mov	r19, r6
    1e14:	47 2d       	mov	r20, r7
    1e16:	58 2d       	mov	r21, r8
    1e18:	69 2d       	mov	r22, r9
    1e1a:	7a 2d       	mov	r23, r10
    1e1c:	8b 2d       	mov	r24, r11
    1e1e:	9c 2d       	mov	r25, r12
    1e20:	00 e1       	ldi	r16, 0x10	; 16
    1e22:	0e 94 66 1a 	call	0x34cc	; 0x34cc <__lshrdi3>
    1e26:	2b 83       	std	Y+3, r18	; 0x03
    1e28:	21 2f       	mov	r18, r17
    1e2a:	36 2d       	mov	r19, r6
    1e2c:	47 2d       	mov	r20, r7
    1e2e:	58 2d       	mov	r21, r8
    1e30:	69 2d       	mov	r22, r9
    1e32:	7a 2d       	mov	r23, r10
    1e34:	8b 2d       	mov	r24, r11
    1e36:	9c 2d       	mov	r25, r12
    1e38:	08 e1       	ldi	r16, 0x18	; 24
    1e3a:	0e 94 66 1a 	call	0x34cc	; 0x34cc <__lshrdi3>
    1e3e:	2c 83       	std	Y+4, r18	; 0x04
    1e40:	21 2f       	mov	r18, r17
    1e42:	36 2d       	mov	r19, r6
    1e44:	47 2d       	mov	r20, r7
    1e46:	58 2d       	mov	r21, r8
    1e48:	69 2d       	mov	r22, r9
    1e4a:	7a 2d       	mov	r23, r10
    1e4c:	8b 2d       	mov	r24, r11
    1e4e:	9c 2d       	mov	r25, r12
    1e50:	00 e2       	ldi	r16, 0x20	; 32
    1e52:	0e 94 66 1a 	call	0x34cc	; 0x34cc <__lshrdi3>
    1e56:	2d 83       	std	Y+5, r18	; 0x05
    1e58:	21 2f       	mov	r18, r17
    1e5a:	36 2d       	mov	r19, r6
    1e5c:	47 2d       	mov	r20, r7
    1e5e:	58 2d       	mov	r21, r8
    1e60:	69 2d       	mov	r22, r9
    1e62:	7a 2d       	mov	r23, r10
    1e64:	8b 2d       	mov	r24, r11
    1e66:	9c 2d       	mov	r25, r12
    1e68:	08 e2       	ldi	r16, 0x28	; 40
    1e6a:	0e 94 66 1a 	call	0x34cc	; 0x34cc <__lshrdi3>
    1e6e:	2e 83       	std	Y+6, r18	; 0x06
    1e70:	21 2f       	mov	r18, r17
    1e72:	36 2d       	mov	r19, r6
    1e74:	47 2d       	mov	r20, r7
    1e76:	58 2d       	mov	r21, r8
    1e78:	69 2d       	mov	r22, r9
    1e7a:	7a 2d       	mov	r23, r10
    1e7c:	8b 2d       	mov	r24, r11
    1e7e:	9c 2d       	mov	r25, r12
    1e80:	00 e3       	ldi	r16, 0x30	; 48
    1e82:	0e 94 66 1a 	call	0x34cc	; 0x34cc <__lshrdi3>
    1e86:	2f 83       	std	Y+7, r18	; 0x07
    1e88:	21 2f       	mov	r18, r17
    1e8a:	36 2d       	mov	r19, r6
    1e8c:	47 2d       	mov	r20, r7
    1e8e:	58 2d       	mov	r21, r8
    1e90:	69 2d       	mov	r22, r9
    1e92:	7a 2d       	mov	r23, r10
    1e94:	8b 2d       	mov	r24, r11
    1e96:	9c 2d       	mov	r25, r12
    1e98:	08 e3       	ldi	r16, 0x38	; 56
    1e9a:	0e 94 66 1a 	call	0x34cc	; 0x34cc <__lshrdi3>
    1e9e:	28 87       	std	Y+8, r18	; 0x08
    1ea0:	e9 87       	std	Y+9, r30	; 0x09
    1ea2:	2e 2f       	mov	r18, r30
    1ea4:	35 2d       	mov	r19, r5
    1ea6:	4d 2d       	mov	r20, r13
    1ea8:	5e 2d       	mov	r21, r14
    1eaa:	6f 2d       	mov	r22, r15
    1eac:	7b 2f       	mov	r23, r27
    1eae:	8a 2f       	mov	r24, r26
    1eb0:	9f 2f       	mov	r25, r31
    1eb2:	08 e0       	ldi	r16, 0x08	; 8
    1eb4:	0e 94 66 1a 	call	0x34cc	; 0x34cc <__lshrdi3>
    1eb8:	2a 87       	std	Y+10, r18	; 0x0a
    1eba:	2e 2f       	mov	r18, r30
    1ebc:	35 2d       	mov	r19, r5
    1ebe:	4d 2d       	mov	r20, r13
    1ec0:	5e 2d       	mov	r21, r14
    1ec2:	6f 2d       	mov	r22, r15
    1ec4:	7b 2f       	mov	r23, r27
    1ec6:	8a 2f       	mov	r24, r26
    1ec8:	9f 2f       	mov	r25, r31
    1eca:	00 e1       	ldi	r16, 0x10	; 16
    1ecc:	0e 94 66 1a 	call	0x34cc	; 0x34cc <__lshrdi3>
    1ed0:	2b 87       	std	Y+11, r18	; 0x0b
    1ed2:	2e 2f       	mov	r18, r30
    1ed4:	35 2d       	mov	r19, r5
    1ed6:	4d 2d       	mov	r20, r13
    1ed8:	5e 2d       	mov	r21, r14
    1eda:	6f 2d       	mov	r22, r15
    1edc:	7b 2f       	mov	r23, r27
    1ede:	8a 2f       	mov	r24, r26
    1ee0:	9f 2f       	mov	r25, r31
    1ee2:	08 e1       	ldi	r16, 0x18	; 24
    1ee4:	0e 94 66 1a 	call	0x34cc	; 0x34cc <__lshrdi3>
    1ee8:	2c 87       	std	Y+12, r18	; 0x0c
    1eea:	2e 2f       	mov	r18, r30
    1eec:	35 2d       	mov	r19, r5
    1eee:	4d 2d       	mov	r20, r13
    1ef0:	5e 2d       	mov	r21, r14
    1ef2:	6f 2d       	mov	r22, r15
    1ef4:	7b 2f       	mov	r23, r27
    1ef6:	8a 2f       	mov	r24, r26
    1ef8:	9f 2f       	mov	r25, r31
    1efa:	00 e2       	ldi	r16, 0x20	; 32
    1efc:	0e 94 66 1a 	call	0x34cc	; 0x34cc <__lshrdi3>
    1f00:	2d 87       	std	Y+13, r18	; 0x0d
    1f02:	2e 2f       	mov	r18, r30
    1f04:	35 2d       	mov	r19, r5
    1f06:	4d 2d       	mov	r20, r13
    1f08:	5e 2d       	mov	r21, r14
    1f0a:	6f 2d       	mov	r22, r15
    1f0c:	7b 2f       	mov	r23, r27
    1f0e:	8a 2f       	mov	r24, r26
    1f10:	9f 2f       	mov	r25, r31
    1f12:	08 e2       	ldi	r16, 0x28	; 40
    1f14:	0e 94 66 1a 	call	0x34cc	; 0x34cc <__lshrdi3>
    1f18:	2e 87       	std	Y+14, r18	; 0x0e
    1f1a:	2e 2f       	mov	r18, r30
    1f1c:	35 2d       	mov	r19, r5
    1f1e:	4d 2d       	mov	r20, r13
    1f20:	5e 2d       	mov	r21, r14
    1f22:	6f 2d       	mov	r22, r15
    1f24:	7b 2f       	mov	r23, r27
    1f26:	8a 2f       	mov	r24, r26
    1f28:	9f 2f       	mov	r25, r31
    1f2a:	00 e3       	ldi	r16, 0x30	; 48
    1f2c:	0e 94 66 1a 	call	0x34cc	; 0x34cc <__lshrdi3>
    1f30:	2f 87       	std	Y+15, r18	; 0x0f
    1f32:	2e 2f       	mov	r18, r30
    1f34:	35 2d       	mov	r19, r5
    1f36:	4d 2d       	mov	r20, r13
    1f38:	5e 2d       	mov	r21, r14
    1f3a:	6f 2d       	mov	r22, r15
    1f3c:	7b 2f       	mov	r23, r27
    1f3e:	8a 2f       	mov	r24, r26
    1f40:	9f 2f       	mov	r25, r31
    1f42:	08 e3       	ldi	r16, 0x38	; 56
    1f44:	0e 94 66 1a 	call	0x34cc	; 0x34cc <__lshrdi3>
    1f48:	28 8b       	std	Y+16, r18	; 0x10
    1f4a:	80 e1       	ldi	r24, 0x10	; 16
    1f4c:	e1 e3       	ldi	r30, 0x31	; 49
    1f4e:	f0 e2       	ldi	r31, 0x20	; 32
    1f50:	de 01       	movw	r26, r28
    1f52:	51 96       	adiw	r26, 0x11	; 17
    1f54:	01 90       	ld	r0, Z+
    1f56:	0d 92       	st	X+, r0
    1f58:	8a 95       	dec	r24
    1f5a:	e1 f7       	brne	.-8      	; 0x1f54 <eeprom_write_const+0x1ca>
    1f5c:	83 e3       	ldi	r24, 0x33	; 51
    1f5e:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <__TEXT_REGION_LENGTH__+0x7001ca>
    1f62:	fe 01       	movw	r30, r28
    1f64:	71 96       	adiw	r30, 0x11	; 17
    1f66:	ce 01       	movw	r24, r28
    1f68:	01 96       	adiw	r24, 0x01	; 1
    1f6a:	ae 01       	movw	r20, r28
    1f6c:	4f 5d       	subi	r20, 0xDF	; 223
    1f6e:	5f 4f       	sbci	r21, 0xFF	; 255
    1f70:	60 ec       	ldi	r22, 0xC0	; 192
    1f72:	71 e0       	ldi	r23, 0x01	; 1
    1f74:	21 91       	ld	r18, Z+
    1f76:	db 01       	movw	r26, r22
    1f78:	2c 93       	st	X, r18
    1f7a:	dc 01       	movw	r26, r24
    1f7c:	2d 91       	ld	r18, X+
    1f7e:	cd 01       	movw	r24, r26
    1f80:	db 01       	movw	r26, r22
    1f82:	14 96       	adiw	r26, 0x04	; 4
    1f84:	2c 93       	st	X, r18
    1f86:	e4 17       	cp	r30, r20
    1f88:	f5 07       	cpc	r31, r21
    1f8a:	a1 f7       	brne	.-24     	; 0x1f74 <eeprom_write_const+0x1ea>
    1f8c:	e0 ec       	ldi	r30, 0xC0	; 192
    1f8e:	f1 e0       	ldi	r31, 0x01	; 1
    1f90:	85 e3       	ldi	r24, 0x35	; 53
    1f92:	82 87       	std	Z+10, r24	; 0x0a
    1f94:	10 82       	st	Z, r1
    1f96:	80 e1       	ldi	r24, 0x10	; 16
    1f98:	81 83       	std	Z+1, r24	; 0x01
    1f9a:	88 ed       	ldi	r24, 0xD8	; 216
    1f9c:	84 bf       	out	0x34, r24	; 52
    1f9e:	81 e0       	ldi	r24, 0x01	; 1
    1fa0:	83 87       	std	Z+11, r24	; 0x0b
    1fa2:	87 85       	ldd	r24, Z+15	; 0x0f
    1fa4:	88 23       	and	r24, r24
    1fa6:	ec f3       	brlt	.-6      	; 0x1fa2 <eeprom_write_const+0x218>
    1fa8:	a0 96       	adiw	r28, 0x20	; 32
    1faa:	cd bf       	out	0x3d, r28	; 61
    1fac:	de bf       	out	0x3e, r29	; 62
    1fae:	df 91       	pop	r29
    1fb0:	cf 91       	pop	r28
    1fb2:	1f 91       	pop	r17
    1fb4:	0f 91       	pop	r16
    1fb6:	ff 90       	pop	r15
    1fb8:	ef 90       	pop	r14
    1fba:	df 90       	pop	r13
    1fbc:	cf 90       	pop	r12
    1fbe:	bf 90       	pop	r11
    1fc0:	af 90       	pop	r10
    1fc2:	9f 90       	pop	r9
    1fc4:	8f 90       	pop	r8
    1fc6:	7f 90       	pop	r7
    1fc8:	6f 90       	pop	r6
    1fca:	5f 90       	pop	r5
    1fcc:	08 95       	ret

00001fce <system_init>:
    1fce:	0e 94 c2 07 	call	0xf84	; 0xf84 <sysclk_init>
    1fd2:	6b ea       	ldi	r22, 0xAB	; 171
    1fd4:	79 e2       	ldi	r23, 0x29	; 41
    1fd6:	80 e0       	ldi	r24, 0x00	; 0
    1fd8:	90 e0       	ldi	r25, 0x00	; 0
    1fda:	25 d8       	rcall	.-4022   	; 0x1026 <__portable_avr_delay_cycles>
    1fdc:	78 94       	sei
    1fde:	8c eb       	ldi	r24, 0xBC	; 188
    1fe0:	80 93 40 06 	sts	0x0640, r24	; 0x800640 <__TEXT_REGION_LENGTH__+0x700640>
    1fe4:	87 e0       	ldi	r24, 0x07	; 7
    1fe6:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7000a2>
    1fea:	0e 94 98 05 	call	0xb30	; 0xb30 <cam_init>
    1fee:	0e 94 76 06 	call	0xcec	; 0xcec <data_terminal_init>
    1ff2:	6b ea       	ldi	r22, 0xAB	; 171
    1ff4:	70 eb       	ldi	r23, 0xB0	; 176
    1ff6:	88 e2       	ldi	r24, 0x28	; 40
    1ff8:	90 e0       	ldi	r25, 0x00	; 0
    1ffa:	15 d8       	rcall	.-4054   	; 0x1026 <__portable_avr_delay_cycles>
    1ffc:	80 e2       	ldi	r24, 0x20	; 32
    1ffe:	80 93 a3 0a 	sts	0x0AA3, r24	; 0x800aa3 <__TEXT_REGION_LENGTH__+0x700aa3>
    2002:	63 d8       	rcall	.-3898   	; 0x10ca <gps_init>
    2004:	0e 94 4d 06 	call	0xc9a	; 0xc9a <spi_init>
    2008:	19 d8       	rcall	.-4046   	; 0x103c <pressure_init>
    200a:	0e 94 91 05 	call	0xb22	; 0xb22 <cam_switch>
    200e:	92 dc       	rcall	.-1756   	; 0x1934 <clock_init>
    2010:	66 e5       	ldi	r22, 0x56	; 86
    2012:	70 ed       	ldi	r23, 0xD0	; 208
    2014:	80 e0       	ldi	r24, 0x00	; 0
    2016:	90 e0       	ldi	r25, 0x00	; 0
    2018:	06 d8       	rcall	.-4084   	; 0x1026 <__portable_avr_delay_cycles>
    201a:	af db       	rcall	.-2210   	; 0x177a <state_check>
    201c:	6a d8       	rcall	.-3884   	; 0x10f2 <get_pressure>
    201e:	60 93 2d 20 	sts	0x202D, r22	; 0x80202d <ground_p>
    2022:	70 93 2e 20 	sts	0x202E, r23	; 0x80202e <ground_p+0x1>
    2026:	80 93 2f 20 	sts	0x202F, r24	; 0x80202f <ground_p+0x2>
    202a:	90 93 30 20 	sts	0x2030, r25	; 0x802030 <ground_p+0x3>
    202e:	83 e3       	ldi	r24, 0x33	; 51
    2030:	93 e9       	ldi	r25, 0x93	; 147
    2032:	a7 e9       	ldi	r26, 0x97	; 151
    2034:	b3 e4       	ldi	r27, 0x43	; 67
    2036:	80 93 29 20 	sts	0x2029, r24	; 0x802029 <ground_t>
    203a:	90 93 2a 20 	sts	0x202A, r25	; 0x80202a <ground_t+0x1>
    203e:	a0 93 2b 20 	sts	0x202B, r26	; 0x80202b <ground_t+0x2>
    2042:	b0 93 2c 20 	sts	0x202C, r27	; 0x80202c <ground_t+0x3>
    2046:	a1 ce       	rjmp	.-702    	; 0x1d8a <eeprom_write_const>
    2048:	08 95       	ret

0000204a <eeprom_write>:
    204a:	cf 93       	push	r28
    204c:	df 93       	push	r29
    204e:	cd b7       	in	r28, 0x3d	; 61
    2050:	de b7       	in	r29, 0x3e	; 62
    2052:	2c 97       	sbiw	r28, 0x0c	; 12
    2054:	cd bf       	out	0x3d, r28	; 61
    2056:	de bf       	out	0x3e, r29	; 62
    2058:	60 91 f7 20 	lds	r22, 0x20F7	; 0x8020f7 <alt>
    205c:	70 91 f8 20 	lds	r23, 0x20F8	; 0x8020f8 <alt+0x1>
    2060:	80 91 f9 20 	lds	r24, 0x20F9	; 0x8020f9 <alt+0x2>
    2064:	90 91 fa 20 	lds	r25, 0x20FA	; 0x8020fa <alt+0x3>
    2068:	dd d6       	rcall	.+3514   	; 0x2e24 <__fixsfsi>
    206a:	79 83       	std	Y+1, r23	; 0x01
    206c:	6a 83       	std	Y+2, r22	; 0x02
    206e:	80 91 03 21 	lds	r24, 0x2103	; 0x802103 <packets>
    2072:	90 91 04 21 	lds	r25, 0x2104	; 0x802104 <packets+0x1>
    2076:	9b 83       	std	Y+3, r25	; 0x03
    2078:	8c 83       	std	Y+4, r24	; 0x04
    207a:	80 91 07 21 	lds	r24, 0x2107	; 0x802107 <timer>
    207e:	90 91 08 21 	lds	r25, 0x2108	; 0x802108 <timer+0x1>
    2082:	9d 83       	std	Y+5, r25	; 0x05
    2084:	8e 83       	std	Y+6, r24	; 0x06
    2086:	86 e0       	ldi	r24, 0x06	; 6
    2088:	e1 e4       	ldi	r30, 0x41	; 65
    208a:	f0 e2       	ldi	r31, 0x20	; 32
    208c:	de 01       	movw	r26, r28
    208e:	17 96       	adiw	r26, 0x07	; 7
    2090:	01 90       	ld	r0, Z+
    2092:	0d 92       	st	X+, r0
    2094:	8a 95       	dec	r24
    2096:	e1 f7       	brne	.-8      	; 0x2090 <eeprom_write+0x46>
    2098:	83 e3       	ldi	r24, 0x33	; 51
    209a:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <__TEXT_REGION_LENGTH__+0x7001ca>
    209e:	fe 01       	movw	r30, r28
    20a0:	37 96       	adiw	r30, 0x07	; 7
    20a2:	ce 01       	movw	r24, r28
    20a4:	01 96       	adiw	r24, 0x01	; 1
    20a6:	ae 01       	movw	r20, r28
    20a8:	43 5f       	subi	r20, 0xF3	; 243
    20aa:	5f 4f       	sbci	r21, 0xFF	; 255
    20ac:	60 ec       	ldi	r22, 0xC0	; 192
    20ae:	71 e0       	ldi	r23, 0x01	; 1
    20b0:	21 91       	ld	r18, Z+
    20b2:	db 01       	movw	r26, r22
    20b4:	2c 93       	st	X, r18
    20b6:	dc 01       	movw	r26, r24
    20b8:	2d 91       	ld	r18, X+
    20ba:	cd 01       	movw	r24, r26
    20bc:	db 01       	movw	r26, r22
    20be:	14 96       	adiw	r26, 0x04	; 4
    20c0:	2c 93       	st	X, r18
    20c2:	e4 17       	cp	r30, r20
    20c4:	f5 07       	cpc	r31, r21
    20c6:	a1 f7       	brne	.-24     	; 0x20b0 <eeprom_write+0x66>
    20c8:	e0 ec       	ldi	r30, 0xC0	; 192
    20ca:	f1 e0       	ldi	r31, 0x01	; 1
    20cc:	85 e3       	ldi	r24, 0x35	; 53
    20ce:	82 87       	std	Z+10, r24	; 0x0a
    20d0:	10 82       	st	Z, r1
    20d2:	80 e1       	ldi	r24, 0x10	; 16
    20d4:	81 83       	std	Z+1, r24	; 0x01
    20d6:	88 ed       	ldi	r24, 0xD8	; 216
    20d8:	84 bf       	out	0x34, r24	; 52
    20da:	81 e0       	ldi	r24, 0x01	; 1
    20dc:	83 87       	std	Z+11, r24	; 0x0b
    20de:	87 85       	ldd	r24, Z+15	; 0x0f
    20e0:	88 23       	and	r24, r24
    20e2:	ec f3       	brlt	.-6      	; 0x20de <eeprom_write+0x94>
    20e4:	2c 96       	adiw	r28, 0x0c	; 12
    20e6:	cd bf       	out	0x3d, r28	; 61
    20e8:	de bf       	out	0x3e, r29	; 62
    20ea:	df 91       	pop	r29
    20ec:	cf 91       	pop	r28
    20ee:	08 95       	ret

000020f0 <time_update>:
    20f0:	2f 92       	push	r2
    20f2:	3f 92       	push	r3
    20f4:	4f 92       	push	r4
    20f6:	5f 92       	push	r5
    20f8:	6f 92       	push	r6
    20fa:	7f 92       	push	r7
    20fc:	8f 92       	push	r8
    20fe:	9f 92       	push	r9
    2100:	af 92       	push	r10
    2102:	bf 92       	push	r11
    2104:	cf 92       	push	r12
    2106:	df 92       	push	r13
    2108:	ef 92       	push	r14
    210a:	ff 92       	push	r15
    210c:	0f 93       	push	r16
    210e:	1f 93       	push	r17
    2110:	cf 93       	push	r28
    2112:	df 93       	push	r29
    2114:	00 91 07 21 	lds	r16, 0x2107	; 0x802107 <timer>
    2118:	10 91 08 21 	lds	r17, 0x2108	; 0x802108 <timer+0x1>
    211c:	0f 5f       	subi	r16, 0xFF	; 255
    211e:	1f 4f       	sbci	r17, 0xFF	; 255
    2120:	00 93 07 21 	sts	0x2107, r16	; 0x802107 <timer>
    2124:	10 93 08 21 	sts	0x2108, r17	; 0x802108 <timer+0x1>
    2128:	c0 91 03 21 	lds	r28, 0x2103	; 0x802103 <packets>
    212c:	d0 91 04 21 	lds	r29, 0x2104	; 0x802104 <packets+0x1>
    2130:	21 96       	adiw	r28, 0x01	; 1
    2132:	c0 93 03 21 	sts	0x2103, r28	; 0x802103 <packets>
    2136:	d0 93 04 21 	sts	0x2104, r29	; 0x802104 <packets+0x1>
    213a:	60 91 df 20 	lds	r22, 0x20DF	; 0x8020df <gps_alt>
    213e:	70 91 e0 20 	lds	r23, 0x20E0	; 0x8020e0 <gps_alt+0x1>
    2142:	80 91 e1 20 	lds	r24, 0x20E1	; 0x8020e1 <gps_alt+0x2>
    2146:	90 91 e2 20 	lds	r25, 0x20E2	; 0x8020e2 <gps_alt+0x3>
    214a:	6c d6       	rcall	.+3288   	; 0x2e24 <__fixsfsi>
    214c:	36 2e       	mov	r3, r22
    214e:	27 2e       	mov	r2, r23
    2150:	40 90 e3 20 	lds	r4, 0x20E3	; 0x8020e3 <gps_long>
    2154:	50 90 e4 20 	lds	r5, 0x20E4	; 0x8020e4 <gps_long+0x1>
    2158:	60 90 e5 20 	lds	r6, 0x20E5	; 0x8020e5 <gps_long+0x2>
    215c:	70 90 e6 20 	lds	r7, 0x20E6	; 0x8020e6 <gps_long+0x3>
    2160:	80 90 e7 20 	lds	r8, 0x20E7	; 0x8020e7 <gps_lat>
    2164:	90 90 e8 20 	lds	r9, 0x20E8	; 0x8020e8 <gps_lat+0x1>
    2168:	a0 90 e9 20 	lds	r10, 0x20E9	; 0x8020e9 <gps_lat+0x2>
    216c:	b0 90 ea 20 	lds	r11, 0x20EA	; 0x8020ea <gps_lat+0x3>
    2170:	60 91 eb 20 	lds	r22, 0x20EB	; 0x8020eb <gps_t>
    2174:	70 91 ec 20 	lds	r23, 0x20EC	; 0x8020ec <gps_t+0x1>
    2178:	80 91 ed 20 	lds	r24, 0x20ED	; 0x8020ed <gps_t+0x2>
    217c:	90 91 ee 20 	lds	r25, 0x20EE	; 0x8020ee <gps_t+0x3>
    2180:	51 d6       	rcall	.+3234   	; 0x2e24 <__fixsfsi>
    2182:	6b 01       	movw	r12, r22
    2184:	7c 01       	movw	r14, r24
    2186:	60 91 cd 20 	lds	r22, 0x20CD	; 0x8020cd <angle>
    218a:	70 91 ce 20 	lds	r23, 0x20CE	; 0x8020ce <angle+0x1>
    218e:	80 91 cf 20 	lds	r24, 0x20CF	; 0x8020cf <angle+0x2>
    2192:	90 91 d0 20 	lds	r25, 0x20D0	; 0x8020d0 <angle+0x3>
    2196:	46 d6       	rcall	.+3212   	; 0x2e24 <__fixsfsi>
    2198:	7f 93       	push	r23
    219a:	6f 93       	push	r22
    219c:	80 91 23 21 	lds	r24, 0x2123	; 0x802123 <state>
    21a0:	1f 92       	push	r1
    21a2:	8f 93       	push	r24
    21a4:	60 91 d1 20 	lds	r22, 0x20D1	; 0x8020d1 <rpm>
    21a8:	70 91 d2 20 	lds	r23, 0x20D2	; 0x8020d2 <rpm+0x1>
    21ac:	80 91 d3 20 	lds	r24, 0x20D3	; 0x8020d3 <rpm+0x2>
    21b0:	90 91 d4 20 	lds	r25, 0x20D4	; 0x8020d4 <rpm+0x3>
    21b4:	37 d6       	rcall	.+3182   	; 0x2e24 <__fixsfsi>
    21b6:	7f 93       	push	r23
    21b8:	6f 93       	push	r22
    21ba:	60 91 d5 20 	lds	r22, 0x20D5	; 0x8020d5 <roll>
    21be:	70 91 d6 20 	lds	r23, 0x20D6	; 0x8020d6 <roll+0x1>
    21c2:	80 91 d7 20 	lds	r24, 0x20D7	; 0x8020d7 <roll+0x2>
    21c6:	90 91 d8 20 	lds	r25, 0x20D8	; 0x8020d8 <roll+0x3>
    21ca:	2c d6       	rcall	.+3160   	; 0x2e24 <__fixsfsi>
    21cc:	7f 93       	push	r23
    21ce:	6f 93       	push	r22
    21d0:	60 91 d9 20 	lds	r22, 0x20D9	; 0x8020d9 <pitch>
    21d4:	70 91 da 20 	lds	r23, 0x20DA	; 0x8020da <pitch+0x1>
    21d8:	80 91 db 20 	lds	r24, 0x20DB	; 0x8020db <pitch+0x2>
    21dc:	90 91 dc 20 	lds	r25, 0x20DC	; 0x8020dc <pitch+0x3>
    21e0:	21 d6       	rcall	.+3138   	; 0x2e24 <__fixsfsi>
    21e2:	7f 93       	push	r23
    21e4:	6f 93       	push	r22
    21e6:	80 91 de 20 	lds	r24, 0x20DE	; 0x8020de <gps_sats+0x1>
    21ea:	8f 93       	push	r24
    21ec:	80 91 dd 20 	lds	r24, 0x20DD	; 0x8020dd <gps_sats>
    21f0:	8f 93       	push	r24
    21f2:	83 2d       	mov	r24, r3
    21f4:	92 2d       	mov	r25, r2
    21f6:	88 0f       	add	r24, r24
    21f8:	99 1f       	adc	r25, r25
    21fa:	9c 01       	movw	r18, r24
    21fc:	22 0f       	add	r18, r18
    21fe:	33 1f       	adc	r19, r19
    2200:	22 0f       	add	r18, r18
    2202:	33 1f       	adc	r19, r19
    2204:	82 0f       	add	r24, r18
    2206:	93 1f       	adc	r25, r19
    2208:	6a e0       	ldi	r22, 0x0A	; 10
    220a:	70 e0       	ldi	r23, 0x00	; 0
    220c:	0e 94 f4 19 	call	0x33e8	; 0x33e8 <__divmodhi4>
    2210:	9f 93       	push	r25
    2212:	8f 93       	push	r24
    2214:	2f 92       	push	r2
    2216:	3f 92       	push	r3
    2218:	20 e0       	ldi	r18, 0x00	; 0
    221a:	34 e2       	ldi	r19, 0x24	; 36
    221c:	44 e7       	ldi	r20, 0x74	; 116
    221e:	59 e4       	ldi	r21, 0x49	; 73
    2220:	c3 01       	movw	r24, r6
    2222:	b2 01       	movw	r22, r4
    2224:	f6 d6       	rcall	.+3564   	; 0x3012 <__mulsf3>
    2226:	fe d5       	rcall	.+3068   	; 0x2e24 <__fixsfsi>
    2228:	20 e4       	ldi	r18, 0x40	; 64
    222a:	32 e4       	ldi	r19, 0x42	; 66
    222c:	4f e0       	ldi	r20, 0x0F	; 15
    222e:	50 e0       	ldi	r21, 0x00	; 0
    2230:	0e 94 29 1a 	call	0x3452	; 0x3452 <__divmodsi4>
    2234:	9b 01       	movw	r18, r22
    2236:	77 23       	and	r23, r23
    2238:	24 f4       	brge	.+8      	; 0x2242 <time_update+0x152>
    223a:	22 27       	eor	r18, r18
    223c:	33 27       	eor	r19, r19
    223e:	26 1b       	sub	r18, r22
    2240:	37 0b       	sbc	r19, r23
    2242:	c9 01       	movw	r24, r18
    2244:	33 0f       	add	r19, r19
    2246:	aa 0b       	sbc	r26, r26
    2248:	bb 0b       	sbc	r27, r27
    224a:	bf 93       	push	r27
    224c:	af 93       	push	r26
    224e:	9f 93       	push	r25
    2250:	8f 93       	push	r24
    2252:	c3 01       	movw	r24, r6
    2254:	b2 01       	movw	r22, r4
    2256:	e6 d5       	rcall	.+3020   	; 0x2e24 <__fixsfsi>
    2258:	7f 93       	push	r23
    225a:	6f 93       	push	r22
    225c:	20 e0       	ldi	r18, 0x00	; 0
    225e:	34 e2       	ldi	r19, 0x24	; 36
    2260:	44 e7       	ldi	r20, 0x74	; 116
    2262:	59 e4       	ldi	r21, 0x49	; 73
    2264:	c5 01       	movw	r24, r10
    2266:	b4 01       	movw	r22, r8
    2268:	d4 d6       	rcall	.+3496   	; 0x3012 <__mulsf3>
    226a:	dc d5       	rcall	.+3000   	; 0x2e24 <__fixsfsi>
    226c:	20 e4       	ldi	r18, 0x40	; 64
    226e:	32 e4       	ldi	r19, 0x42	; 66
    2270:	4f e0       	ldi	r20, 0x0F	; 15
    2272:	50 e0       	ldi	r21, 0x00	; 0
    2274:	0e 94 29 1a 	call	0x3452	; 0x3452 <__divmodsi4>
    2278:	9f 93       	push	r25
    227a:	8f 93       	push	r24
    227c:	7f 93       	push	r23
    227e:	6f 93       	push	r22
    2280:	c5 01       	movw	r24, r10
    2282:	b4 01       	movw	r22, r8
    2284:	cf d5       	rcall	.+2974   	; 0x2e24 <__fixsfsi>
    2286:	7f 93       	push	r23
    2288:	6f 93       	push	r22
    228a:	0f 2e       	mov	r0, r31
    228c:	f4 e6       	ldi	r31, 0x64	; 100
    228e:	8f 2e       	mov	r8, r31
    2290:	91 2c       	mov	r9, r1
    2292:	a1 2c       	mov	r10, r1
    2294:	b1 2c       	mov	r11, r1
    2296:	f0 2d       	mov	r31, r0
    2298:	c7 01       	movw	r24, r14
    229a:	b6 01       	movw	r22, r12
    229c:	a5 01       	movw	r20, r10
    229e:	94 01       	movw	r18, r8
    22a0:	0e 94 29 1a 	call	0x3452	; 0x3452 <__divmodsi4>
    22a4:	7f 93       	push	r23
    22a6:	6f 93       	push	r22
    22a8:	c7 01       	movw	r24, r14
    22aa:	b6 01       	movw	r22, r12
    22ac:	20 e1       	ldi	r18, 0x10	; 16
    22ae:	37 e2       	ldi	r19, 0x27	; 39
    22b0:	40 e0       	ldi	r20, 0x00	; 0
    22b2:	50 e0       	ldi	r21, 0x00	; 0
    22b4:	0e 94 29 1a 	call	0x3452	; 0x3452 <__divmodsi4>
    22b8:	f2 2e       	mov	r15, r18
    22ba:	e3 2e       	mov	r14, r19
    22bc:	a5 01       	movw	r20, r10
    22be:	94 01       	movw	r18, r8
    22c0:	0e 94 29 1a 	call	0x3452	; 0x3452 <__divmodsi4>
    22c4:	3f 93       	push	r19
    22c6:	2f 93       	push	r18
    22c8:	ef 92       	push	r14
    22ca:	ff 92       	push	r15
    22cc:	60 91 f3 20 	lds	r22, 0x20F3	; 0x8020f3 <volt>
    22d0:	70 91 f4 20 	lds	r23, 0x20F4	; 0x8020f4 <volt+0x1>
    22d4:	80 91 f5 20 	lds	r24, 0x20F5	; 0x8020f5 <volt+0x2>
    22d8:	90 91 f6 20 	lds	r25, 0x20F6	; 0x8020f6 <volt+0x3>
    22dc:	a3 d5       	rcall	.+2886   	; 0x2e24 <__fixsfsi>
    22de:	7f 93       	push	r23
    22e0:	6f 93       	push	r22
    22e2:	23 e3       	ldi	r18, 0x33	; 51
    22e4:	33 e9       	ldi	r19, 0x93	; 147
    22e6:	48 e8       	ldi	r20, 0x88	; 136
    22e8:	53 e4       	ldi	r21, 0x43	; 67
    22ea:	60 91 fb 20 	lds	r22, 0x20FB	; 0x8020fb <temp>
    22ee:	70 91 fc 20 	lds	r23, 0x20FC	; 0x8020fc <temp+0x1>
    22f2:	80 91 fd 20 	lds	r24, 0x20FD	; 0x8020fd <temp+0x2>
    22f6:	90 91 fe 20 	lds	r25, 0x20FE	; 0x8020fe <temp+0x3>
    22fa:	89 d4       	rcall	.+2322   	; 0x2c0e <__subsf3>
    22fc:	93 d5       	rcall	.+2854   	; 0x2e24 <__fixsfsi>
    22fe:	7f 93       	push	r23
    2300:	6f 93       	push	r22
    2302:	60 91 ff 20 	lds	r22, 0x20FF	; 0x8020ff <press>
    2306:	70 91 00 21 	lds	r23, 0x2100	; 0x802100 <press+0x1>
    230a:	80 91 01 21 	lds	r24, 0x2101	; 0x802101 <press+0x2>
    230e:	90 91 02 21 	lds	r25, 0x2102	; 0x802102 <press+0x3>
    2312:	88 d5       	rcall	.+2832   	; 0x2e24 <__fixsfsi>
    2314:	9f 93       	push	r25
    2316:	8f 93       	push	r24
    2318:	7f 93       	push	r23
    231a:	6f 93       	push	r22
    231c:	60 91 f7 20 	lds	r22, 0x20F7	; 0x8020f7 <alt>
    2320:	70 91 f8 20 	lds	r23, 0x20F8	; 0x8020f8 <alt+0x1>
    2324:	80 91 f9 20 	lds	r24, 0x20F9	; 0x8020f9 <alt+0x2>
    2328:	90 91 fa 20 	lds	r25, 0x20FA	; 0x8020fa <alt+0x3>
    232c:	7b d5       	rcall	.+2806   	; 0x2e24 <__fixsfsi>
    232e:	7f 93       	push	r23
    2330:	6f 93       	push	r22
    2332:	df 93       	push	r29
    2334:	cf 93       	push	r28
    2336:	1f 93       	push	r17
    2338:	0f 93       	push	r16
    233a:	80 91 18 20 	lds	r24, 0x2018	; 0x802018 <format+0x1>
    233e:	8f 93       	push	r24
    2340:	80 91 17 20 	lds	r24, 0x2017	; 0x802017 <format>
    2344:	8f 93       	push	r24
    2346:	c0 e4       	ldi	r28, 0x40	; 64
    2348:	d1 e2       	ldi	r29, 0x21	; 33
    234a:	df 93       	push	r29
    234c:	cf 93       	push	r28
    234e:	0e 94 df 1a 	call	0x35be	; 0x35be <sprintf>
    2352:	8d b7       	in	r24, 0x3d	; 61
    2354:	9e b7       	in	r25, 0x3e	; 62
    2356:	c4 96       	adiw	r24, 0x34	; 52
    2358:	8d bf       	out	0x3d, r24	; 61
    235a:	9e bf       	out	0x3e, r25	; 62
    235c:	df 93       	push	r29
    235e:	cf 93       	push	r28
    2360:	0e 94 cc 1a 	call	0x3598	; 0x3598 <printf>
    2364:	72 de       	rcall	.-796    	; 0x204a <eeprom_write>
    2366:	10 92 1c 21 	sts	0x211C, r1	; 0x80211c <time_flag>
    236a:	0f 90       	pop	r0
    236c:	0f 90       	pop	r0
    236e:	df 91       	pop	r29
    2370:	cf 91       	pop	r28
    2372:	1f 91       	pop	r17
    2374:	0f 91       	pop	r16
    2376:	ff 90       	pop	r15
    2378:	ef 90       	pop	r14
    237a:	df 90       	pop	r13
    237c:	cf 90       	pop	r12
    237e:	bf 90       	pop	r11
    2380:	af 90       	pop	r10
    2382:	9f 90       	pop	r9
    2384:	8f 90       	pop	r8
    2386:	7f 90       	pop	r7
    2388:	6f 90       	pop	r6
    238a:	5f 90       	pop	r5
    238c:	4f 90       	pop	r4
    238e:	3f 90       	pop	r3
    2390:	2f 90       	pop	r2
    2392:	08 95       	ret

00002394 <eeprom_erase>:

void eeprom_erase(void){
	NVM.CMD = LOAD_BUFFER_CMD;
    2394:	83 e3       	ldi	r24, 0x33	; 51
    2396:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <__TEXT_REGION_LENGTH__+0x7001ca>
	for(uint8_t i = 0; i < 32; i++){
    239a:	80 e0       	ldi	r24, 0x00	; 0
		NVM.ADDR0 = i;
    239c:	e0 ec       	ldi	r30, 0xC0	; 192
    239e:	f1 e0       	ldi	r31, 0x01	; 1
		NVM.DATA0 = 0xFF;
    23a0:	9f ef       	ldi	r25, 0xFF	; 255
}

void eeprom_erase(void){
	NVM.CMD = LOAD_BUFFER_CMD;
	for(uint8_t i = 0; i < 32; i++){
		NVM.ADDR0 = i;
    23a2:	80 83       	st	Z, r24
		NVM.DATA0 = 0xFF;
    23a4:	94 83       	std	Z+4, r25	; 0x04
	return byte;
}

void eeprom_erase(void){
	NVM.CMD = LOAD_BUFFER_CMD;
	for(uint8_t i = 0; i < 32; i++){
    23a6:	8f 5f       	subi	r24, 0xFF	; 255
    23a8:	80 32       	cpi	r24, 0x20	; 32
    23aa:	d9 f7       	brne	.-10     	; 0x23a2 <eeprom_erase+0xe>
		NVM.ADDR0 = i;
		NVM.DATA0 = 0xFF;
	}

	NVM.CMD = ERASE_EEPROM;
    23ac:	e0 ec       	ldi	r30, 0xC0	; 192
    23ae:	f1 e0       	ldi	r31, 0x01	; 1
    23b0:	80 e3       	ldi	r24, 0x30	; 48
    23b2:	82 87       	std	Z+10, r24	; 0x0a
	CCP = CCP_IOREG_MODE;
    23b4:	88 ed       	ldi	r24, 0xD8	; 216
    23b6:	84 bf       	out	0x34, r24	; 52
	NVM.CTRLA = CTRLA_CMDEX_BYTE;
    23b8:	81 e0       	ldi	r24, 0x01	; 1
    23ba:	83 87       	std	Z+11, r24	; 0x0b
	while(NVM.STATUS>>7);
    23bc:	87 85       	ldd	r24, Z+15	; 0x0f
    23be:	88 23       	and	r24, r24
    23c0:	ec f3       	brlt	.-6      	; 0x23bc <eeprom_erase+0x28>
}
    23c2:	08 95       	ret

000023c4 <reset>:
			break;
	}
}

void reset(void){
	eeprom_erase();
    23c4:	e7 df       	rcall	.-50     	; 0x2394 <eeprom_erase>

	uint8_t oldInterruptState = SREG;	// no real need to store the interrupt context as the reset will pre-empt its restoration
    23c6:	8f b7       	in	r24, 0x3f	; 63
	cli();		                        // Disable interrupts
    23c8:	f8 94       	cli

	CCP = 0xD8;							// Configuration change protection: allow protected IO regiser write
    23ca:	98 ed       	ldi	r25, 0xD8	; 216
    23cc:	94 bf       	out	0x34, r25	; 52
	RST.CTRL = RST_SWRST_bm;			// Request software reset by writing to protected IO register
    23ce:	91 e0       	ldi	r25, 0x01	; 1
    23d0:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>

	SREG=oldInterruptState;
    23d4:	8f bf       	out	0x3f, r24	; 63
    23d6:	08 95       	ret

000023d8 <command>:
	TCD1.PER = 184; // 2700hz
	TCD1.CCA = 92;
}

void command(uint8_t c){
	switch(c){
    23d8:	84 36       	cpi	r24, 0x64	; 100
    23da:	91 f0       	breq	.+36     	; 0x2400 <command+0x28>
    23dc:	28 f4       	brcc	.+10     	; 0x23e8 <command+0x10>
    23de:	81 36       	cpi	r24, 0x61	; 97
    23e0:	69 f0       	breq	.+26     	; 0x23fc <command+0x24>
    23e2:	83 36       	cpi	r24, 0x63	; 99
    23e4:	49 f0       	breq	.+18     	; 0x23f8 <command+0x20>
    23e6:	08 95       	ret
    23e8:	85 36       	cpi	r24, 0x65	; 101
    23ea:	21 f0       	breq	.+8      	; 0x23f4 <command+0x1c>
    23ec:	86 36       	cpi	r24, 0x66	; 102
    23ee:	49 f4       	brne	.+18     	; 0x2402 <command+0x2a>
		case RESET:
			//printf("RESET\n");
			reset();
    23f0:	e9 cf       	rjmp	.-46     	; 0x23c4 <reset>

	SREG=oldInterruptState;
}

void calibrate(void){
	cali_alt();
    23f2:	08 95       	ret
    23f4:	ad ca       	rjmp	.-2726   	; 0x1950 <cali_alt>
		case CALIBRATE:
			calibrate();
			//printf("CALIBRATE\n");
			break;
		case CALIBRATE_ALTITUDE:
			cali_alt();
    23f6:	08 95       	ret
		case CALIBRATE_ANGLE:
			cali_ang();
			//printf("CALIBRATE_ANGLE\n");
			break;
		case SEND_GPS_LOCATION:
			send_gps();
    23f8:	ab ca       	rjmp	.-2730   	; 0x1950 <cali_alt>
    23fa:	08 95       	ret
			//printf("SEND_GPS_LOCATION\n");
			break;
    23fc:	c6 ca       	rjmp	.-2676   	; 0x198a <send_gps>
		case PACKET:
			packet();
    23fe:	08 95       	ret
    2400:	44 cb       	rjmp	.-2424   	; 0x1a8a <packet>
    2402:	08 95       	ret

00002404 <main>:
char* format = "5343,%i,%i,%i,%li,%i,%i,%02i:%02i:%02i,%i.%li,%i.%li,%i.%i,%i,%i,%i,%i,%i,%i\n\0";


////////////////////////////// Functions ///////////////////////////////
int main (void)
{
    2404:	cf 93       	push	r28
    2406:	df 93       	push	r29
    2408:	cd b7       	in	r28, 0x3d	; 61
    240a:	de b7       	in	r29, 0x3e	; 62
    240c:	c8 56       	subi	r28, 0x68	; 104
    240e:	d1 09       	sbc	r29, r1
    2410:	cd bf       	out	0x3d, r28	; 61
    2412:	de bf       	out	0x3e, r29	; 62
	system_init();
    2414:	dc dd       	rcall	.-1096   	; 0x1fce <system_init>
	//delay_ms(100);

	PORTD.DIR |= PIN3_bm;
    2416:	e0 e6       	ldi	r30, 0x60	; 96
    2418:	f6 e0       	ldi	r31, 0x06	; 6
    241a:	80 81       	ld	r24, Z
    241c:	88 60       	ori	r24, 0x08	; 8
    241e:	80 83       	st	Z, r24
	PORTD.OUT |= PIN3_bm;
    2420:	84 81       	ldd	r24, Z+4	; 0x04
    2422:	88 60       	ori	r24, 0x08	; 8
    2424:	84 83       	std	Z+4, r24	; 0x04

	//printf("Initialized\n");
	//buzzer_init();

	int16_t alt_array[] = {0,0,0,0,0,0,0,0,0,0};
    2426:	14 e1       	ldi	r17, 0x14	; 20
    2428:	be 01       	movw	r22, r28
    242a:	6f 5f       	subi	r22, 0xFF	; 255
    242c:	7f 4f       	sbci	r23, 0xFF	; 255
    242e:	fb 01       	movw	r30, r22
    2430:	81 2f       	mov	r24, r17
    2432:	11 92       	st	Z+, r1
    2434:	8a 95       	dec	r24
    2436:	e9 f7       	brne	.-6      	; 0x2432 <main+0x2e>
	RingBuffer16_t altitudes;	// in centimeters
	rb16_init(&altitudes, alt_array, (uint16_t) 10);
    2438:	4a e0       	ldi	r20, 0x0A	; 10
    243a:	50 e0       	ldi	r21, 0x00	; 0
    243c:	ce 01       	movw	r24, r28
    243e:	45 96       	adiw	r24, 0x15	; 21
    2440:	0e 94 fb 06 	call	0xdf6	; 0xdf6 <rb16_init>

	int32_t press_array[] = {0,0,0,0,0,0,0,0,0,0};
    2444:	be 01       	movw	r22, r28
    2446:	63 5e       	subi	r22, 0xE3	; 227
    2448:	7f 4f       	sbci	r23, 0xFF	; 255
    244a:	88 e2       	ldi	r24, 0x28	; 40
    244c:	fb 01       	movw	r30, r22
    244e:	11 92       	st	Z+, r1
    2450:	8a 95       	dec	r24
    2452:	e9 f7       	brne	.-6      	; 0x244e <main+0x4a>
	RingBuffer32_t pressures;	// in Pascals / 10
	rb32_init(&pressures, press_array, (uint16_t) 10);
    2454:	4a e0       	ldi	r20, 0x0A	; 10
    2456:	50 e0       	ldi	r21, 0x00	; 0
    2458:	ce 01       	movw	r24, r28
    245a:	8b 5b       	subi	r24, 0xBB	; 187
    245c:	9f 4f       	sbci	r25, 0xFF	; 255
    245e:	0e 94 83 07 	call	0xf06	; 0xf06 <rb32_init>

	int16_t direct_array[] = {0,0,0,0,0,0,0,0,0,0};
    2462:	be 01       	movw	r22, r28
    2464:	63 5b       	subi	r22, 0xB3	; 179
    2466:	7f 4f       	sbci	r23, 0xFF	; 255
    2468:	fb 01       	movw	r30, r22
    246a:	11 92       	st	Z+, r1
    246c:	1a 95       	dec	r17
    246e:	e9 f7       	brne	.-6      	; 0x246a <main+0x66>
	RingBuffer16_t directions;	// in hundredths degrees
	rb16_init(&directions, direct_array, (uint16_t) 10);
    2470:	4a e0       	ldi	r20, 0x0A	; 10
    2472:	50 e0       	ldi	r21, 0x00	; 0
    2474:	ce 01       	movw	r24, r28
    2476:	8f 59       	subi	r24, 0x9F	; 159
    2478:	9f 4f       	sbci	r25, 0xFF	; 255
    247a:	0e 94 fb 06 	call	0xdf6	; 0xdf6 <rb16_init>

	uint8_t cam_initialized = 0;
	uint8_t buzzer_initialized = 0;
    247e:	00 e0       	ldi	r16, 0x00	; 0

	int16_t direct_array[] = {0,0,0,0,0,0,0,0,0,0};
	RingBuffer16_t directions;	// in hundredths degrees
	rb16_init(&directions, direct_array, (uint16_t) 10);

	uint8_t cam_initialized = 0;
    2480:	10 e0       	ldi	r17, 0x00	; 0
	//printf("Before Loop\n");


	while(1){
		// Check Sensors
		data_collect(&altitudes,&pressures);
    2482:	be 01       	movw	r22, r28
    2484:	6b 5b       	subi	r22, 0xBB	; 187
    2486:	7f 4f       	sbci	r23, 0xFF	; 255
    2488:	ce 01       	movw	r24, r28
    248a:	45 96       	adiw	r24, 0x15	; 21

		state_check();
    248c:	f6 d8       	rcall	.-3604   	; 0x167a <data_collect>
    248e:	75 d9       	rcall	.-3350   	; 0x177a <state_check>

		// IMU Check
		//imu_read();

		//Gives each flight state their unique tasks
		switch(state){
    2490:	80 91 23 21 	lds	r24, 0x2123	; 0x802123 <state>
    2494:	81 30       	cpi	r24, 0x01	; 1
    2496:	39 f0       	breq	.+14     	; 0x24a6 <main+0xa2>
    2498:	08 f4       	brcc	.+2      	; 0x249c <main+0x98>
    249a:	42 c0       	rjmp	.+132    	; 0x2520 <main+0x11c>
    249c:	82 30       	cpi	r24, 0x02	; 2
    249e:	b1 f0       	breq	.+44     	; 0x24cc <main+0xc8>
    24a0:	83 30       	cpi	r24, 0x03	; 3
    24a2:	c1 f1       	breq	.+112    	; 0x2514 <main+0x110>
    24a4:	3b c0       	rjmp	.+118    	; 0x251c <main+0x118>
			case 0:
				break;
			case 1:
				if(alt > 600 && !cam_initialized){
    24a6:	20 e0       	ldi	r18, 0x00	; 0
    24a8:	30 e0       	ldi	r19, 0x00	; 0
    24aa:	46 e1       	ldi	r20, 0x16	; 22
    24ac:	54 e4       	ldi	r21, 0x44	; 68
    24ae:	60 91 f7 20 	lds	r22, 0x20F7	; 0x8020f7 <alt>
    24b2:	70 91 f8 20 	lds	r23, 0x20F8	; 0x8020f8 <alt+0x1>
    24b6:	80 91 f9 20 	lds	r24, 0x20F9	; 0x8020f9 <alt+0x2>
    24ba:	90 91 fa 20 	lds	r25, 0x20FA	; 0x8020fa <alt+0x3>
    24be:	a5 d5       	rcall	.+2890   	; 0x300a <__gesf2>
    24c0:	18 16       	cp	r1, r24
    24c2:	74 f5       	brge	.+92     	; 0x2520 <main+0x11c>
    24c4:	11 11       	cpse	r17, r1
    24c6:	2c c0       	rjmp	.+88     	; 0x2520 <main+0x11c>
					cam_initialized = 1;
    24c8:	11 e0       	ldi	r17, 0x01	; 1
    24ca:	2a c0       	rjmp	.+84     	; 0x2520 <main+0x11c>
					//cam_switch();
				}
				break;
			case 2:
				if(!cam_initialized){
    24cc:	11 11       	cpse	r17, r1
    24ce:	01 c0       	rjmp	.+2      	; 0x24d2 <main+0xce>
					cam_initialized = 1;
    24d0:	11 e0       	ldi	r17, 0x01	; 1
					//cam_switch();
				}
				if(abs(alt-450)<EPSILON_ALTITUDE){
    24d2:	20 e0       	ldi	r18, 0x00	; 0
    24d4:	30 e0       	ldi	r19, 0x00	; 0
    24d6:	41 ee       	ldi	r20, 0xE1	; 225
    24d8:	53 e4       	ldi	r21, 0x43	; 67
    24da:	60 91 f7 20 	lds	r22, 0x20F7	; 0x8020f7 <alt>
    24de:	70 91 f8 20 	lds	r23, 0x20F8	; 0x8020f8 <alt+0x1>
    24e2:	80 91 f9 20 	lds	r24, 0x20F9	; 0x8020f9 <alt+0x2>
    24e6:	90 91 fa 20 	lds	r25, 0x20FA	; 0x8020fa <alt+0x3>
    24ea:	91 d3       	rcall	.+1826   	; 0x2c0e <__subsf3>
    24ec:	9b d4       	rcall	.+2358   	; 0x2e24 <__fixsfsi>
    24ee:	67 5f       	subi	r22, 0xF7	; 247
    24f0:	7f 4f       	sbci	r23, 0xFF	; 255
    24f2:	63 31       	cpi	r22, 0x13	; 19
    24f4:	71 05       	cpc	r23, r1
    24f6:	28 f4       	brcc	.+10     	; 0x2502 <main+0xfe>
					release();				// Releases the payload
    24f8:	0e 94 6f 08 	call	0x10de	; 0x10de <release>
					hall_sensor_init();		// Starts hall effect sensor to read rpm
    24fc:	0e 94 90 05 	call	0xb20	; 0xb20 <hall_sensor_init>
    2500:	0f c0       	rjmp	.+30     	; 0x2520 <main+0x11c>
				}
				else if(released){
    2502:	80 91 22 21 	lds	r24, 0x2122	; 0x802122 <released>
    2506:	88 23       	and	r24, r24
					servo_pid(&directions);	// Updates the PID
    2508:	59 f0       	breq	.+22     	; 0x2520 <main+0x11c>
    250a:	ce 01       	movw	r24, r28
    250c:	8f 59       	subi	r24, 0x9F	; 159
    250e:	9f 4f       	sbci	r25, 0xFF	; 255
    2510:	84 d9       	rcall	.-3320   	; 0x181a <servo_pid>
    2512:	06 c0       	rjmp	.+12     	; 0x2520 <main+0x11c>
				}
				break;
			case 3:
				if(!buzzer_initialized){
    2514:	01 11       	cpse	r16, r1
    2516:	04 c0       	rjmp	.+8      	; 0x2520 <main+0x11c>
					//buzzer_init();
					buzzer_initialized = 1;
    2518:	01 e0       	ldi	r16, 0x01	; 1
				}
				break;
			default:
				state = 0;
    251a:	02 c0       	rjmp	.+4      	; 0x2520 <main+0x11c>
    251c:	10 92 23 21 	sts	0x2123, r1	; 0x802123 <state>
				break;
		}

		if(time_flag){
    2520:	80 91 1c 21 	lds	r24, 0x211C	; 0x80211c <time_flag>
    2524:	88 23       	and	r24, r24
			time_update();
    2526:	19 f0       	breq	.+6      	; 0x252e <main+0x12a>
    2528:	e3 dd       	rcall	.-1082   	; 0x20f0 <time_update>
			time_flag = 0;
    252a:	10 92 1c 21 	sts	0x211C, r1	; 0x80211c <time_flag>
		}
		if(xbee_flag){
    252e:	80 91 1b 21 	lds	r24, 0x211B	; 0x80211b <xbee_flag>
    2532:	88 23       	and	r24, r24
			command(xbee_comm);
    2534:	39 f0       	breq	.+14     	; 0x2544 <main+0x140>
    2536:	80 91 0e 21 	lds	r24, 0x210E	; 0x80210e <xbee_comm>
    253a:	4e df       	rcall	.-356    	; 0x23d8 <command>
			xbee_comm = 0;
    253c:	10 92 0e 21 	sts	0x210E, r1	; 0x80210e <xbee_comm>
			xbee_flag = 0;
    2540:	10 92 1b 21 	sts	0x211B, r1	; 0x80211b <xbee_flag>
		}

		data_packets++;
    2544:	80 91 05 21 	lds	r24, 0x2105	; 0x802105 <data_packets>
    2548:	90 91 06 21 	lds	r25, 0x2106	; 0x802106 <data_packets+0x1>
    254c:	01 96       	adiw	r24, 0x01	; 1
    254e:	80 93 05 21 	sts	0x2105, r24	; 0x802105 <data_packets>
    2552:	90 93 06 21 	sts	0x2106, r25	; 0x802106 <data_packets+0x1>
		if(timer != 0){
    2556:	60 91 07 21 	lds	r22, 0x2107	; 0x802107 <timer>
    255a:	70 91 08 21 	lds	r23, 0x2108	; 0x802108 <timer+0x1>
    255e:	61 15       	cp	r22, r1
    2560:	71 05       	cpc	r23, r1
			rate = data_packets / timer;
    2562:	29 f0       	breq	.+10     	; 0x256e <main+0x16a>
    2564:	2d d7       	rcall	.+3674   	; 0x33c0 <__udivmodhi4>
    2566:	60 93 19 20 	sts	0x2019, r22	; 0x802019 <rate>
    256a:	70 93 1a 20 	sts	0x201A, r23	; 0x80201a <rate+0x1>
		}

		delay_ms(20);
    256e:	6b ea       	ldi	r22, 0xAB	; 171
    2570:	70 ea       	ldi	r23, 0xA0	; 160
    2572:	81 e0       	ldi	r24, 0x01	; 1
    2574:	90 e0       	ldi	r25, 0x00	; 0
    2576:	0e 94 13 08 	call	0x1026	; 0x1026 <__portable_avr_delay_cycles>
	}
    257a:	83 cf       	rjmp	.-250    	; 0x2482 <main+0x7e>

0000257c <__vector_47>:
	CCP = CCP_IOREG_MODE;
	NVM.CTRLA = CTRLA_CMDEX_BYTE;
	while(NVM.STATUS>>7);
}

ISR(TCE0_OVF_vect){
    257c:	1f 92       	push	r1
    257e:	0f 92       	push	r0
    2580:	0f b6       	in	r0, 0x3f	; 63
    2582:	0f 92       	push	r0
    2584:	11 24       	eor	r1, r1
    2586:	08 b6       	in	r0, 0x38	; 56
    2588:	0f 92       	push	r0
    258a:	18 be       	out	0x38, r1	; 56
    258c:	8f 93       	push	r24
	time_flag = 1;
    258e:	81 e0       	ldi	r24, 0x01	; 1
    2590:	80 93 1c 21 	sts	0x211C, r24	; 0x80211c <time_flag>
}
    2594:	8f 91       	pop	r24
    2596:	0f 90       	pop	r0
    2598:	08 be       	out	0x38, r0	; 56
    259a:	0f 90       	pop	r0
    259c:	0f be       	out	0x3f, r0	; 63
    259e:	0f 90       	pop	r0
    25a0:	1f 90       	pop	r1
    25a2:	18 95       	reti

000025a4 <__vector_58>:

ISR(USARTE0_RXC_vect){
    25a4:	1f 92       	push	r1
    25a6:	0f 92       	push	r0
    25a8:	0f b6       	in	r0, 0x3f	; 63
    25aa:	0f 92       	push	r0
    25ac:	11 24       	eor	r1, r1
    25ae:	08 b6       	in	r0, 0x38	; 56
    25b0:	0f 92       	push	r0
    25b2:	18 be       	out	0x38, r1	; 56
    25b4:	09 b6       	in	r0, 0x39	; 57
    25b6:	0f 92       	push	r0
    25b8:	19 be       	out	0x39, r1	; 57
    25ba:	0b b6       	in	r0, 0x3b	; 59
    25bc:	0f 92       	push	r0
    25be:	1b be       	out	0x3b, r1	; 59
    25c0:	2f 93       	push	r18
    25c2:	3f 93       	push	r19
    25c4:	4f 93       	push	r20
    25c6:	5f 93       	push	r21
    25c8:	6f 93       	push	r22
    25ca:	7f 93       	push	r23
    25cc:	8f 93       	push	r24
    25ce:	9f 93       	push	r25
    25d0:	af 93       	push	r26
    25d2:	bf 93       	push	r27
    25d4:	ef 93       	push	r30
    25d6:	ff 93       	push	r31
	xbee_comm = usart_getchar(UART_TERMINAL_SERIAL);
    25d8:	80 ea       	ldi	r24, 0xA0	; 160
    25da:	9a e0       	ldi	r25, 0x0A	; 10
    25dc:	0e 94 8e 03 	call	0x71c	; 0x71c <usart_getchar>
    25e0:	80 93 0e 21 	sts	0x210E, r24	; 0x80210e <xbee_comm>
	xbee_flag = 1;
    25e4:	81 e0       	ldi	r24, 0x01	; 1
    25e6:	80 93 1b 21 	sts	0x211B, r24	; 0x80211b <xbee_flag>
}
    25ea:	ff 91       	pop	r31
    25ec:	ef 91       	pop	r30
    25ee:	bf 91       	pop	r27
    25f0:	af 91       	pop	r26
    25f2:	9f 91       	pop	r25
    25f4:	8f 91       	pop	r24
    25f6:	7f 91       	pop	r23
    25f8:	6f 91       	pop	r22
    25fa:	5f 91       	pop	r21
    25fc:	4f 91       	pop	r20
    25fe:	3f 91       	pop	r19
    2600:	2f 91       	pop	r18
    2602:	0f 90       	pop	r0
    2604:	0b be       	out	0x3b, r0	; 59
    2606:	0f 90       	pop	r0
    2608:	09 be       	out	0x39, r0	; 57
    260a:	0f 90       	pop	r0
    260c:	08 be       	out	0x38, r0	; 56
    260e:	0f 90       	pop	r0
    2610:	0f be       	out	0x3f, r0	; 63
    2612:	0f 90       	pop	r0
    2614:	1f 90       	pop	r1
    2616:	18 95       	reti

00002618 <__vector_91>:
=======
     e42:	04 c0       	rjmp	.+8      	; 0xe4c <__portable_avr_delay_cycles+0xa>
     e44:	61 50       	subi	r22, 0x01	; 1
     e46:	71 09       	sbc	r23, r1
     e48:	81 09       	sbc	r24, r1
     e4a:	91 09       	sbc	r25, r1
     e4c:	61 15       	cp	r22, r1
     e4e:	71 05       	cpc	r23, r1
     e50:	81 05       	cpc	r24, r1
     e52:	91 05       	cpc	r25, r1
     e54:	b9 f7       	brne	.-18     	; 0xe44 <__portable_avr_delay_cycles+0x2>
     e56:	08 95       	ret

00000e58 <pressure_init>:
     e58:	cf 93       	push	r28
     e5a:	df 93       	push	r29
     e5c:	b4 dd       	rcall	.-1176   	; 0x9c6 <ms5607_init>
     e5e:	82 ea       	ldi	r24, 0xA2	; 162
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	ca dd       	rcall	.-1132   	; 0x9f8 <ms5607_read>
     e64:	cd ed       	ldi	r28, 0xDD	; 221
     e66:	d0 e2       	ldi	r29, 0x20	; 32
     e68:	88 83       	st	Y, r24
     e6a:	99 83       	std	Y+1, r25	; 0x01
     e6c:	84 ea       	ldi	r24, 0xA4	; 164
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	c3 dd       	rcall	.-1146   	; 0x9f8 <ms5607_read>
     e72:	8a 83       	std	Y+2, r24	; 0x02
     e74:	9b 83       	std	Y+3, r25	; 0x03
     e76:	86 ea       	ldi	r24, 0xA6	; 166
     e78:	90 e0       	ldi	r25, 0x00	; 0
     e7a:	be dd       	rcall	.-1156   	; 0x9f8 <ms5607_read>
     e7c:	8c 83       	std	Y+4, r24	; 0x04
     e7e:	9d 83       	std	Y+5, r25	; 0x05
     e80:	88 ea       	ldi	r24, 0xA8	; 168
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	b9 dd       	rcall	.-1166   	; 0x9f8 <ms5607_read>
     e86:	8e 83       	std	Y+6, r24	; 0x06
     e88:	9f 83       	std	Y+7, r25	; 0x07
     e8a:	8a ea       	ldi	r24, 0xAA	; 170
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	b4 dd       	rcall	.-1176   	; 0x9f8 <ms5607_read>
     e90:	88 87       	std	Y+8, r24	; 0x08
     e92:	99 87       	std	Y+9, r25	; 0x09
     e94:	8c ea       	ldi	r24, 0xAC	; 172
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	af dd       	rcall	.-1186   	; 0x9f8 <ms5607_read>
     e9a:	8a 87       	std	Y+10, r24	; 0x0a
     e9c:	9b 87       	std	Y+11, r25	; 0x0b
     e9e:	df 91       	pop	r29
     ea0:	cf 91       	pop	r28
     ea2:	08 95       	ret

00000ea4 <gps_init>:
     ea4:	50 dd       	rcall	.-1376   	; 0x946 <gps_uart_init>
     ea6:	6b ea       	ldi	r22, 0xAB	; 171
     ea8:	79 e2       	ldi	r23, 0x29	; 41
     eaa:	80 e0       	ldi	r24, 0x00	; 0
     eac:	90 e0       	ldi	r25, 0x00	; 0
     eae:	c9 df       	rcall	.-110    	; 0xe42 <__portable_avr_delay_cycles>
     eb0:	80 e3       	ldi	r24, 0x30	; 48
     eb2:	80 93 b3 09 	sts	0x09B3, r24	; 0x8009b3 <__TEXT_REGION_LENGTH__+0x7009b3>
     eb6:	08 95       	ret

00000eb8 <get_pressure>:
     eb8:	4f 92       	push	r4
     eba:	5f 92       	push	r5
     ebc:	6f 92       	push	r6
     ebe:	7f 92       	push	r7
     ec0:	8f 92       	push	r8
     ec2:	9f 92       	push	r9
     ec4:	af 92       	push	r10
     ec6:	bf 92       	push	r11
     ec8:	cf 92       	push	r12
     eca:	df 92       	push	r13
     ecc:	ef 92       	push	r14
     ece:	ff 92       	push	r15
     ed0:	cf 93       	push	r28
     ed2:	df 93       	push	r29
     ed4:	a3 dd       	rcall	.-1210   	; 0xa1c <ms5607_convert_d1>
     ed6:	6b 01       	movw	r12, r22
     ed8:	7c 01       	movw	r14, r24
     eda:	c4 dd       	rcall	.-1144   	; 0xa64 <ms5607_convert_d2>
     edc:	0e 94 d3 15 	call	0x2ba6	; 0x2ba6 <__floatunsisf>
     ee0:	4b 01       	movw	r8, r22
     ee2:	5c 01       	movw	r10, r24
     ee4:	cd ed       	ldi	r28, 0xDD	; 221
     ee6:	d0 e2       	ldi	r29, 0x20	; 32
     ee8:	68 85       	ldd	r22, Y+8	; 0x08
     eea:	79 85       	ldd	r23, Y+9	; 0x09
     eec:	80 e0       	ldi	r24, 0x00	; 0
     eee:	90 e0       	ldi	r25, 0x00	; 0
     ef0:	0e 94 d3 15 	call	0x2ba6	; 0x2ba6 <__floatunsisf>
     ef4:	20 e0       	ldi	r18, 0x00	; 0
     ef6:	30 e0       	ldi	r19, 0x00	; 0
     ef8:	40 e8       	ldi	r20, 0x80	; 128
     efa:	53 e4       	ldi	r21, 0x43	; 67
     efc:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
     f00:	9b 01       	movw	r18, r22
     f02:	ac 01       	movw	r20, r24
     f04:	c5 01       	movw	r24, r10
     f06:	b4 01       	movw	r22, r8
     f08:	0e 94 d1 14 	call	0x29a2	; 0x29a2 <__subsf3>
     f0c:	4b 01       	movw	r8, r22
     f0e:	5c 01       	movw	r10, r24
     f10:	6c 81       	ldd	r22, Y+4	; 0x04
     f12:	7d 81       	ldd	r23, Y+5	; 0x05
     f14:	80 e0       	ldi	r24, 0x00	; 0
     f16:	90 e0       	ldi	r25, 0x00	; 0
     f18:	0e 94 d3 15 	call	0x2ba6	; 0x2ba6 <__floatunsisf>
     f1c:	a5 01       	movw	r20, r10
     f1e:	94 01       	movw	r18, r8
     f20:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
     f24:	20 e0       	ldi	r18, 0x00	; 0
     f26:	30 e0       	ldi	r19, 0x00	; 0
     f28:	40 e0       	ldi	r20, 0x00	; 0
     f2a:	5c e3       	ldi	r21, 0x3C	; 60
     f2c:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
     f30:	2b 01       	movw	r4, r22
     f32:	3c 01       	movw	r6, r24
     f34:	68 81       	ld	r22, Y
     f36:	79 81       	ldd	r23, Y+1	; 0x01
     f38:	80 e0       	ldi	r24, 0x00	; 0
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	0e 94 d3 15 	call	0x2ba6	; 0x2ba6 <__floatunsisf>
     f40:	20 e0       	ldi	r18, 0x00	; 0
     f42:	30 e0       	ldi	r19, 0x00	; 0
     f44:	40 e8       	ldi	r20, 0x80	; 128
     f46:	57 e4       	ldi	r21, 0x47	; 71
     f48:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
     f4c:	9b 01       	movw	r18, r22
     f4e:	ac 01       	movw	r20, r24
     f50:	c3 01       	movw	r24, r6
     f52:	b2 01       	movw	r22, r4
     f54:	0e 94 d2 14 	call	0x29a4	; 0x29a4 <__addsf3>
     f58:	2b 01       	movw	r4, r22
     f5a:	3c 01       	movw	r6, r24
     f5c:	c7 01       	movw	r24, r14
     f5e:	b6 01       	movw	r22, r12
     f60:	0e 94 d3 15 	call	0x2ba6	; 0x2ba6 <__floatunsisf>
     f64:	9b 01       	movw	r18, r22
     f66:	ac 01       	movw	r20, r24
     f68:	c3 01       	movw	r24, r6
     f6a:	b2 01       	movw	r22, r4
     f6c:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
     f70:	20 e0       	ldi	r18, 0x00	; 0
     f72:	30 e0       	ldi	r19, 0x00	; 0
     f74:	40 e0       	ldi	r20, 0x00	; 0
     f76:	55 e3       	ldi	r21, 0x35	; 53
     f78:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
     f7c:	6b 01       	movw	r12, r22
     f7e:	7c 01       	movw	r14, r24
     f80:	6e 81       	ldd	r22, Y+6	; 0x06
     f82:	7f 81       	ldd	r23, Y+7	; 0x07
     f84:	80 e0       	ldi	r24, 0x00	; 0
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	0e 94 d3 15 	call	0x2ba6	; 0x2ba6 <__floatunsisf>
     f8c:	a5 01       	movw	r20, r10
     f8e:	94 01       	movw	r18, r8
     f90:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
     f94:	20 e0       	ldi	r18, 0x00	; 0
     f96:	30 e0       	ldi	r19, 0x00	; 0
     f98:	40 e8       	ldi	r20, 0x80	; 128
     f9a:	5c e3       	ldi	r21, 0x3C	; 60
     f9c:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
     fa0:	4b 01       	movw	r8, r22
     fa2:	5c 01       	movw	r10, r24
     fa4:	6a 81       	ldd	r22, Y+2	; 0x02
     fa6:	7b 81       	ldd	r23, Y+3	; 0x03
     fa8:	80 e0       	ldi	r24, 0x00	; 0
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	0e 94 d3 15 	call	0x2ba6	; 0x2ba6 <__floatunsisf>
     fb0:	20 e0       	ldi	r18, 0x00	; 0
     fb2:	30 e0       	ldi	r19, 0x00	; 0
     fb4:	40 e0       	ldi	r20, 0x00	; 0
     fb6:	58 e4       	ldi	r21, 0x48	; 72
     fb8:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
     fbc:	9b 01       	movw	r18, r22
     fbe:	ac 01       	movw	r20, r24
     fc0:	c5 01       	movw	r24, r10
     fc2:	b4 01       	movw	r22, r8
     fc4:	0e 94 d2 14 	call	0x29a4	; 0x29a4 <__addsf3>
     fc8:	9b 01       	movw	r18, r22
     fca:	ac 01       	movw	r20, r24
     fcc:	c7 01       	movw	r24, r14
     fce:	b6 01       	movw	r22, r12
     fd0:	0e 94 d1 14 	call	0x29a2	; 0x29a2 <__subsf3>
     fd4:	20 e0       	ldi	r18, 0x00	; 0
     fd6:	30 e0       	ldi	r19, 0x00	; 0
     fd8:	40 e0       	ldi	r20, 0x00	; 0
     fda:	58 e3       	ldi	r21, 0x38	; 56
     fdc:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
     fe0:	df 91       	pop	r29
     fe2:	cf 91       	pop	r28
     fe4:	ff 90       	pop	r15
     fe6:	ef 90       	pop	r14
     fe8:	df 90       	pop	r13
     fea:	cf 90       	pop	r12
     fec:	bf 90       	pop	r11
     fee:	af 90       	pop	r10
     ff0:	9f 90       	pop	r9
     ff2:	8f 90       	pop	r8
     ff4:	7f 90       	pop	r7
     ff6:	6f 90       	pop	r6
     ff8:	5f 90       	pop	r5
     ffa:	4f 90       	pop	r4
     ffc:	08 95       	ret

00000ffe <get_altitude>:
     ffe:	4f 92       	push	r4
    1000:	5f 92       	push	r5
    1002:	6f 92       	push	r6
    1004:	7f 92       	push	r7
    1006:	8f 92       	push	r8
    1008:	9f 92       	push	r9
    100a:	af 92       	push	r10
    100c:	bf 92       	push	r11
    100e:	cf 92       	push	r12
    1010:	df 92       	push	r13
    1012:	ef 92       	push	r14
    1014:	ff 92       	push	r15
    1016:	2b 01       	movw	r4, r22
    1018:	3c 01       	movw	r6, r24
    101a:	c0 90 21 20 	lds	r12, 0x2021	; 0x802021 <L>
    101e:	d0 90 22 20 	lds	r13, 0x2022	; 0x802022 <L+0x1>
    1022:	e0 90 23 20 	lds	r14, 0x2023	; 0x802023 <L+0x2>
    1026:	f0 90 24 20 	lds	r15, 0x2024	; 0x802024 <L+0x3>
    102a:	20 91 25 20 	lds	r18, 0x2025	; 0x802025 <R>
    102e:	30 91 26 20 	lds	r19, 0x2026	; 0x802026 <R+0x1>
    1032:	40 91 27 20 	lds	r20, 0x2027	; 0x802027 <R+0x2>
    1036:	50 91 28 20 	lds	r21, 0x2028	; 0x802028 <R+0x3>
    103a:	c7 01       	movw	r24, r14
    103c:	b6 01       	movw	r22, r12
    103e:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
    1042:	20 91 1d 20 	lds	r18, 0x201D	; 0x80201d <g_0>
    1046:	30 91 1e 20 	lds	r19, 0x201E	; 0x80201e <g_0+0x1>
    104a:	40 91 1f 20 	lds	r20, 0x201F	; 0x80201f <g_0+0x2>
    104e:	50 91 20 20 	lds	r21, 0x2020	; 0x802020 <g_0+0x3>
    1052:	0e 94 3a 15 	call	0x2a74	; 0x2a74 <__divsf3>
    1056:	4b 01       	movw	r8, r22
    1058:	5c 01       	movw	r10, r24
    105a:	a3 01       	movw	r20, r6
    105c:	92 01       	movw	r18, r4
    105e:	60 91 2d 20 	lds	r22, 0x202D	; 0x80202d <ground_p>
    1062:	70 91 2e 20 	lds	r23, 0x202E	; 0x80202e <ground_p+0x1>
    1066:	80 91 2f 20 	lds	r24, 0x202F	; 0x80202f <ground_p+0x2>
    106a:	90 91 30 20 	lds	r25, 0x2030	; 0x802030 <ground_p+0x3>
    106e:	0e 94 3a 15 	call	0x2a74	; 0x2a74 <__divsf3>
    1072:	a5 01       	movw	r20, r10
    1074:	94 01       	movw	r18, r8
    1076:	0e 94 18 17 	call	0x2e30	; 0x2e30 <pow>
    107a:	20 e0       	ldi	r18, 0x00	; 0
    107c:	30 e0       	ldi	r19, 0x00	; 0
    107e:	40 e8       	ldi	r20, 0x80	; 128
    1080:	5f e3       	ldi	r21, 0x3F	; 63
    1082:	0e 94 d1 14 	call	0x29a2	; 0x29a2 <__subsf3>
    1086:	20 91 29 20 	lds	r18, 0x2029	; 0x802029 <ground_t>
    108a:	30 91 2a 20 	lds	r19, 0x202A	; 0x80202a <ground_t+0x1>
    108e:	40 91 2b 20 	lds	r20, 0x202B	; 0x80202b <ground_t+0x2>
    1092:	50 91 2c 20 	lds	r21, 0x202C	; 0x80202c <ground_t+0x3>
    1096:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
    109a:	a7 01       	movw	r20, r14
    109c:	96 01       	movw	r18, r12
    109e:	0e 94 3a 15 	call	0x2a74	; 0x2a74 <__divsf3>
    10a2:	20 91 e9 20 	lds	r18, 0x20E9	; 0x8020e9 <ground_a>
    10a6:	30 91 ea 20 	lds	r19, 0x20EA	; 0x8020ea <ground_a+0x1>
    10aa:	40 91 eb 20 	lds	r20, 0x20EB	; 0x8020eb <ground_a+0x2>
    10ae:	50 91 ec 20 	lds	r21, 0x20EC	; 0x8020ec <ground_a+0x3>
    10b2:	0e 94 d1 14 	call	0x29a2	; 0x29a2 <__subsf3>
    10b6:	ff 90       	pop	r15
    10b8:	ef 90       	pop	r14
    10ba:	df 90       	pop	r13
    10bc:	cf 90       	pop	r12
    10be:	bf 90       	pop	r11
    10c0:	af 90       	pop	r10
    10c2:	9f 90       	pop	r9
    10c4:	8f 90       	pop	r8
    10c6:	7f 90       	pop	r7
    10c8:	6f 90       	pop	r6
    10ca:	5f 90       	pop	r5
    10cc:	4f 90       	pop	r4
    10ce:	08 95       	ret

000010d0 <diff>:
    10d0:	2f 92       	push	r2
    10d2:	3f 92       	push	r3
    10d4:	4f 92       	push	r4
    10d6:	5f 92       	push	r5
    10d8:	6f 92       	push	r6
    10da:	7f 92       	push	r7
    10dc:	8f 92       	push	r8
    10de:	9f 92       	push	r9
    10e0:	af 92       	push	r10
    10e2:	bf 92       	push	r11
    10e4:	cf 92       	push	r12
    10e6:	df 92       	push	r13
    10e8:	ef 92       	push	r14
    10ea:	ff 92       	push	r15
    10ec:	0f 93       	push	r16
    10ee:	1f 93       	push	r17
    10f0:	cf 93       	push	r28
    10f2:	df 93       	push	r29
    10f4:	00 d0       	rcall	.+0      	; 0x10f6 <diff+0x26>
    10f6:	00 d0       	rcall	.+0      	; 0x10f8 <diff+0x28>
    10f8:	cd b7       	in	r28, 0x3d	; 61
    10fa:	de b7       	in	r29, 0x3e	; 62
    10fc:	6c 01       	movw	r12, r24
    10fe:	80 91 16 20 	lds	r24, 0x2016	; 0x802016 <data_samples>
    1102:	88 23       	and	r24, r24
    1104:	09 f4       	brne	.+2      	; 0x1108 <diff+0x38>
    1106:	6c c0       	rjmp	.+216    	; 0x11e0 <diff+0x110>
    1108:	00 e0       	ldi	r16, 0x00	; 0
    110a:	10 e0       	ldi	r17, 0x00	; 0
    110c:	41 2c       	mov	r4, r1
    110e:	51 2c       	mov	r5, r1
    1110:	32 01       	movw	r6, r4
    1112:	86 2e       	mov	r8, r22
    1114:	91 2c       	mov	r9, r1
    1116:	a1 2c       	mov	r10, r1
    1118:	b1 2c       	mov	r11, r1
    111a:	89 82       	std	Y+1, r8	; 0x01
    111c:	9a 82       	std	Y+2, r9	; 0x02
    111e:	ab 82       	std	Y+3, r10	; 0x03
    1120:	bc 82       	std	Y+4, r11	; 0x04
    1122:	b8 01       	movw	r22, r16
    1124:	c6 01       	movw	r24, r12
    1126:	7f dd       	rcall	.-1282   	; 0xc26 <rb16_get_nth>
    1128:	5c 01       	movw	r10, r24
    112a:	18 01       	movw	r2, r16
    112c:	2f ef       	ldi	r18, 0xFF	; 255
    112e:	22 1a       	sub	r2, r18
    1130:	32 0a       	sbc	r3, r18
    1132:	b1 01       	movw	r22, r2
    1134:	c6 01       	movw	r24, r12
    1136:	77 dd       	rcall	.-1298   	; 0xc26 <rb16_get_nth>
    1138:	7c 01       	movw	r14, r24
    113a:	b8 01       	movw	r22, r16
    113c:	6e 5f       	subi	r22, 0xFE	; 254
    113e:	7f 4f       	sbci	r23, 0xFF	; 255
    1140:	c6 01       	movw	r24, r12
    1142:	71 dd       	rcall	.-1310   	; 0xc26 <rb16_get_nth>
    1144:	a5 01       	movw	r20, r10
    1146:	bb 0c       	add	r11, r11
    1148:	66 0b       	sbc	r22, r22
    114a:	77 0b       	sbc	r23, r23
    114c:	8a 01       	movw	r16, r20
    114e:	9b 01       	movw	r18, r22
    1150:	00 0f       	add	r16, r16
    1152:	11 1f       	adc	r17, r17
    1154:	22 1f       	adc	r18, r18
    1156:	33 1f       	adc	r19, r19
    1158:	40 0f       	add	r20, r16
    115a:	51 1f       	adc	r21, r17
    115c:	62 1f       	adc	r22, r18
    115e:	73 1f       	adc	r23, r19
    1160:	87 01       	movw	r16, r14
    1162:	ff 0c       	add	r15, r15
    1164:	22 0b       	sbc	r18, r18
    1166:	33 0b       	sbc	r19, r19
    1168:	78 01       	movw	r14, r16
    116a:	89 01       	movw	r16, r18
    116c:	ee 0c       	add	r14, r14
    116e:	ff 1c       	adc	r15, r15
    1170:	00 1f       	adc	r16, r16
    1172:	11 1f       	adc	r17, r17
    1174:	ee 0c       	add	r14, r14
    1176:	ff 1c       	adc	r15, r15
    1178:	00 1f       	adc	r16, r16
    117a:	11 1f       	adc	r17, r17
    117c:	4a 01       	movw	r8, r20
    117e:	5b 01       	movw	r10, r22
    1180:	8e 18       	sub	r8, r14
    1182:	9f 08       	sbc	r9, r15
    1184:	a0 0a       	sbc	r10, r16
    1186:	b1 0a       	sbc	r11, r17
    1188:	ac 01       	movw	r20, r24
    118a:	99 0f       	add	r25, r25
    118c:	66 0b       	sbc	r22, r22
    118e:	77 0b       	sbc	r23, r23
    1190:	d5 01       	movw	r26, r10
    1192:	c4 01       	movw	r24, r8
    1194:	84 0f       	add	r24, r20
    1196:	95 1f       	adc	r25, r21
    1198:	a6 1f       	adc	r26, r22
    119a:	b7 1f       	adc	r27, r23
    119c:	9c 01       	movw	r18, r24
    119e:	ad 01       	movw	r20, r26
    11a0:	69 81       	ldd	r22, Y+1	; 0x01
    11a2:	7a 81       	ldd	r23, Y+2	; 0x02
    11a4:	8b 81       	ldd	r24, Y+3	; 0x03
    11a6:	9c 81       	ldd	r25, Y+4	; 0x04
    11a8:	0e 94 51 18 	call	0x30a2	; 0x30a2 <__mulsi3>
    11ac:	0e 94 d5 15 	call	0x2baa	; 0x2baa <__floatsisf>
    11b0:	20 e0       	ldi	r18, 0x00	; 0
    11b2:	30 e0       	ldi	r19, 0x00	; 0
    11b4:	40 e0       	ldi	r20, 0x00	; 0
    11b6:	5f e3       	ldi	r21, 0x3F	; 63
    11b8:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
    11bc:	9b 01       	movw	r18, r22
    11be:	ac 01       	movw	r20, r24
    11c0:	c3 01       	movw	r24, r6
    11c2:	b2 01       	movw	r22, r4
    11c4:	0e 94 d2 14 	call	0x29a4	; 0x29a4 <__addsf3>
    11c8:	2b 01       	movw	r4, r22
    11ca:	3c 01       	movw	r6, r24
    11cc:	80 91 16 20 	lds	r24, 0x2016	; 0x802016 <data_samples>
    11d0:	81 01       	movw	r16, r2
    11d2:	28 2f       	mov	r18, r24
    11d4:	30 e0       	ldi	r19, 0x00	; 0
    11d6:	22 16       	cp	r2, r18
    11d8:	33 06       	cpc	r3, r19
    11da:	08 f4       	brcc	.+2      	; 0x11de <diff+0x10e>
    11dc:	a2 cf       	rjmp	.-188    	; 0x1122 <diff+0x52>
    11de:	03 c0       	rjmp	.+6      	; 0x11e6 <diff+0x116>
    11e0:	41 2c       	mov	r4, r1
    11e2:	51 2c       	mov	r5, r1
    11e4:	32 01       	movw	r6, r4
    11e6:	68 2f       	mov	r22, r24
    11e8:	70 e0       	ldi	r23, 0x00	; 0
    11ea:	80 e0       	ldi	r24, 0x00	; 0
    11ec:	90 e0       	ldi	r25, 0x00	; 0
    11ee:	0e 94 d5 15 	call	0x2baa	; 0x2baa <__floatsisf>
    11f2:	9b 01       	movw	r18, r22
    11f4:	ac 01       	movw	r20, r24
    11f6:	c3 01       	movw	r24, r6
    11f8:	b2 01       	movw	r22, r4
    11fa:	0e 94 3a 15 	call	0x2a74	; 0x2a74 <__divsf3>
    11fe:	20 e0       	ldi	r18, 0x00	; 0
    1200:	30 e0       	ldi	r19, 0x00	; 0
    1202:	48 ec       	ldi	r20, 0xC8	; 200
    1204:	52 e4       	ldi	r21, 0x42	; 66
    1206:	0e 94 3a 15 	call	0x2a74	; 0x2a74 <__divsf3>
    120a:	26 96       	adiw	r28, 0x06	; 6
    120c:	cd bf       	out	0x3d, r28	; 61
    120e:	de bf       	out	0x3e, r29	; 62
    1210:	df 91       	pop	r29
    1212:	cf 91       	pop	r28
    1214:	1f 91       	pop	r17
    1216:	0f 91       	pop	r16
    1218:	ff 90       	pop	r15
    121a:	ef 90       	pop	r14
    121c:	df 90       	pop	r13
    121e:	cf 90       	pop	r12
    1220:	bf 90       	pop	r11
    1222:	af 90       	pop	r10
    1224:	9f 90       	pop	r9
    1226:	8f 90       	pop	r8
    1228:	7f 90       	pop	r7
    122a:	6f 90       	pop	r6
    122c:	5f 90       	pop	r5
    122e:	4f 90       	pop	r4
    1230:	3f 90       	pop	r3
    1232:	2f 90       	pop	r2
    1234:	08 95       	ret

00001236 <data_check>:
    1236:	3f 92       	push	r3
    1238:	4f 92       	push	r4
    123a:	5f 92       	push	r5
    123c:	6f 92       	push	r6
    123e:	7f 92       	push	r7
    1240:	8f 92       	push	r8
    1242:	9f 92       	push	r9
    1244:	af 92       	push	r10
    1246:	bf 92       	push	r11
    1248:	cf 92       	push	r12
    124a:	df 92       	push	r13
    124c:	ef 92       	push	r14
    124e:	ff 92       	push	r15
    1250:	0f 93       	push	r16
    1252:	1f 93       	push	r17
    1254:	cf 93       	push	r28
    1256:	df 93       	push	r29
    1258:	00 d0       	rcall	.+0      	; 0x125a <data_check+0x24>
    125a:	00 d0       	rcall	.+0      	; 0x125c <data_check+0x26>
    125c:	cd b7       	in	r28, 0x3d	; 61
    125e:	de b7       	in	r29, 0x3e	; 62
    1260:	8c 01       	movw	r16, r24
    1262:	19 82       	std	Y+1, r1	; 0x01
    1264:	1a 82       	std	Y+2, r1	; 0x02
    1266:	c1 2c       	mov	r12, r1
    1268:	d1 2c       	mov	r13, r1
    126a:	76 01       	movw	r14, r12
    126c:	69 81       	ldd	r22, Y+1	; 0x01
    126e:	7a 81       	ldd	r23, Y+2	; 0x02
    1270:	c8 01       	movw	r24, r16
    1272:	61 dd       	rcall	.-1342   	; 0xd36 <rb32_get_nth>
    1274:	4b 01       	movw	r8, r22
    1276:	5c 01       	movw	r10, r24
    1278:	21 ea       	ldi	r18, 0xA1	; 161
    127a:	82 1a       	sub	r8, r18
    127c:	26 e8       	ldi	r18, 0x86	; 134
    127e:	92 0a       	sbc	r9, r18
    1280:	21 e0       	ldi	r18, 0x01	; 1
    1282:	a2 0a       	sbc	r10, r18
    1284:	b1 08       	sbc	r11, r1
    1286:	2f ed       	ldi	r18, 0xDF	; 223
    1288:	82 16       	cp	r8, r18
    128a:	2f e0       	ldi	r18, 0x0F	; 15
    128c:	92 06       	cpc	r9, r18
    128e:	27 e9       	ldi	r18, 0x97	; 151
    1290:	a2 06       	cpc	r10, r18
    1292:	b1 04       	cpc	r11, r1
    1294:	80 f4       	brcc	.+32     	; 0x12b6 <data_check+0x80>
    1296:	0e 94 d5 15 	call	0x2baa	; 0x2baa <__floatsisf>
    129a:	20 e0       	ldi	r18, 0x00	; 0
    129c:	30 e0       	ldi	r19, 0x00	; 0
    129e:	40 ea       	ldi	r20, 0xA0	; 160
    12a0:	50 e4       	ldi	r21, 0x40	; 64
    12a2:	0e 94 3a 15 	call	0x2a74	; 0x2a74 <__divsf3>
    12a6:	9b 01       	movw	r18, r22
    12a8:	ac 01       	movw	r20, r24
    12aa:	c7 01       	movw	r24, r14
    12ac:	b6 01       	movw	r22, r12
    12ae:	0e 94 d2 14 	call	0x29a4	; 0x29a4 <__addsf3>
    12b2:	6b 01       	movw	r12, r22
    12b4:	7c 01       	movw	r14, r24
    12b6:	89 81       	ldd	r24, Y+1	; 0x01
    12b8:	9a 81       	ldd	r25, Y+2	; 0x02
    12ba:	01 96       	adiw	r24, 0x01	; 1
    12bc:	89 83       	std	Y+1, r24	; 0x01
    12be:	9a 83       	std	Y+2, r25	; 0x02
    12c0:	05 97       	sbiw	r24, 0x05	; 5
    12c2:	a1 f6       	brne	.-88     	; 0x126c <data_check+0x36>
    12c4:	19 82       	std	Y+1, r1	; 0x01
    12c6:	1a 82       	std	Y+2, r1	; 0x02
    12c8:	81 2c       	mov	r8, r1
    12ca:	91 2c       	mov	r9, r1
    12cc:	54 01       	movw	r10, r8
    12ce:	69 81       	ldd	r22, Y+1	; 0x01
    12d0:	7a 81       	ldd	r23, Y+2	; 0x02
    12d2:	c8 01       	movw	r24, r16
    12d4:	30 dd       	rcall	.-1440   	; 0xd36 <rb32_get_nth>
    12d6:	2b 01       	movw	r4, r22
    12d8:	3c 01       	movw	r6, r24
    12da:	21 ea       	ldi	r18, 0xA1	; 161
    12dc:	42 1a       	sub	r4, r18
    12de:	26 e8       	ldi	r18, 0x86	; 134
    12e0:	52 0a       	sbc	r5, r18
    12e2:	21 e0       	ldi	r18, 0x01	; 1
    12e4:	62 0a       	sbc	r6, r18
    12e6:	71 08       	sbc	r7, r1
    12e8:	2f ed       	ldi	r18, 0xDF	; 223
    12ea:	42 16       	cp	r4, r18
    12ec:	2f e0       	ldi	r18, 0x0F	; 15
    12ee:	52 06       	cpc	r5, r18
    12f0:	27 e9       	ldi	r18, 0x97	; 151
    12f2:	62 06       	cpc	r6, r18
    12f4:	71 04       	cpc	r7, r1
    12f6:	90 f4       	brcc	.+36     	; 0x131c <data_check+0xe6>
    12f8:	0e 94 d5 15 	call	0x2baa	; 0x2baa <__floatsisf>
    12fc:	a7 01       	movw	r20, r14
    12fe:	96 01       	movw	r18, r12
    1300:	0e 94 d1 14 	call	0x29a2	; 0x29a2 <__subsf3>
    1304:	9b 01       	movw	r18, r22
    1306:	ac 01       	movw	r20, r24
    1308:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
    130c:	9b 01       	movw	r18, r22
    130e:	ac 01       	movw	r20, r24
    1310:	c5 01       	movw	r24, r10
    1312:	b4 01       	movw	r22, r8
    1314:	0e 94 d2 14 	call	0x29a4	; 0x29a4 <__addsf3>
    1318:	4b 01       	movw	r8, r22
    131a:	5c 01       	movw	r10, r24
    131c:	89 81       	ldd	r24, Y+1	; 0x01
    131e:	9a 81       	ldd	r25, Y+2	; 0x02
    1320:	01 96       	adiw	r24, 0x01	; 1
    1322:	89 83       	std	Y+1, r24	; 0x01
    1324:	9a 83       	std	Y+2, r25	; 0x02
    1326:	05 97       	sbiw	r24, 0x05	; 5
    1328:	91 f6       	brne	.-92     	; 0x12ce <data_check+0x98>
    132a:	20 e0       	ldi	r18, 0x00	; 0
    132c:	30 e0       	ldi	r19, 0x00	; 0
    132e:	40 e8       	ldi	r20, 0x80	; 128
    1330:	5e e3       	ldi	r21, 0x3E	; 62
    1332:	c5 01       	movw	r24, r10
    1334:	b4 01       	movw	r22, r8
    1336:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
    133a:	69 83       	std	Y+1, r22	; 0x01
    133c:	7a 83       	std	Y+2, r23	; 0x02
    133e:	8b 83       	std	Y+3, r24	; 0x03
    1340:	9c 83       	std	Y+4, r25	; 0x04
    1342:	1d 82       	std	Y+5, r1	; 0x05
    1344:	1e 82       	std	Y+6, r1	; 0x06
    1346:	31 2c       	mov	r3, r1
    1348:	41 2c       	mov	r4, r1
    134a:	51 2c       	mov	r5, r1
    134c:	32 01       	movw	r6, r4
    134e:	6d 81       	ldd	r22, Y+5	; 0x05
    1350:	7e 81       	ldd	r23, Y+6	; 0x06
    1352:	c8 01       	movw	r24, r16
    1354:	f0 dc       	rcall	.-1568   	; 0xd36 <rb32_get_nth>
    1356:	4b 01       	movw	r8, r22
    1358:	5c 01       	movw	r10, r24
    135a:	21 ea       	ldi	r18, 0xA1	; 161
    135c:	82 1a       	sub	r8, r18
    135e:	26 e8       	ldi	r18, 0x86	; 134
    1360:	92 0a       	sbc	r9, r18
    1362:	21 e0       	ldi	r18, 0x01	; 1
    1364:	a2 0a       	sbc	r10, r18
    1366:	b1 08       	sbc	r11, r1
    1368:	2f ed       	ldi	r18, 0xDF	; 223
    136a:	82 16       	cp	r8, r18
    136c:	2f e0       	ldi	r18, 0x0F	; 15
    136e:	92 06       	cpc	r9, r18
    1370:	27 e9       	ldi	r18, 0x97	; 151
    1372:	a2 06       	cpc	r10, r18
    1374:	b1 04       	cpc	r11, r1
    1376:	50 f5       	brcc	.+84     	; 0x13cc <data_check+0x196>
    1378:	0e 94 d5 15 	call	0x2baa	; 0x2baa <__floatsisf>
    137c:	4b 01       	movw	r8, r22
    137e:	5c 01       	movw	r10, r24
    1380:	a7 01       	movw	r20, r14
    1382:	96 01       	movw	r18, r12
    1384:	0e 94 d1 14 	call	0x29a2	; 0x29a2 <__subsf3>
    1388:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__fixsfsi>
    138c:	9b 01       	movw	r18, r22
    138e:	77 23       	and	r23, r23
    1390:	24 f4       	brge	.+8      	; 0x139a <data_check+0x164>
    1392:	22 27       	eor	r18, r18
    1394:	33 27       	eor	r19, r19
    1396:	26 1b       	sub	r18, r22
    1398:	37 0b       	sbc	r19, r23
    139a:	b9 01       	movw	r22, r18
    139c:	33 0f       	add	r19, r19
    139e:	88 0b       	sbc	r24, r24
    13a0:	99 0b       	sbc	r25, r25
    13a2:	0e 94 d5 15 	call	0x2baa	; 0x2baa <__floatsisf>
    13a6:	9b 01       	movw	r18, r22
    13a8:	ac 01       	movw	r20, r24
    13aa:	69 81       	ldd	r22, Y+1	; 0x01
    13ac:	7a 81       	ldd	r23, Y+2	; 0x02
    13ae:	8b 81       	ldd	r24, Y+3	; 0x03
    13b0:	9c 81       	ldd	r25, Y+4	; 0x04
    13b2:	0e 94 aa 16 	call	0x2d54	; 0x2d54 <__gesf2>
    13b6:	88 23       	and	r24, r24
    13b8:	4c f0       	brlt	.+18     	; 0x13cc <data_check+0x196>
    13ba:	a5 01       	movw	r20, r10
    13bc:	94 01       	movw	r18, r8
    13be:	c3 01       	movw	r24, r6
    13c0:	b2 01       	movw	r22, r4
    13c2:	0e 94 d2 14 	call	0x29a4	; 0x29a4 <__addsf3>
    13c6:	2b 01       	movw	r4, r22
    13c8:	3c 01       	movw	r6, r24
    13ca:	33 94       	inc	r3
    13cc:	8d 81       	ldd	r24, Y+5	; 0x05
    13ce:	9e 81       	ldd	r25, Y+6	; 0x06
    13d0:	01 96       	adiw	r24, 0x01	; 1
    13d2:	8d 83       	std	Y+5, r24	; 0x05
    13d4:	9e 83       	std	Y+6, r25	; 0x06
    13d6:	05 97       	sbiw	r24, 0x05	; 5
    13d8:	09 f0       	breq	.+2      	; 0x13dc <data_check+0x1a6>
    13da:	b9 cf       	rjmp	.-142    	; 0x134e <data_check+0x118>
    13dc:	33 20       	and	r3, r3
    13de:	69 f0       	breq	.+26     	; 0x13fa <data_check+0x1c4>
    13e0:	63 2d       	mov	r22, r3
    13e2:	70 e0       	ldi	r23, 0x00	; 0
    13e4:	80 e0       	ldi	r24, 0x00	; 0
    13e6:	90 e0       	ldi	r25, 0x00	; 0
    13e8:	0e 94 d3 15 	call	0x2ba6	; 0x2ba6 <__floatunsisf>
    13ec:	9b 01       	movw	r18, r22
    13ee:	ac 01       	movw	r20, r24
    13f0:	c3 01       	movw	r24, r6
    13f2:	b2 01       	movw	r22, r4
    13f4:	0e 94 3a 15 	call	0x2a74	; 0x2a74 <__divsf3>
    13f8:	04 c0       	rjmp	.+8      	; 0x1402 <data_check+0x1cc>
    13fa:	60 e0       	ldi	r22, 0x00	; 0
    13fc:	70 e0       	ldi	r23, 0x00	; 0
    13fe:	80 e8       	ldi	r24, 0x80	; 128
    1400:	9f eb       	ldi	r25, 0xBF	; 191
    1402:	26 96       	adiw	r28, 0x06	; 6
    1404:	cd bf       	out	0x3d, r28	; 61
    1406:	de bf       	out	0x3e, r29	; 62
    1408:	df 91       	pop	r29
    140a:	cf 91       	pop	r28
    140c:	1f 91       	pop	r17
    140e:	0f 91       	pop	r16
    1410:	ff 90       	pop	r15
    1412:	ef 90       	pop	r14
    1414:	df 90       	pop	r13
    1416:	cf 90       	pop	r12
    1418:	bf 90       	pop	r11
    141a:	af 90       	pop	r10
    141c:	9f 90       	pop	r9
    141e:	8f 90       	pop	r8
    1420:	7f 90       	pop	r7
    1422:	6f 90       	pop	r6
    1424:	5f 90       	pop	r5
    1426:	4f 90       	pop	r4
    1428:	3f 90       	pop	r3
    142a:	08 95       	ret

0000142c <data_collect>:
    142c:	af 92       	push	r10
    142e:	bf 92       	push	r11
    1430:	cf 92       	push	r12
    1432:	df 92       	push	r13
    1434:	ef 92       	push	r14
    1436:	ff 92       	push	r15
    1438:	0f 93       	push	r16
    143a:	1f 93       	push	r17
    143c:	cf 93       	push	r28
    143e:	df 93       	push	r29
    1440:	00 d0       	rcall	.+0      	; 0x1442 <data_collect+0x16>
    1442:	00 d0       	rcall	.+0      	; 0x1444 <data_collect+0x18>
    1444:	cd b7       	in	r28, 0x3d	; 61
    1446:	de b7       	in	r29, 0x3e	; 62
    1448:	5c 01       	movw	r10, r24
    144a:	8b 01       	movw	r16, r22
    144c:	35 dd       	rcall	.-1430   	; 0xeb8 <get_pressure>
    144e:	20 e0       	ldi	r18, 0x00	; 0
    1450:	30 e0       	ldi	r19, 0x00	; 0
    1452:	40 e2       	ldi	r20, 0x20	; 32
    1454:	51 e4       	ldi	r21, 0x41	; 65
    1456:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
    145a:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__fixsfsi>
    145e:	69 83       	std	Y+1, r22	; 0x01
    1460:	7a 83       	std	Y+2, r23	; 0x02
    1462:	8b 83       	std	Y+3, r24	; 0x03
    1464:	9c 83       	std	Y+4, r25	; 0x04
    1466:	41 e0       	ldi	r20, 0x01	; 1
    1468:	50 e0       	ldi	r21, 0x00	; 0
    146a:	be 01       	movw	r22, r28
    146c:	6f 5f       	subi	r22, 0xFF	; 255
    146e:	7f 4f       	sbci	r23, 0xFF	; 255
    1470:	c8 01       	movw	r24, r16
    1472:	06 dc       	rcall	.-2036   	; 0xc80 <rb32_write>
    1474:	c8 01       	movw	r24, r16
    1476:	df de       	rcall	.-578    	; 0x1236 <data_check>
    1478:	20 e0       	ldi	r18, 0x00	; 0
    147a:	30 e0       	ldi	r19, 0x00	; 0
    147c:	40 e2       	ldi	r20, 0x20	; 32
    147e:	51 e4       	ldi	r21, 0x41	; 65
    1480:	0e 94 3a 15 	call	0x2a74	; 0x2a74 <__divsf3>
    1484:	6b 01       	movw	r12, r22
    1486:	7c 01       	movw	r14, r24
    1488:	20 e0       	ldi	r18, 0x00	; 0
    148a:	30 e0       	ldi	r19, 0x00	; 0
    148c:	40 e8       	ldi	r20, 0x80	; 128
    148e:	5f eb       	ldi	r21, 0xBF	; 191
    1490:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__cmpsf2>
    1494:	88 23       	and	r24, r24
    1496:	81 f1       	breq	.+96     	; 0x14f8 <data_collect+0xcc>
    1498:	c0 92 d0 20 	sts	0x20D0, r12	; 0x8020d0 <press>
    149c:	d0 92 d1 20 	sts	0x20D1, r13	; 0x8020d1 <press+0x1>
    14a0:	e0 92 d2 20 	sts	0x20D2, r14	; 0x8020d2 <press+0x2>
    14a4:	f0 92 d3 20 	sts	0x20D3, r15	; 0x8020d3 <press+0x3>
    14a8:	c7 01       	movw	r24, r14
    14aa:	b6 01       	movw	r22, r12
    14ac:	a8 dd       	rcall	.-1200   	; 0xffe <get_altitude>
    14ae:	60 93 c8 20 	sts	0x20C8, r22	; 0x8020c8 <alt>
    14b2:	70 93 c9 20 	sts	0x20C9, r23	; 0x8020c9 <alt+0x1>
    14b6:	80 93 ca 20 	sts	0x20CA, r24	; 0x8020ca <alt+0x2>
    14ba:	90 93 cb 20 	sts	0x20CB, r25	; 0x8020cb <alt+0x3>
    14be:	20 e0       	ldi	r18, 0x00	; 0
    14c0:	30 e0       	ldi	r19, 0x00	; 0
    14c2:	48 ec       	ldi	r20, 0xC8	; 200
    14c4:	52 e4       	ldi	r21, 0x42	; 66
    14c6:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
    14ca:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__fixsfsi>
    14ce:	6d 83       	std	Y+5, r22	; 0x05
    14d0:	7e 83       	std	Y+6, r23	; 0x06
    14d2:	41 e0       	ldi	r20, 0x01	; 1
    14d4:	50 e0       	ldi	r21, 0x00	; 0
    14d6:	be 01       	movw	r22, r28
    14d8:	6b 5f       	subi	r22, 0xFB	; 251
    14da:	7f 4f       	sbci	r23, 0xFF	; 255
    14dc:	c5 01       	movw	r24, r10
    14de:	5a db       	rcall	.-2380   	; 0xb94 <rb16_write>
    14e0:	60 91 19 20 	lds	r22, 0x2019	; 0x802019 <rate>
    14e4:	c5 01       	movw	r24, r10
    14e6:	f4 dd       	rcall	.-1048   	; 0x10d0 <diff>
    14e8:	60 93 c0 20 	sts	0x20C0, r22	; 0x8020c0 <velocity>
    14ec:	70 93 c1 20 	sts	0x20C1, r23	; 0x8020c1 <velocity+0x1>
    14f0:	80 93 c2 20 	sts	0x20C2, r24	; 0x8020c2 <velocity+0x2>
    14f4:	90 93 c3 20 	sts	0x20C3, r25	; 0x8020c3 <velocity+0x3>
    14f8:	83 e3       	ldi	r24, 0x33	; 51
    14fa:	93 e1       	ldi	r25, 0x13	; 19
    14fc:	a0 e9       	ldi	r26, 0x90	; 144
    14fe:	b3 e4       	ldi	r27, 0x43	; 67
    1500:	80 93 cc 20 	sts	0x20CC, r24	; 0x8020cc <temp>
    1504:	90 93 cd 20 	sts	0x20CD, r25	; 0x8020cd <temp+0x1>
    1508:	a0 93 ce 20 	sts	0x20CE, r26	; 0x8020ce <temp+0x2>
    150c:	b0 93 cf 20 	sts	0x20CF, r27	; 0x8020cf <temp+0x3>
    1510:	26 96       	adiw	r28, 0x06	; 6
    1512:	cd bf       	out	0x3d, r28	; 61
    1514:	de bf       	out	0x3e, r29	; 62
    1516:	df 91       	pop	r29
    1518:	cf 91       	pop	r28
    151a:	1f 91       	pop	r17
    151c:	0f 91       	pop	r16
    151e:	ff 90       	pop	r15
    1520:	ef 90       	pop	r14
    1522:	df 90       	pop	r13
    1524:	cf 90       	pop	r12
    1526:	bf 90       	pop	r11
    1528:	af 90       	pop	r10
    152a:	08 95       	ret

0000152c <state_check>:
    152c:	cf 92       	push	r12
    152e:	df 92       	push	r13
    1530:	ef 92       	push	r14
    1532:	ff 92       	push	r15
    1534:	c0 90 c0 20 	lds	r12, 0x20C0	; 0x8020c0 <velocity>
    1538:	d0 90 c1 20 	lds	r13, 0x20C1	; 0x8020c1 <velocity+0x1>
    153c:	e0 90 c2 20 	lds	r14, 0x20C2	; 0x8020c2 <velocity+0x2>
    1540:	f0 90 c3 20 	lds	r15, 0x20C3	; 0x8020c3 <velocity+0x3>
    1544:	c7 01       	movw	r24, r14
    1546:	b6 01       	movw	r22, r12
    1548:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__fixsfsi>
    154c:	9b 01       	movw	r18, r22
    154e:	77 23       	and	r23, r23
    1550:	24 f4       	brge	.+8      	; 0x155a <state_check+0x2e>
    1552:	22 27       	eor	r18, r18
    1554:	33 27       	eor	r19, r19
    1556:	26 1b       	sub	r18, r22
    1558:	37 0b       	sbc	r19, r23
    155a:	26 30       	cpi	r18, 0x06	; 6
    155c:	31 05       	cpc	r19, r1
    155e:	8c f0       	brlt	.+34     	; 0x1582 <state_check+0x56>
    1560:	20 e0       	ldi	r18, 0x00	; 0
    1562:	30 e0       	ldi	r19, 0x00	; 0
    1564:	a9 01       	movw	r20, r18
    1566:	c7 01       	movw	r24, r14
    1568:	b6 01       	movw	r22, r12
    156a:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__cmpsf2>
    156e:	88 23       	and	r24, r24
    1570:	24 f0       	brlt	.+8      	; 0x157a <state_check+0x4e>
    1572:	81 e0       	ldi	r24, 0x01	; 1
    1574:	80 93 ef 20 	sts	0x20EF, r24	; 0x8020ef <state>
    1578:	24 c0       	rjmp	.+72     	; 0x15c2 <state_check+0x96>
    157a:	82 e0       	ldi	r24, 0x02	; 2
    157c:	80 93 ef 20 	sts	0x20EF, r24	; 0x8020ef <state>
    1580:	20 c0       	rjmp	.+64     	; 0x15c2 <state_check+0x96>
    1582:	10 92 ef 20 	sts	0x20EF, r1	; 0x8020ef <state>
    1586:	20 e0       	ldi	r18, 0x00	; 0
    1588:	30 e0       	ldi	r19, 0x00	; 0
    158a:	48 e4       	ldi	r20, 0x48	; 72
    158c:	52 e4       	ldi	r21, 0x42	; 66
    158e:	60 91 c8 20 	lds	r22, 0x20C8	; 0x8020c8 <alt>
    1592:	70 91 c9 20 	lds	r23, 0x20C9	; 0x8020c9 <alt+0x1>
    1596:	80 91 ca 20 	lds	r24, 0x20CA	; 0x8020ca <alt+0x2>
    159a:	90 91 cb 20 	lds	r25, 0x20CB	; 0x8020cb <alt+0x3>
    159e:	0e 94 aa 16 	call	0x2d54	; 0x2d54 <__gesf2>
    15a2:	18 16       	cp	r1, r24
    15a4:	24 f0       	brlt	.+8      	; 0x15ae <state_check+0x82>
    15a6:	80 91 ed 20 	lds	r24, 0x20ED	; 0x8020ed <reset_received>
    15aa:	88 23       	and	r24, r24
    15ac:	19 f0       	breq	.+6      	; 0x15b4 <state_check+0x88>
    15ae:	81 e0       	ldi	r24, 0x01	; 1
    15b0:	80 93 ef 20 	sts	0x20EF, r24	; 0x8020ef <state>
    15b4:	80 91 ee 20 	lds	r24, 0x20EE	; 0x8020ee <released>
    15b8:	88 23       	and	r24, r24
    15ba:	19 f0       	breq	.+6      	; 0x15c2 <state_check+0x96>
    15bc:	83 e0       	ldi	r24, 0x03	; 3
    15be:	80 93 ef 20 	sts	0x20EF, r24	; 0x8020ef <state>
    15c2:	ff 90       	pop	r15
    15c4:	ef 90       	pop	r14
    15c6:	df 90       	pop	r13
    15c8:	cf 90       	pop	r12
    15ca:	08 95       	ret

000015cc <servo_pid>:
    15cc:	8f 92       	push	r8
    15ce:	9f 92       	push	r9
    15d0:	af 92       	push	r10
    15d2:	bf 92       	push	r11
    15d4:	cf 92       	push	r12
    15d6:	df 92       	push	r13
    15d8:	ef 92       	push	r14
    15da:	ff 92       	push	r15
    15dc:	0f 93       	push	r16
    15de:	1f 93       	push	r17
    15e0:	cf 93       	push	r28
    15e2:	df 93       	push	r29
    15e4:	7c 01       	movw	r14, r24
    15e6:	c0 e0       	ldi	r28, 0x00	; 0
    15e8:	d0 e0       	ldi	r29, 0x00	; 0
    15ea:	00 e0       	ldi	r16, 0x00	; 0
    15ec:	10 e0       	ldi	r17, 0x00	; 0
    15ee:	be 01       	movw	r22, r28
    15f0:	c7 01       	movw	r24, r14
    15f2:	19 db       	rcall	.-2510   	; 0xc26 <rb16_get_nth>
    15f4:	08 0f       	add	r16, r24
    15f6:	19 1f       	adc	r17, r25
    15f8:	21 96       	adiw	r28, 0x01	; 1
    15fa:	ca 30       	cpi	r28, 0x0A	; 10
    15fc:	d1 05       	cpc	r29, r1
    15fe:	b9 f7       	brne	.-18     	; 0x15ee <servo_pid+0x22>
    1600:	60 e0       	ldi	r22, 0x00	; 0
    1602:	70 e0       	ldi	r23, 0x00	; 0
    1604:	c7 01       	movw	r24, r14
    1606:	0f db       	rcall	.-2530   	; 0xc26 <rb16_get_nth>
    1608:	ec 01       	movw	r28, r24
    160a:	60 91 19 20 	lds	r22, 0x2019	; 0x802019 <rate>
    160e:	c7 01       	movw	r24, r14
    1610:	5f dd       	rcall	.-1346   	; 0x10d0 <diff>
    1612:	6b 01       	movw	r12, r22
    1614:	7c 01       	movw	r14, r24
    1616:	be 01       	movw	r22, r28
    1618:	dd 0f       	add	r29, r29
    161a:	88 0b       	sbc	r24, r24
    161c:	99 0b       	sbc	r25, r25
    161e:	0e 94 d5 15 	call	0x2baa	; 0x2baa <__floatsisf>
    1622:	20 e0       	ldi	r18, 0x00	; 0
    1624:	30 e0       	ldi	r19, 0x00	; 0
    1626:	a9 01       	movw	r20, r18
    1628:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
    162c:	20 e0       	ldi	r18, 0x00	; 0
    162e:	30 e0       	ldi	r19, 0x00	; 0
    1630:	48 ec       	ldi	r20, 0xC8	; 200
    1632:	52 e4       	ldi	r21, 0x42	; 66
    1634:	0e 94 3a 15 	call	0x2a74	; 0x2a74 <__divsf3>
    1638:	4b 01       	movw	r8, r22
    163a:	5c 01       	movw	r10, r24
    163c:	b8 01       	movw	r22, r16
    163e:	11 0f       	add	r17, r17
    1640:	88 0b       	sbc	r24, r24
    1642:	99 0b       	sbc	r25, r25
    1644:	0e 94 d5 15 	call	0x2baa	; 0x2baa <__floatsisf>
    1648:	20 e0       	ldi	r18, 0x00	; 0
    164a:	30 e0       	ldi	r19, 0x00	; 0
    164c:	a9 01       	movw	r20, r18
    164e:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
    1652:	20 e0       	ldi	r18, 0x00	; 0
    1654:	30 e0       	ldi	r19, 0x00	; 0
    1656:	48 ec       	ldi	r20, 0xC8	; 200
    1658:	52 e4       	ldi	r21, 0x42	; 66
    165a:	0e 94 3a 15 	call	0x2a74	; 0x2a74 <__divsf3>
    165e:	9b 01       	movw	r18, r22
    1660:	ac 01       	movw	r20, r24
    1662:	c5 01       	movw	r24, r10
    1664:	b4 01       	movw	r22, r8
    1666:	0e 94 d2 14 	call	0x29a4	; 0x29a4 <__addsf3>
    166a:	4b 01       	movw	r8, r22
    166c:	5c 01       	movw	r10, r24
    166e:	20 e0       	ldi	r18, 0x00	; 0
    1670:	30 e0       	ldi	r19, 0x00	; 0
    1672:	a9 01       	movw	r20, r18
    1674:	c7 01       	movw	r24, r14
    1676:	b6 01       	movw	r22, r12
    1678:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
    167c:	9b 01       	movw	r18, r22
    167e:	ac 01       	movw	r20, r24
    1680:	c5 01       	movw	r24, r10
    1682:	b4 01       	movw	r22, r8
    1684:	0e 94 d2 14 	call	0x29a4	; 0x29a4 <__addsf3>
    1688:	20 e0       	ldi	r18, 0x00	; 0
    168a:	30 e8       	ldi	r19, 0x80	; 128
    168c:	4b eb       	ldi	r20, 0xBB	; 187
    168e:	54 e4       	ldi	r21, 0x44	; 68
    1690:	0e 94 d2 14 	call	0x29a4	; 0x29a4 <__addsf3>
    1694:	0e 94 a7 15 	call	0x2b4e	; 0x2b4e <__fixunssfsi>
    1698:	60 93 1b 20 	sts	0x201B, r22	; 0x80201b <servo_pulse>
    169c:	70 93 1c 20 	sts	0x201C, r23	; 0x80201c <servo_pulse+0x1>
    16a0:	80 e0       	ldi	r24, 0x00	; 0
    16a2:	90 e0       	ldi	r25, 0x00	; 0
    16a4:	0e 94 d3 15 	call	0x2ba6	; 0x2ba6 <__floatunsisf>
    16a8:	20 e0       	ldi	r18, 0x00	; 0
    16aa:	30 e0       	ldi	r19, 0x00	; 0
    16ac:	4a e7       	ldi	r20, 0x7A	; 122
    16ae:	54 e4       	ldi	r21, 0x44	; 68
    16b0:	0e 94 3a 15 	call	0x2a74	; 0x2a74 <__divsf3>
    16b4:	20 e0       	ldi	r18, 0x00	; 0
    16b6:	30 e0       	ldi	r19, 0x00	; 0
    16b8:	4a ef       	ldi	r20, 0xFA	; 250
    16ba:	53 e4       	ldi	r21, 0x43	; 67
    16bc:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
    16c0:	0e 94 a7 15 	call	0x2b4e	; 0x2b4e <__fixunssfsi>
    16c4:	60 93 68 09 	sts	0x0968, r22	; 0x800968 <__TEXT_REGION_LENGTH__+0x700968>
    16c8:	70 93 69 09 	sts	0x0969, r23	; 0x800969 <__TEXT_REGION_LENGTH__+0x700969>
    16cc:	df 91       	pop	r29
    16ce:	cf 91       	pop	r28
    16d0:	1f 91       	pop	r17
    16d2:	0f 91       	pop	r16
    16d4:	ff 90       	pop	r15
    16d6:	ef 90       	pop	r14
    16d8:	df 90       	pop	r13
    16da:	cf 90       	pop	r12
    16dc:	bf 90       	pop	r11
    16de:	af 90       	pop	r10
    16e0:	9f 90       	pop	r9
    16e2:	8f 90       	pop	r8
    16e4:	08 95       	ret

000016e6 <clock_init>:
    16e6:	61 e0       	ldi	r22, 0x01	; 1
    16e8:	85 e0       	ldi	r24, 0x05	; 5
    16ea:	8f db       	rcall	.-2274   	; 0xe0a <sysclk_enable_module>
    16ec:	e0 e0       	ldi	r30, 0x00	; 0
    16ee:	fa e0       	ldi	r31, 0x0A	; 10
    16f0:	87 e0       	ldi	r24, 0x07	; 7
    16f2:	80 83       	st	Z, r24
    16f4:	81 e1       	ldi	r24, 0x11	; 17
    16f6:	9a e7       	ldi	r25, 0x7A	; 122
    16f8:	86 a3       	std	Z+38, r24	; 0x26
    16fa:	97 a3       	std	Z+39, r25	; 0x27
    16fc:	81 e0       	ldi	r24, 0x01	; 1
    16fe:	86 83       	std	Z+6, r24	; 0x06
    1700:	08 95       	ret

00001702 <system_init>:
    1702:	0f 93       	push	r16
    1704:	1f 93       	push	r17
    1706:	4c db       	rcall	.-2408   	; 0xda0 <sysclk_init>
    1708:	6b ea       	ldi	r22, 0xAB	; 171
    170a:	79 e2       	ldi	r23, 0x29	; 41
    170c:	80 e0       	ldi	r24, 0x00	; 0
    170e:	90 e0       	ldi	r25, 0x00	; 0
    1710:	98 db       	rcall	.-2256   	; 0xe42 <__portable_avr_delay_cycles>
    1712:	78 94       	sei
    1714:	8c eb       	ldi	r24, 0xBC	; 188
    1716:	80 93 40 06 	sts	0x0640, r24	; 0x800640 <__TEXT_REGION_LENGTH__+0x700640>
    171a:	87 e0       	ldi	r24, 0x07	; 7
    171c:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7000a2>
    1720:	f3 d9       	rcall	.-3098   	; 0xb08 <data_terminal_init>
    1722:	6b ea       	ldi	r22, 0xAB	; 171
    1724:	70 eb       	ldi	r23, 0xB0	; 176
    1726:	88 e2       	ldi	r24, 0x28	; 40
    1728:	90 e0       	ldi	r25, 0x00	; 0
    172a:	8b db       	rcall	.-2282   	; 0xe42 <__portable_avr_delay_cycles>
    172c:	6b ea       	ldi	r22, 0xAB	; 171
    172e:	79 e2       	ldi	r23, 0x29	; 41
    1730:	80 e0       	ldi	r24, 0x00	; 0
    1732:	90 e0       	ldi	r25, 0x00	; 0
    1734:	86 db       	rcall	.-2292   	; 0xe42 <__portable_avr_delay_cycles>
    1736:	ba d9       	rcall	.-3212   	; 0xaac <spi_init>
    1738:	6b ea       	ldi	r22, 0xAB	; 171
    173a:	79 e2       	ldi	r23, 0x29	; 41
    173c:	80 e0       	ldi	r24, 0x00	; 0
    173e:	90 e0       	ldi	r25, 0x00	; 0
    1740:	80 db       	rcall	.-2304   	; 0xe42 <__portable_avr_delay_cycles>
    1742:	8a db       	rcall	.-2284   	; 0xe58 <pressure_init>
    1744:	6b ea       	ldi	r22, 0xAB	; 171
    1746:	79 e2       	ldi	r23, 0x29	; 41
    1748:	80 e0       	ldi	r24, 0x00	; 0
    174a:	90 e0       	ldi	r25, 0x00	; 0
    174c:	7a db       	rcall	.-2316   	; 0xe42 <__portable_avr_delay_cycles>
    174e:	80 e2       	ldi	r24, 0x20	; 32
    1750:	80 93 a3 0a 	sts	0x0AA3, r24	; 0x800aa3 <__TEXT_REGION_LENGTH__+0x700aa3>
    1754:	a7 db       	rcall	.-2226   	; 0xea4 <gps_init>
    1756:	c7 df       	rcall	.-114    	; 0x16e6 <clock_init>
    1758:	e9 d8       	rcall	.-3630   	; 0x92c <cam_init>
    175a:	66 e5       	ldi	r22, 0x56	; 86
    175c:	70 ed       	ldi	r23, 0xD0	; 208
    175e:	80 e0       	ldi	r24, 0x00	; 0
    1760:	90 e0       	ldi	r25, 0x00	; 0
    1762:	6f db       	rcall	.-2338   	; 0xe42 <__portable_avr_delay_cycles>
    1764:	e3 de       	rcall	.-570    	; 0x152c <state_check>
    1766:	a8 db       	rcall	.-2224   	; 0xeb8 <get_pressure>
    1768:	60 93 2d 20 	sts	0x202D, r22	; 0x80202d <ground_p>
    176c:	70 93 2e 20 	sts	0x202E, r23	; 0x80202e <ground_p+0x1>
    1770:	80 93 2f 20 	sts	0x202F, r24	; 0x80202f <ground_p+0x2>
    1774:	90 93 30 20 	sts	0x2030, r25	; 0x802030 <ground_p+0x3>
    1778:	03 e3       	ldi	r16, 0x33	; 51
    177a:	13 e1       	ldi	r17, 0x13	; 19
    177c:	20 e9       	ldi	r18, 0x90	; 144
    177e:	33 e4       	ldi	r19, 0x43	; 67
    1780:	00 93 29 20 	sts	0x2029, r16	; 0x802029 <ground_t>
    1784:	10 93 2a 20 	sts	0x202A, r17	; 0x80202a <ground_t+0x1>
    1788:	20 93 2b 20 	sts	0x202B, r18	; 0x80202b <ground_t+0x2>
    178c:	30 93 2c 20 	sts	0x202C, r19	; 0x80202c <ground_t+0x3>
    1790:	36 dc       	rcall	.-1940   	; 0xffe <get_altitude>
    1792:	60 93 e9 20 	sts	0x20E9, r22	; 0x8020e9 <ground_a>
    1796:	70 93 ea 20 	sts	0x20EA, r23	; 0x8020ea <ground_a+0x1>
    179a:	80 93 eb 20 	sts	0x20EB, r24	; 0x8020eb <ground_a+0x2>
    179e:	90 93 ec 20 	sts	0x20EC, r25	; 0x8020ec <ground_a+0x3>
    17a2:	1f 91       	pop	r17
    17a4:	0f 91       	pop	r16
    17a6:	08 95       	ret

000017a8 <main>:
    17a8:	cf 93       	push	r28
    17aa:	df 93       	push	r29
    17ac:	cd b7       	in	r28, 0x3d	; 61
    17ae:	de b7       	in	r29, 0x3e	; 62
    17b0:	ce 56       	subi	r28, 0x6E	; 110
    17b2:	d1 09       	sbc	r29, r1
    17b4:	cd bf       	out	0x3d, r28	; 61
    17b6:	de bf       	out	0x3e, r29	; 62
    17b8:	a4 df       	rcall	.-184    	; 0x1702 <system_init>
    17ba:	66 e5       	ldi	r22, 0x56	; 86
    17bc:	73 e2       	ldi	r23, 0x23	; 35
    17be:	88 e0       	ldi	r24, 0x08	; 8
    17c0:	90 e0       	ldi	r25, 0x00	; 0
    17c2:	3f db       	rcall	.-2434   	; 0xe42 <__portable_avr_delay_cycles>
    17c4:	14 e1       	ldi	r17, 0x14	; 20
    17c6:	be 01       	movw	r22, r28
    17c8:	6f 5f       	subi	r22, 0xFF	; 255
    17ca:	7f 4f       	sbci	r23, 0xFF	; 255
    17cc:	fb 01       	movw	r30, r22
    17ce:	81 2f       	mov	r24, r17
    17d0:	11 92       	st	Z+, r1
    17d2:	8a 95       	dec	r24
    17d4:	e9 f7       	brne	.-6      	; 0x17d0 <main+0x28>
    17d6:	4a e0       	ldi	r20, 0x0A	; 10
    17d8:	50 e0       	ldi	r21, 0x00	; 0
    17da:	ce 01       	movw	r24, r28
    17dc:	45 96       	adiw	r24, 0x15	; 21
    17de:	19 da       	rcall	.-3022   	; 0xc12 <rb16_init>
    17e0:	be 01       	movw	r22, r28
    17e2:	63 5e       	subi	r22, 0xE3	; 227
    17e4:	7f 4f       	sbci	r23, 0xFF	; 255
    17e6:	88 e2       	ldi	r24, 0x28	; 40
    17e8:	fb 01       	movw	r30, r22
    17ea:	11 92       	st	Z+, r1
    17ec:	8a 95       	dec	r24
    17ee:	e9 f7       	brne	.-6      	; 0x17ea <main+0x42>
    17f0:	4a e0       	ldi	r20, 0x0A	; 10
    17f2:	50 e0       	ldi	r21, 0x00	; 0
    17f4:	ce 01       	movw	r24, r28
    17f6:	8b 5b       	subi	r24, 0xBB	; 187
    17f8:	9f 4f       	sbci	r25, 0xFF	; 255
    17fa:	93 da       	rcall	.-2778   	; 0xd22 <rb32_init>
    17fc:	be 01       	movw	r22, r28
    17fe:	63 5b       	subi	r22, 0xB3	; 179
    1800:	7f 4f       	sbci	r23, 0xFF	; 255
    1802:	fb 01       	movw	r30, r22
    1804:	11 92       	st	Z+, r1
    1806:	1a 95       	dec	r17
    1808:	e9 f7       	brne	.-6      	; 0x1804 <main+0x5c>
    180a:	4a e0       	ldi	r20, 0x0A	; 10
    180c:	50 e0       	ldi	r21, 0x00	; 0
    180e:	ce 01       	movw	r24, r28
    1810:	8f 59       	subi	r24, 0x9F	; 159
    1812:	9f 4f       	sbci	r25, 0xFF	; 255
    1814:	fe d9       	rcall	.-3076   	; 0xc12 <rb16_init>
    1816:	af 96       	adiw	r28, 0x2f	; 47
    1818:	1f ae       	std	Y+63, r1	; 0x3f
    181a:	af 97       	sbiw	r28, 0x2f	; 47
    181c:	ae 96       	adiw	r28, 0x2e	; 46
    181e:	1f ae       	std	Y+63, r1	; 0x3f
    1820:	ae 97       	sbiw	r28, 0x2e	; 46
    1822:	0f 2e       	mov	r0, r31
    1824:	fc e0       	ldi	r31, 0x0C	; 12
    1826:	cf 2e       	mov	r12, r31
    1828:	f1 e2       	ldi	r31, 0x21	; 33
    182a:	df 2e       	mov	r13, r31
    182c:	f0 2d       	mov	r31, r0
    182e:	be 01       	movw	r22, r28
    1830:	6b 5b       	subi	r22, 0xBB	; 187
    1832:	7f 4f       	sbci	r23, 0xFF	; 255
    1834:	ce 01       	movw	r24, r28
    1836:	45 96       	adiw	r24, 0x15	; 21
    1838:	f9 dd       	rcall	.-1038   	; 0x142c <data_collect>
    183a:	78 de       	rcall	.-784    	; 0x152c <state_check>
    183c:	80 91 ef 20 	lds	r24, 0x20EF	; 0x8020ef <state>
    1840:	81 30       	cpi	r24, 0x01	; 1
    1842:	41 f0       	breq	.+16     	; 0x1854 <main+0xac>
    1844:	08 f4       	brcc	.+2      	; 0x1848 <main+0xa0>
    1846:	5a c0       	rjmp	.+180    	; 0x18fc <main+0x154>
    1848:	82 30       	cpi	r24, 0x02	; 2
    184a:	01 f1       	breq	.+64     	; 0x188c <main+0xe4>
    184c:	83 30       	cpi	r24, 0x03	; 3
    184e:	09 f4       	brne	.+2      	; 0x1852 <main+0xaa>
    1850:	49 c0       	rjmp	.+146    	; 0x18e4 <main+0x13c>
    1852:	52 c0       	rjmp	.+164    	; 0x18f8 <main+0x150>
    1854:	20 e0       	ldi	r18, 0x00	; 0
    1856:	30 e0       	ldi	r19, 0x00	; 0
    1858:	46 e1       	ldi	r20, 0x16	; 22
    185a:	54 e4       	ldi	r21, 0x44	; 68
    185c:	60 91 c8 20 	lds	r22, 0x20C8	; 0x8020c8 <alt>
    1860:	70 91 c9 20 	lds	r23, 0x20C9	; 0x8020c9 <alt+0x1>
    1864:	80 91 ca 20 	lds	r24, 0x20CA	; 0x8020ca <alt+0x2>
    1868:	90 91 cb 20 	lds	r25, 0x20CB	; 0x8020cb <alt+0x3>
    186c:	0e 94 aa 16 	call	0x2d54	; 0x2d54 <__gesf2>
    1870:	18 16       	cp	r1, r24
    1872:	0c f0       	brlt	.+2      	; 0x1876 <main+0xce>
    1874:	43 c0       	rjmp	.+134    	; 0x18fc <main+0x154>
    1876:	ae 96       	adiw	r28, 0x2e	; 46
    1878:	ff ad       	ldd	r31, Y+63	; 0x3f
    187a:	ae 97       	sbiw	r28, 0x2e	; 46
    187c:	f1 11       	cpse	r31, r1
    187e:	3e c0       	rjmp	.+124    	; 0x18fc <main+0x154>
    1880:	5b d8       	rcall	.-3914   	; 0x938 <cam_switch>
    1882:	81 e0       	ldi	r24, 0x01	; 1
    1884:	ae 96       	adiw	r28, 0x2e	; 46
    1886:	8f af       	std	Y+63, r24	; 0x3f
    1888:	ae 97       	sbiw	r28, 0x2e	; 46
    188a:	38 c0       	rjmp	.+112    	; 0x18fc <main+0x154>
    188c:	ae 96       	adiw	r28, 0x2e	; 46
    188e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1890:	ae 97       	sbiw	r28, 0x2e	; 46
    1892:	91 11       	cpse	r25, r1
    1894:	05 c0       	rjmp	.+10     	; 0x18a0 <main+0xf8>
    1896:	50 d8       	rcall	.-3936   	; 0x938 <cam_switch>
    1898:	e1 e0       	ldi	r30, 0x01	; 1
    189a:	ae 96       	adiw	r28, 0x2e	; 46
    189c:	ef af       	std	Y+63, r30	; 0x3f
    189e:	ae 97       	sbiw	r28, 0x2e	; 46
    18a0:	20 e0       	ldi	r18, 0x00	; 0
    18a2:	30 e0       	ldi	r19, 0x00	; 0
    18a4:	41 ee       	ldi	r20, 0xE1	; 225
    18a6:	53 e4       	ldi	r21, 0x43	; 67
    18a8:	60 91 c8 20 	lds	r22, 0x20C8	; 0x8020c8 <alt>
    18ac:	70 91 c9 20 	lds	r23, 0x20C9	; 0x8020c9 <alt+0x1>
    18b0:	80 91 ca 20 	lds	r24, 0x20CA	; 0x8020ca <alt+0x2>
    18b4:	90 91 cb 20 	lds	r25, 0x20CB	; 0x8020cb <alt+0x3>
    18b8:	0e 94 d1 14 	call	0x29a2	; 0x29a2 <__subsf3>
    18bc:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__fixsfsi>
    18c0:	67 5f       	subi	r22, 0xF7	; 247
    18c2:	7f 4f       	sbci	r23, 0xFF	; 255
    18c4:	63 31       	cpi	r22, 0x13	; 19
    18c6:	71 05       	cpc	r23, r1
    18c8:	20 f4       	brcc	.+8      	; 0x18d2 <main+0x12a>
    18ca:	81 e0       	ldi	r24, 0x01	; 1
    18cc:	80 93 ee 20 	sts	0x20EE, r24	; 0x8020ee <released>
    18d0:	2c d8       	rcall	.-4008   	; 0x92a <hall_sensor_init>
    18d2:	80 91 ee 20 	lds	r24, 0x20EE	; 0x8020ee <released>
    18d6:	88 23       	and	r24, r24
    18d8:	89 f0       	breq	.+34     	; 0x18fc <main+0x154>
    18da:	ce 01       	movw	r24, r28
    18dc:	8f 59       	subi	r24, 0x9F	; 159
    18de:	9f 4f       	sbci	r25, 0xFF	; 255
    18e0:	75 de       	rcall	.-790    	; 0x15cc <servo_pid>
    18e2:	0c c0       	rjmp	.+24     	; 0x18fc <main+0x154>
    18e4:	af 96       	adiw	r28, 0x2f	; 47
    18e6:	ff ad       	ldd	r31, Y+63	; 0x3f
    18e8:	af 97       	sbiw	r28, 0x2f	; 47
    18ea:	f1 11       	cpse	r31, r1
    18ec:	07 c0       	rjmp	.+14     	; 0x18fc <main+0x154>
    18ee:	81 e0       	ldi	r24, 0x01	; 1
    18f0:	af 96       	adiw	r28, 0x2f	; 47
    18f2:	8f af       	std	Y+63, r24	; 0x3f
    18f4:	af 97       	sbiw	r28, 0x2f	; 47
    18f6:	02 c0       	rjmp	.+4      	; 0x18fc <main+0x154>
    18f8:	10 92 ef 20 	sts	0x20EF, r1	; 0x8020ef <state>
    18fc:	e0 90 d4 20 	lds	r14, 0x20D4	; 0x8020d4 <packets>
    1900:	f0 90 d5 20 	lds	r15, 0x20D5	; 0x8020d5 <packets+0x1>
    1904:	9f ef       	ldi	r25, 0xFF	; 255
    1906:	e9 1a       	sub	r14, r25
    1908:	f9 0a       	sbc	r15, r25
    190a:	e0 92 d4 20 	sts	0x20D4, r14	; 0x8020d4 <packets>
    190e:	f0 92 d5 20 	sts	0x20D5, r15	; 0x8020d5 <packets+0x1>
    1912:	20 90 d6 20 	lds	r2, 0x20D6	; 0x8020d6 <timer>
    1916:	30 90 d7 20 	lds	r3, 0x20D7	; 0x8020d7 <timer+0x1>
    191a:	21 14       	cp	r2, r1
    191c:	31 04       	cpc	r3, r1
    191e:	41 f0       	breq	.+16     	; 0x1930 <main+0x188>
    1920:	c7 01       	movw	r24, r14
    1922:	b1 01       	movw	r22, r2
    1924:	0e 94 60 18 	call	0x30c0	; 0x30c0 <__udivmodhi4>
    1928:	60 93 19 20 	sts	0x2019, r22	; 0x802019 <rate>
    192c:	70 93 1a 20 	sts	0x201A, r23	; 0x80201a <rate+0x1>
    1930:	60 91 b0 20 	lds	r22, 0x20B0	; 0x8020b0 <gps_alt>
    1934:	70 91 b1 20 	lds	r23, 0x20B1	; 0x8020b1 <gps_alt+0x1>
    1938:	80 91 b2 20 	lds	r24, 0x20B2	; 0x8020b2 <gps_alt+0x2>
    193c:	90 91 b3 20 	lds	r25, 0x20B3	; 0x8020b3 <gps_alt+0x3>
    1940:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__fixsfsi>
    1944:	16 2f       	mov	r17, r22
    1946:	07 2f       	mov	r16, r23
    1948:	80 90 b4 20 	lds	r8, 0x20B4	; 0x8020b4 <gps_long>
    194c:	90 90 b5 20 	lds	r9, 0x20B5	; 0x8020b5 <gps_long+0x1>
    1950:	a0 90 b6 20 	lds	r10, 0x20B6	; 0x8020b6 <gps_long+0x2>
    1954:	b0 90 b7 20 	lds	r11, 0x20B7	; 0x8020b7 <gps_long+0x3>
    1958:	40 90 b8 20 	lds	r4, 0x20B8	; 0x8020b8 <gps_lat>
    195c:	50 90 b9 20 	lds	r5, 0x20B9	; 0x8020b9 <gps_lat+0x1>
    1960:	60 90 ba 20 	lds	r6, 0x20BA	; 0x8020ba <gps_lat+0x2>
    1964:	70 90 bb 20 	lds	r7, 0x20BB	; 0x8020bb <gps_lat+0x3>
    1968:	60 91 bc 20 	lds	r22, 0x20BC	; 0x8020bc <gps_t>
    196c:	70 91 bd 20 	lds	r23, 0x20BD	; 0x8020bd <gps_t+0x1>
    1970:	80 91 be 20 	lds	r24, 0x20BE	; 0x8020be <gps_t+0x2>
    1974:	90 91 bf 20 	lds	r25, 0x20BF	; 0x8020bf <gps_t+0x3>
    1978:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__fixsfsi>
    197c:	ad 96       	adiw	r28, 0x2d	; 45
    197e:	6c af       	std	Y+60, r22	; 0x3c
    1980:	7d af       	std	Y+61, r23	; 0x3d
    1982:	8e af       	std	Y+62, r24	; 0x3e
    1984:	9f af       	std	Y+63, r25	; 0x3f
    1986:	ad 97       	sbiw	r28, 0x2d	; 45
    1988:	60 91 9e 20 	lds	r22, 0x209E	; 0x80209e <__data_end>
    198c:	70 91 9f 20 	lds	r23, 0x209F	; 0x80209f <__data_end+0x1>
    1990:	80 91 a0 20 	lds	r24, 0x20A0	; 0x8020a0 <__data_end+0x2>
    1994:	90 91 a1 20 	lds	r25, 0x20A1	; 0x8020a1 <__data_end+0x3>
    1998:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__fixsfsi>
    199c:	7f 93       	push	r23
    199e:	6f 93       	push	r22
    19a0:	80 91 ef 20 	lds	r24, 0x20EF	; 0x8020ef <state>
    19a4:	1f 92       	push	r1
    19a6:	8f 93       	push	r24
    19a8:	60 91 a2 20 	lds	r22, 0x20A2	; 0x8020a2 <rpm>
    19ac:	70 91 a3 20 	lds	r23, 0x20A3	; 0x8020a3 <rpm+0x1>
    19b0:	80 91 a4 20 	lds	r24, 0x20A4	; 0x8020a4 <rpm+0x2>
    19b4:	90 91 a5 20 	lds	r25, 0x20A5	; 0x8020a5 <rpm+0x3>
    19b8:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__fixsfsi>
    19bc:	7f 93       	push	r23
    19be:	6f 93       	push	r22
    19c0:	60 91 a6 20 	lds	r22, 0x20A6	; 0x8020a6 <roll>
    19c4:	70 91 a7 20 	lds	r23, 0x20A7	; 0x8020a7 <roll+0x1>
    19c8:	80 91 a8 20 	lds	r24, 0x20A8	; 0x8020a8 <roll+0x2>
    19cc:	90 91 a9 20 	lds	r25, 0x20A9	; 0x8020a9 <roll+0x3>
    19d0:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__fixsfsi>
    19d4:	7f 93       	push	r23
    19d6:	6f 93       	push	r22
    19d8:	60 91 aa 20 	lds	r22, 0x20AA	; 0x8020aa <pitch>
    19dc:	70 91 ab 20 	lds	r23, 0x20AB	; 0x8020ab <pitch+0x1>
    19e0:	80 91 ac 20 	lds	r24, 0x20AC	; 0x8020ac <pitch+0x2>
    19e4:	90 91 ad 20 	lds	r25, 0x20AD	; 0x8020ad <pitch+0x3>
    19e8:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__fixsfsi>
    19ec:	7f 93       	push	r23
    19ee:	6f 93       	push	r22
    19f0:	80 91 af 20 	lds	r24, 0x20AF	; 0x8020af <gps_sats+0x1>
    19f4:	8f 93       	push	r24
    19f6:	80 91 ae 20 	lds	r24, 0x20AE	; 0x8020ae <gps_sats>
    19fa:	8f 93       	push	r24
    19fc:	81 2f       	mov	r24, r17
    19fe:	90 2f       	mov	r25, r16
    1a00:	88 0f       	add	r24, r24
    1a02:	99 1f       	adc	r25, r25
    1a04:	9c 01       	movw	r18, r24
    1a06:	22 0f       	add	r18, r18
    1a08:	33 1f       	adc	r19, r19
    1a0a:	22 0f       	add	r18, r18
    1a0c:	33 1f       	adc	r19, r19
    1a0e:	82 0f       	add	r24, r18
    1a10:	93 1f       	adc	r25, r19
    1a12:	6a e0       	ldi	r22, 0x0A	; 10
    1a14:	70 e0       	ldi	r23, 0x00	; 0
    1a16:	0e 94 74 18 	call	0x30e8	; 0x30e8 <__divmodhi4>
    1a1a:	9f 93       	push	r25
    1a1c:	8f 93       	push	r24
    1a1e:	0f 93       	push	r16
    1a20:	1f 93       	push	r17
    1a22:	20 e0       	ldi	r18, 0x00	; 0
    1a24:	34 e2       	ldi	r19, 0x24	; 36
    1a26:	44 e7       	ldi	r20, 0x74	; 116
    1a28:	59 e4       	ldi	r21, 0x49	; 73
    1a2a:	c5 01       	movw	r24, r10
    1a2c:	b4 01       	movw	r22, r8
    1a2e:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
    1a32:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__fixsfsi>
    1a36:	20 e4       	ldi	r18, 0x40	; 64
    1a38:	32 e4       	ldi	r19, 0x42	; 66
    1a3a:	4f e0       	ldi	r20, 0x0F	; 15
    1a3c:	50 e0       	ldi	r21, 0x00	; 0
    1a3e:	0e 94 a9 18 	call	0x3152	; 0x3152 <__divmodsi4>
    1a42:	9b 01       	movw	r18, r22
    1a44:	77 23       	and	r23, r23
    1a46:	24 f4       	brge	.+8      	; 0x1a50 <main+0x2a8>
    1a48:	22 27       	eor	r18, r18
    1a4a:	33 27       	eor	r19, r19
    1a4c:	26 1b       	sub	r18, r22
    1a4e:	37 0b       	sbc	r19, r23
    1a50:	c9 01       	movw	r24, r18
    1a52:	33 0f       	add	r19, r19
    1a54:	aa 0b       	sbc	r26, r26
    1a56:	bb 0b       	sbc	r27, r27
    1a58:	bf 93       	push	r27
    1a5a:	af 93       	push	r26
    1a5c:	9f 93       	push	r25
    1a5e:	8f 93       	push	r24
    1a60:	c5 01       	movw	r24, r10
    1a62:	b4 01       	movw	r22, r8
    1a64:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__fixsfsi>
    1a68:	7f 93       	push	r23
    1a6a:	6f 93       	push	r22
    1a6c:	20 e0       	ldi	r18, 0x00	; 0
    1a6e:	34 e2       	ldi	r19, 0x24	; 36
    1a70:	44 e7       	ldi	r20, 0x74	; 116
    1a72:	59 e4       	ldi	r21, 0x49	; 73
    1a74:	c3 01       	movw	r24, r6
    1a76:	b2 01       	movw	r22, r4
    1a78:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
    1a7c:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__fixsfsi>
    1a80:	20 e4       	ldi	r18, 0x40	; 64
    1a82:	32 e4       	ldi	r19, 0x42	; 66
    1a84:	4f e0       	ldi	r20, 0x0F	; 15
    1a86:	50 e0       	ldi	r21, 0x00	; 0
    1a88:	0e 94 a9 18 	call	0x3152	; 0x3152 <__divmodsi4>
    1a8c:	9f 93       	push	r25
    1a8e:	8f 93       	push	r24
    1a90:	7f 93       	push	r23
    1a92:	6f 93       	push	r22
    1a94:	c3 01       	movw	r24, r6
    1a96:	b2 01       	movw	r22, r4
    1a98:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__fixsfsi>
    1a9c:	7f 93       	push	r23
    1a9e:	6f 93       	push	r22
    1aa0:	ad 96       	adiw	r28, 0x2d	; 45
    1aa2:	6c ad       	ldd	r22, Y+60	; 0x3c
    1aa4:	7d ad       	ldd	r23, Y+61	; 0x3d
    1aa6:	8e ad       	ldd	r24, Y+62	; 0x3e
    1aa8:	9f ad       	ldd	r25, Y+63	; 0x3f
    1aaa:	ad 97       	sbiw	r28, 0x2d	; 45
    1aac:	24 e6       	ldi	r18, 0x64	; 100
    1aae:	30 e0       	ldi	r19, 0x00	; 0
    1ab0:	40 e0       	ldi	r20, 0x00	; 0
    1ab2:	50 e0       	ldi	r21, 0x00	; 0
    1ab4:	0e 94 a9 18 	call	0x3152	; 0x3152 <__divmodsi4>
    1ab8:	7f 93       	push	r23
    1aba:	6f 93       	push	r22
    1abc:	ad 96       	adiw	r28, 0x2d	; 45
    1abe:	6c ad       	ldd	r22, Y+60	; 0x3c
    1ac0:	7d ad       	ldd	r23, Y+61	; 0x3d
    1ac2:	8e ad       	ldd	r24, Y+62	; 0x3e
    1ac4:	9f ad       	ldd	r25, Y+63	; 0x3f
    1ac6:	ad 97       	sbiw	r28, 0x2d	; 45
    1ac8:	20 e1       	ldi	r18, 0x10	; 16
    1aca:	37 e2       	ldi	r19, 0x27	; 39
    1acc:	40 e0       	ldi	r20, 0x00	; 0
    1ace:	50 e0       	ldi	r21, 0x00	; 0
    1ad0:	0e 94 a9 18 	call	0x3152	; 0x3152 <__divmodsi4>
    1ad4:	12 2f       	mov	r17, r18
    1ad6:	03 2f       	mov	r16, r19
    1ad8:	24 e6       	ldi	r18, 0x64	; 100
    1ada:	30 e0       	ldi	r19, 0x00	; 0
    1adc:	40 e0       	ldi	r20, 0x00	; 0
    1ade:	50 e0       	ldi	r21, 0x00	; 0
    1ae0:	0e 94 a9 18 	call	0x3152	; 0x3152 <__divmodsi4>
    1ae4:	3f 93       	push	r19
    1ae6:	2f 93       	push	r18
    1ae8:	0f 93       	push	r16
    1aea:	1f 93       	push	r17
    1aec:	60 91 c4 20 	lds	r22, 0x20C4	; 0x8020c4 <volt>
    1af0:	70 91 c5 20 	lds	r23, 0x20C5	; 0x8020c5 <volt+0x1>
    1af4:	80 91 c6 20 	lds	r24, 0x20C6	; 0x8020c6 <volt+0x2>
    1af8:	90 91 c7 20 	lds	r25, 0x20C7	; 0x8020c7 <volt+0x3>
    1afc:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__fixsfsi>
    1b00:	7f 93       	push	r23
    1b02:	6f 93       	push	r22
    1b04:	23 e3       	ldi	r18, 0x33	; 51
    1b06:	33 e9       	ldi	r19, 0x93	; 147
    1b08:	48 e8       	ldi	r20, 0x88	; 136
    1b0a:	53 e4       	ldi	r21, 0x43	; 67
    1b0c:	60 91 cc 20 	lds	r22, 0x20CC	; 0x8020cc <temp>
    1b10:	70 91 cd 20 	lds	r23, 0x20CD	; 0x8020cd <temp+0x1>
    1b14:	80 91 ce 20 	lds	r24, 0x20CE	; 0x8020ce <temp+0x2>
    1b18:	90 91 cf 20 	lds	r25, 0x20CF	; 0x8020cf <temp+0x3>
    1b1c:	42 d7       	rcall	.+3716   	; 0x29a2 <__subsf3>
    1b1e:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__fixsfsi>
    1b22:	7f 93       	push	r23
    1b24:	6f 93       	push	r22
    1b26:	60 91 d0 20 	lds	r22, 0x20D0	; 0x8020d0 <press>
    1b2a:	70 91 d1 20 	lds	r23, 0x20D1	; 0x8020d1 <press+0x1>
    1b2e:	80 91 d2 20 	lds	r24, 0x20D2	; 0x8020d2 <press+0x2>
    1b32:	90 91 d3 20 	lds	r25, 0x20D3	; 0x8020d3 <press+0x3>
    1b36:	0e 94 a2 15 	call	0x2b44	; 0x2b44 <__fixsfsi>
    1b3a:	9f 93       	push	r25
    1b3c:	8f 93       	push	r24
    1b3e:	7f 93       	push	r23
    1b40:	6f 93       	push	r22
    1b42:	60 91 c8 20 	lds	r22, 0x20C8	; 0x8020c8 <alt>
    1b46:	70 91 c9 20 	lds	r23, 0x20C9	; 0x8020c9 <alt+0x1>
    1b4a:	80 91 ca 20 	lds	r24, 0x20CA	; 0x8020ca <alt+0x2>
    1b4e:	90 91 cb 20 	lds	r25, 0x20CB	; 0x8020cb <alt+0x3>
    1b52:	f8 d7       	rcall	.+4080   	; 0x2b44 <__fixsfsi>
    1b54:	7f 93       	push	r23
    1b56:	6f 93       	push	r22
    1b58:	ff 92       	push	r15
    1b5a:	ef 92       	push	r14
    1b5c:	3f 92       	push	r3
    1b5e:	2f 92       	push	r2
    1b60:	80 91 18 20 	lds	r24, 0x2018	; 0x802018 <format+0x1>
    1b64:	8f 93       	push	r24
    1b66:	80 91 17 20 	lds	r24, 0x2017	; 0x802017 <format>
    1b6a:	8f 93       	push	r24
    1b6c:	df 92       	push	r13
    1b6e:	cf 92       	push	r12
    1b70:	0e 94 41 19 	call	0x3282	; 0x3282 <sprintf>
    1b74:	cd bf       	out	0x3d, r28	; 61
    1b76:	de bf       	out	0x3e, r29	; 62
    1b78:	5a ce       	rjmp	.-844    	; 0x182e <main+0x86>

00001b7a <reset>:
    1b7a:	10 92 d0 20 	sts	0x20D0, r1	; 0x8020d0 <press>
    1b7e:	10 92 d1 20 	sts	0x20D1, r1	; 0x8020d1 <press+0x1>
    1b82:	10 92 d2 20 	sts	0x20D2, r1	; 0x8020d2 <press+0x2>
    1b86:	10 92 d3 20 	sts	0x20D3, r1	; 0x8020d3 <press+0x3>
    1b8a:	10 92 cc 20 	sts	0x20CC, r1	; 0x8020cc <temp>
    1b8e:	10 92 cd 20 	sts	0x20CD, r1	; 0x8020cd <temp+0x1>
    1b92:	10 92 ce 20 	sts	0x20CE, r1	; 0x8020ce <temp+0x2>
    1b96:	10 92 cf 20 	sts	0x20CF, r1	; 0x8020cf <temp+0x3>
    1b9a:	10 92 c8 20 	sts	0x20C8, r1	; 0x8020c8 <alt>
    1b9e:	10 92 c9 20 	sts	0x20C9, r1	; 0x8020c9 <alt+0x1>
    1ba2:	10 92 ca 20 	sts	0x20CA, r1	; 0x8020ca <alt+0x2>
    1ba6:	10 92 cb 20 	sts	0x20CB, r1	; 0x8020cb <alt+0x3>
    1baa:	10 92 c4 20 	sts	0x20C4, r1	; 0x8020c4 <volt>
    1bae:	10 92 c5 20 	sts	0x20C5, r1	; 0x8020c5 <volt+0x1>
    1bb2:	10 92 c6 20 	sts	0x20C6, r1	; 0x8020c6 <volt+0x2>
    1bb6:	10 92 c7 20 	sts	0x20C7, r1	; 0x8020c7 <volt+0x3>
    1bba:	10 92 c0 20 	sts	0x20C0, r1	; 0x8020c0 <velocity>
    1bbe:	10 92 c1 20 	sts	0x20C1, r1	; 0x8020c1 <velocity+0x1>
    1bc2:	10 92 c2 20 	sts	0x20C2, r1	; 0x8020c2 <velocity+0x2>
    1bc6:	10 92 c3 20 	sts	0x20C3, r1	; 0x8020c3 <velocity+0x3>
    1bca:	10 92 bc 20 	sts	0x20BC, r1	; 0x8020bc <gps_t>
    1bce:	10 92 bd 20 	sts	0x20BD, r1	; 0x8020bd <gps_t+0x1>
    1bd2:	10 92 be 20 	sts	0x20BE, r1	; 0x8020be <gps_t+0x2>
    1bd6:	10 92 bf 20 	sts	0x20BF, r1	; 0x8020bf <gps_t+0x3>
    1bda:	10 92 b8 20 	sts	0x20B8, r1	; 0x8020b8 <gps_lat>
    1bde:	10 92 b9 20 	sts	0x20B9, r1	; 0x8020b9 <gps_lat+0x1>
    1be2:	10 92 ba 20 	sts	0x20BA, r1	; 0x8020ba <gps_lat+0x2>
    1be6:	10 92 bb 20 	sts	0x20BB, r1	; 0x8020bb <gps_lat+0x3>
    1bea:	10 92 b4 20 	sts	0x20B4, r1	; 0x8020b4 <gps_long>
    1bee:	10 92 b5 20 	sts	0x20B5, r1	; 0x8020b5 <gps_long+0x1>
    1bf2:	10 92 b6 20 	sts	0x20B6, r1	; 0x8020b6 <gps_long+0x2>
    1bf6:	10 92 b7 20 	sts	0x20B7, r1	; 0x8020b7 <gps_long+0x3>
    1bfa:	10 92 b0 20 	sts	0x20B0, r1	; 0x8020b0 <gps_alt>
    1bfe:	10 92 b1 20 	sts	0x20B1, r1	; 0x8020b1 <gps_alt+0x1>
    1c02:	10 92 b2 20 	sts	0x20B2, r1	; 0x8020b2 <gps_alt+0x2>
    1c06:	10 92 b3 20 	sts	0x20B3, r1	; 0x8020b3 <gps_alt+0x3>
    1c0a:	10 92 ae 20 	sts	0x20AE, r1	; 0x8020ae <gps_sats>
    1c0e:	10 92 af 20 	sts	0x20AF, r1	; 0x8020af <gps_sats+0x1>
    1c12:	10 92 aa 20 	sts	0x20AA, r1	; 0x8020aa <pitch>
    1c16:	10 92 ab 20 	sts	0x20AB, r1	; 0x8020ab <pitch+0x1>
    1c1a:	10 92 ac 20 	sts	0x20AC, r1	; 0x8020ac <pitch+0x2>
    1c1e:	10 92 ad 20 	sts	0x20AD, r1	; 0x8020ad <pitch+0x3>
    1c22:	10 92 a6 20 	sts	0x20A6, r1	; 0x8020a6 <roll>
    1c26:	10 92 a7 20 	sts	0x20A7, r1	; 0x8020a7 <roll+0x1>
    1c2a:	10 92 a8 20 	sts	0x20A8, r1	; 0x8020a8 <roll+0x2>
    1c2e:	10 92 a9 20 	sts	0x20A9, r1	; 0x8020a9 <roll+0x3>
    1c32:	10 92 a2 20 	sts	0x20A2, r1	; 0x8020a2 <rpm>
    1c36:	10 92 a3 20 	sts	0x20A3, r1	; 0x8020a3 <rpm+0x1>
    1c3a:	10 92 a4 20 	sts	0x20A4, r1	; 0x8020a4 <rpm+0x2>
    1c3e:	10 92 a5 20 	sts	0x20A5, r1	; 0x8020a5 <rpm+0x3>
    1c42:	10 92 9e 20 	sts	0x209E, r1	; 0x80209e <__data_end>
    1c46:	10 92 9f 20 	sts	0x209F, r1	; 0x80209f <__data_end+0x1>
    1c4a:	10 92 a0 20 	sts	0x20A0, r1	; 0x8020a0 <__data_end+0x2>
    1c4e:	10 92 a1 20 	sts	0x20A1, r1	; 0x8020a1 <__data_end+0x3>
    1c52:	10 92 ef 20 	sts	0x20EF, r1	; 0x8020ef <state>
    1c56:	10 92 ee 20 	sts	0x20EE, r1	; 0x8020ee <released>
    1c5a:	53 dd       	rcall	.-1370   	; 0x1702 <system_init>
    1c5c:	81 e0       	ldi	r24, 0x01	; 1
    1c5e:	80 93 ed 20 	sts	0x20ED, r24	; 0x8020ed <reset_received>
    1c62:	08 95       	ret

00001c64 <cali_alt>:
    1c64:	80 91 d0 20 	lds	r24, 0x20D0	; 0x8020d0 <press>
    1c68:	90 91 d1 20 	lds	r25, 0x20D1	; 0x8020d1 <press+0x1>
    1c6c:	a0 91 d2 20 	lds	r26, 0x20D2	; 0x8020d2 <press+0x2>
    1c70:	b0 91 d3 20 	lds	r27, 0x20D3	; 0x8020d3 <press+0x3>
    1c74:	80 93 2d 20 	sts	0x202D, r24	; 0x80202d <ground_p>
    1c78:	90 93 2e 20 	sts	0x202E, r25	; 0x80202e <ground_p+0x1>
    1c7c:	a0 93 2f 20 	sts	0x202F, r26	; 0x80202f <ground_p+0x2>
    1c80:	b0 93 30 20 	sts	0x2030, r27	; 0x802030 <ground_p+0x3>
    1c84:	80 91 c8 20 	lds	r24, 0x20C8	; 0x8020c8 <alt>
    1c88:	90 91 c9 20 	lds	r25, 0x20C9	; 0x8020c9 <alt+0x1>
    1c8c:	a0 91 ca 20 	lds	r26, 0x20CA	; 0x8020ca <alt+0x2>
    1c90:	b0 91 cb 20 	lds	r27, 0x20CB	; 0x8020cb <alt+0x3>
    1c94:	80 93 e9 20 	sts	0x20E9, r24	; 0x8020e9 <ground_a>
    1c98:	90 93 ea 20 	sts	0x20EA, r25	; 0x8020ea <ground_a+0x1>
    1c9c:	a0 93 eb 20 	sts	0x20EB, r26	; 0x8020eb <ground_a+0x2>
    1ca0:	b0 93 ec 20 	sts	0x20EC, r27	; 0x8020ec <ground_a+0x3>
    1ca4:	83 e3       	ldi	r24, 0x33	; 51
    1ca6:	93 e1       	ldi	r25, 0x13	; 19
    1ca8:	a0 e9       	ldi	r26, 0x90	; 144
    1caa:	b3 e4       	ldi	r27, 0x43	; 67
    1cac:	80 93 29 20 	sts	0x2029, r24	; 0x802029 <ground_t>
    1cb0:	90 93 2a 20 	sts	0x202A, r25	; 0x80202a <ground_t+0x1>
    1cb4:	a0 93 2b 20 	sts	0x202B, r26	; 0x80202b <ground_t+0x2>
    1cb8:	b0 93 2c 20 	sts	0x202C, r27	; 0x80202c <ground_t+0x3>
    1cbc:	08 95       	ret

00001cbe <send_gps>:
    1cbe:	8f 92       	push	r8
    1cc0:	9f 92       	push	r9
    1cc2:	af 92       	push	r10
    1cc4:	bf 92       	push	r11
    1cc6:	cf 92       	push	r12
    1cc8:	df 92       	push	r13
    1cca:	ef 92       	push	r14
    1ccc:	ff 92       	push	r15
    1cce:	0f 93       	push	r16
    1cd0:	1f 93       	push	r17
    1cd2:	cf 93       	push	r28
    1cd4:	df 93       	push	r29
    1cd6:	cd b7       	in	r28, 0x3d	; 61
    1cd8:	de b7       	in	r29, 0x3e	; 62
    1cda:	c6 54       	subi	r28, 0x46	; 70
    1cdc:	d1 09       	sbc	r29, r1
    1cde:	cd bf       	out	0x3d, r28	; 61
    1ce0:	de bf       	out	0x3e, r29	; 62
    1ce2:	60 91 b4 20 	lds	r22, 0x20B4	; 0x8020b4 <gps_long>
    1ce6:	70 91 b5 20 	lds	r23, 0x20B5	; 0x8020b5 <gps_long+0x1>
    1cea:	80 91 b6 20 	lds	r24, 0x20B6	; 0x8020b6 <gps_long+0x2>
    1cee:	90 91 b7 20 	lds	r25, 0x20B7	; 0x8020b7 <gps_long+0x3>
    1cf2:	28 d7       	rcall	.+3664   	; 0x2b44 <__fixsfsi>
    1cf4:	16 2f       	mov	r17, r22
    1cf6:	07 2f       	mov	r16, r23
    1cf8:	c0 90 b8 20 	lds	r12, 0x20B8	; 0x8020b8 <gps_lat>
    1cfc:	d0 90 b9 20 	lds	r13, 0x20B9	; 0x8020b9 <gps_lat+0x1>
    1d00:	e0 90 ba 20 	lds	r14, 0x20BA	; 0x8020ba <gps_lat+0x2>
    1d04:	f0 90 bb 20 	lds	r15, 0x20BB	; 0x8020bb <gps_lat+0x3>
    1d08:	a6 2f       	mov	r26, r22
    1d0a:	b7 2f       	mov	r27, r23
    1d0c:	bb 23       	and	r27, r27
    1d0e:	1c f4       	brge	.+6      	; 0x1d16 <send_gps+0x58>
    1d10:	b1 95       	neg	r27
    1d12:	a1 95       	neg	r26
    1d14:	b1 09       	sbc	r27, r1
    1d16:	20 e4       	ldi	r18, 0x40	; 64
    1d18:	32 e4       	ldi	r19, 0x42	; 66
    1d1a:	4f e0       	ldi	r20, 0x0F	; 15
    1d1c:	50 e0       	ldi	r21, 0x00	; 0
    1d1e:	0e 94 cf 18 	call	0x319e	; 0x319e <__mulshisi3>
    1d22:	0f 2e       	mov	r0, r31
    1d24:	f0 e4       	ldi	r31, 0x40	; 64
    1d26:	8f 2e       	mov	r8, r31
    1d28:	f2 e4       	ldi	r31, 0x42	; 66
    1d2a:	9f 2e       	mov	r9, r31
    1d2c:	ff e0       	ldi	r31, 0x0F	; 15
    1d2e:	af 2e       	mov	r10, r31
    1d30:	b1 2c       	mov	r11, r1
    1d32:	f0 2d       	mov	r31, r0
    1d34:	0e 94 a9 18 	call	0x3152	; 0x3152 <__divmodsi4>
    1d38:	9f 93       	push	r25
    1d3a:	8f 93       	push	r24
    1d3c:	7f 93       	push	r23
    1d3e:	6f 93       	push	r22
    1d40:	0f 93       	push	r16
    1d42:	1f 93       	push	r17
    1d44:	20 e0       	ldi	r18, 0x00	; 0
    1d46:	34 e2       	ldi	r19, 0x24	; 36
    1d48:	44 e7       	ldi	r20, 0x74	; 116
    1d4a:	59 e4       	ldi	r21, 0x49	; 73
    1d4c:	c7 01       	movw	r24, r14
    1d4e:	b6 01       	movw	r22, r12
    1d50:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <__mulsf3>
    1d54:	f7 d6       	rcall	.+3566   	; 0x2b44 <__fixsfsi>
    1d56:	a5 01       	movw	r20, r10
    1d58:	94 01       	movw	r18, r8
    1d5a:	0e 94 a9 18 	call	0x3152	; 0x3152 <__divmodsi4>
    1d5e:	9f 93       	push	r25
    1d60:	8f 93       	push	r24
    1d62:	7f 93       	push	r23
    1d64:	6f 93       	push	r22
    1d66:	c7 01       	movw	r24, r14
    1d68:	b6 01       	movw	r22, r12
    1d6a:	ec d6       	rcall	.+3544   	; 0x2b44 <__fixsfsi>
    1d6c:	7f 93       	push	r23
    1d6e:	6f 93       	push	r22
    1d70:	80 91 15 20 	lds	r24, 0x2015	; 0x802015 <gps_msg+0x1>
    1d74:	8f 93       	push	r24
    1d76:	80 91 14 20 	lds	r24, 0x2014	; 0x802014 <gps_msg>
    1d7a:	8f 93       	push	r24
    1d7c:	8e 01       	movw	r16, r28
    1d7e:	0f 5f       	subi	r16, 0xFF	; 255
    1d80:	1f 4f       	sbci	r17, 0xFF	; 255
    1d82:	1f 93       	push	r17
    1d84:	0f 93       	push	r16
    1d86:	0e 94 41 19 	call	0x3282	; 0x3282 <sprintf>
    1d8a:	1f 93       	push	r17
    1d8c:	0f 93       	push	r16
    1d8e:	0e 94 2e 19 	call	0x325c	; 0x325c <printf>
    1d92:	cd bf       	out	0x3d, r28	; 61
    1d94:	de bf       	out	0x3e, r29	; 62
    1d96:	ca 5b       	subi	r28, 0xBA	; 186
    1d98:	df 4f       	sbci	r29, 0xFF	; 255
    1d9a:	cd bf       	out	0x3d, r28	; 61
    1d9c:	de bf       	out	0x3e, r29	; 62
    1d9e:	df 91       	pop	r29
    1da0:	cf 91       	pop	r28
    1da2:	1f 91       	pop	r17
    1da4:	0f 91       	pop	r16
    1da6:	ff 90       	pop	r15
    1da8:	ef 90       	pop	r14
    1daa:	df 90       	pop	r13
    1dac:	cf 90       	pop	r12
    1dae:	bf 90       	pop	r11
    1db0:	af 90       	pop	r10
    1db2:	9f 90       	pop	r9
    1db4:	8f 90       	pop	r8
    1db6:	08 95       	ret

00001db8 <packet>:
    1db8:	4f 92       	push	r4
    1dba:	5f 92       	push	r5
    1dbc:	6f 92       	push	r6
    1dbe:	7f 92       	push	r7
    1dc0:	8f 92       	push	r8
    1dc2:	9f 92       	push	r9
    1dc4:	af 92       	push	r10
    1dc6:	bf 92       	push	r11
    1dc8:	cf 92       	push	r12
    1dca:	df 92       	push	r13
    1dcc:	ef 92       	push	r14
    1dce:	ff 92       	push	r15
    1dd0:	cf 93       	push	r28
    1dd2:	df 93       	push	r29
    1dd4:	60 91 b0 20 	lds	r22, 0x20B0	; 0x8020b0 <gps_alt>
    1dd8:	70 91 b1 20 	lds	r23, 0x20B1	; 0x8020b1 <gps_alt+0x1>
    1ddc:	80 91 b2 20 	lds	r24, 0x20B2	; 0x8020b2 <gps_alt+0x2>
    1de0:	90 91 b3 20 	lds	r25, 0x20B3	; 0x8020b3 <gps_alt+0x3>
    1de4:	af d6       	rcall	.+3422   	; 0x2b44 <__fixsfsi>
    1de6:	c6 2f       	mov	r28, r22
    1de8:	d7 2f       	mov	r29, r23
    1dea:	40 90 b4 20 	lds	r4, 0x20B4	; 0x8020b4 <gps_long>
    1dee:	50 90 b5 20 	lds	r5, 0x20B5	; 0x8020b5 <gps_long+0x1>
    1df2:	60 90 b6 20 	lds	r6, 0x20B6	; 0x8020b6 <gps_long+0x2>
    1df6:	70 90 b7 20 	lds	r7, 0x20B7	; 0x8020b7 <gps_long+0x3>
    1dfa:	80 90 b8 20 	lds	r8, 0x20B8	; 0x8020b8 <gps_lat>
    1dfe:	90 90 b9 20 	lds	r9, 0x20B9	; 0x8020b9 <gps_lat+0x1>
    1e02:	a0 90 ba 20 	lds	r10, 0x20BA	; 0x8020ba <gps_lat+0x2>
    1e06:	b0 90 bb 20 	lds	r11, 0x20BB	; 0x8020bb <gps_lat+0x3>
    1e0a:	60 91 bc 20 	lds	r22, 0x20BC	; 0x8020bc <gps_t>
    1e0e:	70 91 bd 20 	lds	r23, 0x20BD	; 0x8020bd <gps_t+0x1>
    1e12:	80 91 be 20 	lds	r24, 0x20BE	; 0x8020be <gps_t+0x2>
    1e16:	90 91 bf 20 	lds	r25, 0x20BF	; 0x8020bf <gps_t+0x3>
    1e1a:	94 d6       	rcall	.+3368   	; 0x2b44 <__fixsfsi>
    1e1c:	6b 01       	movw	r12, r22
    1e1e:	7c 01       	movw	r14, r24
    1e20:	60 91 9e 20 	lds	r22, 0x209E	; 0x80209e <__data_end>
    1e24:	70 91 9f 20 	lds	r23, 0x209F	; 0x80209f <__data_end+0x1>
    1e28:	80 91 a0 20 	lds	r24, 0x20A0	; 0x8020a0 <__data_end+0x2>
    1e2c:	90 91 a1 20 	lds	r25, 0x20A1	; 0x8020a1 <__data_end+0x3>
    1e30:	89 d6       	rcall	.+3346   	; 0x2b44 <__fixsfsi>
    1e32:	7f 93       	push	r23
    1e34:	6f 93       	push	r22
    1e36:	80 91 ef 20 	lds	r24, 0x20EF	; 0x8020ef <state>
    1e3a:	1f 92       	push	r1
    1e3c:	8f 93       	push	r24
    1e3e:	60 91 a2 20 	lds	r22, 0x20A2	; 0x8020a2 <rpm>
    1e42:	70 91 a3 20 	lds	r23, 0x20A3	; 0x8020a3 <rpm+0x1>
    1e46:	80 91 a4 20 	lds	r24, 0x20A4	; 0x8020a4 <rpm+0x2>
    1e4a:	90 91 a5 20 	lds	r25, 0x20A5	; 0x8020a5 <rpm+0x3>
    1e4e:	7a d6       	rcall	.+3316   	; 0x2b44 <__fixsfsi>
    1e50:	7f 93       	push	r23
    1e52:	6f 93       	push	r22
    1e54:	60 91 a6 20 	lds	r22, 0x20A6	; 0x8020a6 <roll>
    1e58:	70 91 a7 20 	lds	r23, 0x20A7	; 0x8020a7 <roll+0x1>
    1e5c:	80 91 a8 20 	lds	r24, 0x20A8	; 0x8020a8 <roll+0x2>
    1e60:	90 91 a9 20 	lds	r25, 0x20A9	; 0x8020a9 <roll+0x3>
    1e64:	6f d6       	rcall	.+3294   	; 0x2b44 <__fixsfsi>
    1e66:	7f 93       	push	r23
    1e68:	6f 93       	push	r22
    1e6a:	60 91 aa 20 	lds	r22, 0x20AA	; 0x8020aa <pitch>
    1e6e:	70 91 ab 20 	lds	r23, 0x20AB	; 0x8020ab <pitch+0x1>
    1e72:	80 91 ac 20 	lds	r24, 0x20AC	; 0x8020ac <pitch+0x2>
    1e76:	90 91 ad 20 	lds	r25, 0x20AD	; 0x8020ad <pitch+0x3>
    1e7a:	64 d6       	rcall	.+3272   	; 0x2b44 <__fixsfsi>
    1e7c:	7f 93       	push	r23
    1e7e:	6f 93       	push	r22
    1e80:	80 91 af 20 	lds	r24, 0x20AF	; 0x8020af <gps_sats+0x1>
    1e84:	8f 93       	push	r24
    1e86:	80 91 ae 20 	lds	r24, 0x20AE	; 0x8020ae <gps_sats>
    1e8a:	8f 93       	push	r24
    1e8c:	8c 2f       	mov	r24, r28
    1e8e:	9d 2f       	mov	r25, r29
    1e90:	88 0f       	add	r24, r24
    1e92:	99 1f       	adc	r25, r25
    1e94:	9c 01       	movw	r18, r24
    1e96:	22 0f       	add	r18, r18
    1e98:	33 1f       	adc	r19, r19
    1e9a:	22 0f       	add	r18, r18
    1e9c:	33 1f       	adc	r19, r19
    1e9e:	82 0f       	add	r24, r18
    1ea0:	93 1f       	adc	r25, r19
    1ea2:	6a e0       	ldi	r22, 0x0A	; 10
    1ea4:	70 e0       	ldi	r23, 0x00	; 0
    1ea6:	0e 94 74 18 	call	0x30e8	; 0x30e8 <__divmodhi4>
    1eaa:	9f 93       	push	r25
    1eac:	8f 93       	push	r24
    1eae:	df 93       	push	r29
    1eb0:	cf 93       	push	r28
    1eb2:	20 e0       	ldi	r18, 0x00	; 0
    1eb4:	34 e2       	ldi	r19, 0x24	; 36
    1eb6:	44 e7       	ldi	r20, 0x74	; 116
    1eb8:	59 e4       	ldi	r21, 0x49	; 73
    1eba:	c3 01       	movw	r24, r6
    1ebc:	b2 01       	movw	r22, r4
    1ebe:	55 d7       	rcall	.+3754   	; 0x2d6a <__mulsf3>
    1ec0:	41 d6       	rcall	.+3202   	; 0x2b44 <__fixsfsi>
    1ec2:	20 e4       	ldi	r18, 0x40	; 64
    1ec4:	32 e4       	ldi	r19, 0x42	; 66
    1ec6:	4f e0       	ldi	r20, 0x0F	; 15
    1ec8:	50 e0       	ldi	r21, 0x00	; 0
    1eca:	0e 94 a9 18 	call	0x3152	; 0x3152 <__divmodsi4>
    1ece:	9b 01       	movw	r18, r22
    1ed0:	77 23       	and	r23, r23
    1ed2:	24 f4       	brge	.+8      	; 0x1edc <packet+0x124>
    1ed4:	22 27       	eor	r18, r18
    1ed6:	33 27       	eor	r19, r19
    1ed8:	26 1b       	sub	r18, r22
    1eda:	37 0b       	sbc	r19, r23
    1edc:	c9 01       	movw	r24, r18
    1ede:	33 0f       	add	r19, r19
    1ee0:	aa 0b       	sbc	r26, r26
    1ee2:	bb 0b       	sbc	r27, r27
    1ee4:	bf 93       	push	r27
    1ee6:	af 93       	push	r26
    1ee8:	9f 93       	push	r25
    1eea:	8f 93       	push	r24
    1eec:	c3 01       	movw	r24, r6
    1eee:	b2 01       	movw	r22, r4
    1ef0:	29 d6       	rcall	.+3154   	; 0x2b44 <__fixsfsi>
    1ef2:	7f 93       	push	r23
    1ef4:	6f 93       	push	r22
    1ef6:	20 e0       	ldi	r18, 0x00	; 0
    1ef8:	34 e2       	ldi	r19, 0x24	; 36
    1efa:	44 e7       	ldi	r20, 0x74	; 116
    1efc:	59 e4       	ldi	r21, 0x49	; 73
    1efe:	c5 01       	movw	r24, r10
    1f00:	b4 01       	movw	r22, r8
    1f02:	33 d7       	rcall	.+3686   	; 0x2d6a <__mulsf3>
    1f04:	1f d6       	rcall	.+3134   	; 0x2b44 <__fixsfsi>
    1f06:	20 e4       	ldi	r18, 0x40	; 64
    1f08:	32 e4       	ldi	r19, 0x42	; 66
    1f0a:	4f e0       	ldi	r20, 0x0F	; 15
    1f0c:	50 e0       	ldi	r21, 0x00	; 0
    1f0e:	0e 94 a9 18 	call	0x3152	; 0x3152 <__divmodsi4>
    1f12:	9f 93       	push	r25
    1f14:	8f 93       	push	r24
    1f16:	7f 93       	push	r23
    1f18:	6f 93       	push	r22
    1f1a:	c5 01       	movw	r24, r10
    1f1c:	b4 01       	movw	r22, r8
    1f1e:	12 d6       	rcall	.+3108   	; 0x2b44 <__fixsfsi>
    1f20:	7f 93       	push	r23
    1f22:	6f 93       	push	r22
    1f24:	0f 2e       	mov	r0, r31
    1f26:	f4 e6       	ldi	r31, 0x64	; 100
    1f28:	8f 2e       	mov	r8, r31
    1f2a:	91 2c       	mov	r9, r1
    1f2c:	a1 2c       	mov	r10, r1
    1f2e:	b1 2c       	mov	r11, r1
    1f30:	f0 2d       	mov	r31, r0
    1f32:	c7 01       	movw	r24, r14
    1f34:	b6 01       	movw	r22, r12
    1f36:	a5 01       	movw	r20, r10
    1f38:	94 01       	movw	r18, r8
    1f3a:	0e 94 a9 18 	call	0x3152	; 0x3152 <__divmodsi4>
    1f3e:	7f 93       	push	r23
    1f40:	6f 93       	push	r22
    1f42:	c7 01       	movw	r24, r14
    1f44:	b6 01       	movw	r22, r12
    1f46:	20 e1       	ldi	r18, 0x10	; 16
    1f48:	37 e2       	ldi	r19, 0x27	; 39
    1f4a:	40 e0       	ldi	r20, 0x00	; 0
    1f4c:	50 e0       	ldi	r21, 0x00	; 0
    1f4e:	0e 94 a9 18 	call	0x3152	; 0x3152 <__divmodsi4>
    1f52:	c2 2f       	mov	r28, r18
    1f54:	d3 2f       	mov	r29, r19
    1f56:	a5 01       	movw	r20, r10
    1f58:	94 01       	movw	r18, r8
    1f5a:	0e 94 a9 18 	call	0x3152	; 0x3152 <__divmodsi4>
    1f5e:	3f 93       	push	r19
    1f60:	2f 93       	push	r18
    1f62:	df 93       	push	r29
    1f64:	cf 93       	push	r28
    1f66:	60 91 c4 20 	lds	r22, 0x20C4	; 0x8020c4 <volt>
    1f6a:	70 91 c5 20 	lds	r23, 0x20C5	; 0x8020c5 <volt+0x1>
    1f6e:	80 91 c6 20 	lds	r24, 0x20C6	; 0x8020c6 <volt+0x2>
    1f72:	90 91 c7 20 	lds	r25, 0x20C7	; 0x8020c7 <volt+0x3>
    1f76:	e6 d5       	rcall	.+3020   	; 0x2b44 <__fixsfsi>
    1f78:	7f 93       	push	r23
    1f7a:	6f 93       	push	r22
    1f7c:	23 e3       	ldi	r18, 0x33	; 51
    1f7e:	33 e9       	ldi	r19, 0x93	; 147
    1f80:	48 e8       	ldi	r20, 0x88	; 136
    1f82:	53 e4       	ldi	r21, 0x43	; 67
    1f84:	60 91 cc 20 	lds	r22, 0x20CC	; 0x8020cc <temp>
    1f88:	70 91 cd 20 	lds	r23, 0x20CD	; 0x8020cd <temp+0x1>
    1f8c:	80 91 ce 20 	lds	r24, 0x20CE	; 0x8020ce <temp+0x2>
    1f90:	90 91 cf 20 	lds	r25, 0x20CF	; 0x8020cf <temp+0x3>
    1f94:	06 d5       	rcall	.+2572   	; 0x29a2 <__subsf3>
    1f96:	d6 d5       	rcall	.+2988   	; 0x2b44 <__fixsfsi>
    1f98:	7f 93       	push	r23
    1f9a:	6f 93       	push	r22
    1f9c:	60 91 d0 20 	lds	r22, 0x20D0	; 0x8020d0 <press>
    1fa0:	70 91 d1 20 	lds	r23, 0x20D1	; 0x8020d1 <press+0x1>
    1fa4:	80 91 d2 20 	lds	r24, 0x20D2	; 0x8020d2 <press+0x2>
    1fa8:	90 91 d3 20 	lds	r25, 0x20D3	; 0x8020d3 <press+0x3>
    1fac:	cb d5       	rcall	.+2966   	; 0x2b44 <__fixsfsi>
    1fae:	9f 93       	push	r25
    1fb0:	8f 93       	push	r24
    1fb2:	7f 93       	push	r23
    1fb4:	6f 93       	push	r22
    1fb6:	60 91 c8 20 	lds	r22, 0x20C8	; 0x8020c8 <alt>
    1fba:	70 91 c9 20 	lds	r23, 0x20C9	; 0x8020c9 <alt+0x1>
    1fbe:	80 91 ca 20 	lds	r24, 0x20CA	; 0x8020ca <alt+0x2>
    1fc2:	90 91 cb 20 	lds	r25, 0x20CB	; 0x8020cb <alt+0x3>
    1fc6:	be d5       	rcall	.+2940   	; 0x2b44 <__fixsfsi>
    1fc8:	7f 93       	push	r23
    1fca:	6f 93       	push	r22
    1fcc:	80 91 d5 20 	lds	r24, 0x20D5	; 0x8020d5 <packets+0x1>
    1fd0:	8f 93       	push	r24
    1fd2:	80 91 d4 20 	lds	r24, 0x20D4	; 0x8020d4 <packets>
    1fd6:	8f 93       	push	r24
    1fd8:	80 91 d7 20 	lds	r24, 0x20D7	; 0x8020d7 <timer+0x1>
    1fdc:	8f 93       	push	r24
    1fde:	80 91 d6 20 	lds	r24, 0x20D6	; 0x8020d6 <timer>
    1fe2:	8f 93       	push	r24
    1fe4:	80 91 18 20 	lds	r24, 0x2018	; 0x802018 <format+0x1>
    1fe8:	8f 93       	push	r24
    1fea:	80 91 17 20 	lds	r24, 0x2017	; 0x802017 <format>
    1fee:	8f 93       	push	r24
    1ff0:	cc e0       	ldi	r28, 0x0C	; 12
    1ff2:	d1 e2       	ldi	r29, 0x21	; 33
    1ff4:	df 93       	push	r29
    1ff6:	cf 93       	push	r28
    1ff8:	0e 94 41 19 	call	0x3282	; 0x3282 <sprintf>
    1ffc:	8d b7       	in	r24, 0x3d	; 61
    1ffe:	9e b7       	in	r25, 0x3e	; 62
    2000:	c4 96       	adiw	r24, 0x34	; 52
    2002:	8d bf       	out	0x3d, r24	; 61
    2004:	9e bf       	out	0x3e, r25	; 62
    2006:	df 93       	push	r29
    2008:	cf 93       	push	r28
    200a:	0e 94 2e 19 	call	0x325c	; 0x325c <printf>
    200e:	0f 90       	pop	r0
    2010:	0f 90       	pop	r0
    2012:	df 91       	pop	r29
    2014:	cf 91       	pop	r28
    2016:	ff 90       	pop	r15
    2018:	ef 90       	pop	r14
    201a:	df 90       	pop	r13
    201c:	cf 90       	pop	r12
    201e:	bf 90       	pop	r11
    2020:	af 90       	pop	r10
    2022:	9f 90       	pop	r9
    2024:	8f 90       	pop	r8
    2026:	7f 90       	pop	r7
    2028:	6f 90       	pop	r6
    202a:	5f 90       	pop	r5
    202c:	4f 90       	pop	r4
    202e:	08 95       	ret

00002030 <xbee_command>:
    2030:	84 36       	cpi	r24, 0x64	; 100
    2032:	91 f0       	breq	.+36     	; 0x2058 <xbee_command+0x28>
    2034:	28 f4       	brcc	.+10     	; 0x2040 <xbee_command+0x10>
    2036:	81 36       	cpi	r24, 0x61	; 97
    2038:	69 f0       	breq	.+26     	; 0x2054 <xbee_command+0x24>
    203a:	83 36       	cpi	r24, 0x63	; 99
    203c:	49 f0       	breq	.+18     	; 0x2050 <xbee_command+0x20>
    203e:	08 95       	ret
    2040:	85 36       	cpi	r24, 0x65	; 101
    2042:	21 f0       	breq	.+8      	; 0x204c <xbee_command+0x1c>
    2044:	86 36       	cpi	r24, 0x66	; 102
    2046:	49 f4       	brne	.+18     	; 0x205a <xbee_command+0x2a>
    2048:	98 cd       	rjmp	.-1232   	; 0x1b7a <reset>
    204a:	08 95       	ret
    204c:	0b ce       	rjmp	.-1002   	; 0x1c64 <cali_alt>
    204e:	08 95       	ret
    2050:	09 ce       	rjmp	.-1006   	; 0x1c64 <cali_alt>
    2052:	08 95       	ret
    2054:	34 ce       	rjmp	.-920    	; 0x1cbe <send_gps>
    2056:	08 95       	ret
    2058:	af ce       	rjmp	.-674    	; 0x1db8 <packet>
    205a:	08 95       	ret

0000205c <__vector_47>:

ISR(TCE0_OVF_vect){
    205c:	1f 92       	push	r1
    205e:	0f 92       	push	r0
    2060:	0f b6       	in	r0, 0x3f	; 63
    2062:	0f 92       	push	r0
    2064:	11 24       	eor	r1, r1
    2066:	08 b6       	in	r0, 0x38	; 56
    2068:	0f 92       	push	r0
    206a:	18 be       	out	0x38, r1	; 56
    206c:	09 b6       	in	r0, 0x39	; 57
    206e:	0f 92       	push	r0
    2070:	19 be       	out	0x39, r1	; 57
    2072:	0a b6       	in	r0, 0x3a	; 58
    2074:	0f 92       	push	r0
    2076:	1a be       	out	0x3a, r1	; 58
    2078:	0b b6       	in	r0, 0x3b	; 59
    207a:	0f 92       	push	r0
    207c:	1b be       	out	0x3b, r1	; 59
    207e:	4f 92       	push	r4
    2080:	5f 92       	push	r5
    2082:	6f 92       	push	r6
    2084:	7f 92       	push	r7
    2086:	8f 92       	push	r8
    2088:	9f 92       	push	r9
    208a:	af 92       	push	r10
    208c:	bf 92       	push	r11
    208e:	cf 92       	push	r12
    2090:	df 92       	push	r13
    2092:	ef 92       	push	r14
    2094:	ff 92       	push	r15
    2096:	0f 93       	push	r16
    2098:	1f 93       	push	r17
    209a:	2f 93       	push	r18
    209c:	3f 93       	push	r19
    209e:	4f 93       	push	r20
    20a0:	5f 93       	push	r21
    20a2:	6f 93       	push	r22
    20a4:	7f 93       	push	r23
    20a6:	8f 93       	push	r24
    20a8:	9f 93       	push	r25
    20aa:	af 93       	push	r26
    20ac:	bf 93       	push	r27
    20ae:	cf 93       	push	r28
    20b0:	df 93       	push	r29
    20b2:	ef 93       	push	r30
    20b4:	ff 93       	push	r31
	timer++;
    20b6:	c0 91 d6 20 	lds	r28, 0x20D6	; 0x8020d6 <timer>
    20ba:	d0 91 d7 20 	lds	r29, 0x20D7	; 0x8020d7 <timer+0x1>
    20be:	21 96       	adiw	r28, 0x01	; 1
    20c0:	c0 93 d6 20 	sts	0x20D6, r28	; 0x8020d6 <timer>
    20c4:	d0 93 d7 20 	sts	0x20D7, r29	; 0x8020d7 <timer+0x1>
	sprintf(str,format,timer,packets,
	(int16_t) (alt),						(int32_t) press,							(int16_t) (temp-273.15),				(int16_t)volt,
	(int16_t) (((int32_t)gps_t)/10000),		(int16_t) ((((int32_t)gps_t)%10000)/100),	(int16_t) (((int32_t)gps_t)%100),
	(int16_t) gps_lat,						((int32_t) (gps_lat*1000000))%1000000,		(int16_t) gps_long,						(int32_t)(abs(((int32_t)(gps_long*1000000))%1000000)),
	(int16_t) gps_alt,						((int16_t) (gps_alt)*10)%10,				gps_sats,
    20c8:	60 91 b0 20 	lds	r22, 0x20B0	; 0x8020b0 <gps_alt>
    20cc:	70 91 b1 20 	lds	r23, 0x20B1	; 0x8020b1 <gps_alt+0x1>
    20d0:	80 91 b2 20 	lds	r24, 0x20B2	; 0x8020b2 <gps_alt+0x2>
    20d4:	90 91 b3 20 	lds	r25, 0x20B3	; 0x8020b3 <gps_alt+0x3>
    20d8:	35 d5       	rcall	.+2666   	; 0x2b44 <__fixsfsi>
    20da:	16 2f       	mov	r17, r22
    20dc:	07 2f       	mov	r16, r23
ISR(TCE0_OVF_vect){
	timer++;
	sprintf(str,format,timer,packets,
	(int16_t) (alt),						(int32_t) press,							(int16_t) (temp-273.15),				(int16_t)volt,
	(int16_t) (((int32_t)gps_t)/10000),		(int16_t) ((((int32_t)gps_t)%10000)/100),	(int16_t) (((int32_t)gps_t)%100),
	(int16_t) gps_lat,						((int32_t) (gps_lat*1000000))%1000000,		(int16_t) gps_long,						(int32_t)(abs(((int32_t)(gps_long*1000000))%1000000)),
    20de:	40 90 b4 20 	lds	r4, 0x20B4	; 0x8020b4 <gps_long>
    20e2:	50 90 b5 20 	lds	r5, 0x20B5	; 0x8020b5 <gps_long+0x1>
    20e6:	60 90 b6 20 	lds	r6, 0x20B6	; 0x8020b6 <gps_long+0x2>
    20ea:	70 90 b7 20 	lds	r7, 0x20B7	; 0x8020b7 <gps_long+0x3>
    20ee:	80 90 b8 20 	lds	r8, 0x20B8	; 0x8020b8 <gps_lat>
    20f2:	90 90 b9 20 	lds	r9, 0x20B9	; 0x8020b9 <gps_lat+0x1>
    20f6:	a0 90 ba 20 	lds	r10, 0x20BA	; 0x8020ba <gps_lat+0x2>
    20fa:	b0 90 bb 20 	lds	r11, 0x20BB	; 0x8020bb <gps_lat+0x3>

ISR(TCE0_OVF_vect){
	timer++;
	sprintf(str,format,timer,packets,
	(int16_t) (alt),						(int32_t) press,							(int16_t) (temp-273.15),				(int16_t)volt,
	(int16_t) (((int32_t)gps_t)/10000),		(int16_t) ((((int32_t)gps_t)%10000)/100),	(int16_t) (((int32_t)gps_t)%100),
    20fe:	60 91 bc 20 	lds	r22, 0x20BC	; 0x8020bc <gps_t>
    2102:	70 91 bd 20 	lds	r23, 0x20BD	; 0x8020bd <gps_t+0x1>
    2106:	80 91 be 20 	lds	r24, 0x20BE	; 0x8020be <gps_t+0x2>
    210a:	90 91 bf 20 	lds	r25, 0x20BF	; 0x8020bf <gps_t+0x3>
    210e:	1a d5       	rcall	.+2612   	; 0x2b44 <__fixsfsi>
    2110:	6b 01       	movw	r12, r22
    2112:	7c 01       	movw	r14, r24
	while(NVM.STATUS>>7);
}

ISR(TCE0_OVF_vect){
	timer++;
	sprintf(str,format,timer,packets,
    2114:	60 91 9e 20 	lds	r22, 0x209E	; 0x80209e <__data_end>
    2118:	70 91 9f 20 	lds	r23, 0x209F	; 0x80209f <__data_end+0x1>
    211c:	80 91 a0 20 	lds	r24, 0x20A0	; 0x8020a0 <__data_end+0x2>
    2120:	90 91 a1 20 	lds	r25, 0x20A1	; 0x8020a1 <__data_end+0x3>
    2124:	0f d5       	rcall	.+2590   	; 0x2b44 <__fixsfsi>
    2126:	7f 93       	push	r23
    2128:	6f 93       	push	r22
    212a:	80 91 ef 20 	lds	r24, 0x20EF	; 0x8020ef <state>
    212e:	1f 92       	push	r1
    2130:	8f 93       	push	r24
    2132:	60 91 a2 20 	lds	r22, 0x20A2	; 0x8020a2 <rpm>
    2136:	70 91 a3 20 	lds	r23, 0x20A3	; 0x8020a3 <rpm+0x1>
    213a:	80 91 a4 20 	lds	r24, 0x20A4	; 0x8020a4 <rpm+0x2>
    213e:	90 91 a5 20 	lds	r25, 0x20A5	; 0x8020a5 <rpm+0x3>
    2142:	00 d5       	rcall	.+2560   	; 0x2b44 <__fixsfsi>
    2144:	7f 93       	push	r23
    2146:	6f 93       	push	r22
    2148:	60 91 a6 20 	lds	r22, 0x20A6	; 0x8020a6 <roll>
    214c:	70 91 a7 20 	lds	r23, 0x20A7	; 0x8020a7 <roll+0x1>
    2150:	80 91 a8 20 	lds	r24, 0x20A8	; 0x8020a8 <roll+0x2>
    2154:	90 91 a9 20 	lds	r25, 0x20A9	; 0x8020a9 <roll+0x3>
    2158:	f5 d4       	rcall	.+2538   	; 0x2b44 <__fixsfsi>
    215a:	7f 93       	push	r23
    215c:	6f 93       	push	r22
    215e:	60 91 aa 20 	lds	r22, 0x20AA	; 0x8020aa <pitch>
    2162:	70 91 ab 20 	lds	r23, 0x20AB	; 0x8020ab <pitch+0x1>
    2166:	80 91 ac 20 	lds	r24, 0x20AC	; 0x8020ac <pitch+0x2>
    216a:	90 91 ad 20 	lds	r25, 0x20AD	; 0x8020ad <pitch+0x3>
    216e:	ea d4       	rcall	.+2516   	; 0x2b44 <__fixsfsi>
    2170:	7f 93       	push	r23
    2172:	6f 93       	push	r22
    2174:	80 91 af 20 	lds	r24, 0x20AF	; 0x8020af <gps_sats+0x1>
    2178:	8f 93       	push	r24
    217a:	80 91 ae 20 	lds	r24, 0x20AE	; 0x8020ae <gps_sats>
    217e:	8f 93       	push	r24
    2180:	81 2f       	mov	r24, r17
    2182:	90 2f       	mov	r25, r16
    2184:	88 0f       	add	r24, r24
    2186:	99 1f       	adc	r25, r25
    2188:	9c 01       	movw	r18, r24
    218a:	22 0f       	add	r18, r18
    218c:	33 1f       	adc	r19, r19
    218e:	22 0f       	add	r18, r18
    2190:	33 1f       	adc	r19, r19
    2192:	82 0f       	add	r24, r18
    2194:	93 1f       	adc	r25, r19
    2196:	6a e0       	ldi	r22, 0x0A	; 10
    2198:	70 e0       	ldi	r23, 0x00	; 0
    219a:	a6 d7       	rcall	.+3916   	; 0x30e8 <__divmodhi4>
    219c:	9f 93       	push	r25
    219e:	8f 93       	push	r24
    21a0:	0f 93       	push	r16
    21a2:	1f 93       	push	r17
    21a4:	20 e0       	ldi	r18, 0x00	; 0
    21a6:	34 e2       	ldi	r19, 0x24	; 36
    21a8:	44 e7       	ldi	r20, 0x74	; 116
    21aa:	59 e4       	ldi	r21, 0x49	; 73
    21ac:	c3 01       	movw	r24, r6
    21ae:	b2 01       	movw	r22, r4
    21b0:	dc d5       	rcall	.+3000   	; 0x2d6a <__mulsf3>
    21b2:	c8 d4       	rcall	.+2448   	; 0x2b44 <__fixsfsi>
    21b4:	20 e4       	ldi	r18, 0x40	; 64
    21b6:	32 e4       	ldi	r19, 0x42	; 66
    21b8:	4f e0       	ldi	r20, 0x0F	; 15
    21ba:	50 e0       	ldi	r21, 0x00	; 0
    21bc:	ca d7       	rcall	.+3988   	; 0x3152 <__divmodsi4>
    21be:	9b 01       	movw	r18, r22
    21c0:	77 23       	and	r23, r23
    21c2:	24 f4       	brge	.+8      	; 0x21cc <__vector_47+0x170>
    21c4:	22 27       	eor	r18, r18
    21c6:	33 27       	eor	r19, r19
    21c8:	26 1b       	sub	r18, r22
    21ca:	37 0b       	sbc	r19, r23
    21cc:	c9 01       	movw	r24, r18
    21ce:	33 0f       	add	r19, r19
    21d0:	aa 0b       	sbc	r26, r26
    21d2:	bb 0b       	sbc	r27, r27
    21d4:	bf 93       	push	r27
    21d6:	af 93       	push	r26
    21d8:	9f 93       	push	r25
    21da:	8f 93       	push	r24
    21dc:	c3 01       	movw	r24, r6
    21de:	b2 01       	movw	r22, r4
    21e0:	b1 d4       	rcall	.+2402   	; 0x2b44 <__fixsfsi>
    21e2:	7f 93       	push	r23
    21e4:	6f 93       	push	r22
    21e6:	20 e0       	ldi	r18, 0x00	; 0
    21e8:	34 e2       	ldi	r19, 0x24	; 36
    21ea:	44 e7       	ldi	r20, 0x74	; 116
    21ec:	59 e4       	ldi	r21, 0x49	; 73
    21ee:	c5 01       	movw	r24, r10
    21f0:	b4 01       	movw	r22, r8
    21f2:	bb d5       	rcall	.+2934   	; 0x2d6a <__mulsf3>
    21f4:	a7 d4       	rcall	.+2382   	; 0x2b44 <__fixsfsi>
    21f6:	20 e4       	ldi	r18, 0x40	; 64
    21f8:	32 e4       	ldi	r19, 0x42	; 66
    21fa:	4f e0       	ldi	r20, 0x0F	; 15
    21fc:	50 e0       	ldi	r21, 0x00	; 0
    21fe:	a9 d7       	rcall	.+3922   	; 0x3152 <__divmodsi4>
    2200:	9f 93       	push	r25
    2202:	8f 93       	push	r24
    2204:	7f 93       	push	r23
    2206:	6f 93       	push	r22
    2208:	c5 01       	movw	r24, r10
    220a:	b4 01       	movw	r22, r8
    220c:	9b d4       	rcall	.+2358   	; 0x2b44 <__fixsfsi>
    220e:	7f 93       	push	r23
    2210:	6f 93       	push	r22
    2212:	0f 2e       	mov	r0, r31
    2214:	f4 e6       	ldi	r31, 0x64	; 100
    2216:	8f 2e       	mov	r8, r31
    2218:	91 2c       	mov	r9, r1
    221a:	a1 2c       	mov	r10, r1
    221c:	b1 2c       	mov	r11, r1
    221e:	f0 2d       	mov	r31, r0
    2220:	c7 01       	movw	r24, r14
    2222:	b6 01       	movw	r22, r12
    2224:	a5 01       	movw	r20, r10
    2226:	94 01       	movw	r18, r8
    2228:	94 d7       	rcall	.+3880   	; 0x3152 <__divmodsi4>
    222a:	7f 93       	push	r23
    222c:	6f 93       	push	r22
    222e:	c7 01       	movw	r24, r14
    2230:	b6 01       	movw	r22, r12
    2232:	20 e1       	ldi	r18, 0x10	; 16
    2234:	37 e2       	ldi	r19, 0x27	; 39
    2236:	40 e0       	ldi	r20, 0x00	; 0
    2238:	50 e0       	ldi	r21, 0x00	; 0
    223a:	8b d7       	rcall	.+3862   	; 0x3152 <__divmodsi4>
    223c:	12 2f       	mov	r17, r18
    223e:	03 2f       	mov	r16, r19
    2240:	a5 01       	movw	r20, r10
    2242:	94 01       	movw	r18, r8
    2244:	86 d7       	rcall	.+3852   	; 0x3152 <__divmodsi4>
    2246:	3f 93       	push	r19
    2248:	2f 93       	push	r18
    224a:	0f 93       	push	r16
    224c:	1f 93       	push	r17
    224e:	60 91 c4 20 	lds	r22, 0x20C4	; 0x8020c4 <volt>
    2252:	70 91 c5 20 	lds	r23, 0x20C5	; 0x8020c5 <volt+0x1>
    2256:	80 91 c6 20 	lds	r24, 0x20C6	; 0x8020c6 <volt+0x2>
    225a:	90 91 c7 20 	lds	r25, 0x20C7	; 0x8020c7 <volt+0x3>
    225e:	72 d4       	rcall	.+2276   	; 0x2b44 <__fixsfsi>
    2260:	7f 93       	push	r23
    2262:	6f 93       	push	r22
    2264:	23 e3       	ldi	r18, 0x33	; 51
    2266:	33 e9       	ldi	r19, 0x93	; 147
    2268:	48 e8       	ldi	r20, 0x88	; 136
    226a:	53 e4       	ldi	r21, 0x43	; 67
    226c:	60 91 cc 20 	lds	r22, 0x20CC	; 0x8020cc <temp>
    2270:	70 91 cd 20 	lds	r23, 0x20CD	; 0x8020cd <temp+0x1>
    2274:	80 91 ce 20 	lds	r24, 0x20CE	; 0x8020ce <temp+0x2>
    2278:	90 91 cf 20 	lds	r25, 0x20CF	; 0x8020cf <temp+0x3>
    227c:	92 d3       	rcall	.+1828   	; 0x29a2 <__subsf3>
    227e:	62 d4       	rcall	.+2244   	; 0x2b44 <__fixsfsi>
    2280:	7f 93       	push	r23
    2282:	6f 93       	push	r22
    2284:	60 91 d0 20 	lds	r22, 0x20D0	; 0x8020d0 <press>
    2288:	70 91 d1 20 	lds	r23, 0x20D1	; 0x8020d1 <press+0x1>
    228c:	80 91 d2 20 	lds	r24, 0x20D2	; 0x8020d2 <press+0x2>
    2290:	90 91 d3 20 	lds	r25, 0x20D3	; 0x8020d3 <press+0x3>
    2294:	57 d4       	rcall	.+2222   	; 0x2b44 <__fixsfsi>
    2296:	9f 93       	push	r25
    2298:	8f 93       	push	r24
    229a:	7f 93       	push	r23
    229c:	6f 93       	push	r22
    229e:	60 91 c8 20 	lds	r22, 0x20C8	; 0x8020c8 <alt>
    22a2:	70 91 c9 20 	lds	r23, 0x20C9	; 0x8020c9 <alt+0x1>
    22a6:	80 91 ca 20 	lds	r24, 0x20CA	; 0x8020ca <alt+0x2>
    22aa:	90 91 cb 20 	lds	r25, 0x20CB	; 0x8020cb <alt+0x3>
    22ae:	4a d4       	rcall	.+2196   	; 0x2b44 <__fixsfsi>
    22b0:	7f 93       	push	r23
    22b2:	6f 93       	push	r22
    22b4:	80 91 d5 20 	lds	r24, 0x20D5	; 0x8020d5 <packets+0x1>
    22b8:	8f 93       	push	r24
    22ba:	80 91 d4 20 	lds	r24, 0x20D4	; 0x8020d4 <packets>
    22be:	8f 93       	push	r24
    22c0:	df 93       	push	r29
    22c2:	cf 93       	push	r28
    22c4:	80 91 18 20 	lds	r24, 0x2018	; 0x802018 <format+0x1>
    22c8:	8f 93       	push	r24
    22ca:	80 91 17 20 	lds	r24, 0x2017	; 0x802017 <format>
    22ce:	8f 93       	push	r24
    22d0:	cc e0       	ldi	r28, 0x0C	; 12
    22d2:	d1 e2       	ldi	r29, 0x21	; 33
    22d4:	df 93       	push	r29
    22d6:	cf 93       	push	r28
    22d8:	d4 d7       	rcall	.+4008   	; 0x3282 <sprintf>
	(int16_t) (((int32_t)gps_t)/10000),		(int16_t) ((((int32_t)gps_t)%10000)/100),	(int16_t) (((int32_t)gps_t)%100),
	(int16_t) gps_lat,						((int32_t) (gps_lat*1000000))%1000000,		(int16_t) gps_long,						(int32_t)(abs(((int32_t)(gps_long*1000000))%1000000)),
	(int16_t) gps_alt,						((int16_t) (gps_alt)*10)%10,				gps_sats,
	(int16_t) pitch,						(int16_t) roll,								(int16_t) rpm,
	state,									(int16_t)angle); // Data Logging Test
	printf(str);
    22da:	8d b7       	in	r24, 0x3d	; 61
    22dc:	9e b7       	in	r25, 0x3e	; 62
    22de:	c4 96       	adiw	r24, 0x34	; 52
    22e0:	8d bf       	out	0x3d, r24	; 61
    22e2:	9e bf       	out	0x3e, r25	; 62
    22e4:	df 93       	push	r29
    22e6:	cf 93       	push	r28
    22e8:	b9 d7       	rcall	.+3954   	; 0x325c <printf>
    22ea:	0f 90       	pop	r0
	//XBEE_spi_write(str);
}
    22ec:	0f 90       	pop	r0
    22ee:	ff 91       	pop	r31
    22f0:	ef 91       	pop	r30
    22f2:	df 91       	pop	r29
    22f4:	cf 91       	pop	r28
    22f6:	bf 91       	pop	r27
    22f8:	af 91       	pop	r26
    22fa:	9f 91       	pop	r25
    22fc:	8f 91       	pop	r24
    22fe:	7f 91       	pop	r23
    2300:	6f 91       	pop	r22
    2302:	5f 91       	pop	r21
    2304:	4f 91       	pop	r20
    2306:	3f 91       	pop	r19
    2308:	2f 91       	pop	r18
    230a:	1f 91       	pop	r17
    230c:	0f 91       	pop	r16
    230e:	ff 90       	pop	r15
    2310:	ef 90       	pop	r14
    2312:	df 90       	pop	r13
    2314:	cf 90       	pop	r12
    2316:	bf 90       	pop	r11
    2318:	af 90       	pop	r10
    231a:	9f 90       	pop	r9
    231c:	8f 90       	pop	r8
    231e:	7f 90       	pop	r7
    2320:	6f 90       	pop	r6
    2322:	5f 90       	pop	r5
    2324:	4f 90       	pop	r4
    2326:	0f 90       	pop	r0
    2328:	0b be       	out	0x3b, r0	; 59
    232a:	0f 90       	pop	r0
    232c:	0a be       	out	0x3a, r0	; 58
    232e:	0f 90       	pop	r0
    2330:	09 be       	out	0x39, r0	; 57
    2332:	0f 90       	pop	r0
    2334:	08 be       	out	0x38, r0	; 56
    2336:	0f 90       	pop	r0
    2338:	0f be       	out	0x3f, r0	; 63
    233a:	0f 90       	pop	r0
    233c:	1f 90       	pop	r1
    233e:	18 95       	reti

00002340 <__vector_58>:
    2340:	1f 92       	push	r1

ISR(USARTE0_RXC_vect){
    2342:	0f 92       	push	r0
    2344:	0f b6       	in	r0, 0x3f	; 63
    2346:	0f 92       	push	r0
    2348:	11 24       	eor	r1, r1
    234a:	08 b6       	in	r0, 0x38	; 56
    234c:	0f 92       	push	r0
    234e:	18 be       	out	0x38, r1	; 56
    2350:	09 b6       	in	r0, 0x39	; 57
    2352:	0f 92       	push	r0
    2354:	19 be       	out	0x39, r1	; 57
    2356:	0b b6       	in	r0, 0x3b	; 59
    2358:	0f 92       	push	r0
    235a:	1b be       	out	0x3b, r1	; 59
    235c:	2f 93       	push	r18
    235e:	3f 93       	push	r19
    2360:	4f 93       	push	r20
    2362:	5f 93       	push	r21
    2364:	6f 93       	push	r22
    2366:	7f 93       	push	r23
    2368:	8f 93       	push	r24
    236a:	9f 93       	push	r25
    236c:	af 93       	push	r26
    236e:	bf 93       	push	r27
    2370:	ef 93       	push	r30
    2372:	ff 93       	push	r31
	uint8_t c = usart_getchar(UART_TERMINAL_SERIAL);
    2374:	80 ea       	ldi	r24, 0xA0	; 160
    2376:	9a e0       	ldi	r25, 0x0A	; 10
    2378:	0e 94 93 02 	call	0x526	; 0x526 <usart_getchar>
	//printf("%c\n", c);
	xbee_command(c);
    237c:	59 de       	rcall	.-846    	; 0x2030 <xbee_command>
}
    237e:	ff 91       	pop	r31
    2380:	ef 91       	pop	r30
    2382:	bf 91       	pop	r27
    2384:	af 91       	pop	r26
    2386:	9f 91       	pop	r25
    2388:	8f 91       	pop	r24
    238a:	7f 91       	pop	r23
    238c:	6f 91       	pop	r22
    238e:	5f 91       	pop	r21
    2390:	4f 91       	pop	r20
    2392:	3f 91       	pop	r19
    2394:	2f 91       	pop	r18
    2396:	0f 90       	pop	r0
    2398:	0b be       	out	0x3b, r0	; 59
    239a:	0f 90       	pop	r0
    239c:	09 be       	out	0x39, r0	; 57
    239e:	0f 90       	pop	r0
    23a0:	08 be       	out	0x38, r0	; 56
    23a2:	0f 90       	pop	r0
    23a4:	0f be       	out	0x3f, r0	; 63
    23a6:	0f 90       	pop	r0
    23a8:	1f 90       	pop	r1
    23aa:	18 95       	reti

000023ac <__vector_91>:
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347


// GPS recording
ISR(USARTD1_RXC_vect){
<<<<<<< HEAD
    2618:	1f 92       	push	r1
    261a:	0f 92       	push	r0
    261c:	0f b6       	in	r0, 0x3f	; 63
    261e:	0f 92       	push	r0
    2620:	11 24       	eor	r1, r1
    2622:	08 b6       	in	r0, 0x38	; 56
    2624:	0f 92       	push	r0
    2626:	18 be       	out	0x38, r1	; 56
    2628:	09 b6       	in	r0, 0x39	; 57
    262a:	0f 92       	push	r0
    262c:	19 be       	out	0x39, r1	; 57
    262e:	0a b6       	in	r0, 0x3a	; 58
    2630:	0f 92       	push	r0
    2632:	1a be       	out	0x3a, r1	; 58
    2634:	0b b6       	in	r0, 0x3b	; 59
    2636:	0f 92       	push	r0
    2638:	1b be       	out	0x3b, r1	; 59
    263a:	8f 92       	push	r8
    263c:	9f 92       	push	r9
    263e:	af 92       	push	r10
    2640:	bf 92       	push	r11
    2642:	cf 92       	push	r12
    2644:	df 92       	push	r13
    2646:	ef 92       	push	r14
    2648:	ff 92       	push	r15
    264a:	1f 93       	push	r17
    264c:	2f 93       	push	r18
    264e:	3f 93       	push	r19
    2650:	4f 93       	push	r20
    2652:	5f 93       	push	r21
    2654:	6f 93       	push	r22
    2656:	7f 93       	push	r23
    2658:	8f 93       	push	r24
    265a:	9f 93       	push	r25
    265c:	af 93       	push	r26
    265e:	bf 93       	push	r27
    2660:	ef 93       	push	r30
    2662:	ff 93       	push	r31
    2664:	cf 93       	push	r28
    2666:	df 93       	push	r29
    2668:	00 d0       	rcall	.+0      	; 0x266a <__vector_91+0x52>
    266a:	00 d0       	rcall	.+0      	; 0x266c <__vector_91+0x54>
    266c:	cd b7       	in	r28, 0x3d	; 61
    266e:	de b7       	in	r29, 0x3e	; 62
	uint8_t c = usart_getchar(GPS_TERMINAL_SERIAL);
    2670:	80 eb       	ldi	r24, 0xB0	; 176
    2672:	99 e0       	ldi	r25, 0x09	; 9
    2674:	0e 94 8e 03 	call	0x71c	; 0x71c <usart_getchar>
    2678:	18 2f       	mov	r17, r24
	//printf("%c",c);

	if(c == (uint8_t) '$'){
    267a:	84 32       	cpi	r24, 0x24	; 36
    267c:	49 f4       	brne	.+18     	; 0x2690 <__vector_91+0x78>
		writing = 1;
    267e:	81 e0       	ldi	r24, 0x01	; 1
    2680:	80 93 0d 21 	sts	0x210D, r24	; 0x80210d <writing>
		pos = 0;
		word_pos = 0;
    2684:	10 92 0b 21 	sts	0x210B, r1	; 0x80210b <word_pos>
		commas = 0;
    2688:	10 92 0a 21 	sts	0x210A, r1	; 0x80210a <commas>
=======
    23ac:	1f 92       	push	r1
    23ae:	0f 92       	push	r0
    23b0:	0f b6       	in	r0, 0x3f	; 63
    23b2:	0f 92       	push	r0
    23b4:	11 24       	eor	r1, r1
    23b6:	08 b6       	in	r0, 0x38	; 56
    23b8:	0f 92       	push	r0
    23ba:	18 be       	out	0x38, r1	; 56
    23bc:	09 b6       	in	r0, 0x39	; 57
    23be:	0f 92       	push	r0
    23c0:	19 be       	out	0x39, r1	; 57
    23c2:	0a b6       	in	r0, 0x3a	; 58
    23c4:	0f 92       	push	r0
    23c6:	1a be       	out	0x3a, r1	; 58
    23c8:	0b b6       	in	r0, 0x3b	; 59
    23ca:	0f 92       	push	r0
    23cc:	1b be       	out	0x3b, r1	; 59
    23ce:	8f 92       	push	r8
    23d0:	9f 92       	push	r9
    23d2:	af 92       	push	r10
    23d4:	bf 92       	push	r11
    23d6:	cf 92       	push	r12
    23d8:	df 92       	push	r13
    23da:	ef 92       	push	r14
    23dc:	ff 92       	push	r15
    23de:	1f 93       	push	r17
    23e0:	2f 93       	push	r18
    23e2:	3f 93       	push	r19
    23e4:	4f 93       	push	r20
    23e6:	5f 93       	push	r21
    23e8:	6f 93       	push	r22
    23ea:	7f 93       	push	r23
    23ec:	8f 93       	push	r24
    23ee:	9f 93       	push	r25
    23f0:	af 93       	push	r26
    23f2:	bf 93       	push	r27
    23f4:	ef 93       	push	r30
    23f6:	ff 93       	push	r31
    23f8:	cf 93       	push	r28
    23fa:	df 93       	push	r29
    23fc:	00 d0       	rcall	.+0      	; 0x23fe <__vector_91+0x52>
    23fe:	00 d0       	rcall	.+0      	; 0x2400 <__vector_91+0x54>
    2400:	cd b7       	in	r28, 0x3d	; 61
    2402:	de b7       	in	r29, 0x3e	; 62
	uint8_t c = usart_getchar(GPS_TERMINAL_SERIAL);
    2404:	80 eb       	ldi	r24, 0xB0	; 176
    2406:	99 e0       	ldi	r25, 0x09	; 9
    2408:	0e 94 93 02 	call	0x526	; 0x526 <usart_getchar>
    240c:	18 2f       	mov	r17, r24
	//printf("%c",c);

	if(c == (uint8_t) '$'){
    240e:	84 32       	cpi	r24, 0x24	; 36
    2410:	49 f4       	brne	.+18     	; 0x2424 <__vector_91+0x78>
		writing = 1;
    2412:	81 e0       	ldi	r24, 0x01	; 1
    2414:	80 93 dc 20 	sts	0x20DC, r24	; 0x8020dc <writing>
		pos = 0;
		word_pos = 0;
    2418:	10 92 da 20 	sts	0x20DA, r1	; 0x8020da <word_pos>
		commas = 0;
    241c:	10 92 d9 20 	sts	0x20D9, r1	; 0x8020d9 <commas>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
			}
		}
	}

	if(writing){
		switch(pos){
<<<<<<< HEAD
    268c:	90 e0       	ldi	r25, 0x00	; 0
    268e:	68 c2       	rjmp	.+1232   	; 0x2b60 <__vector_91+0x548>
=======
    2420:	90 e0       	ldi	r25, 0x00	; 0
    2422:	68 c2       	rjmp	.+1232   	; 0x28f4 <__vector_91+0x548>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
		writing = 1;
		pos = 0;
		word_pos = 0;
		commas = 0;
	}
	else if(c == (uint8_t) '*'){
<<<<<<< HEAD
    2690:	8a 32       	cpi	r24, 0x2A	; 42
    2692:	29 f4       	brne	.+10     	; 0x269e <__vector_91+0x86>
		commas = 0;
    2694:	10 92 0a 21 	sts	0x210A, r1	; 0x80210a <commas>
		writing = 0;
    2698:	10 92 0d 21 	sts	0x210D, r1	; 0x80210d <writing>
    269c:	91 c2       	rjmp	.+1314   	; 0x2bc0 <__vector_91+0x5a8>
	}
	else if(c == (uint8_t) ','){
    269e:	8c 32       	cpi	r24, 0x2C	; 44
    26a0:	09 f0       	breq	.+2      	; 0x26a4 <__vector_91+0x8c>
    26a2:	49 c2       	rjmp	.+1170   	; 0x2b36 <__vector_91+0x51e>
		gps[0] = 32;
    26a4:	ec e2       	ldi	r30, 0x2C	; 44
    26a6:	f1 e2       	ldi	r31, 0x21	; 33
    26a8:	80 e2       	ldi	r24, 0x20	; 32
    26aa:	80 83       	st	Z, r24
		if(gps[1] == 32){
    26ac:	81 81       	ldd	r24, Z+1	; 0x01
    26ae:	80 32       	cpi	r24, 0x20	; 32
    26b0:	09 f0       	breq	.+2      	; 0x26b4 <__vector_91+0x9c>
    26b2:	6d c2       	rjmp	.+1242   	; 0x2b8e <__vector_91+0x576>
			gps[0] = '0';
    26b4:	80 e3       	ldi	r24, 0x30	; 48
    26b6:	80 93 2c 21 	sts	0x212C, r24	; 0x80212c <gps>
    26ba:	69 c2       	rjmp	.+1234   	; 0x2b8e <__vector_91+0x576>
=======
    2424:	8a 32       	cpi	r24, 0x2A	; 42
    2426:	29 f4       	brne	.+10     	; 0x2432 <__vector_91+0x86>
		commas = 0;
    2428:	10 92 d9 20 	sts	0x20D9, r1	; 0x8020d9 <commas>
		writing = 0;
    242c:	10 92 dc 20 	sts	0x20DC, r1	; 0x8020dc <writing>
    2430:	91 c2       	rjmp	.+1314   	; 0x2954 <__vector_91+0x5a8>
	}
	else if(c == (uint8_t) ','){
    2432:	8c 32       	cpi	r24, 0x2C	; 44
    2434:	09 f0       	breq	.+2      	; 0x2438 <__vector_91+0x8c>
    2436:	49 c2       	rjmp	.+1170   	; 0x28ca <__vector_91+0x51e>
		gps[0] = 32;
    2438:	e8 ef       	ldi	r30, 0xF8	; 248
    243a:	f0 e2       	ldi	r31, 0x20	; 32
    243c:	80 e2       	ldi	r24, 0x20	; 32
    243e:	80 83       	st	Z, r24
		if(gps[1] == 32){
    2440:	81 81       	ldd	r24, Z+1	; 0x01
    2442:	80 32       	cpi	r24, 0x20	; 32
    2444:	09 f0       	breq	.+2      	; 0x2448 <__vector_91+0x9c>
    2446:	6d c2       	rjmp	.+1242   	; 0x2922 <__vector_91+0x576>
			gps[0] = '0';
    2448:	80 e3       	ldi	r24, 0x30	; 48
    244a:	80 93 f8 20 	sts	0x20F8, r24	; 0x8020f8 <gps>
    244e:	69 c2       	rjmp	.+1234   	; 0x2922 <__vector_91+0x576>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
			case 7:			//Sats
				sscanf(gps,"%d",&gps_sats);
				break;
			case 9:			//Altitude
				for(uint8_t i = 0; i < 15; i++){
					if(gps[i] == (uint8_t) '.'){
<<<<<<< HEAD
    26bc:	80 91 2c 21 	lds	r24, 0x212C	; 0x80212c <gps>
    26c0:	8e 32       	cpi	r24, 0x2E	; 46
    26c2:	09 f0       	breq	.+2      	; 0x26c6 <__vector_91+0xae>
    26c4:	9e c1       	rjmp	.+828    	; 0x2a02 <__vector_91+0x3ea>
    26c6:	a4 c1       	rjmp	.+840    	; 0x2a10 <__vector_91+0x3f8>
=======
    2450:	80 91 f8 20 	lds	r24, 0x20F8	; 0x8020f8 <gps>
    2454:	8e 32       	cpi	r24, 0x2E	; 46
    2456:	09 f0       	breq	.+2      	; 0x245a <__vector_91+0xae>
    2458:	9e c1       	rjmp	.+828    	; 0x2796 <__vector_91+0x3ea>
    245a:	a4 c1       	rjmp	.+840    	; 0x27a4 <__vector_91+0x3f8>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
				sscanf(dec,"%d",&val2);
				gps_lat = val/100 + ((double)(val%100) + ((double)(val2))/10000) / 60.0;
				break;
			case 4:			//Longitude
				for(uint8_t i = 0; i < 15; i++){
					if(gps[i] == (uint8_t) '.'){
<<<<<<< HEAD
    26c8:	80 91 2c 21 	lds	r24, 0x212C	; 0x80212c <gps>
    26cc:	8e 32       	cpi	r24, 0x2E	; 46
    26ce:	09 f0       	breq	.+2      	; 0x26d2 <__vector_91+0xba>
    26d0:	ec c0       	rjmp	.+472    	; 0x28aa <__vector_91+0x292>
    26d2:	f2 c0       	rjmp	.+484    	; 0x28b8 <__vector_91+0x2a0>
=======
    245c:	80 91 f8 20 	lds	r24, 0x20F8	; 0x8020f8 <gps>
    2460:	8e 32       	cpi	r24, 0x2E	; 46
    2462:	09 f0       	breq	.+2      	; 0x2466 <__vector_91+0xba>
    2464:	ec c0       	rjmp	.+472    	; 0x263e <__vector_91+0x292>
    2466:	f2 c0       	rjmp	.+484    	; 0x264c <__vector_91+0x2a0>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
				sscanf(gps,"%ld",&val);
				gps_t = (double) val;
				break;
			case 2:			//Latitude
				for(uint8_t i = 0; i < 15; i++){
					if(gps[i] == (uint8_t) '.'){
<<<<<<< HEAD
    26d4:	80 91 2c 21 	lds	r24, 0x212C	; 0x80212c <gps>
    26d8:	8e 32       	cpi	r24, 0x2E	; 46
    26da:	09 f0       	breq	.+2      	; 0x26de <__vector_91+0xc6>
    26dc:	51 c0       	rjmp	.+162    	; 0x2780 <__vector_91+0x168>
    26de:	57 c0       	rjmp	.+174    	; 0x278e <__vector_91+0x176>
=======
    2468:	80 91 f8 20 	lds	r24, 0x20F8	; 0x8020f8 <gps>
    246c:	8e 32       	cpi	r24, 0x2E	; 46
    246e:	09 f0       	breq	.+2      	; 0x2472 <__vector_91+0xc6>
    2470:	51 c0       	rjmp	.+162    	; 0x2514 <__vector_91+0x168>
    2472:	57 c0       	rjmp	.+174    	; 0x2522 <__vector_91+0x176>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
		int32_t val = 0;
		int16_t val2 = 0;
		switch(commas){
			case 1:			//Time
				for(uint8_t i = 0; i < 15; i++){
					if(gps[i] == (uint8_t) '.'){
<<<<<<< HEAD
    26e0:	91 91       	ld	r25, Z+
    26e2:	9e 32       	cpi	r25, 0x2E	; 46
    26e4:	29 f4       	brne	.+10     	; 0x26f0 <__vector_91+0xd8>
    26e6:	01 c0       	rjmp	.+2      	; 0x26ea <__vector_91+0xd2>
    26e8:	80 e0       	ldi	r24, 0x00	; 0
						idx = i;
    26ea:	80 93 09 21 	sts	0x2109, r24	; 0x802109 <idx>
						break;
    26ee:	03 c0       	rjmp	.+6      	; 0x26f6 <__vector_91+0xde>
=======
    2474:	91 91       	ld	r25, Z+
    2476:	9e 32       	cpi	r25, 0x2E	; 46
    2478:	29 f4       	brne	.+10     	; 0x2484 <__vector_91+0xd8>
    247a:	01 c0       	rjmp	.+2      	; 0x247e <__vector_91+0xd2>
    247c:	80 e0       	ldi	r24, 0x00	; 0
						idx = i;
    247e:	80 93 d8 20 	sts	0x20D8, r24	; 0x8020d8 <idx>
						break;
    2482:	03 c0       	rjmp	.+6      	; 0x248a <__vector_91+0xde>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
		}
		int32_t val = 0;
		int16_t val2 = 0;
		switch(commas){
			case 1:			//Time
				for(uint8_t i = 0; i < 15; i++){
<<<<<<< HEAD
    26f0:	8f 5f       	subi	r24, 0xFF	; 255
    26f2:	8f 30       	cpi	r24, 0x0F	; 15
    26f4:	a9 f7       	brne	.-22     	; 0x26e0 <__vector_91+0xc8>
=======
    2484:	8f 5f       	subi	r24, 0xFF	; 255
    2486:	8f 30       	cpi	r24, 0x0F	; 15
    2488:	a9 f7       	brne	.-22     	; 0x2474 <__vector_91+0xc8>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
					if(gps[i] == (uint8_t) '.'){
						idx = i;
						break;
					}
				}
				gps[idx] = 32;
<<<<<<< HEAD
    26f6:	20 91 09 21 	lds	r18, 0x2109	; 0x802109 <idx>
    26fa:	e2 2f       	mov	r30, r18
    26fc:	f0 e0       	ldi	r31, 0x00	; 0
    26fe:	e4 5d       	subi	r30, 0xD4	; 212
    2700:	fe 4d       	sbci	r31, 0xDE	; 222
    2702:	80 e2       	ldi	r24, 0x20	; 32
    2704:	80 83       	st	Z, r24
				for(uint8_t i = idx+1; i < 15; i++){
    2706:	2f 5f       	subi	r18, 0xFF	; 255
    2708:	2f 30       	cpi	r18, 0x0F	; 15
    270a:	c8 f4       	brcc	.+50     	; 0x273e <__vector_91+0x126>
					if(gps[i] == 32){
    270c:	82 2f       	mov	r24, r18
    270e:	90 e0       	ldi	r25, 0x00	; 0
    2710:	fc 01       	movw	r30, r24
    2712:	e4 5d       	subi	r30, 0xD4	; 212
    2714:	fe 4d       	sbci	r31, 0xDE	; 222
    2716:	30 81       	ld	r19, Z
    2718:	30 32       	cpi	r19, 0x20	; 32
    271a:	89 f0       	breq	.+34     	; 0x273e <__vector_91+0x126>
						break;
					}
					gps[i] = 32;
    271c:	40 e2       	ldi	r20, 0x20	; 32
    271e:	08 c0       	rjmp	.+16     	; 0x2730 <__vector_91+0x118>
=======
    248a:	20 91 d8 20 	lds	r18, 0x20D8	; 0x8020d8 <idx>
    248e:	e2 2f       	mov	r30, r18
    2490:	f0 e0       	ldi	r31, 0x00	; 0
    2492:	e8 50       	subi	r30, 0x08	; 8
    2494:	ff 4d       	sbci	r31, 0xDF	; 223
    2496:	80 e2       	ldi	r24, 0x20	; 32
    2498:	80 83       	st	Z, r24
				for(uint8_t i = idx+1; i < 15; i++){
    249a:	2f 5f       	subi	r18, 0xFF	; 255
    249c:	2f 30       	cpi	r18, 0x0F	; 15
    249e:	c8 f4       	brcc	.+50     	; 0x24d2 <__vector_91+0x126>
					if(gps[i] == 32){
    24a0:	82 2f       	mov	r24, r18
    24a2:	90 e0       	ldi	r25, 0x00	; 0
    24a4:	fc 01       	movw	r30, r24
    24a6:	e8 50       	subi	r30, 0x08	; 8
    24a8:	ff 4d       	sbci	r31, 0xDF	; 223
    24aa:	30 81       	ld	r19, Z
    24ac:	30 32       	cpi	r19, 0x20	; 32
    24ae:	89 f0       	breq	.+34     	; 0x24d2 <__vector_91+0x126>
						break;
					}
					gps[i] = 32;
    24b0:	40 e2       	ldi	r20, 0x20	; 32
    24b2:	08 c0       	rjmp	.+16     	; 0x24c4 <__vector_91+0x118>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
						break;
					}
				}
				gps[idx] = 32;
				for(uint8_t i = idx+1; i < 15; i++){
					if(gps[i] == 32){
<<<<<<< HEAD
    2720:	82 2f       	mov	r24, r18
    2722:	90 e0       	ldi	r25, 0x00	; 0
    2724:	fc 01       	movw	r30, r24
    2726:	e4 5d       	subi	r30, 0xD4	; 212
    2728:	fe 4d       	sbci	r31, 0xDE	; 222
    272a:	30 81       	ld	r19, Z
    272c:	30 32       	cpi	r19, 0x20	; 32
    272e:	39 f0       	breq	.+14     	; 0x273e <__vector_91+0x126>
						break;
					}
					gps[i] = 32;
    2730:	fc 01       	movw	r30, r24
    2732:	e4 5d       	subi	r30, 0xD4	; 212
    2734:	fe 4d       	sbci	r31, 0xDE	; 222
    2736:	40 83       	st	Z, r20
=======
    24b4:	82 2f       	mov	r24, r18
    24b6:	90 e0       	ldi	r25, 0x00	; 0
    24b8:	fc 01       	movw	r30, r24
    24ba:	e8 50       	subi	r30, 0x08	; 8
    24bc:	ff 4d       	sbci	r31, 0xDF	; 223
    24be:	30 81       	ld	r19, Z
    24c0:	30 32       	cpi	r19, 0x20	; 32
    24c2:	39 f0       	breq	.+14     	; 0x24d2 <__vector_91+0x126>
						break;
					}
					gps[i] = 32;
    24c4:	fc 01       	movw	r30, r24
    24c6:	e8 50       	subi	r30, 0x08	; 8
    24c8:	ff 4d       	sbci	r31, 0xDF	; 223
    24ca:	40 83       	st	Z, r20
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
						idx = i;
						break;
					}
				}
				gps[idx] = 32;
				for(uint8_t i = idx+1; i < 15; i++){
<<<<<<< HEAD
    2738:	2f 5f       	subi	r18, 0xFF	; 255
    273a:	2f 30       	cpi	r18, 0x0F	; 15
    273c:	89 f7       	brne	.-30     	; 0x2720 <__vector_91+0x108>
=======
    24cc:	2f 5f       	subi	r18, 0xFF	; 255
    24ce:	2f 30       	cpi	r18, 0x0F	; 15
    24d0:	89 f7       	brne	.-30     	; 0x24b4 <__vector_91+0x108>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
					if(gps[i] == 32){
						break;
					}
					gps[i] = 32;
				}
				sscanf(gps,"%ld",&val);
<<<<<<< HEAD
    273e:	ce 01       	movw	r24, r28
    2740:	01 96       	adiw	r24, 0x01	; 1
    2742:	9f 93       	push	r25
    2744:	8f 93       	push	r24
    2746:	8a eb       	ldi	r24, 0xBA	; 186
    2748:	90 e2       	ldi	r25, 0x20	; 32
    274a:	9f 93       	push	r25
    274c:	8f 93       	push	r24
    274e:	8c e2       	ldi	r24, 0x2C	; 44
    2750:	91 e2       	ldi	r25, 0x21	; 33
    2752:	9f 93       	push	r25
    2754:	8f 93       	push	r24
    2756:	5b d7       	rcall	.+3766   	; 0x360e <sscanf>
				gps_t = (double) val;
    2758:	69 81       	ldd	r22, Y+1	; 0x01
    275a:	7a 81       	ldd	r23, Y+2	; 0x02
    275c:	8b 81       	ldd	r24, Y+3	; 0x03
    275e:	9c 81       	ldd	r25, Y+4	; 0x04
    2760:	94 d3       	rcall	.+1832   	; 0x2e8a <__floatsisf>
    2762:	60 93 eb 20 	sts	0x20EB, r22	; 0x8020eb <gps_t>
    2766:	70 93 ec 20 	sts	0x20EC, r23	; 0x8020ec <gps_t+0x1>
    276a:	80 93 ed 20 	sts	0x20ED, r24	; 0x8020ed <gps_t+0x2>
    276e:	90 93 ee 20 	sts	0x20EE, r25	; 0x8020ee <gps_t+0x3>
				break;
    2772:	0f 90       	pop	r0
    2774:	0f 90       	pop	r0
    2776:	0f 90       	pop	r0
    2778:	0f 90       	pop	r0
    277a:	0f 90       	pop	r0
    277c:	0f 90       	pop	r0
    277e:	bd c1       	rjmp	.+890    	; 0x2afa <__vector_91+0x4e2>
    2780:	ed e2       	ldi	r30, 0x2D	; 45
    2782:	f1 e2       	ldi	r31, 0x21	; 33
			case 2:			//Latitude
				for(uint8_t i = 0; i < 15; i++){
    2784:	81 e0       	ldi	r24, 0x01	; 1
					if(gps[i] == (uint8_t) '.'){
    2786:	91 91       	ld	r25, Z+
    2788:	9e 32       	cpi	r25, 0x2E	; 46
    278a:	29 f4       	brne	.+10     	; 0x2796 <__vector_91+0x17e>
    278c:	01 c0       	rjmp	.+2      	; 0x2790 <__vector_91+0x178>
    278e:	80 e0       	ldi	r24, 0x00	; 0
						idx = i;
    2790:	80 93 09 21 	sts	0x2109, r24	; 0x802109 <idx>
						break;
    2794:	03 c0       	rjmp	.+6      	; 0x279c <__vector_91+0x184>
=======
    24d2:	ce 01       	movw	r24, r28
    24d4:	01 96       	adiw	r24, 0x01	; 1
    24d6:	9f 93       	push	r25
    24d8:	8f 93       	push	r24
    24da:	86 e9       	ldi	r24, 0x96	; 150
    24dc:	90 e2       	ldi	r25, 0x20	; 32
    24de:	9f 93       	push	r25
    24e0:	8f 93       	push	r24
    24e2:	88 ef       	ldi	r24, 0xF8	; 248
    24e4:	90 e2       	ldi	r25, 0x20	; 32
    24e6:	9f 93       	push	r25
    24e8:	8f 93       	push	r24
    24ea:	f3 d6       	rcall	.+3558   	; 0x32d2 <sscanf>
				gps_t = (double) val;
    24ec:	69 81       	ldd	r22, Y+1	; 0x01
    24ee:	7a 81       	ldd	r23, Y+2	; 0x02
    24f0:	8b 81       	ldd	r24, Y+3	; 0x03
    24f2:	9c 81       	ldd	r25, Y+4	; 0x04
    24f4:	5a d3       	rcall	.+1716   	; 0x2baa <__floatsisf>
    24f6:	60 93 bc 20 	sts	0x20BC, r22	; 0x8020bc <gps_t>
    24fa:	70 93 bd 20 	sts	0x20BD, r23	; 0x8020bd <gps_t+0x1>
    24fe:	80 93 be 20 	sts	0x20BE, r24	; 0x8020be <gps_t+0x2>
    2502:	90 93 bf 20 	sts	0x20BF, r25	; 0x8020bf <gps_t+0x3>
				break;
    2506:	0f 90       	pop	r0
    2508:	0f 90       	pop	r0
    250a:	0f 90       	pop	r0
    250c:	0f 90       	pop	r0
    250e:	0f 90       	pop	r0
    2510:	0f 90       	pop	r0
    2512:	bd c1       	rjmp	.+890    	; 0x288e <__vector_91+0x4e2>
    2514:	e9 ef       	ldi	r30, 0xF9	; 249
    2516:	f0 e2       	ldi	r31, 0x20	; 32
			case 2:			//Latitude
				for(uint8_t i = 0; i < 15; i++){
    2518:	81 e0       	ldi	r24, 0x01	; 1
					if(gps[i] == (uint8_t) '.'){
    251a:	91 91       	ld	r25, Z+
    251c:	9e 32       	cpi	r25, 0x2E	; 46
    251e:	29 f4       	brne	.+10     	; 0x252a <__vector_91+0x17e>
    2520:	01 c0       	rjmp	.+2      	; 0x2524 <__vector_91+0x178>
    2522:	80 e0       	ldi	r24, 0x00	; 0
						idx = i;
    2524:	80 93 d8 20 	sts	0x20D8, r24	; 0x8020d8 <idx>
						break;
    2528:	03 c0       	rjmp	.+6      	; 0x2530 <__vector_91+0x184>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
				}
				sscanf(gps,"%ld",&val);
				gps_t = (double) val;
				break;
			case 2:			//Latitude
				for(uint8_t i = 0; i < 15; i++){
<<<<<<< HEAD
    2796:	8f 5f       	subi	r24, 0xFF	; 255
    2798:	8f 30       	cpi	r24, 0x0F	; 15
    279a:	a9 f7       	brne	.-22     	; 0x2786 <__vector_91+0x16e>
=======
    252a:	8f 5f       	subi	r24, 0xFF	; 255
    252c:	8f 30       	cpi	r24, 0x0F	; 15
    252e:	a9 f7       	brne	.-22     	; 0x251a <__vector_91+0x16e>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
					if(gps[i] == (uint8_t) '.'){
						idx = i;
						break;
					}
				}
				gps[idx] = 32;
<<<<<<< HEAD
    279c:	20 91 09 21 	lds	r18, 0x2109	; 0x802109 <idx>
    27a0:	42 2f       	mov	r20, r18
    27a2:	50 e0       	ldi	r21, 0x00	; 0
    27a4:	fa 01       	movw	r30, r20
    27a6:	e4 5d       	subi	r30, 0xD4	; 212
    27a8:	fe 4d       	sbci	r31, 0xDE	; 222
    27aa:	80 e2       	ldi	r24, 0x20	; 32
    27ac:	80 83       	st	Z, r24
				for(uint8_t i = idx+1; i < 15; i++){
    27ae:	2f 5f       	subi	r18, 0xFF	; 255
    27b0:	2f 30       	cpi	r18, 0x0F	; 15
    27b2:	f8 f4       	brcc	.+62     	; 0x27f2 <__vector_91+0x1da>
					if(gps[i] == 32){
    27b4:	82 2f       	mov	r24, r18
    27b6:	90 e0       	ldi	r25, 0x00	; 0
    27b8:	fc 01       	movw	r30, r24
    27ba:	e4 5d       	subi	r30, 0xD4	; 212
    27bc:	fe 4d       	sbci	r31, 0xDE	; 222
    27be:	30 81       	ld	r19, Z
    27c0:	30 32       	cpi	r19, 0x20	; 32
    27c2:	b9 f0       	breq	.+46     	; 0x27f2 <__vector_91+0x1da>
=======
    2530:	20 91 d8 20 	lds	r18, 0x20D8	; 0x8020d8 <idx>
    2534:	42 2f       	mov	r20, r18
    2536:	50 e0       	ldi	r21, 0x00	; 0
    2538:	fa 01       	movw	r30, r20
    253a:	e8 50       	subi	r30, 0x08	; 8
    253c:	ff 4d       	sbci	r31, 0xDF	; 223
    253e:	80 e2       	ldi	r24, 0x20	; 32
    2540:	80 83       	st	Z, r24
				for(uint8_t i = idx+1; i < 15; i++){
    2542:	2f 5f       	subi	r18, 0xFF	; 255
    2544:	2f 30       	cpi	r18, 0x0F	; 15
    2546:	f8 f4       	brcc	.+62     	; 0x2586 <__vector_91+0x1da>
					if(gps[i] == 32){
    2548:	82 2f       	mov	r24, r18
    254a:	90 e0       	ldi	r25, 0x00	; 0
    254c:	fc 01       	movw	r30, r24
    254e:	e8 50       	subi	r30, 0x08	; 8
    2550:	ff 4d       	sbci	r31, 0xDF	; 223
    2552:	30 81       	ld	r19, Z
    2554:	30 32       	cpi	r19, 0x20	; 32
    2556:	b9 f0       	breq	.+46     	; 0x2586 <__vector_91+0x1da>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
						break;
					}
					dec[i-idx-1] = gps[i];
					gps[i] = 32;
<<<<<<< HEAD
    27c4:	60 e2       	ldi	r22, 0x20	; 32
    27c6:	08 c0       	rjmp	.+16     	; 0x27d8 <__vector_91+0x1c0>
=======
    2558:	60 e2       	ldi	r22, 0x20	; 32
    255a:	08 c0       	rjmp	.+16     	; 0x256c <__vector_91+0x1c0>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
						break;
					}
				}
				gps[idx] = 32;
				for(uint8_t i = idx+1; i < 15; i++){
					if(gps[i] == 32){
<<<<<<< HEAD
    27c8:	82 2f       	mov	r24, r18
    27ca:	90 e0       	ldi	r25, 0x00	; 0
    27cc:	fc 01       	movw	r30, r24
    27ce:	e4 5d       	subi	r30, 0xD4	; 212
    27d0:	fe 4d       	sbci	r31, 0xDE	; 222
    27d2:	30 81       	ld	r19, Z
    27d4:	30 32       	cpi	r19, 0x20	; 32
    27d6:	69 f0       	breq	.+26     	; 0x27f2 <__vector_91+0x1da>
						break;
					}
					dec[i-idx-1] = gps[i];
    27d8:	fc 01       	movw	r30, r24
    27da:	e4 1b       	sub	r30, r20
    27dc:	f5 0b       	sbc	r31, r21
    27de:	e6 5c       	subi	r30, 0xC6	; 198
    27e0:	fe 4d       	sbci	r31, 0xDE	; 222
    27e2:	30 83       	st	Z, r19
					gps[i] = 32;
    27e4:	fc 01       	movw	r30, r24
    27e6:	e4 5d       	subi	r30, 0xD4	; 212
    27e8:	fe 4d       	sbci	r31, 0xDE	; 222
    27ea:	60 83       	st	Z, r22
=======
    255c:	82 2f       	mov	r24, r18
    255e:	90 e0       	ldi	r25, 0x00	; 0
    2560:	fc 01       	movw	r30, r24
    2562:	e8 50       	subi	r30, 0x08	; 8
    2564:	ff 4d       	sbci	r31, 0xDF	; 223
    2566:	30 81       	ld	r19, Z
    2568:	30 32       	cpi	r19, 0x20	; 32
    256a:	69 f0       	breq	.+26     	; 0x2586 <__vector_91+0x1da>
						break;
					}
					dec[i-idx-1] = gps[i];
    256c:	fc 01       	movw	r30, r24
    256e:	e4 1b       	sub	r30, r20
    2570:	f5 0b       	sbc	r31, r21
    2572:	ea 5f       	subi	r30, 0xFA	; 250
    2574:	fe 4d       	sbci	r31, 0xDE	; 222
    2576:	30 83       	st	Z, r19
					gps[i] = 32;
    2578:	fc 01       	movw	r30, r24
    257a:	e8 50       	subi	r30, 0x08	; 8
    257c:	ff 4d       	sbci	r31, 0xDF	; 223
    257e:	60 83       	st	Z, r22
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
						idx = i;
						break;
					}
				}
				gps[idx] = 32;
				for(uint8_t i = idx+1; i < 15; i++){
<<<<<<< HEAD
    27ec:	2f 5f       	subi	r18, 0xFF	; 255
    27ee:	2f 30       	cpi	r18, 0x0F	; 15
    27f0:	59 f7       	brne	.-42     	; 0x27c8 <__vector_91+0x1b0>
=======
    2580:	2f 5f       	subi	r18, 0xFF	; 255
    2582:	2f 30       	cpi	r18, 0x0F	; 15
    2584:	59 f7       	brne	.-42     	; 0x255c <__vector_91+0x1b0>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
						break;
					}
					dec[i-idx-1] = gps[i];
					gps[i] = 32;
				}
				if(dec[0] == 32){
<<<<<<< HEAD
    27f2:	80 91 3b 21 	lds	r24, 0x213B	; 0x80213b <dec>
    27f6:	80 32       	cpi	r24, 0x20	; 32
    27f8:	19 f4       	brne	.+6      	; 0x2800 <__vector_91+0x1e8>
					dec[0] = '0';
    27fa:	80 e3       	ldi	r24, 0x30	; 48
    27fc:	80 93 3b 21 	sts	0x213B, r24	; 0x80213b <dec>
				}
				sscanf(gps,"%ld",&val);
    2800:	ce 01       	movw	r24, r28
    2802:	01 96       	adiw	r24, 0x01	; 1
    2804:	9f 93       	push	r25
    2806:	8f 93       	push	r24
    2808:	8a eb       	ldi	r24, 0xBA	; 186
    280a:	90 e2       	ldi	r25, 0x20	; 32
    280c:	9f 93       	push	r25
    280e:	8f 93       	push	r24
    2810:	8c e2       	ldi	r24, 0x2C	; 44
    2812:	91 e2       	ldi	r25, 0x21	; 33
    2814:	9f 93       	push	r25
    2816:	8f 93       	push	r24
    2818:	fa d6       	rcall	.+3572   	; 0x360e <sscanf>
				sscanf(dec,"%d",&val2);
    281a:	ce 01       	movw	r24, r28
    281c:	05 96       	adiw	r24, 0x05	; 5
    281e:	9f 93       	push	r25
    2820:	8f 93       	push	r24
    2822:	8e eb       	ldi	r24, 0xBE	; 190
    2824:	90 e2       	ldi	r25, 0x20	; 32
    2826:	9f 93       	push	r25
    2828:	8f 93       	push	r24
    282a:	8b e3       	ldi	r24, 0x3B	; 59
    282c:	91 e2       	ldi	r25, 0x21	; 33
    282e:	9f 93       	push	r25
    2830:	8f 93       	push	r24
    2832:	ed d6       	rcall	.+3546   	; 0x360e <sscanf>
				gps_lat = val/100 + ((double)(val%100) + ((double)(val2))/10000) / 60.0;
    2834:	89 80       	ldd	r8, Y+1	; 0x01
    2836:	9a 80       	ldd	r9, Y+2	; 0x02
    2838:	ab 80       	ldd	r10, Y+3	; 0x03
    283a:	bc 80       	ldd	r11, Y+4	; 0x04
    283c:	6d 81       	ldd	r22, Y+5	; 0x05
    283e:	7e 81       	ldd	r23, Y+6	; 0x06
    2840:	07 2e       	mov	r0, r23
    2842:	00 0c       	add	r0, r0
    2844:	88 0b       	sbc	r24, r24
    2846:	99 0b       	sbc	r25, r25
    2848:	20 d3       	rcall	.+1600   	; 0x2e8a <__floatsisf>
    284a:	20 e0       	ldi	r18, 0x00	; 0
    284c:	30 e4       	ldi	r19, 0x40	; 64
    284e:	4c e1       	ldi	r20, 0x1C	; 28
    2850:	56 e4       	ldi	r21, 0x46	; 70
    2852:	46 d2       	rcall	.+1164   	; 0x2ce0 <__divsf3>
    2854:	6b 01       	movw	r12, r22
    2856:	7c 01       	movw	r14, r24
    2858:	c5 01       	movw	r24, r10
    285a:	b4 01       	movw	r22, r8
    285c:	24 e6       	ldi	r18, 0x64	; 100
    285e:	30 e0       	ldi	r19, 0x00	; 0
    2860:	40 e0       	ldi	r20, 0x00	; 0
    2862:	50 e0       	ldi	r21, 0x00	; 0
    2864:	f6 d5       	rcall	.+3052   	; 0x3452 <__divmodsi4>
    2866:	49 01       	movw	r8, r18
    2868:	5a 01       	movw	r10, r20
    286a:	0f d3       	rcall	.+1566   	; 0x2e8a <__floatsisf>
    286c:	9b 01       	movw	r18, r22
    286e:	ac 01       	movw	r20, r24
    2870:	c7 01       	movw	r24, r14
    2872:	b6 01       	movw	r22, r12
    2874:	cd d1       	rcall	.+922    	; 0x2c10 <__addsf3>
    2876:	20 e0       	ldi	r18, 0x00	; 0
    2878:	30 e0       	ldi	r19, 0x00	; 0
    287a:	40 e7       	ldi	r20, 0x70	; 112
    287c:	52 e4       	ldi	r21, 0x42	; 66
    287e:	30 d2       	rcall	.+1120   	; 0x2ce0 <__divsf3>
    2880:	6b 01       	movw	r12, r22
    2882:	7c 01       	movw	r14, r24
    2884:	c5 01       	movw	r24, r10
    2886:	b4 01       	movw	r22, r8
    2888:	00 d3       	rcall	.+1536   	; 0x2e8a <__floatsisf>
    288a:	9b 01       	movw	r18, r22
    288c:	ac 01       	movw	r20, r24
    288e:	c7 01       	movw	r24, r14
    2890:	b6 01       	movw	r22, r12
    2892:	be d1       	rcall	.+892    	; 0x2c10 <__addsf3>
    2894:	60 93 e7 20 	sts	0x20E7, r22	; 0x8020e7 <gps_lat>
    2898:	70 93 e8 20 	sts	0x20E8, r23	; 0x8020e8 <gps_lat+0x1>
    289c:	80 93 e9 20 	sts	0x20E9, r24	; 0x8020e9 <gps_lat+0x2>
    28a0:	90 93 ea 20 	sts	0x20EA, r25	; 0x8020ea <gps_lat+0x3>
				break;
    28a4:	cd bf       	out	0x3d, r28	; 61
    28a6:	de bf       	out	0x3e, r29	; 62
    28a8:	28 c1       	rjmp	.+592    	; 0x2afa <__vector_91+0x4e2>
    28aa:	ed e2       	ldi	r30, 0x2D	; 45
    28ac:	f1 e2       	ldi	r31, 0x21	; 33
			case 4:			//Longitude
				for(uint8_t i = 0; i < 15; i++){
    28ae:	81 e0       	ldi	r24, 0x01	; 1
					if(gps[i] == (uint8_t) '.'){
    28b0:	91 91       	ld	r25, Z+
    28b2:	9e 32       	cpi	r25, 0x2E	; 46
    28b4:	29 f4       	brne	.+10     	; 0x28c0 <__vector_91+0x2a8>
    28b6:	01 c0       	rjmp	.+2      	; 0x28ba <__vector_91+0x2a2>
    28b8:	80 e0       	ldi	r24, 0x00	; 0
						idx = i;
    28ba:	80 93 09 21 	sts	0x2109, r24	; 0x802109 <idx>
						break;
    28be:	03 c0       	rjmp	.+6      	; 0x28c6 <__vector_91+0x2ae>
=======
    2586:	80 91 07 21 	lds	r24, 0x2107	; 0x802107 <dec>
    258a:	80 32       	cpi	r24, 0x20	; 32
    258c:	19 f4       	brne	.+6      	; 0x2594 <__vector_91+0x1e8>
					dec[0] = '0';
    258e:	80 e3       	ldi	r24, 0x30	; 48
    2590:	80 93 07 21 	sts	0x2107, r24	; 0x802107 <dec>
				}
				sscanf(gps,"%ld",&val);
    2594:	ce 01       	movw	r24, r28
    2596:	01 96       	adiw	r24, 0x01	; 1
    2598:	9f 93       	push	r25
    259a:	8f 93       	push	r24
    259c:	86 e9       	ldi	r24, 0x96	; 150
    259e:	90 e2       	ldi	r25, 0x20	; 32
    25a0:	9f 93       	push	r25
    25a2:	8f 93       	push	r24
    25a4:	88 ef       	ldi	r24, 0xF8	; 248
    25a6:	90 e2       	ldi	r25, 0x20	; 32
    25a8:	9f 93       	push	r25
    25aa:	8f 93       	push	r24
    25ac:	92 d6       	rcall	.+3364   	; 0x32d2 <sscanf>
				sscanf(dec,"%d",&val2);
    25ae:	ce 01       	movw	r24, r28
    25b0:	05 96       	adiw	r24, 0x05	; 5
    25b2:	9f 93       	push	r25
    25b4:	8f 93       	push	r24
    25b6:	8a e9       	ldi	r24, 0x9A	; 154
    25b8:	90 e2       	ldi	r25, 0x20	; 32
    25ba:	9f 93       	push	r25
    25bc:	8f 93       	push	r24
    25be:	87 e0       	ldi	r24, 0x07	; 7
    25c0:	91 e2       	ldi	r25, 0x21	; 33
    25c2:	9f 93       	push	r25
    25c4:	8f 93       	push	r24
    25c6:	85 d6       	rcall	.+3338   	; 0x32d2 <sscanf>
				gps_lat = val/100 + ((double)(val%100) + ((double)(val2))/10000) / 60.0;
    25c8:	89 80       	ldd	r8, Y+1	; 0x01
    25ca:	9a 80       	ldd	r9, Y+2	; 0x02
    25cc:	ab 80       	ldd	r10, Y+3	; 0x03
    25ce:	bc 80       	ldd	r11, Y+4	; 0x04
    25d0:	6d 81       	ldd	r22, Y+5	; 0x05
    25d2:	7e 81       	ldd	r23, Y+6	; 0x06
    25d4:	07 2e       	mov	r0, r23
    25d6:	00 0c       	add	r0, r0
    25d8:	88 0b       	sbc	r24, r24
    25da:	99 0b       	sbc	r25, r25
    25dc:	e6 d2       	rcall	.+1484   	; 0x2baa <__floatsisf>
    25de:	20 e0       	ldi	r18, 0x00	; 0
    25e0:	30 e4       	ldi	r19, 0x40	; 64
    25e2:	4c e1       	ldi	r20, 0x1C	; 28
    25e4:	56 e4       	ldi	r21, 0x46	; 70
    25e6:	46 d2       	rcall	.+1164   	; 0x2a74 <__divsf3>
    25e8:	6b 01       	movw	r12, r22
    25ea:	7c 01       	movw	r14, r24
    25ec:	c5 01       	movw	r24, r10
    25ee:	b4 01       	movw	r22, r8
    25f0:	24 e6       	ldi	r18, 0x64	; 100
    25f2:	30 e0       	ldi	r19, 0x00	; 0
    25f4:	40 e0       	ldi	r20, 0x00	; 0
    25f6:	50 e0       	ldi	r21, 0x00	; 0
    25f8:	ac d5       	rcall	.+2904   	; 0x3152 <__divmodsi4>
    25fa:	49 01       	movw	r8, r18
    25fc:	5a 01       	movw	r10, r20
    25fe:	d5 d2       	rcall	.+1450   	; 0x2baa <__floatsisf>
    2600:	9b 01       	movw	r18, r22
    2602:	ac 01       	movw	r20, r24
    2604:	c7 01       	movw	r24, r14
    2606:	b6 01       	movw	r22, r12
    2608:	cd d1       	rcall	.+922    	; 0x29a4 <__addsf3>
    260a:	20 e0       	ldi	r18, 0x00	; 0
    260c:	30 e0       	ldi	r19, 0x00	; 0
    260e:	40 e7       	ldi	r20, 0x70	; 112
    2610:	52 e4       	ldi	r21, 0x42	; 66
    2612:	30 d2       	rcall	.+1120   	; 0x2a74 <__divsf3>
    2614:	6b 01       	movw	r12, r22
    2616:	7c 01       	movw	r14, r24
    2618:	c5 01       	movw	r24, r10
    261a:	b4 01       	movw	r22, r8
    261c:	c6 d2       	rcall	.+1420   	; 0x2baa <__floatsisf>
    261e:	9b 01       	movw	r18, r22
    2620:	ac 01       	movw	r20, r24
    2622:	c7 01       	movw	r24, r14
    2624:	b6 01       	movw	r22, r12
    2626:	be d1       	rcall	.+892    	; 0x29a4 <__addsf3>
    2628:	60 93 b8 20 	sts	0x20B8, r22	; 0x8020b8 <gps_lat>
    262c:	70 93 b9 20 	sts	0x20B9, r23	; 0x8020b9 <gps_lat+0x1>
    2630:	80 93 ba 20 	sts	0x20BA, r24	; 0x8020ba <gps_lat+0x2>
    2634:	90 93 bb 20 	sts	0x20BB, r25	; 0x8020bb <gps_lat+0x3>
				break;
    2638:	cd bf       	out	0x3d, r28	; 61
    263a:	de bf       	out	0x3e, r29	; 62
    263c:	28 c1       	rjmp	.+592    	; 0x288e <__vector_91+0x4e2>
    263e:	e9 ef       	ldi	r30, 0xF9	; 249
    2640:	f0 e2       	ldi	r31, 0x20	; 32
			case 4:			//Longitude
				for(uint8_t i = 0; i < 15; i++){
    2642:	81 e0       	ldi	r24, 0x01	; 1
					if(gps[i] == (uint8_t) '.'){
    2644:	91 91       	ld	r25, Z+
    2646:	9e 32       	cpi	r25, 0x2E	; 46
    2648:	29 f4       	brne	.+10     	; 0x2654 <__vector_91+0x2a8>
    264a:	01 c0       	rjmp	.+2      	; 0x264e <__vector_91+0x2a2>
    264c:	80 e0       	ldi	r24, 0x00	; 0
						idx = i;
    264e:	80 93 d8 20 	sts	0x20D8, r24	; 0x8020d8 <idx>
						break;
    2652:	03 c0       	rjmp	.+6      	; 0x265a <__vector_91+0x2ae>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
				sscanf(gps,"%ld",&val);
				sscanf(dec,"%d",&val2);
				gps_lat = val/100 + ((double)(val%100) + ((double)(val2))/10000) / 60.0;
				break;
			case 4:			//Longitude
				for(uint8_t i = 0; i < 15; i++){
<<<<<<< HEAD
    28c0:	8f 5f       	subi	r24, 0xFF	; 255
    28c2:	8f 30       	cpi	r24, 0x0F	; 15
    28c4:	a9 f7       	brne	.-22     	; 0x28b0 <__vector_91+0x298>
=======
    2654:	8f 5f       	subi	r24, 0xFF	; 255
    2656:	8f 30       	cpi	r24, 0x0F	; 15
    2658:	a9 f7       	brne	.-22     	; 0x2644 <__vector_91+0x298>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
					if(gps[i] == (uint8_t) '.'){
						idx = i;
						break;
					}
				}
				gps[idx] = 32;
<<<<<<< HEAD
    28c6:	20 91 09 21 	lds	r18, 0x2109	; 0x802109 <idx>
    28ca:	42 2f       	mov	r20, r18
    28cc:	50 e0       	ldi	r21, 0x00	; 0
    28ce:	fa 01       	movw	r30, r20
    28d0:	e4 5d       	subi	r30, 0xD4	; 212
    28d2:	fe 4d       	sbci	r31, 0xDE	; 222
    28d4:	80 e2       	ldi	r24, 0x20	; 32
    28d6:	80 83       	st	Z, r24
				for(uint8_t i = idx+1; i < 15; i++){
    28d8:	2f 5f       	subi	r18, 0xFF	; 255
    28da:	2f 30       	cpi	r18, 0x0F	; 15
    28dc:	f8 f4       	brcc	.+62     	; 0x291c <__vector_91+0x304>
					if(gps[i] == 32){
    28de:	82 2f       	mov	r24, r18
    28e0:	90 e0       	ldi	r25, 0x00	; 0
    28e2:	fc 01       	movw	r30, r24
    28e4:	e4 5d       	subi	r30, 0xD4	; 212
    28e6:	fe 4d       	sbci	r31, 0xDE	; 222
    28e8:	30 81       	ld	r19, Z
    28ea:	30 32       	cpi	r19, 0x20	; 32
    28ec:	b9 f0       	breq	.+46     	; 0x291c <__vector_91+0x304>
=======
    265a:	20 91 d8 20 	lds	r18, 0x20D8	; 0x8020d8 <idx>
    265e:	42 2f       	mov	r20, r18
    2660:	50 e0       	ldi	r21, 0x00	; 0
    2662:	fa 01       	movw	r30, r20
    2664:	e8 50       	subi	r30, 0x08	; 8
    2666:	ff 4d       	sbci	r31, 0xDF	; 223
    2668:	80 e2       	ldi	r24, 0x20	; 32
    266a:	80 83       	st	Z, r24
				for(uint8_t i = idx+1; i < 15; i++){
    266c:	2f 5f       	subi	r18, 0xFF	; 255
    266e:	2f 30       	cpi	r18, 0x0F	; 15
    2670:	f8 f4       	brcc	.+62     	; 0x26b0 <__vector_91+0x304>
					if(gps[i] == 32){
    2672:	82 2f       	mov	r24, r18
    2674:	90 e0       	ldi	r25, 0x00	; 0
    2676:	fc 01       	movw	r30, r24
    2678:	e8 50       	subi	r30, 0x08	; 8
    267a:	ff 4d       	sbci	r31, 0xDF	; 223
    267c:	30 81       	ld	r19, Z
    267e:	30 32       	cpi	r19, 0x20	; 32
    2680:	b9 f0       	breq	.+46     	; 0x26b0 <__vector_91+0x304>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
						break;
					}
					dec[i-idx-1] = gps[i];
					gps[i] = 32;
<<<<<<< HEAD
    28ee:	60 e2       	ldi	r22, 0x20	; 32
    28f0:	08 c0       	rjmp	.+16     	; 0x2902 <__vector_91+0x2ea>
=======
    2682:	60 e2       	ldi	r22, 0x20	; 32
    2684:	08 c0       	rjmp	.+16     	; 0x2696 <__vector_91+0x2ea>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
						break;
					}
				}
				gps[idx] = 32;
				for(uint8_t i = idx+1; i < 15; i++){
					if(gps[i] == 32){
<<<<<<< HEAD
    28f2:	82 2f       	mov	r24, r18
    28f4:	90 e0       	ldi	r25, 0x00	; 0
    28f6:	fc 01       	movw	r30, r24
    28f8:	e4 5d       	subi	r30, 0xD4	; 212
    28fa:	fe 4d       	sbci	r31, 0xDE	; 222
    28fc:	30 81       	ld	r19, Z
    28fe:	30 32       	cpi	r19, 0x20	; 32
    2900:	69 f0       	breq	.+26     	; 0x291c <__vector_91+0x304>
						break;
					}
					dec[i-idx-1] = gps[i];
    2902:	fc 01       	movw	r30, r24
    2904:	e4 1b       	sub	r30, r20
    2906:	f5 0b       	sbc	r31, r21
    2908:	e6 5c       	subi	r30, 0xC6	; 198
    290a:	fe 4d       	sbci	r31, 0xDE	; 222
    290c:	30 83       	st	Z, r19
					gps[i] = 32;
    290e:	fc 01       	movw	r30, r24
    2910:	e4 5d       	subi	r30, 0xD4	; 212
    2912:	fe 4d       	sbci	r31, 0xDE	; 222
    2914:	60 83       	st	Z, r22
=======
    2686:	82 2f       	mov	r24, r18
    2688:	90 e0       	ldi	r25, 0x00	; 0
    268a:	fc 01       	movw	r30, r24
    268c:	e8 50       	subi	r30, 0x08	; 8
    268e:	ff 4d       	sbci	r31, 0xDF	; 223
    2690:	30 81       	ld	r19, Z
    2692:	30 32       	cpi	r19, 0x20	; 32
    2694:	69 f0       	breq	.+26     	; 0x26b0 <__vector_91+0x304>
						break;
					}
					dec[i-idx-1] = gps[i];
    2696:	fc 01       	movw	r30, r24
    2698:	e4 1b       	sub	r30, r20
    269a:	f5 0b       	sbc	r31, r21
    269c:	ea 5f       	subi	r30, 0xFA	; 250
    269e:	fe 4d       	sbci	r31, 0xDE	; 222
    26a0:	30 83       	st	Z, r19
					gps[i] = 32;
    26a2:	fc 01       	movw	r30, r24
    26a4:	e8 50       	subi	r30, 0x08	; 8
    26a6:	ff 4d       	sbci	r31, 0xDF	; 223
    26a8:	60 83       	st	Z, r22
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
						idx = i;
						break;
					}
				}
				gps[idx] = 32;
				for(uint8_t i = idx+1; i < 15; i++){
<<<<<<< HEAD
    2916:	2f 5f       	subi	r18, 0xFF	; 255
    2918:	2f 30       	cpi	r18, 0x0F	; 15
    291a:	59 f7       	brne	.-42     	; 0x28f2 <__vector_91+0x2da>
=======
    26aa:	2f 5f       	subi	r18, 0xFF	; 255
    26ac:	2f 30       	cpi	r18, 0x0F	; 15
    26ae:	59 f7       	brne	.-42     	; 0x2686 <__vector_91+0x2da>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
						break;
					}
					dec[i-idx-1] = gps[i];
					gps[i] = 32;
				}
				if(dec[0] == 32){
<<<<<<< HEAD
    291c:	80 91 3b 21 	lds	r24, 0x213B	; 0x80213b <dec>
    2920:	80 32       	cpi	r24, 0x20	; 32
    2922:	19 f4       	brne	.+6      	; 0x292a <__vector_91+0x312>
					dec[0] = '0';
    2924:	80 e3       	ldi	r24, 0x30	; 48
    2926:	80 93 3b 21 	sts	0x213B, r24	; 0x80213b <dec>
				}
				sscanf(gps,"%ld",&val);
    292a:	ce 01       	movw	r24, r28
    292c:	01 96       	adiw	r24, 0x01	; 1
    292e:	9f 93       	push	r25
    2930:	8f 93       	push	r24
    2932:	8a eb       	ldi	r24, 0xBA	; 186
    2934:	90 e2       	ldi	r25, 0x20	; 32
    2936:	9f 93       	push	r25
    2938:	8f 93       	push	r24
    293a:	8c e2       	ldi	r24, 0x2C	; 44
    293c:	91 e2       	ldi	r25, 0x21	; 33
    293e:	9f 93       	push	r25
    2940:	8f 93       	push	r24
    2942:	65 d6       	rcall	.+3274   	; 0x360e <sscanf>
				sscanf(dec,"%d",&val2);
    2944:	ce 01       	movw	r24, r28
    2946:	05 96       	adiw	r24, 0x05	; 5
    2948:	9f 93       	push	r25
    294a:	8f 93       	push	r24
    294c:	8e eb       	ldi	r24, 0xBE	; 190
    294e:	90 e2       	ldi	r25, 0x20	; 32
    2950:	9f 93       	push	r25
    2952:	8f 93       	push	r24
    2954:	8b e3       	ldi	r24, 0x3B	; 59
    2956:	91 e2       	ldi	r25, 0x21	; 33
    2958:	9f 93       	push	r25
    295a:	8f 93       	push	r24
    295c:	58 d6       	rcall	.+3248   	; 0x360e <sscanf>
				gps_long = -(val/100 + ((double)(val%100) + ((double)(val2))/10000) / 60.0);
    295e:	89 80       	ldd	r8, Y+1	; 0x01
    2960:	9a 80       	ldd	r9, Y+2	; 0x02
    2962:	ab 80       	ldd	r10, Y+3	; 0x03
    2964:	bc 80       	ldd	r11, Y+4	; 0x04
    2966:	6d 81       	ldd	r22, Y+5	; 0x05
    2968:	7e 81       	ldd	r23, Y+6	; 0x06
    296a:	07 2e       	mov	r0, r23
    296c:	00 0c       	add	r0, r0
    296e:	88 0b       	sbc	r24, r24
    2970:	99 0b       	sbc	r25, r25
    2972:	8b d2       	rcall	.+1302   	; 0x2e8a <__floatsisf>
    2974:	20 e0       	ldi	r18, 0x00	; 0
    2976:	30 e4       	ldi	r19, 0x40	; 64
    2978:	4c e1       	ldi	r20, 0x1C	; 28
    297a:	56 e4       	ldi	r21, 0x46	; 70
    297c:	b1 d1       	rcall	.+866    	; 0x2ce0 <__divsf3>
    297e:	6b 01       	movw	r12, r22
    2980:	7c 01       	movw	r14, r24
    2982:	c5 01       	movw	r24, r10
    2984:	b4 01       	movw	r22, r8
    2986:	24 e6       	ldi	r18, 0x64	; 100
    2988:	30 e0       	ldi	r19, 0x00	; 0
    298a:	40 e0       	ldi	r20, 0x00	; 0
    298c:	50 e0       	ldi	r21, 0x00	; 0
    298e:	61 d5       	rcall	.+2754   	; 0x3452 <__divmodsi4>
    2990:	49 01       	movw	r8, r18
    2992:	5a 01       	movw	r10, r20
    2994:	7a d2       	rcall	.+1268   	; 0x2e8a <__floatsisf>
    2996:	9b 01       	movw	r18, r22
    2998:	ac 01       	movw	r20, r24
    299a:	c7 01       	movw	r24, r14
    299c:	b6 01       	movw	r22, r12
    299e:	38 d1       	rcall	.+624    	; 0x2c10 <__addsf3>
    29a0:	20 e0       	ldi	r18, 0x00	; 0
    29a2:	30 e0       	ldi	r19, 0x00	; 0
    29a4:	40 e7       	ldi	r20, 0x70	; 112
    29a6:	52 e4       	ldi	r21, 0x42	; 66
    29a8:	9b d1       	rcall	.+822    	; 0x2ce0 <__divsf3>
    29aa:	6b 01       	movw	r12, r22
    29ac:	7c 01       	movw	r14, r24
    29ae:	c5 01       	movw	r24, r10
    29b0:	b4 01       	movw	r22, r8
    29b2:	6b d2       	rcall	.+1238   	; 0x2e8a <__floatsisf>
    29b4:	9b 01       	movw	r18, r22
    29b6:	ac 01       	movw	r20, r24
    29b8:	c7 01       	movw	r24, r14
    29ba:	b6 01       	movw	r22, r12
    29bc:	29 d1       	rcall	.+594    	; 0x2c10 <__addsf3>
    29be:	dc 01       	movw	r26, r24
    29c0:	cb 01       	movw	r24, r22
    29c2:	b0 58       	subi	r27, 0x80	; 128
    29c4:	80 93 e3 20 	sts	0x20E3, r24	; 0x8020e3 <gps_long>
    29c8:	90 93 e4 20 	sts	0x20E4, r25	; 0x8020e4 <gps_long+0x1>
    29cc:	a0 93 e5 20 	sts	0x20E5, r26	; 0x8020e5 <gps_long+0x2>
    29d0:	b0 93 e6 20 	sts	0x20E6, r27	; 0x8020e6 <gps_long+0x3>
    29d4:	cd bf       	out	0x3d, r28	; 61
				break;
    29d6:	de bf       	out	0x3e, r29	; 62
    29d8:	90 c0       	rjmp	.+288    	; 0x2afa <__vector_91+0x4e2>
    29da:	8d ed       	ldi	r24, 0xDD	; 221
			case 7:			//Sats
				sscanf(gps,"%d",&gps_sats);
    29dc:	90 e2       	ldi	r25, 0x20	; 32
    29de:	9f 93       	push	r25
    29e0:	8f 93       	push	r24
    29e2:	8e eb       	ldi	r24, 0xBE	; 190
    29e4:	90 e2       	ldi	r25, 0x20	; 32
    29e6:	9f 93       	push	r25
    29e8:	8f 93       	push	r24
    29ea:	8c e2       	ldi	r24, 0x2C	; 44
    29ec:	91 e2       	ldi	r25, 0x21	; 33
    29ee:	9f 93       	push	r25
    29f0:	8f 93       	push	r24
    29f2:	0d d6       	rcall	.+3098   	; 0x360e <sscanf>
    29f4:	0f 90       	pop	r0
    29f6:	0f 90       	pop	r0
				break;
    29f8:	0f 90       	pop	r0
    29fa:	0f 90       	pop	r0
    29fc:	0f 90       	pop	r0
    29fe:	0f 90       	pop	r0
    2a00:	7c c0       	rjmp	.+248    	; 0x2afa <__vector_91+0x4e2>
    2a02:	ed e2       	ldi	r30, 0x2D	; 45
    2a04:	f1 e2       	ldi	r31, 0x21	; 33
    2a06:	81 e0       	ldi	r24, 0x01	; 1
    2a08:	91 91       	ld	r25, Z+
			case 9:			//Altitude
				for(uint8_t i = 0; i < 15; i++){
    2a0a:	9e 32       	cpi	r25, 0x2E	; 46
					if(gps[i] == (uint8_t) '.'){
    2a0c:	29 f4       	brne	.+10     	; 0x2a18 <__vector_91+0x400>
    2a0e:	01 c0       	rjmp	.+2      	; 0x2a12 <__vector_91+0x3fa>
    2a10:	80 e0       	ldi	r24, 0x00	; 0
    2a12:	80 93 09 21 	sts	0x2109, r24	; 0x802109 <idx>
						idx = i;
    2a16:	03 c0       	rjmp	.+6      	; 0x2a1e <__vector_91+0x406>
    2a18:	8f 5f       	subi	r24, 0xFF	; 255
						break;
    2a1a:	8f 30       	cpi	r24, 0x0F	; 15
=======
    26b0:	80 91 07 21 	lds	r24, 0x2107	; 0x802107 <dec>
    26b4:	80 32       	cpi	r24, 0x20	; 32
    26b6:	19 f4       	brne	.+6      	; 0x26be <__vector_91+0x312>
					dec[0] = '0';
    26b8:	80 e3       	ldi	r24, 0x30	; 48
    26ba:	80 93 07 21 	sts	0x2107, r24	; 0x802107 <dec>
				}
				sscanf(gps,"%ld",&val);
    26be:	ce 01       	movw	r24, r28
    26c0:	01 96       	adiw	r24, 0x01	; 1
    26c2:	9f 93       	push	r25
    26c4:	8f 93       	push	r24
    26c6:	86 e9       	ldi	r24, 0x96	; 150
    26c8:	90 e2       	ldi	r25, 0x20	; 32
    26ca:	9f 93       	push	r25
    26cc:	8f 93       	push	r24
    26ce:	88 ef       	ldi	r24, 0xF8	; 248
    26d0:	90 e2       	ldi	r25, 0x20	; 32
    26d2:	9f 93       	push	r25
    26d4:	8f 93       	push	r24
    26d6:	fd d5       	rcall	.+3066   	; 0x32d2 <sscanf>
				sscanf(dec,"%d",&val2);
    26d8:	ce 01       	movw	r24, r28
    26da:	05 96       	adiw	r24, 0x05	; 5
    26dc:	9f 93       	push	r25
    26de:	8f 93       	push	r24
    26e0:	8a e9       	ldi	r24, 0x9A	; 154
    26e2:	90 e2       	ldi	r25, 0x20	; 32
    26e4:	9f 93       	push	r25
    26e6:	8f 93       	push	r24
    26e8:	87 e0       	ldi	r24, 0x07	; 7
    26ea:	91 e2       	ldi	r25, 0x21	; 33
    26ec:	9f 93       	push	r25
    26ee:	8f 93       	push	r24
    26f0:	f0 d5       	rcall	.+3040   	; 0x32d2 <sscanf>
				gps_long = -(val/100 + ((double)(val%100) + ((double)(val2))/10000) / 60.0);
    26f2:	89 80       	ldd	r8, Y+1	; 0x01
    26f4:	9a 80       	ldd	r9, Y+2	; 0x02
    26f6:	ab 80       	ldd	r10, Y+3	; 0x03
    26f8:	bc 80       	ldd	r11, Y+4	; 0x04
    26fa:	6d 81       	ldd	r22, Y+5	; 0x05
    26fc:	7e 81       	ldd	r23, Y+6	; 0x06
    26fe:	07 2e       	mov	r0, r23
    2700:	00 0c       	add	r0, r0
    2702:	88 0b       	sbc	r24, r24
    2704:	99 0b       	sbc	r25, r25
    2706:	51 d2       	rcall	.+1186   	; 0x2baa <__floatsisf>
    2708:	20 e0       	ldi	r18, 0x00	; 0
    270a:	30 e4       	ldi	r19, 0x40	; 64
    270c:	4c e1       	ldi	r20, 0x1C	; 28
    270e:	56 e4       	ldi	r21, 0x46	; 70
    2710:	b1 d1       	rcall	.+866    	; 0x2a74 <__divsf3>
    2712:	6b 01       	movw	r12, r22
    2714:	7c 01       	movw	r14, r24
    2716:	c5 01       	movw	r24, r10
    2718:	b4 01       	movw	r22, r8
    271a:	24 e6       	ldi	r18, 0x64	; 100
    271c:	30 e0       	ldi	r19, 0x00	; 0
    271e:	40 e0       	ldi	r20, 0x00	; 0
    2720:	50 e0       	ldi	r21, 0x00	; 0
    2722:	17 d5       	rcall	.+2606   	; 0x3152 <__divmodsi4>
    2724:	49 01       	movw	r8, r18
    2726:	5a 01       	movw	r10, r20
    2728:	40 d2       	rcall	.+1152   	; 0x2baa <__floatsisf>
    272a:	9b 01       	movw	r18, r22
    272c:	ac 01       	movw	r20, r24
    272e:	c7 01       	movw	r24, r14
    2730:	b6 01       	movw	r22, r12
    2732:	38 d1       	rcall	.+624    	; 0x29a4 <__addsf3>
    2734:	20 e0       	ldi	r18, 0x00	; 0
    2736:	30 e0       	ldi	r19, 0x00	; 0
    2738:	40 e7       	ldi	r20, 0x70	; 112
    273a:	52 e4       	ldi	r21, 0x42	; 66
    273c:	9b d1       	rcall	.+822    	; 0x2a74 <__divsf3>
    273e:	6b 01       	movw	r12, r22
    2740:	7c 01       	movw	r14, r24
    2742:	c5 01       	movw	r24, r10
    2744:	b4 01       	movw	r22, r8
    2746:	31 d2       	rcall	.+1122   	; 0x2baa <__floatsisf>
    2748:	9b 01       	movw	r18, r22
    274a:	ac 01       	movw	r20, r24
    274c:	c7 01       	movw	r24, r14
    274e:	b6 01       	movw	r22, r12
    2750:	29 d1       	rcall	.+594    	; 0x29a4 <__addsf3>
    2752:	dc 01       	movw	r26, r24
    2754:	cb 01       	movw	r24, r22
    2756:	b0 58       	subi	r27, 0x80	; 128
    2758:	80 93 b4 20 	sts	0x20B4, r24	; 0x8020b4 <gps_long>
    275c:	90 93 b5 20 	sts	0x20B5, r25	; 0x8020b5 <gps_long+0x1>
    2760:	a0 93 b6 20 	sts	0x20B6, r26	; 0x8020b6 <gps_long+0x2>
    2764:	b0 93 b7 20 	sts	0x20B7, r27	; 0x8020b7 <gps_long+0x3>
    2768:	cd bf       	out	0x3d, r28	; 61
				break;
    276a:	de bf       	out	0x3e, r29	; 62
    276c:	90 c0       	rjmp	.+288    	; 0x288e <__vector_91+0x4e2>
    276e:	8e ea       	ldi	r24, 0xAE	; 174
			case 7:			//Sats
				sscanf(gps,"%d",&gps_sats);
    2770:	90 e2       	ldi	r25, 0x20	; 32
    2772:	9f 93       	push	r25
    2774:	8f 93       	push	r24
    2776:	8a e9       	ldi	r24, 0x9A	; 154
    2778:	90 e2       	ldi	r25, 0x20	; 32
    277a:	9f 93       	push	r25
    277c:	8f 93       	push	r24
    277e:	88 ef       	ldi	r24, 0xF8	; 248
    2780:	90 e2       	ldi	r25, 0x20	; 32
    2782:	9f 93       	push	r25
    2784:	8f 93       	push	r24
    2786:	a5 d5       	rcall	.+2890   	; 0x32d2 <sscanf>
    2788:	0f 90       	pop	r0
    278a:	0f 90       	pop	r0
				break;
    278c:	0f 90       	pop	r0
    278e:	0f 90       	pop	r0
    2790:	0f 90       	pop	r0
    2792:	0f 90       	pop	r0
    2794:	7c c0       	rjmp	.+248    	; 0x288e <__vector_91+0x4e2>
    2796:	e9 ef       	ldi	r30, 0xF9	; 249
    2798:	f0 e2       	ldi	r31, 0x20	; 32
    279a:	81 e0       	ldi	r24, 0x01	; 1
    279c:	91 91       	ld	r25, Z+
			case 9:			//Altitude
				for(uint8_t i = 0; i < 15; i++){
    279e:	9e 32       	cpi	r25, 0x2E	; 46
					if(gps[i] == (uint8_t) '.'){
    27a0:	29 f4       	brne	.+10     	; 0x27ac <__vector_91+0x400>
    27a2:	01 c0       	rjmp	.+2      	; 0x27a6 <__vector_91+0x3fa>
    27a4:	80 e0       	ldi	r24, 0x00	; 0
    27a6:	80 93 d8 20 	sts	0x20D8, r24	; 0x8020d8 <idx>
						idx = i;
    27aa:	03 c0       	rjmp	.+6      	; 0x27b2 <__vector_91+0x406>
    27ac:	8f 5f       	subi	r24, 0xFF	; 255
						break;
    27ae:	8f 30       	cpi	r24, 0x0F	; 15
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
				break;
			case 7:			//Sats
				sscanf(gps,"%d",&gps_sats);
				break;
			case 9:			//Altitude
				for(uint8_t i = 0; i < 15; i++){
<<<<<<< HEAD
    2a1c:	a9 f7       	brne	.-22     	; 0x2a08 <__vector_91+0x3f0>
    2a1e:	20 91 09 21 	lds	r18, 0x2109	; 0x802109 <idx>
=======
    27b0:	a9 f7       	brne	.-22     	; 0x279c <__vector_91+0x3f0>
    27b2:	20 91 d8 20 	lds	r18, 0x20D8	; 0x8020d8 <idx>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
					if(gps[i] == (uint8_t) '.'){
						idx = i;
						break;
					}
				}
				gps[idx] = 32;
<<<<<<< HEAD
    2a22:	42 2f       	mov	r20, r18
    2a24:	50 e0       	ldi	r21, 0x00	; 0
    2a26:	fa 01       	movw	r30, r20
    2a28:	e4 5d       	subi	r30, 0xD4	; 212
    2a2a:	fe 4d       	sbci	r31, 0xDE	; 222
    2a2c:	80 e2       	ldi	r24, 0x20	; 32
    2a2e:	80 83       	st	Z, r24
    2a30:	2f 5f       	subi	r18, 0xFF	; 255
    2a32:	2f 30       	cpi	r18, 0x0F	; 15
				for(uint8_t i = idx+1; i < 15; i++){
    2a34:	f8 f4       	brcc	.+62     	; 0x2a74 <__vector_91+0x45c>
    2a36:	82 2f       	mov	r24, r18
    2a38:	90 e0       	ldi	r25, 0x00	; 0
					if(gps[i] == 32){
    2a3a:	fc 01       	movw	r30, r24
    2a3c:	e4 5d       	subi	r30, 0xD4	; 212
    2a3e:	fe 4d       	sbci	r31, 0xDE	; 222
    2a40:	30 81       	ld	r19, Z
    2a42:	30 32       	cpi	r19, 0x20	; 32
    2a44:	b9 f0       	breq	.+46     	; 0x2a74 <__vector_91+0x45c>
    2a46:	60 e2       	ldi	r22, 0x20	; 32
    2a48:	08 c0       	rjmp	.+16     	; 0x2a5a <__vector_91+0x442>
=======
    27b6:	42 2f       	mov	r20, r18
    27b8:	50 e0       	ldi	r21, 0x00	; 0
    27ba:	fa 01       	movw	r30, r20
    27bc:	e8 50       	subi	r30, 0x08	; 8
    27be:	ff 4d       	sbci	r31, 0xDF	; 223
    27c0:	80 e2       	ldi	r24, 0x20	; 32
    27c2:	80 83       	st	Z, r24
    27c4:	2f 5f       	subi	r18, 0xFF	; 255
    27c6:	2f 30       	cpi	r18, 0x0F	; 15
				for(uint8_t i = idx+1; i < 15; i++){
    27c8:	f8 f4       	brcc	.+62     	; 0x2808 <__vector_91+0x45c>
    27ca:	82 2f       	mov	r24, r18
    27cc:	90 e0       	ldi	r25, 0x00	; 0
					if(gps[i] == 32){
    27ce:	fc 01       	movw	r30, r24
    27d0:	e8 50       	subi	r30, 0x08	; 8
    27d2:	ff 4d       	sbci	r31, 0xDF	; 223
    27d4:	30 81       	ld	r19, Z
    27d6:	30 32       	cpi	r19, 0x20	; 32
    27d8:	b9 f0       	breq	.+46     	; 0x2808 <__vector_91+0x45c>
    27da:	60 e2       	ldi	r22, 0x20	; 32
    27dc:	08 c0       	rjmp	.+16     	; 0x27ee <__vector_91+0x442>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
						break;
					}
					dec[i-idx-1] = gps[i];
					gps[i] = 32;
<<<<<<< HEAD
    2a4a:	82 2f       	mov	r24, r18
    2a4c:	90 e0       	ldi	r25, 0x00	; 0
=======
    27de:	82 2f       	mov	r24, r18
    27e0:	90 e0       	ldi	r25, 0x00	; 0
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
						break;
					}
				}
				gps[idx] = 32;
				for(uint8_t i = idx+1; i < 15; i++){
					if(gps[i] == 32){
<<<<<<< HEAD
    2a4e:	fc 01       	movw	r30, r24
    2a50:	e4 5d       	subi	r30, 0xD4	; 212
    2a52:	fe 4d       	sbci	r31, 0xDE	; 222
    2a54:	30 81       	ld	r19, Z
    2a56:	30 32       	cpi	r19, 0x20	; 32
    2a58:	69 f0       	breq	.+26     	; 0x2a74 <__vector_91+0x45c>
    2a5a:	fc 01       	movw	r30, r24
    2a5c:	e4 1b       	sub	r30, r20
						break;
					}
					dec[i-idx-1] = gps[i];
    2a5e:	f5 0b       	sbc	r31, r21
    2a60:	e6 5c       	subi	r30, 0xC6	; 198
    2a62:	fe 4d       	sbci	r31, 0xDE	; 222
    2a64:	30 83       	st	Z, r19
    2a66:	fc 01       	movw	r30, r24
    2a68:	e4 5d       	subi	r30, 0xD4	; 212
					gps[i] = 32;
    2a6a:	fe 4d       	sbci	r31, 0xDE	; 222
    2a6c:	60 83       	st	Z, r22
    2a6e:	2f 5f       	subi	r18, 0xFF	; 255
=======
    27e2:	fc 01       	movw	r30, r24
    27e4:	e8 50       	subi	r30, 0x08	; 8
    27e6:	ff 4d       	sbci	r31, 0xDF	; 223
    27e8:	30 81       	ld	r19, Z
    27ea:	30 32       	cpi	r19, 0x20	; 32
    27ec:	69 f0       	breq	.+26     	; 0x2808 <__vector_91+0x45c>
    27ee:	fc 01       	movw	r30, r24
    27f0:	e4 1b       	sub	r30, r20
						break;
					}
					dec[i-idx-1] = gps[i];
    27f2:	f5 0b       	sbc	r31, r21
    27f4:	ea 5f       	subi	r30, 0xFA	; 250
    27f6:	fe 4d       	sbci	r31, 0xDE	; 222
    27f8:	30 83       	st	Z, r19
    27fa:	fc 01       	movw	r30, r24
    27fc:	e8 50       	subi	r30, 0x08	; 8
					gps[i] = 32;
    27fe:	ff 4d       	sbci	r31, 0xDF	; 223
    2800:	60 83       	st	Z, r22
    2802:	2f 5f       	subi	r18, 0xFF	; 255
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
						idx = i;
						break;
					}
				}
				gps[idx] = 32;
				for(uint8_t i = idx+1; i < 15; i++){
<<<<<<< HEAD
    2a70:	2f 30       	cpi	r18, 0x0F	; 15
    2a72:	59 f7       	brne	.-42     	; 0x2a4a <__vector_91+0x432>
    2a74:	80 91 3b 21 	lds	r24, 0x213B	; 0x80213b <dec>
=======
    2804:	2f 30       	cpi	r18, 0x0F	; 15
    2806:	59 f7       	brne	.-42     	; 0x27de <__vector_91+0x432>
    2808:	80 91 07 21 	lds	r24, 0x2107	; 0x802107 <dec>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
						break;
					}
					dec[i-idx-1] = gps[i];
					gps[i] = 32;
				}
				if(dec[0] == 32){
<<<<<<< HEAD
    2a78:	80 32       	cpi	r24, 0x20	; 32
    2a7a:	19 f4       	brne	.+6      	; 0x2a82 <__vector_91+0x46a>
    2a7c:	80 e3       	ldi	r24, 0x30	; 48
					dec[0] = '0';
    2a7e:	80 93 3b 21 	sts	0x213B, r24	; 0x80213b <dec>
    2a82:	ce 01       	movw	r24, r28
				}
				sscanf(gps,"%ld",&val);
    2a84:	01 96       	adiw	r24, 0x01	; 1
    2a86:	9f 93       	push	r25
    2a88:	8f 93       	push	r24
    2a8a:	8a eb       	ldi	r24, 0xBA	; 186
    2a8c:	90 e2       	ldi	r25, 0x20	; 32
    2a8e:	9f 93       	push	r25
    2a90:	8f 93       	push	r24
    2a92:	8c e2       	ldi	r24, 0x2C	; 44
    2a94:	91 e2       	ldi	r25, 0x21	; 33
    2a96:	9f 93       	push	r25
    2a98:	8f 93       	push	r24
    2a9a:	b9 d5       	rcall	.+2930   	; 0x360e <sscanf>
				sscanf(dec,"%d",&val2);
    2a9c:	ce 01       	movw	r24, r28
    2a9e:	05 96       	adiw	r24, 0x05	; 5
    2aa0:	9f 93       	push	r25
    2aa2:	8f 93       	push	r24
    2aa4:	8e eb       	ldi	r24, 0xBE	; 190
    2aa6:	90 e2       	ldi	r25, 0x20	; 32
    2aa8:	9f 93       	push	r25
    2aaa:	8f 93       	push	r24
    2aac:	8b e3       	ldi	r24, 0x3B	; 59
    2aae:	91 e2       	ldi	r25, 0x21	; 33
    2ab0:	9f 93       	push	r25
    2ab2:	8f 93       	push	r24
				gps_alt = (double) val + ((double) val2/10.0);
    2ab4:	ac d5       	rcall	.+2904   	; 0x360e <sscanf>
    2ab6:	69 81       	ldd	r22, Y+1	; 0x01
    2ab8:	7a 81       	ldd	r23, Y+2	; 0x02
    2aba:	8b 81       	ldd	r24, Y+3	; 0x03
    2abc:	9c 81       	ldd	r25, Y+4	; 0x04
    2abe:	e5 d1       	rcall	.+970    	; 0x2e8a <__floatsisf>
    2ac0:	6b 01       	movw	r12, r22
    2ac2:	7c 01       	movw	r14, r24
    2ac4:	6d 81       	ldd	r22, Y+5	; 0x05
    2ac6:	7e 81       	ldd	r23, Y+6	; 0x06
    2ac8:	07 2e       	mov	r0, r23
    2aca:	00 0c       	add	r0, r0
    2acc:	88 0b       	sbc	r24, r24
    2ace:	99 0b       	sbc	r25, r25
    2ad0:	dc d1       	rcall	.+952    	; 0x2e8a <__floatsisf>
    2ad2:	20 e0       	ldi	r18, 0x00	; 0
    2ad4:	30 e0       	ldi	r19, 0x00	; 0
    2ad6:	40 e2       	ldi	r20, 0x20	; 32
    2ad8:	51 e4       	ldi	r21, 0x41	; 65
    2ada:	02 d1       	rcall	.+516    	; 0x2ce0 <__divsf3>
    2adc:	9b 01       	movw	r18, r22
    2ade:	ac 01       	movw	r20, r24
    2ae0:	c7 01       	movw	r24, r14
    2ae2:	b6 01       	movw	r22, r12
    2ae4:	95 d0       	rcall	.+298    	; 0x2c10 <__addsf3>
    2ae6:	60 93 df 20 	sts	0x20DF, r22	; 0x8020df <gps_alt>
    2aea:	70 93 e0 20 	sts	0x20E0, r23	; 0x8020e0 <gps_alt+0x1>
    2aee:	80 93 e1 20 	sts	0x20E1, r24	; 0x8020e1 <gps_alt+0x2>
    2af2:	90 93 e2 20 	sts	0x20E2, r25	; 0x8020e2 <gps_alt+0x3>
    2af6:	cd bf       	out	0x3d, r28	; 61
    2af8:	de bf       	out	0x3e, r29	; 62
    2afa:	80 91 0d 21 	lds	r24, 0x210D	; 0x80210d <writing>
				break;
    2afe:	88 23       	and	r24, r24
		}

		if(writing){
    2b00:	d1 f0       	breq	.+52     	; 0x2b36 <__vector_91+0x51e>
    2b02:	10 92 09 21 	sts	0x2109, r1	; 0x802109 <idx>
    2b06:	80 91 0a 21 	lds	r24, 0x210A	; 0x80210a <commas>
			idx = 0;
    2b0a:	8f 5f       	subi	r24, 0xFF	; 255
			commas++;
    2b0c:	80 93 0a 21 	sts	0x210A, r24	; 0x80210a <commas>
    2b10:	10 92 0b 21 	sts	0x210B, r1	; 0x80210b <word_pos>
    2b14:	ec e2       	ldi	r30, 0x2C	; 44
			word_pos = 0;
    2b16:	f1 e2       	ldi	r31, 0x21	; 33
    2b18:	2b e3       	ldi	r18, 0x3B	; 59
    2b1a:	31 e2       	ldi	r19, 0x21	; 33
    2b1c:	80 e2       	ldi	r24, 0x20	; 32
    2b1e:	81 93       	st	Z+, r24
    2b20:	2e 17       	cp	r18, r30
			for(uint8_t i = 0; i < 15; i++){
				gps[i] = 32;
    2b22:	3f 07       	cpc	r19, r31
    2b24:	e1 f7       	brne	.-8      	; 0x2b1e <__vector_91+0x506>
=======
    280c:	80 32       	cpi	r24, 0x20	; 32
    280e:	19 f4       	brne	.+6      	; 0x2816 <__vector_91+0x46a>
    2810:	80 e3       	ldi	r24, 0x30	; 48
					dec[0] = '0';
    2812:	80 93 07 21 	sts	0x2107, r24	; 0x802107 <dec>
    2816:	ce 01       	movw	r24, r28
				}
				sscanf(gps,"%ld",&val);
    2818:	01 96       	adiw	r24, 0x01	; 1
    281a:	9f 93       	push	r25
    281c:	8f 93       	push	r24
    281e:	86 e9       	ldi	r24, 0x96	; 150
    2820:	90 e2       	ldi	r25, 0x20	; 32
    2822:	9f 93       	push	r25
    2824:	8f 93       	push	r24
    2826:	88 ef       	ldi	r24, 0xF8	; 248
    2828:	90 e2       	ldi	r25, 0x20	; 32
    282a:	9f 93       	push	r25
    282c:	8f 93       	push	r24
    282e:	51 d5       	rcall	.+2722   	; 0x32d2 <sscanf>
				sscanf(dec,"%d",&val2);
    2830:	ce 01       	movw	r24, r28
    2832:	05 96       	adiw	r24, 0x05	; 5
    2834:	9f 93       	push	r25
    2836:	8f 93       	push	r24
    2838:	8a e9       	ldi	r24, 0x9A	; 154
    283a:	90 e2       	ldi	r25, 0x20	; 32
    283c:	9f 93       	push	r25
    283e:	8f 93       	push	r24
    2840:	87 e0       	ldi	r24, 0x07	; 7
    2842:	91 e2       	ldi	r25, 0x21	; 33
    2844:	9f 93       	push	r25
    2846:	8f 93       	push	r24
				gps_alt = (double) val + ((double) val2/10.0);
    2848:	44 d5       	rcall	.+2696   	; 0x32d2 <sscanf>
    284a:	69 81       	ldd	r22, Y+1	; 0x01
    284c:	7a 81       	ldd	r23, Y+2	; 0x02
    284e:	8b 81       	ldd	r24, Y+3	; 0x03
    2850:	9c 81       	ldd	r25, Y+4	; 0x04
    2852:	ab d1       	rcall	.+854    	; 0x2baa <__floatsisf>
    2854:	6b 01       	movw	r12, r22
    2856:	7c 01       	movw	r14, r24
    2858:	6d 81       	ldd	r22, Y+5	; 0x05
    285a:	7e 81       	ldd	r23, Y+6	; 0x06
    285c:	07 2e       	mov	r0, r23
    285e:	00 0c       	add	r0, r0
    2860:	88 0b       	sbc	r24, r24
    2862:	99 0b       	sbc	r25, r25
    2864:	a2 d1       	rcall	.+836    	; 0x2baa <__floatsisf>
    2866:	20 e0       	ldi	r18, 0x00	; 0
    2868:	30 e0       	ldi	r19, 0x00	; 0
    286a:	40 e2       	ldi	r20, 0x20	; 32
    286c:	51 e4       	ldi	r21, 0x41	; 65
    286e:	02 d1       	rcall	.+516    	; 0x2a74 <__divsf3>
    2870:	9b 01       	movw	r18, r22
    2872:	ac 01       	movw	r20, r24
    2874:	c7 01       	movw	r24, r14
    2876:	b6 01       	movw	r22, r12
    2878:	95 d0       	rcall	.+298    	; 0x29a4 <__addsf3>
    287a:	60 93 b0 20 	sts	0x20B0, r22	; 0x8020b0 <gps_alt>
    287e:	70 93 b1 20 	sts	0x20B1, r23	; 0x8020b1 <gps_alt+0x1>
    2882:	80 93 b2 20 	sts	0x20B2, r24	; 0x8020b2 <gps_alt+0x2>
    2886:	90 93 b3 20 	sts	0x20B3, r25	; 0x8020b3 <gps_alt+0x3>
    288a:	cd bf       	out	0x3d, r28	; 61
    288c:	de bf       	out	0x3e, r29	; 62
    288e:	80 91 dc 20 	lds	r24, 0x20DC	; 0x8020dc <writing>
				break;
    2892:	88 23       	and	r24, r24
		}

		if(writing){
    2894:	d1 f0       	breq	.+52     	; 0x28ca <__vector_91+0x51e>
    2896:	10 92 d8 20 	sts	0x20D8, r1	; 0x8020d8 <idx>
    289a:	80 91 d9 20 	lds	r24, 0x20D9	; 0x8020d9 <commas>
			idx = 0;
    289e:	8f 5f       	subi	r24, 0xFF	; 255
			commas++;
    28a0:	80 93 d9 20 	sts	0x20D9, r24	; 0x8020d9 <commas>
    28a4:	10 92 da 20 	sts	0x20DA, r1	; 0x8020da <word_pos>
    28a8:	e8 ef       	ldi	r30, 0xF8	; 248
			word_pos = 0;
    28aa:	f0 e2       	ldi	r31, 0x20	; 32
    28ac:	27 e0       	ldi	r18, 0x07	; 7
    28ae:	31 e2       	ldi	r19, 0x21	; 33
    28b0:	80 e2       	ldi	r24, 0x20	; 32
    28b2:	81 93       	st	Z+, r24
    28b4:	2e 17       	cp	r18, r30
			for(uint8_t i = 0; i < 15; i++){
				gps[i] = 32;
    28b6:	3f 07       	cpc	r19, r31
    28b8:	e1 f7       	brne	.-8      	; 0x28b2 <__vector_91+0x506>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347

		if(writing){
			idx = 0;
			commas++;
			word_pos = 0;
			for(uint8_t i = 0; i < 15; i++){
<<<<<<< HEAD
    2b26:	eb e3       	ldi	r30, 0x3B	; 59
    2b28:	f1 e2       	ldi	r31, 0x21	; 33
    2b2a:	80 e2       	ldi	r24, 0x20	; 32
=======
    28ba:	e7 e0       	ldi	r30, 0x07	; 7
    28bc:	f1 e2       	ldi	r31, 0x21	; 33
    28be:	80 e2       	ldi	r24, 0x20	; 32
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
				gps[i] = 32;
			}
			for(uint8_t i = 0; i < 5; i++){
				dec[i] = 32;
<<<<<<< HEAD
    2b2c:	80 83       	st	Z, r24
    2b2e:	81 83       	std	Z+1, r24	; 0x01
    2b30:	82 83       	std	Z+2, r24	; 0x02
    2b32:	83 83       	std	Z+3, r24	; 0x03
    2b34:	84 83       	std	Z+4, r24	; 0x04
    2b36:	80 91 0d 21 	lds	r24, 0x210D	; 0x80210d <writing>
    2b3a:	88 23       	and	r24, r24
=======
    28c0:	80 83       	st	Z, r24
    28c2:	81 83       	std	Z+1, r24	; 0x01
    28c4:	82 83       	std	Z+2, r24	; 0x02
    28c6:	83 83       	std	Z+3, r24	; 0x03
    28c8:	84 83       	std	Z+4, r24	; 0x04
    28ca:	80 91 dc 20 	lds	r24, 0x20DC	; 0x8020dc <writing>
    28ce:	88 23       	and	r24, r24
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
			}
		}
	}

	if(writing){
<<<<<<< HEAD
    2b3c:	09 f4       	brne	.+2      	; 0x2b40 <__vector_91+0x528>
    2b3e:	40 c0       	rjmp	.+128    	; 0x2bc0 <__vector_91+0x5a8>
    2b40:	90 91 0c 21 	lds	r25, 0x210C	; 0x80210c <pos>
    2b44:	93 30       	cpi	r25, 0x03	; 3
		switch(pos){
    2b46:	19 f0       	breq	.+6      	; 0x2b4e <__vector_91+0x536>
    2b48:	94 30       	cpi	r25, 0x04	; 4
    2b4a:	31 f0       	breq	.+12     	; 0x2b58 <__vector_91+0x540>
    2b4c:	09 c0       	rjmp	.+18     	; 0x2b60 <__vector_91+0x548>
    2b4e:	17 34       	cpi	r17, 0x47	; 71
    2b50:	39 f0       	breq	.+14     	; 0x2b60 <__vector_91+0x548>
    2b52:	10 92 0d 21 	sts	0x210D, r1	; 0x80210d <writing>
			case 3:
				if(c != 'G'){
    2b56:	04 c0       	rjmp	.+8      	; 0x2b60 <__vector_91+0x548>
					writing = 0;
    2b58:	17 34       	cpi	r17, 0x47	; 71
    2b5a:	11 f0       	breq	.+4      	; 0x2b60 <__vector_91+0x548>
    2b5c:	10 92 0d 21 	sts	0x210D, r1	; 0x80210d <writing>
=======
    28d0:	09 f4       	brne	.+2      	; 0x28d4 <__vector_91+0x528>
    28d2:	40 c0       	rjmp	.+128    	; 0x2954 <__vector_91+0x5a8>
    28d4:	90 91 db 20 	lds	r25, 0x20DB	; 0x8020db <pos>
    28d8:	93 30       	cpi	r25, 0x03	; 3
		switch(pos){
    28da:	19 f0       	breq	.+6      	; 0x28e2 <__vector_91+0x536>
    28dc:	94 30       	cpi	r25, 0x04	; 4
    28de:	31 f0       	breq	.+12     	; 0x28ec <__vector_91+0x540>
    28e0:	09 c0       	rjmp	.+18     	; 0x28f4 <__vector_91+0x548>
    28e2:	17 34       	cpi	r17, 0x47	; 71
    28e4:	39 f0       	breq	.+14     	; 0x28f4 <__vector_91+0x548>
    28e6:	10 92 dc 20 	sts	0x20DC, r1	; 0x8020dc <writing>
			case 3:
				if(c != 'G'){
    28ea:	04 c0       	rjmp	.+8      	; 0x28f4 <__vector_91+0x548>
					writing = 0;
    28ec:	17 34       	cpi	r17, 0x47	; 71
    28ee:	11 f0       	breq	.+4      	; 0x28f4 <__vector_91+0x548>
    28f0:	10 92 dc 20 	sts	0x20DC, r1	; 0x8020dc <writing>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
				}
				break;

			case 4:
				if(c != 'G'){
<<<<<<< HEAD
    2b60:	80 91 0b 21 	lds	r24, 0x210B	; 0x80210b <word_pos>
					writing = 0;
    2b64:	e8 2f       	mov	r30, r24
=======
    28f4:	80 91 da 20 	lds	r24, 0x20DA	; 0x8020da <word_pos>
					writing = 0;
    28f8:	e8 2f       	mov	r30, r24
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
				}
				break;
		}
		gps[word_pos] = c;
<<<<<<< HEAD
    2b66:	f0 e0       	ldi	r31, 0x00	; 0
    2b68:	e4 5d       	subi	r30, 0xD4	; 212
    2b6a:	fe 4d       	sbci	r31, 0xDE	; 222
    2b6c:	10 83       	st	Z, r17
    2b6e:	8f 5f       	subi	r24, 0xFF	; 255
    2b70:	80 93 0b 21 	sts	0x210B, r24	; 0x80210b <word_pos>
		word_pos++;
    2b74:	9f 5f       	subi	r25, 0xFF	; 255
    2b76:	90 93 0c 21 	sts	0x210C, r25	; 0x80210c <pos>
		pos++;
    2b7a:	22 c0       	rjmp	.+68     	; 0x2bc0 <__vector_91+0x5a8>
    2b7c:	80 91 2c 21 	lds	r24, 0x212C	; 0x80212c <gps>
	}
    2b80:	8e 32       	cpi	r24, 0x2E	; 46
=======
    28fa:	f0 e0       	ldi	r31, 0x00	; 0
    28fc:	e8 50       	subi	r30, 0x08	; 8
    28fe:	ff 4d       	sbci	r31, 0xDF	; 223
    2900:	10 83       	st	Z, r17
    2902:	8f 5f       	subi	r24, 0xFF	; 255
    2904:	80 93 da 20 	sts	0x20DA, r24	; 0x8020da <word_pos>
		word_pos++;
    2908:	9f 5f       	subi	r25, 0xFF	; 255
    290a:	90 93 db 20 	sts	0x20DB, r25	; 0x8020db <pos>
		pos++;
    290e:	22 c0       	rjmp	.+68     	; 0x2954 <__vector_91+0x5a8>
    2910:	80 91 f8 20 	lds	r24, 0x20F8	; 0x8020f8 <gps>
	}
}
    2914:	8e 32       	cpi	r24, 0x2E	; 46
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
		int32_t val = 0;
		int16_t val2 = 0;
		switch(commas){
			case 1:			//Time
				for(uint8_t i = 0; i < 15; i++){
					if(gps[i] == (uint8_t) '.'){
<<<<<<< HEAD
    2b82:	09 f4       	brne	.+2      	; 0x2b86 <__vector_91+0x56e>
    2b84:	b1 cd       	rjmp	.-1182   	; 0x26e8 <__vector_91+0xd0>
    2b86:	ed e2       	ldi	r30, 0x2D	; 45
    2b88:	f1 e2       	ldi	r31, 0x21	; 33
    2b8a:	81 e0       	ldi	r24, 0x01	; 1
    2b8c:	a9 cd       	rjmp	.-1198   	; 0x26e0 <__vector_91+0xc8>
    2b8e:	19 82       	std	Y+1, r1	; 0x01
=======
    2916:	09 f4       	brne	.+2      	; 0x291a <__vector_91+0x56e>
    2918:	b1 cd       	rjmp	.-1182   	; 0x247c <__vector_91+0xd0>
    291a:	e9 ef       	ldi	r30, 0xF9	; 249
    291c:	f0 e2       	ldi	r31, 0x20	; 32
    291e:	81 e0       	ldi	r24, 0x01	; 1
    2920:	a9 cd       	rjmp	.-1198   	; 0x2474 <__vector_91+0xc8>
    2922:	19 82       	std	Y+1, r1	; 0x01
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
		}
		int32_t val = 0;
		int16_t val2 = 0;
		switch(commas){
			case 1:			//Time
				for(uint8_t i = 0; i < 15; i++){
<<<<<<< HEAD
    2b90:	1a 82       	std	Y+2, r1	; 0x02
    2b92:	1b 82       	std	Y+3, r1	; 0x03
=======
    2924:	1a 82       	std	Y+2, r1	; 0x02
    2926:	1b 82       	std	Y+3, r1	; 0x03
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
	else if(c == (uint8_t) ','){
		gps[0] = 32;
		if(gps[1] == 32){
			gps[0] = '0';
		}
		int32_t val = 0;
<<<<<<< HEAD
    2b94:	1c 82       	std	Y+4, r1	; 0x04
    2b96:	1d 82       	std	Y+5, r1	; 0x05
    2b98:	1e 82       	std	Y+6, r1	; 0x06
    2b9a:	80 91 0a 21 	lds	r24, 0x210A	; 0x80210a <commas>
		int16_t val2 = 0;
    2b9e:	84 30       	cpi	r24, 0x04	; 4
		switch(commas){
    2ba0:	09 f4       	brne	.+2      	; 0x2ba4 <__vector_91+0x58c>
    2ba2:	92 cd       	rjmp	.-1244   	; 0x26c8 <__vector_91+0xb0>
    2ba4:	30 f4       	brcc	.+12     	; 0x2bb2 <__vector_91+0x59a>
    2ba6:	81 30       	cpi	r24, 0x01	; 1
    2ba8:	49 f3       	breq	.-46     	; 0x2b7c <__vector_91+0x564>
    2baa:	82 30       	cpi	r24, 0x02	; 2
    2bac:	09 f4       	brne	.+2      	; 0x2bb0 <__vector_91+0x598>
    2bae:	92 cd       	rjmp	.-1244   	; 0x26d4 <__vector_91+0xbc>
    2bb0:	a4 cf       	rjmp	.-184    	; 0x2afa <__vector_91+0x4e2>
    2bb2:	87 30       	cpi	r24, 0x07	; 7
    2bb4:	09 f4       	brne	.+2      	; 0x2bb8 <__vector_91+0x5a0>
    2bb6:	11 cf       	rjmp	.-478    	; 0x29da <__vector_91+0x3c2>
    2bb8:	89 30       	cpi	r24, 0x09	; 9
    2bba:	09 f4       	brne	.+2      	; 0x2bbe <__vector_91+0x5a6>
    2bbc:	7f cd       	rjmp	.-1282   	; 0x26bc <__vector_91+0xa4>
    2bbe:	9d cf       	rjmp	.-198    	; 0x2afa <__vector_91+0x4e2>
    2bc0:	26 96       	adiw	r28, 0x06	; 6
    2bc2:	cd bf       	out	0x3d, r28	; 61
    2bc4:	de bf       	out	0x3e, r29	; 62
=======
    2928:	1c 82       	std	Y+4, r1	; 0x04
    292a:	1d 82       	std	Y+5, r1	; 0x05
    292c:	1e 82       	std	Y+6, r1	; 0x06
    292e:	80 91 d9 20 	lds	r24, 0x20D9	; 0x8020d9 <commas>
		int16_t val2 = 0;
    2932:	84 30       	cpi	r24, 0x04	; 4
		switch(commas){
    2934:	09 f4       	brne	.+2      	; 0x2938 <__vector_91+0x58c>
    2936:	92 cd       	rjmp	.-1244   	; 0x245c <__vector_91+0xb0>
    2938:	30 f4       	brcc	.+12     	; 0x2946 <__vector_91+0x59a>
    293a:	81 30       	cpi	r24, 0x01	; 1
    293c:	49 f3       	breq	.-46     	; 0x2910 <__vector_91+0x564>
    293e:	82 30       	cpi	r24, 0x02	; 2
    2940:	09 f4       	brne	.+2      	; 0x2944 <__vector_91+0x598>
    2942:	92 cd       	rjmp	.-1244   	; 0x2468 <__vector_91+0xbc>
    2944:	a4 cf       	rjmp	.-184    	; 0x288e <__vector_91+0x4e2>
    2946:	87 30       	cpi	r24, 0x07	; 7
    2948:	09 f4       	brne	.+2      	; 0x294c <__vector_91+0x5a0>
    294a:	11 cf       	rjmp	.-478    	; 0x276e <__vector_91+0x3c2>
    294c:	89 30       	cpi	r24, 0x09	; 9
    294e:	09 f4       	brne	.+2      	; 0x2952 <__vector_91+0x5a6>
    2950:	7f cd       	rjmp	.-1282   	; 0x2450 <__vector_91+0xa4>
    2952:	9d cf       	rjmp	.-198    	; 0x288e <__vector_91+0x4e2>
    2954:	26 96       	adiw	r28, 0x06	; 6
    2956:	cd bf       	out	0x3d, r28	; 61
    2958:	de bf       	out	0x3e, r29	; 62
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
		}
		gps[word_pos] = c;
		word_pos++;
		pos++;
	}
<<<<<<< HEAD
    2bc6:	df 91       	pop	r29
    2bc8:	cf 91       	pop	r28
    2bca:	ff 91       	pop	r31
    2bcc:	ef 91       	pop	r30
    2bce:	bf 91       	pop	r27
    2bd0:	af 91       	pop	r26
    2bd2:	9f 91       	pop	r25
    2bd4:	8f 91       	pop	r24
    2bd6:	7f 91       	pop	r23
    2bd8:	6f 91       	pop	r22
    2bda:	5f 91       	pop	r21
    2bdc:	4f 91       	pop	r20
    2bde:	3f 91       	pop	r19
    2be0:	2f 91       	pop	r18
    2be2:	1f 91       	pop	r17
    2be4:	ff 90       	pop	r15
    2be6:	ef 90       	pop	r14
    2be8:	df 90       	pop	r13
    2bea:	cf 90       	pop	r12
    2bec:	bf 90       	pop	r11
    2bee:	af 90       	pop	r10
    2bf0:	9f 90       	pop	r9
    2bf2:	8f 90       	pop	r8
    2bf4:	0f 90       	pop	r0
    2bf6:	0b be       	out	0x3b, r0	; 59
    2bf8:	0f 90       	pop	r0
    2bfa:	0a be       	out	0x3a, r0	; 58
    2bfc:	0f 90       	pop	r0
    2bfe:	09 be       	out	0x39, r0	; 57
    2c00:	0f 90       	pop	r0
    2c02:	08 be       	out	0x38, r0	; 56
    2c04:	0f 90       	pop	r0
    2c06:	0f be       	out	0x3f, r0	; 63
    2c08:	0f 90       	pop	r0
    2c0a:	1f 90       	pop	r1
    2c0c:	18 95       	reti

00002c0e <__subsf3>:
    2c0e:	50 58       	subi	r21, 0x80	; 128

00002c10 <__addsf3>:
    2c10:	bb 27       	eor	r27, r27
    2c12:	aa 27       	eor	r26, r26
    2c14:	0e d0       	rcall	.+28     	; 0x2c32 <__addsf3x>
    2c16:	bf c1       	rjmp	.+894    	; 0x2f96 <__fp_round>
    2c18:	b0 d1       	rcall	.+864    	; 0x2f7a <__fp_pscA>
    2c1a:	30 f0       	brcs	.+12     	; 0x2c28 <__addsf3+0x18>
    2c1c:	b5 d1       	rcall	.+874    	; 0x2f88 <__fp_pscB>
    2c1e:	20 f0       	brcs	.+8      	; 0x2c28 <__addsf3+0x18>
    2c20:	31 f4       	brne	.+12     	; 0x2c2e <__addsf3+0x1e>
    2c22:	9f 3f       	cpi	r25, 0xFF	; 255
    2c24:	11 f4       	brne	.+4      	; 0x2c2a <__addsf3+0x1a>
    2c26:	1e f4       	brtc	.+6      	; 0x2c2e <__addsf3+0x1e>
    2c28:	95 c1       	rjmp	.+810    	; 0x2f54 <__fp_nan>
    2c2a:	0e f4       	brtc	.+2      	; 0x2c2e <__addsf3+0x1e>
    2c2c:	e0 95       	com	r30
    2c2e:	e7 fb       	bst	r30, 7
    2c30:	8b c1       	rjmp	.+790    	; 0x2f48 <__fp_inf>

00002c32 <__addsf3x>:
    2c32:	e9 2f       	mov	r30, r25
    2c34:	c1 d1       	rcall	.+898    	; 0x2fb8 <__fp_split3>
    2c36:	80 f3       	brcs	.-32     	; 0x2c18 <__addsf3+0x8>
    2c38:	ba 17       	cp	r27, r26
    2c3a:	62 07       	cpc	r22, r18
    2c3c:	73 07       	cpc	r23, r19
    2c3e:	84 07       	cpc	r24, r20
    2c40:	95 07       	cpc	r25, r21
    2c42:	18 f0       	brcs	.+6      	; 0x2c4a <__addsf3x+0x18>
    2c44:	71 f4       	brne	.+28     	; 0x2c62 <__addsf3x+0x30>
    2c46:	9e f5       	brtc	.+102    	; 0x2cae <__addsf3x+0x7c>
    2c48:	d9 c1       	rjmp	.+946    	; 0x2ffc <__fp_zero>
    2c4a:	0e f4       	brtc	.+2      	; 0x2c4e <__addsf3x+0x1c>
    2c4c:	e0 95       	com	r30
    2c4e:	0b 2e       	mov	r0, r27
    2c50:	ba 2f       	mov	r27, r26
    2c52:	a0 2d       	mov	r26, r0
    2c54:	0b 01       	movw	r0, r22
    2c56:	b9 01       	movw	r22, r18
    2c58:	90 01       	movw	r18, r0
    2c5a:	0c 01       	movw	r0, r24
    2c5c:	ca 01       	movw	r24, r20
    2c5e:	a0 01       	movw	r20, r0
    2c60:	11 24       	eor	r1, r1
    2c62:	ff 27       	eor	r31, r31
    2c64:	59 1b       	sub	r21, r25
    2c66:	99 f0       	breq	.+38     	; 0x2c8e <__addsf3x+0x5c>
    2c68:	59 3f       	cpi	r21, 0xF9	; 249
    2c6a:	50 f4       	brcc	.+20     	; 0x2c80 <__addsf3x+0x4e>
    2c6c:	50 3e       	cpi	r21, 0xE0	; 224
    2c6e:	68 f1       	brcs	.+90     	; 0x2cca <__addsf3x+0x98>
    2c70:	1a 16       	cp	r1, r26
    2c72:	f0 40       	sbci	r31, 0x00	; 0
    2c74:	a2 2f       	mov	r26, r18
    2c76:	23 2f       	mov	r18, r19
    2c78:	34 2f       	mov	r19, r20
    2c7a:	44 27       	eor	r20, r20
    2c7c:	58 5f       	subi	r21, 0xF8	; 248
    2c7e:	f3 cf       	rjmp	.-26     	; 0x2c66 <__addsf3x+0x34>
    2c80:	46 95       	lsr	r20
    2c82:	37 95       	ror	r19
    2c84:	27 95       	ror	r18
    2c86:	a7 95       	ror	r26
    2c88:	f0 40       	sbci	r31, 0x00	; 0
    2c8a:	53 95       	inc	r21
    2c8c:	c9 f7       	brne	.-14     	; 0x2c80 <__addsf3x+0x4e>
    2c8e:	7e f4       	brtc	.+30     	; 0x2cae <__addsf3x+0x7c>
    2c90:	1f 16       	cp	r1, r31
    2c92:	ba 0b       	sbc	r27, r26
    2c94:	62 0b       	sbc	r22, r18
    2c96:	73 0b       	sbc	r23, r19
    2c98:	84 0b       	sbc	r24, r20
    2c9a:	ba f0       	brmi	.+46     	; 0x2cca <__addsf3x+0x98>
    2c9c:	91 50       	subi	r25, 0x01	; 1
    2c9e:	a1 f0       	breq	.+40     	; 0x2cc8 <__addsf3x+0x96>
    2ca0:	ff 0f       	add	r31, r31
    2ca2:	bb 1f       	adc	r27, r27
    2ca4:	66 1f       	adc	r22, r22
    2ca6:	77 1f       	adc	r23, r23
    2ca8:	88 1f       	adc	r24, r24
    2caa:	c2 f7       	brpl	.-16     	; 0x2c9c <__addsf3x+0x6a>
    2cac:	0e c0       	rjmp	.+28     	; 0x2cca <__addsf3x+0x98>
    2cae:	ba 0f       	add	r27, r26
    2cb0:	62 1f       	adc	r22, r18
    2cb2:	73 1f       	adc	r23, r19
    2cb4:	84 1f       	adc	r24, r20
    2cb6:	48 f4       	brcc	.+18     	; 0x2cca <__addsf3x+0x98>
    2cb8:	87 95       	ror	r24
    2cba:	77 95       	ror	r23
    2cbc:	67 95       	ror	r22
    2cbe:	b7 95       	ror	r27
    2cc0:	f7 95       	ror	r31
    2cc2:	9e 3f       	cpi	r25, 0xFE	; 254
    2cc4:	08 f0       	brcs	.+2      	; 0x2cc8 <__addsf3x+0x96>
    2cc6:	b3 cf       	rjmp	.-154    	; 0x2c2e <__addsf3+0x1e>
    2cc8:	93 95       	inc	r25
    2cca:	88 0f       	add	r24, r24
    2ccc:	08 f0       	brcs	.+2      	; 0x2cd0 <__addsf3x+0x9e>
    2cce:	99 27       	eor	r25, r25
    2cd0:	ee 0f       	add	r30, r30
    2cd2:	97 95       	ror	r25
    2cd4:	87 95       	ror	r24
    2cd6:	08 95       	ret

00002cd8 <__cmpsf2>:
    2cd8:	13 d1       	rcall	.+550    	; 0x2f00 <__fp_cmp>
    2cda:	08 f4       	brcc	.+2      	; 0x2cde <__cmpsf2+0x6>
    2cdc:	81 e0       	ldi	r24, 0x01	; 1
    2cde:	08 95       	ret

00002ce0 <__divsf3>:
    2ce0:	0c d0       	rcall	.+24     	; 0x2cfa <__divsf3x>
    2ce2:	59 c1       	rjmp	.+690    	; 0x2f96 <__fp_round>
    2ce4:	51 d1       	rcall	.+674    	; 0x2f88 <__fp_pscB>
    2ce6:	40 f0       	brcs	.+16     	; 0x2cf8 <__divsf3+0x18>
    2ce8:	48 d1       	rcall	.+656    	; 0x2f7a <__fp_pscA>
    2cea:	30 f0       	brcs	.+12     	; 0x2cf8 <__divsf3+0x18>
    2cec:	21 f4       	brne	.+8      	; 0x2cf6 <__divsf3+0x16>
    2cee:	5f 3f       	cpi	r21, 0xFF	; 255
    2cf0:	19 f0       	breq	.+6      	; 0x2cf8 <__divsf3+0x18>
    2cf2:	2a c1       	rjmp	.+596    	; 0x2f48 <__fp_inf>
    2cf4:	51 11       	cpse	r21, r1
    2cf6:	83 c1       	rjmp	.+774    	; 0x2ffe <__fp_szero>
    2cf8:	2d c1       	rjmp	.+602    	; 0x2f54 <__fp_nan>

00002cfa <__divsf3x>:
    2cfa:	5e d1       	rcall	.+700    	; 0x2fb8 <__fp_split3>
    2cfc:	98 f3       	brcs	.-26     	; 0x2ce4 <__divsf3+0x4>

00002cfe <__divsf3_pse>:
    2cfe:	99 23       	and	r25, r25
    2d00:	c9 f3       	breq	.-14     	; 0x2cf4 <__divsf3+0x14>
    2d02:	55 23       	and	r21, r21
    2d04:	b1 f3       	breq	.-20     	; 0x2cf2 <__divsf3+0x12>
    2d06:	95 1b       	sub	r25, r21
    2d08:	55 0b       	sbc	r21, r21
    2d0a:	bb 27       	eor	r27, r27
    2d0c:	aa 27       	eor	r26, r26
    2d0e:	62 17       	cp	r22, r18
    2d10:	73 07       	cpc	r23, r19
    2d12:	84 07       	cpc	r24, r20
    2d14:	38 f0       	brcs	.+14     	; 0x2d24 <__divsf3_pse+0x26>
    2d16:	9f 5f       	subi	r25, 0xFF	; 255
    2d18:	5f 4f       	sbci	r21, 0xFF	; 255
    2d1a:	22 0f       	add	r18, r18
    2d1c:	33 1f       	adc	r19, r19
    2d1e:	44 1f       	adc	r20, r20
    2d20:	aa 1f       	adc	r26, r26
    2d22:	a9 f3       	breq	.-22     	; 0x2d0e <__divsf3_pse+0x10>
    2d24:	33 d0       	rcall	.+102    	; 0x2d8c <__divsf3_pse+0x8e>
    2d26:	0e 2e       	mov	r0, r30
    2d28:	3a f0       	brmi	.+14     	; 0x2d38 <__divsf3_pse+0x3a>
    2d2a:	e0 e8       	ldi	r30, 0x80	; 128
    2d2c:	30 d0       	rcall	.+96     	; 0x2d8e <__divsf3_pse+0x90>
    2d2e:	91 50       	subi	r25, 0x01	; 1
    2d30:	50 40       	sbci	r21, 0x00	; 0
    2d32:	e6 95       	lsr	r30
    2d34:	00 1c       	adc	r0, r0
    2d36:	ca f7       	brpl	.-14     	; 0x2d2a <__divsf3_pse+0x2c>
    2d38:	29 d0       	rcall	.+82     	; 0x2d8c <__divsf3_pse+0x8e>
    2d3a:	fe 2f       	mov	r31, r30
    2d3c:	27 d0       	rcall	.+78     	; 0x2d8c <__divsf3_pse+0x8e>
    2d3e:	66 0f       	add	r22, r22
    2d40:	77 1f       	adc	r23, r23
    2d42:	88 1f       	adc	r24, r24
    2d44:	bb 1f       	adc	r27, r27
    2d46:	26 17       	cp	r18, r22
    2d48:	37 07       	cpc	r19, r23
    2d4a:	48 07       	cpc	r20, r24
    2d4c:	ab 07       	cpc	r26, r27
    2d4e:	b0 e8       	ldi	r27, 0x80	; 128
    2d50:	09 f0       	breq	.+2      	; 0x2d54 <__divsf3_pse+0x56>
    2d52:	bb 0b       	sbc	r27, r27
    2d54:	80 2d       	mov	r24, r0
    2d56:	bf 01       	movw	r22, r30
    2d58:	ff 27       	eor	r31, r31
    2d5a:	93 58       	subi	r25, 0x83	; 131
    2d5c:	5f 4f       	sbci	r21, 0xFF	; 255
    2d5e:	2a f0       	brmi	.+10     	; 0x2d6a <__divsf3_pse+0x6c>
    2d60:	9e 3f       	cpi	r25, 0xFE	; 254
    2d62:	51 05       	cpc	r21, r1
    2d64:	68 f0       	brcs	.+26     	; 0x2d80 <__divsf3_pse+0x82>
    2d66:	f0 c0       	rjmp	.+480    	; 0x2f48 <__fp_inf>
    2d68:	4a c1       	rjmp	.+660    	; 0x2ffe <__fp_szero>
    2d6a:	5f 3f       	cpi	r21, 0xFF	; 255
    2d6c:	ec f3       	brlt	.-6      	; 0x2d68 <__divsf3_pse+0x6a>
    2d6e:	98 3e       	cpi	r25, 0xE8	; 232
    2d70:	dc f3       	brlt	.-10     	; 0x2d68 <__divsf3_pse+0x6a>
    2d72:	86 95       	lsr	r24
    2d74:	77 95       	ror	r23
    2d76:	67 95       	ror	r22
    2d78:	b7 95       	ror	r27
    2d7a:	f7 95       	ror	r31
    2d7c:	9f 5f       	subi	r25, 0xFF	; 255
    2d7e:	c9 f7       	brne	.-14     	; 0x2d72 <__divsf3_pse+0x74>
    2d80:	88 0f       	add	r24, r24
    2d82:	91 1d       	adc	r25, r1
    2d84:	96 95       	lsr	r25
    2d86:	87 95       	ror	r24
    2d88:	97 f9       	bld	r25, 7
    2d8a:	08 95       	ret
    2d8c:	e1 e0       	ldi	r30, 0x01	; 1
    2d8e:	66 0f       	add	r22, r22
    2d90:	77 1f       	adc	r23, r23
    2d92:	88 1f       	adc	r24, r24
    2d94:	bb 1f       	adc	r27, r27
    2d96:	62 17       	cp	r22, r18
    2d98:	73 07       	cpc	r23, r19
    2d9a:	84 07       	cpc	r24, r20
    2d9c:	ba 07       	cpc	r27, r26
    2d9e:	20 f0       	brcs	.+8      	; 0x2da8 <__divsf3_pse+0xaa>
    2da0:	62 1b       	sub	r22, r18
    2da2:	73 0b       	sbc	r23, r19
    2da4:	84 0b       	sbc	r24, r20
    2da6:	ba 0b       	sbc	r27, r26
    2da8:	ee 1f       	adc	r30, r30
    2daa:	88 f7       	brcc	.-30     	; 0x2d8e <__divsf3_pse+0x90>
    2dac:	e0 95       	com	r30
    2dae:	08 95       	ret

00002db0 <__fixsfdi>:
    2db0:	be e3       	ldi	r27, 0x3E	; 62
    2db2:	04 d0       	rcall	.+8      	; 0x2dbc <__fixunssfdi+0x2>
    2db4:	08 f4       	brcc	.+2      	; 0x2db8 <__fixsfdi+0x8>
    2db6:	90 e8       	ldi	r25, 0x80	; 128
    2db8:	08 95       	ret

00002dba <__fixunssfdi>:
    2dba:	bf e3       	ldi	r27, 0x3F	; 63
    2dbc:	22 27       	eor	r18, r18
    2dbe:	33 27       	eor	r19, r19
    2dc0:	a9 01       	movw	r20, r18
    2dc2:	02 d1       	rcall	.+516    	; 0x2fc8 <__fp_splitA>
    2dc4:	58 f1       	brcs	.+86     	; 0x2e1c <__fixunssfdi+0x62>
    2dc6:	9f 57       	subi	r25, 0x7F	; 127
    2dc8:	40 f1       	brcs	.+80     	; 0x2e1a <__fixunssfdi+0x60>
    2dca:	b9 17       	cp	r27, r25
    2dcc:	38 f1       	brcs	.+78     	; 0x2e1c <__fixunssfdi+0x62>
    2dce:	bf e3       	ldi	r27, 0x3F	; 63
    2dd0:	b9 1b       	sub	r27, r25
    2dd2:	99 27       	eor	r25, r25
    2dd4:	b8 50       	subi	r27, 0x08	; 8
    2dd6:	3a f4       	brpl	.+14     	; 0x2de6 <__fixunssfdi+0x2c>
    2dd8:	66 0f       	add	r22, r22
    2dda:	77 1f       	adc	r23, r23
    2ddc:	88 1f       	adc	r24, r24
    2dde:	99 1f       	adc	r25, r25
    2de0:	b3 95       	inc	r27
    2de2:	d2 f3       	brmi	.-12     	; 0x2dd8 <__fixunssfdi+0x1e>
    2de4:	16 c0       	rjmp	.+44     	; 0x2e12 <__fixunssfdi+0x58>
    2de6:	b8 50       	subi	r27, 0x08	; 8
    2de8:	4a f0       	brmi	.+18     	; 0x2dfc <__fixunssfdi+0x42>
    2dea:	23 2f       	mov	r18, r19
    2dec:	34 2f       	mov	r19, r20
    2dee:	45 2f       	mov	r20, r21
    2df0:	56 2f       	mov	r21, r22
    2df2:	67 2f       	mov	r22, r23
    2df4:	78 2f       	mov	r23, r24
    2df6:	88 27       	eor	r24, r24
    2df8:	b8 50       	subi	r27, 0x08	; 8
    2dfa:	ba f7       	brpl	.-18     	; 0x2dea <__fixunssfdi+0x30>
    2dfc:	b8 5f       	subi	r27, 0xF8	; 248
    2dfe:	49 f0       	breq	.+18     	; 0x2e12 <__fixunssfdi+0x58>
    2e00:	86 95       	lsr	r24
    2e02:	77 95       	ror	r23
    2e04:	67 95       	ror	r22
    2e06:	57 95       	ror	r21
    2e08:	47 95       	ror	r20
    2e0a:	37 95       	ror	r19
    2e0c:	27 95       	ror	r18
    2e0e:	ba 95       	dec	r27
    2e10:	b9 f7       	brne	.-18     	; 0x2e00 <__fixunssfdi+0x46>
    2e12:	0e f4       	brtc	.+2      	; 0x2e16 <__fixunssfdi+0x5c>
    2e14:	a2 d0       	rcall	.+324    	; 0x2f5a <__fp_negdi>
    2e16:	88 94       	clc
    2e18:	08 95       	ret
    2e1a:	88 94       	clc
    2e1c:	60 e0       	ldi	r22, 0x00	; 0
    2e1e:	70 e0       	ldi	r23, 0x00	; 0
    2e20:	cb 01       	movw	r24, r22
    2e22:	08 95       	ret

00002e24 <__fixsfsi>:
    2e24:	04 d0       	rcall	.+8      	; 0x2e2e <__fixunssfsi>
    2e26:	68 94       	set
    2e28:	b1 11       	cpse	r27, r1
    2e2a:	e9 c0       	rjmp	.+466    	; 0x2ffe <__fp_szero>
    2e2c:	08 95       	ret

00002e2e <__fixunssfsi>:
    2e2e:	cc d0       	rcall	.+408    	; 0x2fc8 <__fp_splitA>
    2e30:	88 f0       	brcs	.+34     	; 0x2e54 <__fixunssfsi+0x26>
    2e32:	9f 57       	subi	r25, 0x7F	; 127
    2e34:	90 f0       	brcs	.+36     	; 0x2e5a <__fixunssfsi+0x2c>
    2e36:	b9 2f       	mov	r27, r25
    2e38:	99 27       	eor	r25, r25
    2e3a:	b7 51       	subi	r27, 0x17	; 23
    2e3c:	a0 f0       	brcs	.+40     	; 0x2e66 <__fixunssfsi+0x38>
    2e3e:	d1 f0       	breq	.+52     	; 0x2e74 <__fixunssfsi+0x46>
    2e40:	66 0f       	add	r22, r22
    2e42:	77 1f       	adc	r23, r23
    2e44:	88 1f       	adc	r24, r24
    2e46:	99 1f       	adc	r25, r25
    2e48:	1a f0       	brmi	.+6      	; 0x2e50 <__fixunssfsi+0x22>
    2e4a:	ba 95       	dec	r27
    2e4c:	c9 f7       	brne	.-14     	; 0x2e40 <__fixunssfsi+0x12>
    2e4e:	12 c0       	rjmp	.+36     	; 0x2e74 <__fixunssfsi+0x46>
    2e50:	b1 30       	cpi	r27, 0x01	; 1
    2e52:	81 f0       	breq	.+32     	; 0x2e74 <__fixunssfsi+0x46>
    2e54:	d3 d0       	rcall	.+422    	; 0x2ffc <__fp_zero>
    2e56:	b1 e0       	ldi	r27, 0x01	; 1
    2e58:	08 95       	ret
    2e5a:	d0 c0       	rjmp	.+416    	; 0x2ffc <__fp_zero>
    2e5c:	67 2f       	mov	r22, r23
    2e5e:	78 2f       	mov	r23, r24
    2e60:	88 27       	eor	r24, r24
    2e62:	b8 5f       	subi	r27, 0xF8	; 248
    2e64:	39 f0       	breq	.+14     	; 0x2e74 <__fixunssfsi+0x46>
    2e66:	b9 3f       	cpi	r27, 0xF9	; 249
    2e68:	cc f3       	brlt	.-14     	; 0x2e5c <__fixunssfsi+0x2e>
    2e6a:	86 95       	lsr	r24
    2e6c:	77 95       	ror	r23
    2e6e:	67 95       	ror	r22
    2e70:	b3 95       	inc	r27
    2e72:	d9 f7       	brne	.-10     	; 0x2e6a <__fixunssfsi+0x3c>
    2e74:	3e f4       	brtc	.+14     	; 0x2e84 <__fixunssfsi+0x56>
    2e76:	90 95       	com	r25
    2e78:	80 95       	com	r24
    2e7a:	70 95       	com	r23
    2e7c:	61 95       	neg	r22
    2e7e:	7f 4f       	sbci	r23, 0xFF	; 255
    2e80:	8f 4f       	sbci	r24, 0xFF	; 255
    2e82:	9f 4f       	sbci	r25, 0xFF	; 255
    2e84:	08 95       	ret

00002e86 <__floatunsisf>:
    2e86:	e8 94       	clt
    2e88:	09 c0       	rjmp	.+18     	; 0x2e9c <__floatsisf+0x12>

00002e8a <__floatsisf>:
    2e8a:	97 fb       	bst	r25, 7
    2e8c:	3e f4       	brtc	.+14     	; 0x2e9c <__floatsisf+0x12>
    2e8e:	90 95       	com	r25
    2e90:	80 95       	com	r24
    2e92:	70 95       	com	r23
    2e94:	61 95       	neg	r22
    2e96:	7f 4f       	sbci	r23, 0xFF	; 255
    2e98:	8f 4f       	sbci	r24, 0xFF	; 255
    2e9a:	9f 4f       	sbci	r25, 0xFF	; 255
    2e9c:	99 23       	and	r25, r25
    2e9e:	a9 f0       	breq	.+42     	; 0x2eca <__floatsisf+0x40>
    2ea0:	f9 2f       	mov	r31, r25
    2ea2:	96 e9       	ldi	r25, 0x96	; 150
    2ea4:	bb 27       	eor	r27, r27
    2ea6:	93 95       	inc	r25
    2ea8:	f6 95       	lsr	r31
    2eaa:	87 95       	ror	r24
    2eac:	77 95       	ror	r23
    2eae:	67 95       	ror	r22
    2eb0:	b7 95       	ror	r27
    2eb2:	f1 11       	cpse	r31, r1
    2eb4:	f8 cf       	rjmp	.-16     	; 0x2ea6 <__floatsisf+0x1c>
    2eb6:	fa f4       	brpl	.+62     	; 0x2ef6 <__floatsisf+0x6c>
    2eb8:	bb 0f       	add	r27, r27
    2eba:	11 f4       	brne	.+4      	; 0x2ec0 <__floatsisf+0x36>
    2ebc:	60 ff       	sbrs	r22, 0
    2ebe:	1b c0       	rjmp	.+54     	; 0x2ef6 <__floatsisf+0x6c>
    2ec0:	6f 5f       	subi	r22, 0xFF	; 255
    2ec2:	7f 4f       	sbci	r23, 0xFF	; 255
    2ec4:	8f 4f       	sbci	r24, 0xFF	; 255
    2ec6:	9f 4f       	sbci	r25, 0xFF	; 255
    2ec8:	16 c0       	rjmp	.+44     	; 0x2ef6 <__floatsisf+0x6c>
    2eca:	88 23       	and	r24, r24
    2ecc:	11 f0       	breq	.+4      	; 0x2ed2 <__floatsisf+0x48>
    2ece:	96 e9       	ldi	r25, 0x96	; 150
    2ed0:	11 c0       	rjmp	.+34     	; 0x2ef4 <__floatsisf+0x6a>
    2ed2:	77 23       	and	r23, r23
    2ed4:	21 f0       	breq	.+8      	; 0x2ede <__floatsisf+0x54>
    2ed6:	9e e8       	ldi	r25, 0x8E	; 142
    2ed8:	87 2f       	mov	r24, r23
    2eda:	76 2f       	mov	r23, r22
    2edc:	05 c0       	rjmp	.+10     	; 0x2ee8 <__floatsisf+0x5e>
    2ede:	66 23       	and	r22, r22
    2ee0:	71 f0       	breq	.+28     	; 0x2efe <__floatsisf+0x74>
    2ee2:	96 e8       	ldi	r25, 0x86	; 134
    2ee4:	86 2f       	mov	r24, r22
    2ee6:	70 e0       	ldi	r23, 0x00	; 0
    2ee8:	60 e0       	ldi	r22, 0x00	; 0
    2eea:	2a f0       	brmi	.+10     	; 0x2ef6 <__floatsisf+0x6c>
    2eec:	9a 95       	dec	r25
    2eee:	66 0f       	add	r22, r22
    2ef0:	77 1f       	adc	r23, r23
    2ef2:	88 1f       	adc	r24, r24
    2ef4:	da f7       	brpl	.-10     	; 0x2eec <__floatsisf+0x62>
    2ef6:	88 0f       	add	r24, r24
    2ef8:	96 95       	lsr	r25
    2efa:	87 95       	ror	r24
    2efc:	97 f9       	bld	r25, 7
    2efe:	08 95       	ret

00002f00 <__fp_cmp>:
    2f00:	99 0f       	add	r25, r25
    2f02:	00 08       	sbc	r0, r0
    2f04:	55 0f       	add	r21, r21
    2f06:	aa 0b       	sbc	r26, r26
    2f08:	e0 e8       	ldi	r30, 0x80	; 128
    2f0a:	fe ef       	ldi	r31, 0xFE	; 254
    2f0c:	16 16       	cp	r1, r22
    2f0e:	17 06       	cpc	r1, r23
    2f10:	e8 07       	cpc	r30, r24
    2f12:	f9 07       	cpc	r31, r25
    2f14:	c0 f0       	brcs	.+48     	; 0x2f46 <__fp_cmp+0x46>
    2f16:	12 16       	cp	r1, r18
    2f18:	13 06       	cpc	r1, r19
    2f1a:	e4 07       	cpc	r30, r20
    2f1c:	f5 07       	cpc	r31, r21
    2f1e:	98 f0       	brcs	.+38     	; 0x2f46 <__fp_cmp+0x46>
    2f20:	62 1b       	sub	r22, r18
    2f22:	73 0b       	sbc	r23, r19
    2f24:	84 0b       	sbc	r24, r20
    2f26:	95 0b       	sbc	r25, r21
    2f28:	39 f4       	brne	.+14     	; 0x2f38 <__fp_cmp+0x38>
    2f2a:	0a 26       	eor	r0, r26
    2f2c:	61 f0       	breq	.+24     	; 0x2f46 <__fp_cmp+0x46>
    2f2e:	23 2b       	or	r18, r19
    2f30:	24 2b       	or	r18, r20
    2f32:	25 2b       	or	r18, r21
    2f34:	21 f4       	brne	.+8      	; 0x2f3e <__fp_cmp+0x3e>
    2f36:	08 95       	ret
    2f38:	0a 26       	eor	r0, r26
    2f3a:	09 f4       	brne	.+2      	; 0x2f3e <__fp_cmp+0x3e>
    2f3c:	a1 40       	sbci	r26, 0x01	; 1
    2f3e:	a6 95       	lsr	r26
    2f40:	8f ef       	ldi	r24, 0xFF	; 255
    2f42:	81 1d       	adc	r24, r1
    2f44:	81 1d       	adc	r24, r1
    2f46:	08 95       	ret

00002f48 <__fp_inf>:
    2f48:	97 f9       	bld	r25, 7
    2f4a:	9f 67       	ori	r25, 0x7F	; 127
    2f4c:	80 e8       	ldi	r24, 0x80	; 128
    2f4e:	70 e0       	ldi	r23, 0x00	; 0
    2f50:	60 e0       	ldi	r22, 0x00	; 0
    2f52:	08 95       	ret

00002f54 <__fp_nan>:
    2f54:	9f ef       	ldi	r25, 0xFF	; 255
    2f56:	80 ec       	ldi	r24, 0xC0	; 192
    2f58:	08 95       	ret

00002f5a <__fp_negdi>:
    2f5a:	90 95       	com	r25
    2f5c:	80 95       	com	r24
    2f5e:	70 95       	com	r23
    2f60:	60 95       	com	r22
    2f62:	50 95       	com	r21
    2f64:	40 95       	com	r20
    2f66:	30 95       	com	r19
    2f68:	21 95       	neg	r18
    2f6a:	3f 4f       	sbci	r19, 0xFF	; 255
    2f6c:	4f 4f       	sbci	r20, 0xFF	; 255
    2f6e:	5f 4f       	sbci	r21, 0xFF	; 255
    2f70:	6f 4f       	sbci	r22, 0xFF	; 255
    2f72:	7f 4f       	sbci	r23, 0xFF	; 255
    2f74:	8f 4f       	sbci	r24, 0xFF	; 255
    2f76:	9f 4f       	sbci	r25, 0xFF	; 255
    2f78:	08 95       	ret

00002f7a <__fp_pscA>:
    2f7a:	00 24       	eor	r0, r0
    2f7c:	0a 94       	dec	r0
    2f7e:	16 16       	cp	r1, r22
    2f80:	17 06       	cpc	r1, r23
    2f82:	18 06       	cpc	r1, r24
    2f84:	09 06       	cpc	r0, r25
    2f86:	08 95       	ret

00002f88 <__fp_pscB>:
    2f88:	00 24       	eor	r0, r0
    2f8a:	0a 94       	dec	r0
    2f8c:	12 16       	cp	r1, r18
    2f8e:	13 06       	cpc	r1, r19
    2f90:	14 06       	cpc	r1, r20
    2f92:	05 06       	cpc	r0, r21
    2f94:	08 95       	ret

00002f96 <__fp_round>:
    2f96:	09 2e       	mov	r0, r25
    2f98:	03 94       	inc	r0
    2f9a:	00 0c       	add	r0, r0
    2f9c:	11 f4       	brne	.+4      	; 0x2fa2 <__fp_round+0xc>
    2f9e:	88 23       	and	r24, r24
    2fa0:	52 f0       	brmi	.+20     	; 0x2fb6 <__fp_round+0x20>
    2fa2:	bb 0f       	add	r27, r27
    2fa4:	40 f4       	brcc	.+16     	; 0x2fb6 <__fp_round+0x20>
    2fa6:	bf 2b       	or	r27, r31
    2fa8:	11 f4       	brne	.+4      	; 0x2fae <__fp_round+0x18>
    2faa:	60 ff       	sbrs	r22, 0
    2fac:	04 c0       	rjmp	.+8      	; 0x2fb6 <__fp_round+0x20>
    2fae:	6f 5f       	subi	r22, 0xFF	; 255
    2fb0:	7f 4f       	sbci	r23, 0xFF	; 255
    2fb2:	8f 4f       	sbci	r24, 0xFF	; 255
    2fb4:	9f 4f       	sbci	r25, 0xFF	; 255
    2fb6:	08 95       	ret

00002fb8 <__fp_split3>:
    2fb8:	57 fd       	sbrc	r21, 7
    2fba:	90 58       	subi	r25, 0x80	; 128
    2fbc:	44 0f       	add	r20, r20
    2fbe:	55 1f       	adc	r21, r21
    2fc0:	59 f0       	breq	.+22     	; 0x2fd8 <__fp_splitA+0x10>
    2fc2:	5f 3f       	cpi	r21, 0xFF	; 255
    2fc4:	71 f0       	breq	.+28     	; 0x2fe2 <__fp_splitA+0x1a>
    2fc6:	47 95       	ror	r20

00002fc8 <__fp_splitA>:
    2fc8:	88 0f       	add	r24, r24
    2fca:	97 fb       	bst	r25, 7
    2fcc:	99 1f       	adc	r25, r25
    2fce:	61 f0       	breq	.+24     	; 0x2fe8 <__fp_splitA+0x20>
    2fd0:	9f 3f       	cpi	r25, 0xFF	; 255
    2fd2:	79 f0       	breq	.+30     	; 0x2ff2 <__fp_splitA+0x2a>
    2fd4:	87 95       	ror	r24
    2fd6:	08 95       	ret
    2fd8:	12 16       	cp	r1, r18
    2fda:	13 06       	cpc	r1, r19
    2fdc:	14 06       	cpc	r1, r20
    2fde:	55 1f       	adc	r21, r21
    2fe0:	f2 cf       	rjmp	.-28     	; 0x2fc6 <__fp_split3+0xe>
    2fe2:	46 95       	lsr	r20
    2fe4:	f1 df       	rcall	.-30     	; 0x2fc8 <__fp_splitA>
    2fe6:	08 c0       	rjmp	.+16     	; 0x2ff8 <__fp_splitA+0x30>
    2fe8:	16 16       	cp	r1, r22
    2fea:	17 06       	cpc	r1, r23
    2fec:	18 06       	cpc	r1, r24
    2fee:	99 1f       	adc	r25, r25
    2ff0:	f1 cf       	rjmp	.-30     	; 0x2fd4 <__fp_splitA+0xc>
    2ff2:	86 95       	lsr	r24
    2ff4:	71 05       	cpc	r23, r1
    2ff6:	61 05       	cpc	r22, r1
    2ff8:	08 94       	sec
    2ffa:	08 95       	ret

00002ffc <__fp_zero>:
    2ffc:	e8 94       	clt

00002ffe <__fp_szero>:
    2ffe:	bb 27       	eor	r27, r27
    3000:	66 27       	eor	r22, r22
    3002:	77 27       	eor	r23, r23
    3004:	cb 01       	movw	r24, r22
    3006:	97 f9       	bld	r25, 7
    3008:	08 95       	ret

0000300a <__gesf2>:
    300a:	7a df       	rcall	.-268    	; 0x2f00 <__fp_cmp>
    300c:	08 f4       	brcc	.+2      	; 0x3010 <__gesf2+0x6>
    300e:	8f ef       	ldi	r24, 0xFF	; 255
    3010:	08 95       	ret

00003012 <__mulsf3>:
    3012:	0b d0       	rcall	.+22     	; 0x302a <__mulsf3x>
    3014:	c0 cf       	rjmp	.-128    	; 0x2f96 <__fp_round>
    3016:	b1 df       	rcall	.-158    	; 0x2f7a <__fp_pscA>
    3018:	28 f0       	brcs	.+10     	; 0x3024 <__mulsf3+0x12>
    301a:	b6 df       	rcall	.-148    	; 0x2f88 <__fp_pscB>
    301c:	18 f0       	brcs	.+6      	; 0x3024 <__mulsf3+0x12>
    301e:	95 23       	and	r25, r21
    3020:	09 f0       	breq	.+2      	; 0x3024 <__mulsf3+0x12>
    3022:	92 cf       	rjmp	.-220    	; 0x2f48 <__fp_inf>
    3024:	97 cf       	rjmp	.-210    	; 0x2f54 <__fp_nan>
    3026:	11 24       	eor	r1, r1
    3028:	ea cf       	rjmp	.-44     	; 0x2ffe <__fp_szero>

0000302a <__mulsf3x>:
    302a:	c6 df       	rcall	.-116    	; 0x2fb8 <__fp_split3>
    302c:	a0 f3       	brcs	.-24     	; 0x3016 <__mulsf3+0x4>

0000302e <__mulsf3_pse>:
    302e:	95 9f       	mul	r25, r21
    3030:	d1 f3       	breq	.-12     	; 0x3026 <__mulsf3+0x14>
    3032:	95 0f       	add	r25, r21
    3034:	50 e0       	ldi	r21, 0x00	; 0
    3036:	55 1f       	adc	r21, r21
    3038:	62 9f       	mul	r22, r18
    303a:	f0 01       	movw	r30, r0
    303c:	72 9f       	mul	r23, r18
    303e:	bb 27       	eor	r27, r27
    3040:	f0 0d       	add	r31, r0
    3042:	b1 1d       	adc	r27, r1
    3044:	63 9f       	mul	r22, r19
    3046:	aa 27       	eor	r26, r26
    3048:	f0 0d       	add	r31, r0
    304a:	b1 1d       	adc	r27, r1
    304c:	aa 1f       	adc	r26, r26
    304e:	64 9f       	mul	r22, r20
    3050:	66 27       	eor	r22, r22
    3052:	b0 0d       	add	r27, r0
    3054:	a1 1d       	adc	r26, r1
    3056:	66 1f       	adc	r22, r22
    3058:	82 9f       	mul	r24, r18
    305a:	22 27       	eor	r18, r18
    305c:	b0 0d       	add	r27, r0
    305e:	a1 1d       	adc	r26, r1
    3060:	62 1f       	adc	r22, r18
    3062:	73 9f       	mul	r23, r19
    3064:	b0 0d       	add	r27, r0
    3066:	a1 1d       	adc	r26, r1
    3068:	62 1f       	adc	r22, r18
    306a:	83 9f       	mul	r24, r19
    306c:	a0 0d       	add	r26, r0
    306e:	61 1d       	adc	r22, r1
    3070:	22 1f       	adc	r18, r18
    3072:	74 9f       	mul	r23, r20
    3074:	33 27       	eor	r19, r19
    3076:	a0 0d       	add	r26, r0
    3078:	61 1d       	adc	r22, r1
    307a:	23 1f       	adc	r18, r19
    307c:	84 9f       	mul	r24, r20
    307e:	60 0d       	add	r22, r0
    3080:	21 1d       	adc	r18, r1
    3082:	82 2f       	mov	r24, r18
    3084:	76 2f       	mov	r23, r22
    3086:	6a 2f       	mov	r22, r26
    3088:	11 24       	eor	r1, r1
    308a:	9f 57       	subi	r25, 0x7F	; 127
    308c:	50 40       	sbci	r21, 0x00	; 0
    308e:	8a f0       	brmi	.+34     	; 0x30b2 <__mulsf3_pse+0x84>
    3090:	e1 f0       	breq	.+56     	; 0x30ca <__mulsf3_pse+0x9c>
    3092:	88 23       	and	r24, r24
    3094:	4a f0       	brmi	.+18     	; 0x30a8 <__mulsf3_pse+0x7a>
    3096:	ee 0f       	add	r30, r30
    3098:	ff 1f       	adc	r31, r31
    309a:	bb 1f       	adc	r27, r27
    309c:	66 1f       	adc	r22, r22
    309e:	77 1f       	adc	r23, r23
    30a0:	88 1f       	adc	r24, r24
    30a2:	91 50       	subi	r25, 0x01	; 1
    30a4:	50 40       	sbci	r21, 0x00	; 0
    30a6:	a9 f7       	brne	.-22     	; 0x3092 <__mulsf3_pse+0x64>
    30a8:	9e 3f       	cpi	r25, 0xFE	; 254
    30aa:	51 05       	cpc	r21, r1
    30ac:	70 f0       	brcs	.+28     	; 0x30ca <__mulsf3_pse+0x9c>
    30ae:	4c cf       	rjmp	.-360    	; 0x2f48 <__fp_inf>
    30b0:	a6 cf       	rjmp	.-180    	; 0x2ffe <__fp_szero>
    30b2:	5f 3f       	cpi	r21, 0xFF	; 255
    30b4:	ec f3       	brlt	.-6      	; 0x30b0 <__mulsf3_pse+0x82>
    30b6:	98 3e       	cpi	r25, 0xE8	; 232
    30b8:	dc f3       	brlt	.-10     	; 0x30b0 <__mulsf3_pse+0x82>
    30ba:	86 95       	lsr	r24
    30bc:	77 95       	ror	r23
    30be:	67 95       	ror	r22
    30c0:	b7 95       	ror	r27
    30c2:	f7 95       	ror	r31
    30c4:	e7 95       	ror	r30
    30c6:	9f 5f       	subi	r25, 0xFF	; 255
    30c8:	c1 f7       	brne	.-16     	; 0x30ba <__mulsf3_pse+0x8c>
    30ca:	fe 2b       	or	r31, r30
    30cc:	88 0f       	add	r24, r24
    30ce:	91 1d       	adc	r25, r1
    30d0:	96 95       	lsr	r25
    30d2:	87 95       	ror	r24
    30d4:	97 f9       	bld	r25, 7
    30d6:	08 95       	ret

000030d8 <pow>:
    30d8:	fa 01       	movw	r30, r20
    30da:	ee 0f       	add	r30, r30
    30dc:	ff 1f       	adc	r31, r31
    30de:	30 96       	adiw	r30, 0x00	; 0
    30e0:	21 05       	cpc	r18, r1
    30e2:	31 05       	cpc	r19, r1
    30e4:	99 f1       	breq	.+102    	; 0x314c <pow+0x74>
    30e6:	61 15       	cp	r22, r1
    30e8:	71 05       	cpc	r23, r1
    30ea:	61 f4       	brne	.+24     	; 0x3104 <pow+0x2c>
    30ec:	80 38       	cpi	r24, 0x80	; 128
    30ee:	bf e3       	ldi	r27, 0x3F	; 63
    30f0:	9b 07       	cpc	r25, r27
    30f2:	49 f1       	breq	.+82     	; 0x3146 <pow+0x6e>
    30f4:	68 94       	set
    30f6:	90 38       	cpi	r25, 0x80	; 128
    30f8:	81 05       	cpc	r24, r1
    30fa:	61 f0       	breq	.+24     	; 0x3114 <pow+0x3c>
    30fc:	80 38       	cpi	r24, 0x80	; 128
    30fe:	bf ef       	ldi	r27, 0xFF	; 255
    3100:	9b 07       	cpc	r25, r27
    3102:	41 f0       	breq	.+16     	; 0x3114 <pow+0x3c>
    3104:	99 23       	and	r25, r25
    3106:	42 f5       	brpl	.+80     	; 0x3158 <pow+0x80>
    3108:	ff 3f       	cpi	r31, 0xFF	; 255
    310a:	e1 05       	cpc	r30, r1
    310c:	31 05       	cpc	r19, r1
    310e:	21 05       	cpc	r18, r1
    3110:	11 f1       	breq	.+68     	; 0x3156 <pow+0x7e>
    3112:	e8 94       	clt
    3114:	08 94       	sec
    3116:	e7 95       	ror	r30
    3118:	d9 01       	movw	r26, r18
    311a:	aa 23       	and	r26, r26
    311c:	29 f4       	brne	.+10     	; 0x3128 <pow+0x50>
    311e:	ab 2f       	mov	r26, r27
    3120:	be 2f       	mov	r27, r30
    3122:	f8 5f       	subi	r31, 0xF8	; 248
    3124:	d0 f3       	brcs	.-12     	; 0x311a <pow+0x42>
    3126:	10 c0       	rjmp	.+32     	; 0x3148 <pow+0x70>
    3128:	ff 5f       	subi	r31, 0xFF	; 255
    312a:	70 f4       	brcc	.+28     	; 0x3148 <pow+0x70>
    312c:	a6 95       	lsr	r26
    312e:	e0 f7       	brcc	.-8      	; 0x3128 <pow+0x50>
    3130:	f7 39       	cpi	r31, 0x97	; 151
    3132:	50 f0       	brcs	.+20     	; 0x3148 <pow+0x70>
    3134:	19 f0       	breq	.+6      	; 0x313c <pow+0x64>
    3136:	ff 3a       	cpi	r31, 0xAF	; 175
    3138:	38 f4       	brcc	.+14     	; 0x3148 <pow+0x70>
    313a:	9f 77       	andi	r25, 0x7F	; 127
    313c:	9f 93       	push	r25
    313e:	0c d0       	rcall	.+24     	; 0x3158 <pow+0x80>
    3140:	0f 90       	pop	r0
    3142:	07 fc       	sbrc	r0, 7
    3144:	90 58       	subi	r25, 0x80	; 128
    3146:	08 95       	ret
    3148:	3e f0       	brts	.+14     	; 0x3158 <pow+0x80>
    314a:	04 cf       	rjmp	.-504    	; 0x2f54 <__fp_nan>
    314c:	60 e0       	ldi	r22, 0x00	; 0
    314e:	70 e0       	ldi	r23, 0x00	; 0
    3150:	80 e8       	ldi	r24, 0x80	; 128
    3152:	9f e3       	ldi	r25, 0x3F	; 63
    3154:	08 95       	ret
    3156:	4f e7       	ldi	r20, 0x7F	; 127
    3158:	9f 77       	andi	r25, 0x7F	; 127
    315a:	5f 93       	push	r21
    315c:	4f 93       	push	r20
    315e:	3f 93       	push	r19
    3160:	2f 93       	push	r18
    3162:	9e d0       	rcall	.+316    	; 0x32a0 <log>
    3164:	2f 91       	pop	r18
    3166:	3f 91       	pop	r19
    3168:	4f 91       	pop	r20
    316a:	5f 91       	pop	r21
    316c:	52 df       	rcall	.-348    	; 0x3012 <__mulsf3>
    316e:	05 c0       	rjmp	.+10     	; 0x317a <exp>
    3170:	19 f4       	brne	.+6      	; 0x3178 <pow+0xa0>
    3172:	0e f0       	brts	.+2      	; 0x3176 <pow+0x9e>
    3174:	e9 ce       	rjmp	.-558    	; 0x2f48 <__fp_inf>
    3176:	42 cf       	rjmp	.-380    	; 0x2ffc <__fp_zero>
    3178:	ed ce       	rjmp	.-550    	; 0x2f54 <__fp_nan>

0000317a <exp>:
    317a:	26 df       	rcall	.-436    	; 0x2fc8 <__fp_splitA>
    317c:	c8 f3       	brcs	.-14     	; 0x3170 <pow+0x98>
    317e:	96 38       	cpi	r25, 0x86	; 134
    3180:	c0 f7       	brcc	.-16     	; 0x3172 <pow+0x9a>
    3182:	07 f8       	bld	r0, 7
    3184:	0f 92       	push	r0
    3186:	e8 94       	clt
    3188:	2b e3       	ldi	r18, 0x3B	; 59
    318a:	3a ea       	ldi	r19, 0xAA	; 170
    318c:	48 eb       	ldi	r20, 0xB8	; 184
    318e:	5f e7       	ldi	r21, 0x7F	; 127
    3190:	4e df       	rcall	.-356    	; 0x302e <__mulsf3_pse>
    3192:	0f 92       	push	r0
    3194:	0f 92       	push	r0
    3196:	0f 92       	push	r0
    3198:	4d b7       	in	r20, 0x3d	; 61
    319a:	5e b7       	in	r21, 0x3e	; 62
    319c:	0f 92       	push	r0
    319e:	c0 d0       	rcall	.+384    	; 0x3320 <modf>
    31a0:	ec ef       	ldi	r30, 0xFC	; 252
    31a2:	f1 e0       	ldi	r31, 0x01	; 1
    31a4:	16 d0       	rcall	.+44     	; 0x31d2 <__fp_powser>
    31a6:	4f 91       	pop	r20
    31a8:	5f 91       	pop	r21
    31aa:	ef 91       	pop	r30
    31ac:	ff 91       	pop	r31
    31ae:	e5 95       	asr	r30
    31b0:	ee 1f       	adc	r30, r30
    31b2:	ff 1f       	adc	r31, r31
    31b4:	49 f0       	breq	.+18     	; 0x31c8 <exp+0x4e>
    31b6:	fe 57       	subi	r31, 0x7E	; 126
    31b8:	e0 68       	ori	r30, 0x80	; 128
    31ba:	44 27       	eor	r20, r20
    31bc:	ee 0f       	add	r30, r30
    31be:	44 1f       	adc	r20, r20
    31c0:	fa 95       	dec	r31
    31c2:	e1 f7       	brne	.-8      	; 0x31bc <exp+0x42>
    31c4:	41 95       	neg	r20
    31c6:	55 0b       	sbc	r21, r21
    31c8:	32 d0       	rcall	.+100    	; 0x322e <ldexp>
    31ca:	0f 90       	pop	r0
    31cc:	07 fe       	sbrs	r0, 7
    31ce:	26 c0       	rjmp	.+76     	; 0x321c <inverse>
    31d0:	08 95       	ret

000031d2 <__fp_powser>:
    31d2:	df 93       	push	r29
    31d4:	cf 93       	push	r28
    31d6:	1f 93       	push	r17
    31d8:	0f 93       	push	r16
    31da:	ff 92       	push	r15
    31dc:	ef 92       	push	r14
    31de:	df 92       	push	r13
    31e0:	7b 01       	movw	r14, r22
    31e2:	8c 01       	movw	r16, r24
    31e4:	68 94       	set
    31e6:	05 c0       	rjmp	.+10     	; 0x31f2 <__fp_powser+0x20>
    31e8:	da 2e       	mov	r13, r26
    31ea:	ef 01       	movw	r28, r30
    31ec:	1e df       	rcall	.-452    	; 0x302a <__mulsf3x>
    31ee:	fe 01       	movw	r30, r28
    31f0:	e8 94       	clt
    31f2:	a5 91       	lpm	r26, Z+
    31f4:	25 91       	lpm	r18, Z+
    31f6:	35 91       	lpm	r19, Z+
    31f8:	45 91       	lpm	r20, Z+
    31fa:	55 91       	lpm	r21, Z+
    31fc:	ae f3       	brts	.-22     	; 0x31e8 <__fp_powser+0x16>
    31fe:	ef 01       	movw	r28, r30
    3200:	18 dd       	rcall	.-1488   	; 0x2c32 <__addsf3x>
    3202:	fe 01       	movw	r30, r28
    3204:	97 01       	movw	r18, r14
    3206:	a8 01       	movw	r20, r16
    3208:	da 94       	dec	r13
    320a:	79 f7       	brne	.-34     	; 0x31ea <__fp_powser+0x18>
    320c:	df 90       	pop	r13
    320e:	ef 90       	pop	r14
    3210:	ff 90       	pop	r15
    3212:	0f 91       	pop	r16
    3214:	1f 91       	pop	r17
    3216:	cf 91       	pop	r28
    3218:	df 91       	pop	r29
    321a:	08 95       	ret

0000321c <inverse>:
    321c:	9b 01       	movw	r18, r22
    321e:	ac 01       	movw	r20, r24
    3220:	60 e0       	ldi	r22, 0x00	; 0
    3222:	70 e0       	ldi	r23, 0x00	; 0
    3224:	80 e8       	ldi	r24, 0x80	; 128
    3226:	9f e3       	ldi	r25, 0x3F	; 63
    3228:	5b cd       	rjmp	.-1354   	; 0x2ce0 <__divsf3>
    322a:	8e ce       	rjmp	.-740    	; 0x2f48 <__fp_inf>
    322c:	ac c0       	rjmp	.+344    	; 0x3386 <__fp_mpack>

0000322e <ldexp>:
    322e:	cc de       	rcall	.-616    	; 0x2fc8 <__fp_splitA>
    3230:	e8 f3       	brcs	.-6      	; 0x322c <inverse+0x10>
    3232:	99 23       	and	r25, r25
    3234:	d9 f3       	breq	.-10     	; 0x322c <inverse+0x10>
    3236:	94 0f       	add	r25, r20
    3238:	51 1d       	adc	r21, r1
    323a:	bb f3       	brvs	.-18     	; 0x322a <inverse+0xe>
    323c:	91 50       	subi	r25, 0x01	; 1
    323e:	50 40       	sbci	r21, 0x00	; 0
    3240:	94 f0       	brlt	.+36     	; 0x3266 <ldexp+0x38>
    3242:	59 f0       	breq	.+22     	; 0x325a <ldexp+0x2c>
    3244:	88 23       	and	r24, r24
    3246:	32 f0       	brmi	.+12     	; 0x3254 <ldexp+0x26>
    3248:	66 0f       	add	r22, r22
    324a:	77 1f       	adc	r23, r23
    324c:	88 1f       	adc	r24, r24
    324e:	91 50       	subi	r25, 0x01	; 1
    3250:	50 40       	sbci	r21, 0x00	; 0
    3252:	c1 f7       	brne	.-16     	; 0x3244 <ldexp+0x16>
    3254:	9e 3f       	cpi	r25, 0xFE	; 254
    3256:	51 05       	cpc	r21, r1
    3258:	44 f7       	brge	.-48     	; 0x322a <inverse+0xe>
    325a:	88 0f       	add	r24, r24
    325c:	91 1d       	adc	r25, r1
    325e:	96 95       	lsr	r25
    3260:	87 95       	ror	r24
    3262:	97 f9       	bld	r25, 7
    3264:	08 95       	ret
    3266:	5f 3f       	cpi	r21, 0xFF	; 255
    3268:	ac f0       	brlt	.+42     	; 0x3294 <ldexp+0x66>
    326a:	98 3e       	cpi	r25, 0xE8	; 232
    326c:	9c f0       	brlt	.+38     	; 0x3294 <ldexp+0x66>
    326e:	bb 27       	eor	r27, r27
    3270:	86 95       	lsr	r24
    3272:	77 95       	ror	r23
    3274:	67 95       	ror	r22
    3276:	b7 95       	ror	r27
    3278:	08 f4       	brcc	.+2      	; 0x327c <ldexp+0x4e>
    327a:	b1 60       	ori	r27, 0x01	; 1
    327c:	93 95       	inc	r25
    327e:	c1 f7       	brne	.-16     	; 0x3270 <ldexp+0x42>
    3280:	bb 0f       	add	r27, r27
    3282:	58 f7       	brcc	.-42     	; 0x325a <ldexp+0x2c>
    3284:	11 f4       	brne	.+4      	; 0x328a <ldexp+0x5c>
    3286:	60 ff       	sbrs	r22, 0
    3288:	e8 cf       	rjmp	.-48     	; 0x325a <ldexp+0x2c>
    328a:	6f 5f       	subi	r22, 0xFF	; 255
    328c:	7f 4f       	sbci	r23, 0xFF	; 255
    328e:	8f 4f       	sbci	r24, 0xFF	; 255
    3290:	9f 4f       	sbci	r25, 0xFF	; 255
    3292:	e3 cf       	rjmp	.-58     	; 0x325a <ldexp+0x2c>
    3294:	b4 ce       	rjmp	.-664    	; 0x2ffe <__fp_szero>
    3296:	0e f0       	brts	.+2      	; 0x329a <ldexp+0x6c>
    3298:	76 c0       	rjmp	.+236    	; 0x3386 <__fp_mpack>
    329a:	5c ce       	rjmp	.-840    	; 0x2f54 <__fp_nan>
    329c:	68 94       	set
    329e:	54 ce       	rjmp	.-856    	; 0x2f48 <__fp_inf>

000032a0 <log>:
    32a0:	93 de       	rcall	.-730    	; 0x2fc8 <__fp_splitA>
    32a2:	c8 f3       	brcs	.-14     	; 0x3296 <ldexp+0x68>
    32a4:	99 23       	and	r25, r25
    32a6:	d1 f3       	breq	.-12     	; 0x329c <ldexp+0x6e>
    32a8:	c6 f3       	brts	.-16     	; 0x329a <ldexp+0x6c>
    32aa:	df 93       	push	r29
    32ac:	cf 93       	push	r28
    32ae:	1f 93       	push	r17
    32b0:	0f 93       	push	r16
    32b2:	ff 92       	push	r15
    32b4:	c9 2f       	mov	r28, r25
    32b6:	dd 27       	eor	r29, r29
    32b8:	88 23       	and	r24, r24
    32ba:	2a f0       	brmi	.+10     	; 0x32c6 <log+0x26>
    32bc:	21 97       	sbiw	r28, 0x01	; 1
    32be:	66 0f       	add	r22, r22
    32c0:	77 1f       	adc	r23, r23
    32c2:	88 1f       	adc	r24, r24
    32c4:	da f7       	brpl	.-10     	; 0x32bc <log+0x1c>
    32c6:	20 e0       	ldi	r18, 0x00	; 0
    32c8:	30 e0       	ldi	r19, 0x00	; 0
    32ca:	40 e8       	ldi	r20, 0x80	; 128
    32cc:	5f eb       	ldi	r21, 0xBF	; 191
    32ce:	9f e3       	ldi	r25, 0x3F	; 63
    32d0:	88 39       	cpi	r24, 0x98	; 152
    32d2:	20 f0       	brcs	.+8      	; 0x32dc <log+0x3c>
    32d4:	80 3e       	cpi	r24, 0xE0	; 224
    32d6:	30 f0       	brcs	.+12     	; 0x32e4 <log+0x44>
    32d8:	21 96       	adiw	r28, 0x01	; 1
    32da:	8f 77       	andi	r24, 0x7F	; 127
    32dc:	99 dc       	rcall	.-1742   	; 0x2c10 <__addsf3>
    32de:	e4 e2       	ldi	r30, 0x24	; 36
    32e0:	f2 e0       	ldi	r31, 0x02	; 2
    32e2:	03 c0       	rjmp	.+6      	; 0x32ea <log+0x4a>
    32e4:	95 dc       	rcall	.-1750   	; 0x2c10 <__addsf3>
    32e6:	e1 e5       	ldi	r30, 0x51	; 81
    32e8:	f2 e0       	ldi	r31, 0x02	; 2
    32ea:	73 df       	rcall	.-282    	; 0x31d2 <__fp_powser>
    32ec:	8b 01       	movw	r16, r22
    32ee:	be 01       	movw	r22, r28
    32f0:	ec 01       	movw	r28, r24
    32f2:	fb 2e       	mov	r15, r27
    32f4:	6f 57       	subi	r22, 0x7F	; 127
    32f6:	71 09       	sbc	r23, r1
    32f8:	75 95       	asr	r23
    32fa:	77 1f       	adc	r23, r23
    32fc:	88 0b       	sbc	r24, r24
    32fe:	99 0b       	sbc	r25, r25
    3300:	c4 dd       	rcall	.-1144   	; 0x2e8a <__floatsisf>
    3302:	28 e1       	ldi	r18, 0x18	; 24
    3304:	32 e7       	ldi	r19, 0x72	; 114
    3306:	41 e3       	ldi	r20, 0x31	; 49
    3308:	5f e3       	ldi	r21, 0x3F	; 63
    330a:	8f de       	rcall	.-738    	; 0x302a <__mulsf3x>
    330c:	af 2d       	mov	r26, r15
    330e:	98 01       	movw	r18, r16
    3310:	ae 01       	movw	r20, r28
    3312:	ff 90       	pop	r15
    3314:	0f 91       	pop	r16
    3316:	1f 91       	pop	r17
    3318:	cf 91       	pop	r28
    331a:	df 91       	pop	r29
    331c:	8a dc       	rcall	.-1772   	; 0x2c32 <__addsf3x>
    331e:	3b ce       	rjmp	.-906    	; 0x2f96 <__fp_round>

00003320 <modf>:
    3320:	fa 01       	movw	r30, r20
    3322:	dc 01       	movw	r26, r24
    3324:	aa 0f       	add	r26, r26
    3326:	bb 1f       	adc	r27, r27
    3328:	9b 01       	movw	r18, r22
    332a:	ac 01       	movw	r20, r24
    332c:	bf 57       	subi	r27, 0x7F	; 127
    332e:	28 f4       	brcc	.+10     	; 0x333a <modf+0x1a>
    3330:	22 27       	eor	r18, r18
    3332:	33 27       	eor	r19, r19
    3334:	44 27       	eor	r20, r20
    3336:	50 78       	andi	r21, 0x80	; 128
    3338:	1f c0       	rjmp	.+62     	; 0x3378 <modf+0x58>
    333a:	b7 51       	subi	r27, 0x17	; 23
    333c:	88 f4       	brcc	.+34     	; 0x3360 <modf+0x40>
    333e:	ab 2f       	mov	r26, r27
    3340:	00 24       	eor	r0, r0
    3342:	46 95       	lsr	r20
    3344:	37 95       	ror	r19
    3346:	27 95       	ror	r18
    3348:	01 1c       	adc	r0, r1
    334a:	a3 95       	inc	r26
    334c:	d2 f3       	brmi	.-12     	; 0x3342 <modf+0x22>
    334e:	00 20       	and	r0, r0
    3350:	69 f0       	breq	.+26     	; 0x336c <modf+0x4c>
    3352:	22 0f       	add	r18, r18
    3354:	33 1f       	adc	r19, r19
    3356:	44 1f       	adc	r20, r20
    3358:	b3 95       	inc	r27
    335a:	da f3       	brmi	.-10     	; 0x3352 <modf+0x32>
    335c:	0d d0       	rcall	.+26     	; 0x3378 <modf+0x58>
    335e:	57 cc       	rjmp	.-1874   	; 0x2c0e <__subsf3>
    3360:	61 30       	cpi	r22, 0x01	; 1
    3362:	71 05       	cpc	r23, r1
    3364:	a0 e8       	ldi	r26, 0x80	; 128
    3366:	8a 07       	cpc	r24, r26
    3368:	b9 46       	sbci	r27, 0x69	; 105
    336a:	30 f4       	brcc	.+12     	; 0x3378 <modf+0x58>
    336c:	9b 01       	movw	r18, r22
    336e:	ac 01       	movw	r20, r24
    3370:	66 27       	eor	r22, r22
    3372:	77 27       	eor	r23, r23
    3374:	88 27       	eor	r24, r24
    3376:	90 78       	andi	r25, 0x80	; 128
    3378:	30 96       	adiw	r30, 0x00	; 0
    337a:	21 f0       	breq	.+8      	; 0x3384 <modf+0x64>
    337c:	20 83       	st	Z, r18
    337e:	31 83       	std	Z+1, r19	; 0x01
    3380:	42 83       	std	Z+2, r20	; 0x02
    3382:	53 83       	std	Z+3, r21	; 0x03
    3384:	08 95       	ret

00003386 <__fp_mpack>:
    3386:	9f 3f       	cpi	r25, 0xFF	; 255
    3388:	31 f0       	breq	.+12     	; 0x3396 <__fp_mpack_finite+0xc>

0000338a <__fp_mpack_finite>:
    338a:	91 50       	subi	r25, 0x01	; 1
    338c:	20 f4       	brcc	.+8      	; 0x3396 <__fp_mpack_finite+0xc>
    338e:	87 95       	ror	r24
    3390:	77 95       	ror	r23
    3392:	67 95       	ror	r22
    3394:	b7 95       	ror	r27
    3396:	88 0f       	add	r24, r24
    3398:	91 1d       	adc	r25, r1
    339a:	96 95       	lsr	r25
    339c:	87 95       	ror	r24
    339e:	97 f9       	bld	r25, 7
    33a0:	08 95       	ret

000033a2 <__mulsi3>:
    33a2:	db 01       	movw	r26, r22
    33a4:	8f 93       	push	r24
    33a6:	9f 93       	push	r25
    33a8:	7f d0       	rcall	.+254    	; 0x34a8 <__muluhisi3>
    33aa:	bf 91       	pop	r27
    33ac:	af 91       	pop	r26
    33ae:	a2 9f       	mul	r26, r18
    33b0:	80 0d       	add	r24, r0
    33b2:	91 1d       	adc	r25, r1
    33b4:	a3 9f       	mul	r26, r19
    33b6:	90 0d       	add	r25, r0
    33b8:	b2 9f       	mul	r27, r18
    33ba:	90 0d       	add	r25, r0
    33bc:	11 24       	eor	r1, r1
    33be:	08 95       	ret

000033c0 <__udivmodhi4>:
    33c0:	aa 1b       	sub	r26, r26
    33c2:	bb 1b       	sub	r27, r27
    33c4:	51 e1       	ldi	r21, 0x11	; 17
    33c6:	07 c0       	rjmp	.+14     	; 0x33d6 <__udivmodhi4_ep>

000033c8 <__udivmodhi4_loop>:
    33c8:	aa 1f       	adc	r26, r26
    33ca:	bb 1f       	adc	r27, r27
    33cc:	a6 17       	cp	r26, r22
    33ce:	b7 07       	cpc	r27, r23
    33d0:	10 f0       	brcs	.+4      	; 0x33d6 <__udivmodhi4_ep>
    33d2:	a6 1b       	sub	r26, r22
    33d4:	b7 0b       	sbc	r27, r23

000033d6 <__udivmodhi4_ep>:
    33d6:	88 1f       	adc	r24, r24
    33d8:	99 1f       	adc	r25, r25
    33da:	5a 95       	dec	r21
    33dc:	a9 f7       	brne	.-22     	; 0x33c8 <__udivmodhi4_loop>
    33de:	80 95       	com	r24
    33e0:	90 95       	com	r25
    33e2:	bc 01       	movw	r22, r24
    33e4:	cd 01       	movw	r24, r26
    33e6:	08 95       	ret

000033e8 <__divmodhi4>:
    33e8:	97 fb       	bst	r25, 7
    33ea:	07 2e       	mov	r0, r23
    33ec:	16 f4       	brtc	.+4      	; 0x33f2 <__divmodhi4+0xa>
    33ee:	00 94       	com	r0
    33f0:	06 d0       	rcall	.+12     	; 0x33fe <__divmodhi4_neg1>
    33f2:	77 fd       	sbrc	r23, 7
    33f4:	08 d0       	rcall	.+16     	; 0x3406 <__divmodhi4_neg2>
    33f6:	e4 df       	rcall	.-56     	; 0x33c0 <__udivmodhi4>
    33f8:	07 fc       	sbrc	r0, 7
    33fa:	05 d0       	rcall	.+10     	; 0x3406 <__divmodhi4_neg2>
    33fc:	3e f4       	brtc	.+14     	; 0x340c <__divmodhi4_exit>

000033fe <__divmodhi4_neg1>:
    33fe:	90 95       	com	r25
    3400:	81 95       	neg	r24
    3402:	9f 4f       	sbci	r25, 0xFF	; 255
    3404:	08 95       	ret

00003406 <__divmodhi4_neg2>:
    3406:	70 95       	com	r23
    3408:	61 95       	neg	r22
    340a:	7f 4f       	sbci	r23, 0xFF	; 255

0000340c <__divmodhi4_exit>:
    340c:	08 95       	ret

0000340e <__udivmodsi4>:
    340e:	a1 e2       	ldi	r26, 0x21	; 33
    3410:	1a 2e       	mov	r1, r26
    3412:	aa 1b       	sub	r26, r26
    3414:	bb 1b       	sub	r27, r27
    3416:	fd 01       	movw	r30, r26
    3418:	0d c0       	rjmp	.+26     	; 0x3434 <__udivmodsi4_ep>

0000341a <__udivmodsi4_loop>:
    341a:	aa 1f       	adc	r26, r26
    341c:	bb 1f       	adc	r27, r27
    341e:	ee 1f       	adc	r30, r30
    3420:	ff 1f       	adc	r31, r31
    3422:	a2 17       	cp	r26, r18
    3424:	b3 07       	cpc	r27, r19
    3426:	e4 07       	cpc	r30, r20
    3428:	f5 07       	cpc	r31, r21
    342a:	20 f0       	brcs	.+8      	; 0x3434 <__udivmodsi4_ep>
    342c:	a2 1b       	sub	r26, r18
    342e:	b3 0b       	sbc	r27, r19
    3430:	e4 0b       	sbc	r30, r20
    3432:	f5 0b       	sbc	r31, r21

00003434 <__udivmodsi4_ep>:
    3434:	66 1f       	adc	r22, r22
    3436:	77 1f       	adc	r23, r23
    3438:	88 1f       	adc	r24, r24
    343a:	99 1f       	adc	r25, r25
    343c:	1a 94       	dec	r1
    343e:	69 f7       	brne	.-38     	; 0x341a <__udivmodsi4_loop>
    3440:	60 95       	com	r22
    3442:	70 95       	com	r23
    3444:	80 95       	com	r24
    3446:	90 95       	com	r25
    3448:	9b 01       	movw	r18, r22
    344a:	ac 01       	movw	r20, r24
    344c:	bd 01       	movw	r22, r26
    344e:	cf 01       	movw	r24, r30
    3450:	08 95       	ret

00003452 <__divmodsi4>:
    3452:	05 2e       	mov	r0, r21
    3454:	97 fb       	bst	r25, 7
    3456:	16 f4       	brtc	.+4      	; 0x345c <__divmodsi4+0xa>
    3458:	00 94       	com	r0
    345a:	0f d0       	rcall	.+30     	; 0x347a <__negsi2>
    345c:	57 fd       	sbrc	r21, 7
    345e:	05 d0       	rcall	.+10     	; 0x346a <__divmodsi4_neg2>
    3460:	d6 df       	rcall	.-84     	; 0x340e <__udivmodsi4>
    3462:	07 fc       	sbrc	r0, 7
    3464:	02 d0       	rcall	.+4      	; 0x346a <__divmodsi4_neg2>
    3466:	46 f4       	brtc	.+16     	; 0x3478 <__divmodsi4_exit>
    3468:	08 c0       	rjmp	.+16     	; 0x347a <__negsi2>

0000346a <__divmodsi4_neg2>:
    346a:	50 95       	com	r21
    346c:	40 95       	com	r20
    346e:	30 95       	com	r19
    3470:	21 95       	neg	r18
    3472:	3f 4f       	sbci	r19, 0xFF	; 255
    3474:	4f 4f       	sbci	r20, 0xFF	; 255
    3476:	5f 4f       	sbci	r21, 0xFF	; 255

00003478 <__divmodsi4_exit>:
    3478:	08 95       	ret

0000347a <__negsi2>:
    347a:	90 95       	com	r25
    347c:	80 95       	com	r24
    347e:	70 95       	com	r23
    3480:	61 95       	neg	r22
    3482:	7f 4f       	sbci	r23, 0xFF	; 255
    3484:	8f 4f       	sbci	r24, 0xFF	; 255
    3486:	9f 4f       	sbci	r25, 0xFF	; 255
    3488:	08 95       	ret

0000348a <__umulhisi3>:
    348a:	a2 9f       	mul	r26, r18
    348c:	b0 01       	movw	r22, r0
    348e:	b3 9f       	mul	r27, r19
    3490:	c0 01       	movw	r24, r0
    3492:	a3 9f       	mul	r26, r19
    3494:	70 0d       	add	r23, r0
    3496:	81 1d       	adc	r24, r1
    3498:	11 24       	eor	r1, r1
    349a:	91 1d       	adc	r25, r1
    349c:	b2 9f       	mul	r27, r18
    349e:	70 0d       	add	r23, r0
    34a0:	81 1d       	adc	r24, r1
    34a2:	11 24       	eor	r1, r1
    34a4:	91 1d       	adc	r25, r1
    34a6:	08 95       	ret

000034a8 <__muluhisi3>:
    34a8:	f0 df       	rcall	.-32     	; 0x348a <__umulhisi3>
    34aa:	a5 9f       	mul	r26, r21
    34ac:	90 0d       	add	r25, r0
    34ae:	b4 9f       	mul	r27, r20
    34b0:	90 0d       	add	r25, r0
    34b2:	a4 9f       	mul	r26, r20
    34b4:	80 0d       	add	r24, r0
    34b6:	91 1d       	adc	r25, r1
    34b8:	11 24       	eor	r1, r1
    34ba:	08 95       	ret

000034bc <__mulshisi3>:
    34bc:	b7 ff       	sbrs	r27, 7
    34be:	f4 cf       	rjmp	.-24     	; 0x34a8 <__muluhisi3>

000034c0 <__mulohisi3>:
    34c0:	f3 df       	rcall	.-26     	; 0x34a8 <__muluhisi3>
    34c2:	82 1b       	sub	r24, r18
    34c4:	93 0b       	sbc	r25, r19
    34c6:	08 95       	ret

000034c8 <__ashrdi3>:
    34c8:	97 fb       	bst	r25, 7
    34ca:	10 f8       	bld	r1, 0

000034cc <__lshrdi3>:
    34cc:	16 94       	lsr	r1
    34ce:	00 08       	sbc	r0, r0
    34d0:	0f 93       	push	r16
    34d2:	08 30       	cpi	r16, 0x08	; 8
    34d4:	98 f0       	brcs	.+38     	; 0x34fc <__lshrdi3+0x30>
    34d6:	08 50       	subi	r16, 0x08	; 8
    34d8:	23 2f       	mov	r18, r19
    34da:	34 2f       	mov	r19, r20
    34dc:	45 2f       	mov	r20, r21
    34de:	56 2f       	mov	r21, r22
    34e0:	67 2f       	mov	r22, r23
    34e2:	78 2f       	mov	r23, r24
    34e4:	89 2f       	mov	r24, r25
    34e6:	90 2d       	mov	r25, r0
    34e8:	f4 cf       	rjmp	.-24     	; 0x34d2 <__lshrdi3+0x6>
    34ea:	05 94       	asr	r0
    34ec:	97 95       	ror	r25
    34ee:	87 95       	ror	r24
    34f0:	77 95       	ror	r23
    34f2:	67 95       	ror	r22
    34f4:	57 95       	ror	r21
    34f6:	47 95       	ror	r20
    34f8:	37 95       	ror	r19
    34fa:	27 95       	ror	r18
    34fc:	0a 95       	dec	r16
    34fe:	aa f7       	brpl	.-22     	; 0x34ea <__lshrdi3+0x1e>
    3500:	0f 91       	pop	r16
    3502:	08 95       	ret

00003504 <fdevopen>:
    3504:	0f 93       	push	r16
    3506:	1f 93       	push	r17
    3508:	cf 93       	push	r28
    350a:	df 93       	push	r29
    350c:	00 97       	sbiw	r24, 0x00	; 0
    350e:	31 f4       	brne	.+12     	; 0x351c <fdevopen+0x18>
    3510:	61 15       	cp	r22, r1
    3512:	71 05       	cpc	r23, r1
    3514:	19 f4       	brne	.+6      	; 0x351c <fdevopen+0x18>
    3516:	80 e0       	ldi	r24, 0x00	; 0
    3518:	90 e0       	ldi	r25, 0x00	; 0
    351a:	39 c0       	rjmp	.+114    	; 0x358e <fdevopen+0x8a>
    351c:	8b 01       	movw	r16, r22
    351e:	ec 01       	movw	r28, r24
    3520:	6e e0       	ldi	r22, 0x0E	; 14
    3522:	70 e0       	ldi	r23, 0x00	; 0
    3524:	81 e0       	ldi	r24, 0x01	; 1
    3526:	90 e0       	ldi	r25, 0x00	; 0
    3528:	47 d5       	rcall	.+2702   	; 0x3fb8 <calloc>
    352a:	fc 01       	movw	r30, r24
    352c:	89 2b       	or	r24, r25
    352e:	99 f3       	breq	.-26     	; 0x3516 <fdevopen+0x12>
    3530:	80 e8       	ldi	r24, 0x80	; 128
    3532:	83 83       	std	Z+3, r24	; 0x03
    3534:	01 15       	cp	r16, r1
    3536:	11 05       	cpc	r17, r1
    3538:	71 f0       	breq	.+28     	; 0x3556 <fdevopen+0x52>
    353a:	02 87       	std	Z+10, r16	; 0x0a
    353c:	13 87       	std	Z+11, r17	; 0x0b
    353e:	81 e8       	ldi	r24, 0x81	; 129
    3540:	83 83       	std	Z+3, r24	; 0x03
    3542:	80 91 a4 21 	lds	r24, 0x21A4	; 0x8021a4 <__iob>
    3546:	90 91 a5 21 	lds	r25, 0x21A5	; 0x8021a5 <__iob+0x1>
    354a:	89 2b       	or	r24, r25
    354c:	21 f4       	brne	.+8      	; 0x3556 <fdevopen+0x52>
    354e:	e0 93 a4 21 	sts	0x21A4, r30	; 0x8021a4 <__iob>
    3552:	f0 93 a5 21 	sts	0x21A5, r31	; 0x8021a5 <__iob+0x1>
    3556:	20 97       	sbiw	r28, 0x00	; 0
    3558:	c9 f0       	breq	.+50     	; 0x358c <fdevopen+0x88>
    355a:	c0 87       	std	Z+8, r28	; 0x08
    355c:	d1 87       	std	Z+9, r29	; 0x09
    355e:	83 81       	ldd	r24, Z+3	; 0x03
    3560:	82 60       	ori	r24, 0x02	; 2
    3562:	83 83       	std	Z+3, r24	; 0x03
    3564:	80 91 a6 21 	lds	r24, 0x21A6	; 0x8021a6 <__iob+0x2>
    3568:	90 91 a7 21 	lds	r25, 0x21A7	; 0x8021a7 <__iob+0x3>
    356c:	89 2b       	or	r24, r25
    356e:	71 f4       	brne	.+28     	; 0x358c <fdevopen+0x88>
    3570:	e0 93 a6 21 	sts	0x21A6, r30	; 0x8021a6 <__iob+0x2>
    3574:	f0 93 a7 21 	sts	0x21A7, r31	; 0x8021a7 <__iob+0x3>
    3578:	80 91 a8 21 	lds	r24, 0x21A8	; 0x8021a8 <__iob+0x4>
    357c:	90 91 a9 21 	lds	r25, 0x21A9	; 0x8021a9 <__iob+0x5>
    3580:	89 2b       	or	r24, r25
    3582:	21 f4       	brne	.+8      	; 0x358c <fdevopen+0x88>
    3584:	e0 93 a8 21 	sts	0x21A8, r30	; 0x8021a8 <__iob+0x4>
    3588:	f0 93 a9 21 	sts	0x21A9, r31	; 0x8021a9 <__iob+0x5>
    358c:	cf 01       	movw	r24, r30
    358e:	df 91       	pop	r29
    3590:	cf 91       	pop	r28
    3592:	1f 91       	pop	r17
    3594:	0f 91       	pop	r16
    3596:	08 95       	ret

00003598 <printf>:
    3598:	cf 93       	push	r28
    359a:	df 93       	push	r29
    359c:	cd b7       	in	r28, 0x3d	; 61
    359e:	de b7       	in	r29, 0x3e	; 62
    35a0:	ae 01       	movw	r20, r28
    35a2:	4a 5f       	subi	r20, 0xFA	; 250
    35a4:	5f 4f       	sbci	r21, 0xFF	; 255
    35a6:	fa 01       	movw	r30, r20
    35a8:	61 91       	ld	r22, Z+
    35aa:	71 91       	ld	r23, Z+
    35ac:	af 01       	movw	r20, r30
    35ae:	80 91 a6 21 	lds	r24, 0x21A6	; 0x8021a6 <__iob+0x2>
    35b2:	90 91 a7 21 	lds	r25, 0x21A7	; 0x8021a7 <__iob+0x3>
    35b6:	46 d0       	rcall	.+140    	; 0x3644 <vfprintf>
    35b8:	df 91       	pop	r29
    35ba:	cf 91       	pop	r28
    35bc:	08 95       	ret

000035be <sprintf>:
    35be:	0f 93       	push	r16
    35c0:	1f 93       	push	r17
    35c2:	cf 93       	push	r28
    35c4:	df 93       	push	r29
    35c6:	cd b7       	in	r28, 0x3d	; 61
    35c8:	de b7       	in	r29, 0x3e	; 62
    35ca:	2e 97       	sbiw	r28, 0x0e	; 14
    35cc:	cd bf       	out	0x3d, r28	; 61
    35ce:	de bf       	out	0x3e, r29	; 62
    35d0:	0e 89       	ldd	r16, Y+22	; 0x16
    35d2:	1f 89       	ldd	r17, Y+23	; 0x17
    35d4:	86 e0       	ldi	r24, 0x06	; 6
    35d6:	8c 83       	std	Y+4, r24	; 0x04
    35d8:	09 83       	std	Y+1, r16	; 0x01
    35da:	1a 83       	std	Y+2, r17	; 0x02
    35dc:	8f ef       	ldi	r24, 0xFF	; 255
    35de:	9f e7       	ldi	r25, 0x7F	; 127
    35e0:	8d 83       	std	Y+5, r24	; 0x05
    35e2:	9e 83       	std	Y+6, r25	; 0x06
    35e4:	ae 01       	movw	r20, r28
    35e6:	46 5e       	subi	r20, 0xE6	; 230
    35e8:	5f 4f       	sbci	r21, 0xFF	; 255
    35ea:	68 8d       	ldd	r22, Y+24	; 0x18
    35ec:	79 8d       	ldd	r23, Y+25	; 0x19
    35ee:	ce 01       	movw	r24, r28
    35f0:	01 96       	adiw	r24, 0x01	; 1
    35f2:	28 d0       	rcall	.+80     	; 0x3644 <vfprintf>
    35f4:	ef 81       	ldd	r30, Y+7	; 0x07
    35f6:	f8 85       	ldd	r31, Y+8	; 0x08
    35f8:	e0 0f       	add	r30, r16
    35fa:	f1 1f       	adc	r31, r17
    35fc:	10 82       	st	Z, r1
    35fe:	2e 96       	adiw	r28, 0x0e	; 14
    3600:	cd bf       	out	0x3d, r28	; 61
    3602:	de bf       	out	0x3e, r29	; 62
    3604:	df 91       	pop	r29
    3606:	cf 91       	pop	r28
    3608:	1f 91       	pop	r17
    360a:	0f 91       	pop	r16
    360c:	08 95       	ret

0000360e <sscanf>:
    360e:	cf 93       	push	r28
    3610:	df 93       	push	r29
    3612:	cd b7       	in	r28, 0x3d	; 61
    3614:	de b7       	in	r29, 0x3e	; 62
    3616:	2e 97       	sbiw	r28, 0x0e	; 14
    3618:	cd bf       	out	0x3d, r28	; 61
    361a:	de bf       	out	0x3e, r29	; 62
    361c:	85 e0       	ldi	r24, 0x05	; 5
    361e:	8c 83       	std	Y+4, r24	; 0x04
    3620:	8c 89       	ldd	r24, Y+20	; 0x14
    3622:	9d 89       	ldd	r25, Y+21	; 0x15
    3624:	89 83       	std	Y+1, r24	; 0x01
    3626:	9a 83       	std	Y+2, r25	; 0x02
    3628:	ae 01       	movw	r20, r28
    362a:	48 5e       	subi	r20, 0xE8	; 232
    362c:	5f 4f       	sbci	r21, 0xFF	; 255
    362e:	6e 89       	ldd	r22, Y+22	; 0x16
    3630:	7f 89       	ldd	r23, Y+23	; 0x17
    3632:	ce 01       	movw	r24, r28
    3634:	01 96       	adiw	r24, 0x01	; 1
    3636:	a9 d3       	rcall	.+1874   	; 0x3d8a <vfscanf>
    3638:	2e 96       	adiw	r28, 0x0e	; 14
    363a:	cd bf       	out	0x3d, r28	; 61
    363c:	de bf       	out	0x3e, r29	; 62
    363e:	df 91       	pop	r29
    3640:	cf 91       	pop	r28
    3642:	08 95       	ret

00003644 <vfprintf>:
    3644:	2f 92       	push	r2
    3646:	3f 92       	push	r3
    3648:	4f 92       	push	r4
    364a:	5f 92       	push	r5
    364c:	6f 92       	push	r6
    364e:	7f 92       	push	r7
    3650:	8f 92       	push	r8
    3652:	9f 92       	push	r9
    3654:	af 92       	push	r10
    3656:	bf 92       	push	r11
    3658:	cf 92       	push	r12
    365a:	df 92       	push	r13
    365c:	ef 92       	push	r14
    365e:	ff 92       	push	r15
    3660:	0f 93       	push	r16
    3662:	1f 93       	push	r17
    3664:	cf 93       	push	r28
    3666:	df 93       	push	r29
    3668:	cd b7       	in	r28, 0x3d	; 61
    366a:	de b7       	in	r29, 0x3e	; 62
    366c:	2b 97       	sbiw	r28, 0x0b	; 11
    366e:	cd bf       	out	0x3d, r28	; 61
    3670:	de bf       	out	0x3e, r29	; 62
    3672:	6c 01       	movw	r12, r24
    3674:	7b 01       	movw	r14, r22
    3676:	8a 01       	movw	r16, r20
    3678:	fc 01       	movw	r30, r24
    367a:	16 82       	std	Z+6, r1	; 0x06
    367c:	17 82       	std	Z+7, r1	; 0x07
    367e:	83 81       	ldd	r24, Z+3	; 0x03
    3680:	81 ff       	sbrs	r24, 1
    3682:	bf c1       	rjmp	.+894    	; 0x3a02 <vfprintf+0x3be>
    3684:	ce 01       	movw	r24, r28
    3686:	01 96       	adiw	r24, 0x01	; 1
    3688:	3c 01       	movw	r6, r24
    368a:	f6 01       	movw	r30, r12
    368c:	93 81       	ldd	r25, Z+3	; 0x03
    368e:	f7 01       	movw	r30, r14
    3690:	93 fd       	sbrc	r25, 3
    3692:	85 91       	lpm	r24, Z+
    3694:	93 ff       	sbrs	r25, 3
    3696:	81 91       	ld	r24, Z+
    3698:	7f 01       	movw	r14, r30
    369a:	88 23       	and	r24, r24
    369c:	09 f4       	brne	.+2      	; 0x36a0 <vfprintf+0x5c>
    369e:	ad c1       	rjmp	.+858    	; 0x39fa <vfprintf+0x3b6>
    36a0:	85 32       	cpi	r24, 0x25	; 37
    36a2:	39 f4       	brne	.+14     	; 0x36b2 <vfprintf+0x6e>
    36a4:	93 fd       	sbrc	r25, 3
    36a6:	85 91       	lpm	r24, Z+
    36a8:	93 ff       	sbrs	r25, 3
    36aa:	81 91       	ld	r24, Z+
    36ac:	7f 01       	movw	r14, r30
    36ae:	85 32       	cpi	r24, 0x25	; 37
    36b0:	21 f4       	brne	.+8      	; 0x36ba <vfprintf+0x76>
    36b2:	b6 01       	movw	r22, r12
    36b4:	90 e0       	ldi	r25, 0x00	; 0
    36b6:	29 d6       	rcall	.+3154   	; 0x430a <fputc>
    36b8:	e8 cf       	rjmp	.-48     	; 0x368a <vfprintf+0x46>
    36ba:	91 2c       	mov	r9, r1
    36bc:	21 2c       	mov	r2, r1
    36be:	31 2c       	mov	r3, r1
    36c0:	ff e1       	ldi	r31, 0x1F	; 31
    36c2:	f3 15       	cp	r31, r3
    36c4:	d8 f0       	brcs	.+54     	; 0x36fc <vfprintf+0xb8>
    36c6:	8b 32       	cpi	r24, 0x2B	; 43
    36c8:	79 f0       	breq	.+30     	; 0x36e8 <vfprintf+0xa4>
    36ca:	38 f4       	brcc	.+14     	; 0x36da <vfprintf+0x96>
    36cc:	80 32       	cpi	r24, 0x20	; 32
    36ce:	79 f0       	breq	.+30     	; 0x36ee <vfprintf+0xaa>
    36d0:	83 32       	cpi	r24, 0x23	; 35
    36d2:	a1 f4       	brne	.+40     	; 0x36fc <vfprintf+0xb8>
    36d4:	23 2d       	mov	r18, r3
    36d6:	20 61       	ori	r18, 0x10	; 16
    36d8:	1d c0       	rjmp	.+58     	; 0x3714 <vfprintf+0xd0>
    36da:	8d 32       	cpi	r24, 0x2D	; 45
    36dc:	61 f0       	breq	.+24     	; 0x36f6 <vfprintf+0xb2>
    36de:	80 33       	cpi	r24, 0x30	; 48
    36e0:	69 f4       	brne	.+26     	; 0x36fc <vfprintf+0xb8>
    36e2:	23 2d       	mov	r18, r3
    36e4:	21 60       	ori	r18, 0x01	; 1
    36e6:	16 c0       	rjmp	.+44     	; 0x3714 <vfprintf+0xd0>
    36e8:	83 2d       	mov	r24, r3
    36ea:	82 60       	ori	r24, 0x02	; 2
    36ec:	38 2e       	mov	r3, r24
    36ee:	e3 2d       	mov	r30, r3
    36f0:	e4 60       	ori	r30, 0x04	; 4
    36f2:	3e 2e       	mov	r3, r30
    36f4:	2a c0       	rjmp	.+84     	; 0x374a <vfprintf+0x106>
    36f6:	f3 2d       	mov	r31, r3
    36f8:	f8 60       	ori	r31, 0x08	; 8
    36fa:	1d c0       	rjmp	.+58     	; 0x3736 <vfprintf+0xf2>
    36fc:	37 fc       	sbrc	r3, 7
    36fe:	2d c0       	rjmp	.+90     	; 0x375a <vfprintf+0x116>
    3700:	20 ed       	ldi	r18, 0xD0	; 208
    3702:	28 0f       	add	r18, r24
    3704:	2a 30       	cpi	r18, 0x0A	; 10
    3706:	40 f0       	brcs	.+16     	; 0x3718 <vfprintf+0xd4>
    3708:	8e 32       	cpi	r24, 0x2E	; 46
    370a:	b9 f4       	brne	.+46     	; 0x373a <vfprintf+0xf6>
    370c:	36 fc       	sbrc	r3, 6
    370e:	75 c1       	rjmp	.+746    	; 0x39fa <vfprintf+0x3b6>
    3710:	23 2d       	mov	r18, r3
    3712:	20 64       	ori	r18, 0x40	; 64
    3714:	32 2e       	mov	r3, r18
    3716:	19 c0       	rjmp	.+50     	; 0x374a <vfprintf+0x106>
    3718:	36 fe       	sbrs	r3, 6
    371a:	06 c0       	rjmp	.+12     	; 0x3728 <vfprintf+0xe4>
    371c:	8a e0       	ldi	r24, 0x0A	; 10
    371e:	98 9e       	mul	r9, r24
    3720:	20 0d       	add	r18, r0
    3722:	11 24       	eor	r1, r1
    3724:	92 2e       	mov	r9, r18
    3726:	11 c0       	rjmp	.+34     	; 0x374a <vfprintf+0x106>
    3728:	ea e0       	ldi	r30, 0x0A	; 10
    372a:	2e 9e       	mul	r2, r30
    372c:	20 0d       	add	r18, r0
    372e:	11 24       	eor	r1, r1
    3730:	22 2e       	mov	r2, r18
    3732:	f3 2d       	mov	r31, r3
    3734:	f0 62       	ori	r31, 0x20	; 32
    3736:	3f 2e       	mov	r3, r31
    3738:	08 c0       	rjmp	.+16     	; 0x374a <vfprintf+0x106>
    373a:	8c 36       	cpi	r24, 0x6C	; 108
    373c:	21 f4       	brne	.+8      	; 0x3746 <vfprintf+0x102>
    373e:	83 2d       	mov	r24, r3
    3740:	80 68       	ori	r24, 0x80	; 128
    3742:	38 2e       	mov	r3, r24
    3744:	02 c0       	rjmp	.+4      	; 0x374a <vfprintf+0x106>
    3746:	88 36       	cpi	r24, 0x68	; 104
    3748:	41 f4       	brne	.+16     	; 0x375a <vfprintf+0x116>
    374a:	f7 01       	movw	r30, r14
    374c:	93 fd       	sbrc	r25, 3
    374e:	85 91       	lpm	r24, Z+
    3750:	93 ff       	sbrs	r25, 3
    3752:	81 91       	ld	r24, Z+
    3754:	7f 01       	movw	r14, r30
    3756:	81 11       	cpse	r24, r1
    3758:	b3 cf       	rjmp	.-154    	; 0x36c0 <vfprintf+0x7c>
    375a:	98 2f       	mov	r25, r24
    375c:	9f 7d       	andi	r25, 0xDF	; 223
    375e:	95 54       	subi	r25, 0x45	; 69
    3760:	93 30       	cpi	r25, 0x03	; 3
    3762:	28 f4       	brcc	.+10     	; 0x376e <vfprintf+0x12a>
    3764:	0c 5f       	subi	r16, 0xFC	; 252
    3766:	1f 4f       	sbci	r17, 0xFF	; 255
    3768:	9f e3       	ldi	r25, 0x3F	; 63
    376a:	99 83       	std	Y+1, r25	; 0x01
    376c:	0d c0       	rjmp	.+26     	; 0x3788 <vfprintf+0x144>
    376e:	83 36       	cpi	r24, 0x63	; 99
    3770:	31 f0       	breq	.+12     	; 0x377e <vfprintf+0x13a>
    3772:	83 37       	cpi	r24, 0x73	; 115
    3774:	71 f0       	breq	.+28     	; 0x3792 <vfprintf+0x14e>
    3776:	83 35       	cpi	r24, 0x53	; 83
    3778:	09 f0       	breq	.+2      	; 0x377c <vfprintf+0x138>
    377a:	55 c0       	rjmp	.+170    	; 0x3826 <vfprintf+0x1e2>
    377c:	20 c0       	rjmp	.+64     	; 0x37be <vfprintf+0x17a>
    377e:	f8 01       	movw	r30, r16
    3780:	80 81       	ld	r24, Z
    3782:	89 83       	std	Y+1, r24	; 0x01
    3784:	0e 5f       	subi	r16, 0xFE	; 254
    3786:	1f 4f       	sbci	r17, 0xFF	; 255
    3788:	88 24       	eor	r8, r8
    378a:	83 94       	inc	r8
    378c:	91 2c       	mov	r9, r1
    378e:	53 01       	movw	r10, r6
    3790:	12 c0       	rjmp	.+36     	; 0x37b6 <vfprintf+0x172>
    3792:	28 01       	movw	r4, r16
    3794:	f2 e0       	ldi	r31, 0x02	; 2
    3796:	4f 0e       	add	r4, r31
    3798:	51 1c       	adc	r5, r1
    379a:	f8 01       	movw	r30, r16
    379c:	a0 80       	ld	r10, Z
    379e:	b1 80       	ldd	r11, Z+1	; 0x01
    37a0:	36 fe       	sbrs	r3, 6
    37a2:	03 c0       	rjmp	.+6      	; 0x37aa <vfprintf+0x166>
    37a4:	69 2d       	mov	r22, r9
    37a6:	70 e0       	ldi	r23, 0x00	; 0
    37a8:	02 c0       	rjmp	.+4      	; 0x37ae <vfprintf+0x16a>
    37aa:	6f ef       	ldi	r22, 0xFF	; 255
    37ac:	7f ef       	ldi	r23, 0xFF	; 255
    37ae:	c5 01       	movw	r24, r10
    37b0:	63 d5       	rcall	.+2758   	; 0x4278 <strnlen>
    37b2:	4c 01       	movw	r8, r24
    37b4:	82 01       	movw	r16, r4
    37b6:	f3 2d       	mov	r31, r3
    37b8:	ff 77       	andi	r31, 0x7F	; 127
    37ba:	3f 2e       	mov	r3, r31
    37bc:	15 c0       	rjmp	.+42     	; 0x37e8 <vfprintf+0x1a4>
    37be:	28 01       	movw	r4, r16
    37c0:	22 e0       	ldi	r18, 0x02	; 2
    37c2:	42 0e       	add	r4, r18
    37c4:	51 1c       	adc	r5, r1
    37c6:	f8 01       	movw	r30, r16
    37c8:	a0 80       	ld	r10, Z
    37ca:	b1 80       	ldd	r11, Z+1	; 0x01
    37cc:	36 fe       	sbrs	r3, 6
    37ce:	03 c0       	rjmp	.+6      	; 0x37d6 <vfprintf+0x192>
    37d0:	69 2d       	mov	r22, r9
    37d2:	70 e0       	ldi	r23, 0x00	; 0
    37d4:	02 c0       	rjmp	.+4      	; 0x37da <vfprintf+0x196>
    37d6:	6f ef       	ldi	r22, 0xFF	; 255
    37d8:	7f ef       	ldi	r23, 0xFF	; 255
    37da:	c5 01       	movw	r24, r10
    37dc:	3b d5       	rcall	.+2678   	; 0x4254 <strnlen_P>
    37de:	4c 01       	movw	r8, r24
    37e0:	f3 2d       	mov	r31, r3
    37e2:	f0 68       	ori	r31, 0x80	; 128
    37e4:	3f 2e       	mov	r3, r31
    37e6:	82 01       	movw	r16, r4
    37e8:	33 fc       	sbrc	r3, 3
    37ea:	19 c0       	rjmp	.+50     	; 0x381e <vfprintf+0x1da>
    37ec:	82 2d       	mov	r24, r2
    37ee:	90 e0       	ldi	r25, 0x00	; 0
    37f0:	88 16       	cp	r8, r24
    37f2:	99 06       	cpc	r9, r25
    37f4:	a0 f4       	brcc	.+40     	; 0x381e <vfprintf+0x1da>
    37f6:	b6 01       	movw	r22, r12
    37f8:	80 e2       	ldi	r24, 0x20	; 32
    37fa:	90 e0       	ldi	r25, 0x00	; 0
    37fc:	86 d5       	rcall	.+2828   	; 0x430a <fputc>
    37fe:	2a 94       	dec	r2
    3800:	f5 cf       	rjmp	.-22     	; 0x37ec <vfprintf+0x1a8>
    3802:	f5 01       	movw	r30, r10
    3804:	37 fc       	sbrc	r3, 7
    3806:	85 91       	lpm	r24, Z+
    3808:	37 fe       	sbrs	r3, 7
    380a:	81 91       	ld	r24, Z+
    380c:	5f 01       	movw	r10, r30
    380e:	b6 01       	movw	r22, r12
    3810:	90 e0       	ldi	r25, 0x00	; 0
    3812:	7b d5       	rcall	.+2806   	; 0x430a <fputc>
    3814:	21 10       	cpse	r2, r1
    3816:	2a 94       	dec	r2
    3818:	21 e0       	ldi	r18, 0x01	; 1
    381a:	82 1a       	sub	r8, r18
    381c:	91 08       	sbc	r9, r1
    381e:	81 14       	cp	r8, r1
    3820:	91 04       	cpc	r9, r1
    3822:	79 f7       	brne	.-34     	; 0x3802 <vfprintf+0x1be>
    3824:	e1 c0       	rjmp	.+450    	; 0x39e8 <vfprintf+0x3a4>
    3826:	84 36       	cpi	r24, 0x64	; 100
    3828:	11 f0       	breq	.+4      	; 0x382e <vfprintf+0x1ea>
    382a:	89 36       	cpi	r24, 0x69	; 105
    382c:	39 f5       	brne	.+78     	; 0x387c <vfprintf+0x238>
    382e:	f8 01       	movw	r30, r16
    3830:	37 fe       	sbrs	r3, 7
    3832:	07 c0       	rjmp	.+14     	; 0x3842 <vfprintf+0x1fe>
    3834:	60 81       	ld	r22, Z
    3836:	71 81       	ldd	r23, Z+1	; 0x01
    3838:	82 81       	ldd	r24, Z+2	; 0x02
    383a:	93 81       	ldd	r25, Z+3	; 0x03
    383c:	0c 5f       	subi	r16, 0xFC	; 252
    383e:	1f 4f       	sbci	r17, 0xFF	; 255
    3840:	08 c0       	rjmp	.+16     	; 0x3852 <vfprintf+0x20e>
    3842:	60 81       	ld	r22, Z
    3844:	71 81       	ldd	r23, Z+1	; 0x01
    3846:	07 2e       	mov	r0, r23
    3848:	00 0c       	add	r0, r0
    384a:	88 0b       	sbc	r24, r24
    384c:	99 0b       	sbc	r25, r25
    384e:	0e 5f       	subi	r16, 0xFE	; 254
    3850:	1f 4f       	sbci	r17, 0xFF	; 255
    3852:	f3 2d       	mov	r31, r3
    3854:	ff 76       	andi	r31, 0x6F	; 111
    3856:	3f 2e       	mov	r3, r31
    3858:	97 ff       	sbrs	r25, 7
    385a:	09 c0       	rjmp	.+18     	; 0x386e <vfprintf+0x22a>
    385c:	90 95       	com	r25
    385e:	80 95       	com	r24
    3860:	70 95       	com	r23
    3862:	61 95       	neg	r22
    3864:	7f 4f       	sbci	r23, 0xFF	; 255
    3866:	8f 4f       	sbci	r24, 0xFF	; 255
    3868:	9f 4f       	sbci	r25, 0xFF	; 255
    386a:	f0 68       	ori	r31, 0x80	; 128
    386c:	3f 2e       	mov	r3, r31
    386e:	2a e0       	ldi	r18, 0x0A	; 10
    3870:	30 e0       	ldi	r19, 0x00	; 0
    3872:	a3 01       	movw	r20, r6
    3874:	9f d5       	rcall	.+2878   	; 0x43b4 <__ultoa_invert>
    3876:	88 2e       	mov	r8, r24
    3878:	86 18       	sub	r8, r6
    387a:	44 c0       	rjmp	.+136    	; 0x3904 <vfprintf+0x2c0>
    387c:	85 37       	cpi	r24, 0x75	; 117
    387e:	31 f4       	brne	.+12     	; 0x388c <vfprintf+0x248>
    3880:	23 2d       	mov	r18, r3
    3882:	2f 7e       	andi	r18, 0xEF	; 239
    3884:	b2 2e       	mov	r11, r18
    3886:	2a e0       	ldi	r18, 0x0A	; 10
    3888:	30 e0       	ldi	r19, 0x00	; 0
    388a:	25 c0       	rjmp	.+74     	; 0x38d6 <vfprintf+0x292>
    388c:	93 2d       	mov	r25, r3
    388e:	99 7f       	andi	r25, 0xF9	; 249
    3890:	b9 2e       	mov	r11, r25
    3892:	8f 36       	cpi	r24, 0x6F	; 111
    3894:	c1 f0       	breq	.+48     	; 0x38c6 <vfprintf+0x282>
    3896:	18 f4       	brcc	.+6      	; 0x389e <vfprintf+0x25a>
    3898:	88 35       	cpi	r24, 0x58	; 88
    389a:	79 f0       	breq	.+30     	; 0x38ba <vfprintf+0x276>
    389c:	ae c0       	rjmp	.+348    	; 0x39fa <vfprintf+0x3b6>
    389e:	80 37       	cpi	r24, 0x70	; 112
    38a0:	19 f0       	breq	.+6      	; 0x38a8 <vfprintf+0x264>
    38a2:	88 37       	cpi	r24, 0x78	; 120
    38a4:	21 f0       	breq	.+8      	; 0x38ae <vfprintf+0x26a>
    38a6:	a9 c0       	rjmp	.+338    	; 0x39fa <vfprintf+0x3b6>
    38a8:	e9 2f       	mov	r30, r25
    38aa:	e0 61       	ori	r30, 0x10	; 16
    38ac:	be 2e       	mov	r11, r30
    38ae:	b4 fe       	sbrs	r11, 4
    38b0:	0d c0       	rjmp	.+26     	; 0x38cc <vfprintf+0x288>
    38b2:	fb 2d       	mov	r31, r11
    38b4:	f4 60       	ori	r31, 0x04	; 4
    38b6:	bf 2e       	mov	r11, r31
    38b8:	09 c0       	rjmp	.+18     	; 0x38cc <vfprintf+0x288>
    38ba:	34 fe       	sbrs	r3, 4
    38bc:	0a c0       	rjmp	.+20     	; 0x38d2 <vfprintf+0x28e>
    38be:	29 2f       	mov	r18, r25
    38c0:	26 60       	ori	r18, 0x06	; 6
    38c2:	b2 2e       	mov	r11, r18
    38c4:	06 c0       	rjmp	.+12     	; 0x38d2 <vfprintf+0x28e>
    38c6:	28 e0       	ldi	r18, 0x08	; 8
    38c8:	30 e0       	ldi	r19, 0x00	; 0
    38ca:	05 c0       	rjmp	.+10     	; 0x38d6 <vfprintf+0x292>
    38cc:	20 e1       	ldi	r18, 0x10	; 16
    38ce:	30 e0       	ldi	r19, 0x00	; 0
    38d0:	02 c0       	rjmp	.+4      	; 0x38d6 <vfprintf+0x292>
    38d2:	20 e1       	ldi	r18, 0x10	; 16
    38d4:	32 e0       	ldi	r19, 0x02	; 2
    38d6:	f8 01       	movw	r30, r16
    38d8:	b7 fe       	sbrs	r11, 7
    38da:	07 c0       	rjmp	.+14     	; 0x38ea <vfprintf+0x2a6>
    38dc:	60 81       	ld	r22, Z
    38de:	71 81       	ldd	r23, Z+1	; 0x01
    38e0:	82 81       	ldd	r24, Z+2	; 0x02
    38e2:	93 81       	ldd	r25, Z+3	; 0x03
    38e4:	0c 5f       	subi	r16, 0xFC	; 252
    38e6:	1f 4f       	sbci	r17, 0xFF	; 255
    38e8:	06 c0       	rjmp	.+12     	; 0x38f6 <vfprintf+0x2b2>
    38ea:	60 81       	ld	r22, Z
    38ec:	71 81       	ldd	r23, Z+1	; 0x01
    38ee:	80 e0       	ldi	r24, 0x00	; 0
    38f0:	90 e0       	ldi	r25, 0x00	; 0
    38f2:	0e 5f       	subi	r16, 0xFE	; 254
    38f4:	1f 4f       	sbci	r17, 0xFF	; 255
    38f6:	a3 01       	movw	r20, r6
    38f8:	5d d5       	rcall	.+2746   	; 0x43b4 <__ultoa_invert>
    38fa:	88 2e       	mov	r8, r24
    38fc:	86 18       	sub	r8, r6
    38fe:	fb 2d       	mov	r31, r11
    3900:	ff 77       	andi	r31, 0x7F	; 127
    3902:	3f 2e       	mov	r3, r31
    3904:	36 fe       	sbrs	r3, 6
    3906:	0d c0       	rjmp	.+26     	; 0x3922 <vfprintf+0x2de>
    3908:	23 2d       	mov	r18, r3
    390a:	2e 7f       	andi	r18, 0xFE	; 254
    390c:	a2 2e       	mov	r10, r18
    390e:	89 14       	cp	r8, r9
    3910:	58 f4       	brcc	.+22     	; 0x3928 <vfprintf+0x2e4>
    3912:	34 fe       	sbrs	r3, 4
    3914:	0b c0       	rjmp	.+22     	; 0x392c <vfprintf+0x2e8>
    3916:	32 fc       	sbrc	r3, 2
    3918:	09 c0       	rjmp	.+18     	; 0x392c <vfprintf+0x2e8>
    391a:	83 2d       	mov	r24, r3
    391c:	8e 7e       	andi	r24, 0xEE	; 238
    391e:	a8 2e       	mov	r10, r24
    3920:	05 c0       	rjmp	.+10     	; 0x392c <vfprintf+0x2e8>
    3922:	b8 2c       	mov	r11, r8
    3924:	a3 2c       	mov	r10, r3
    3926:	03 c0       	rjmp	.+6      	; 0x392e <vfprintf+0x2ea>
    3928:	b8 2c       	mov	r11, r8
    392a:	01 c0       	rjmp	.+2      	; 0x392e <vfprintf+0x2ea>
    392c:	b9 2c       	mov	r11, r9
    392e:	a4 fe       	sbrs	r10, 4
    3930:	0f c0       	rjmp	.+30     	; 0x3950 <vfprintf+0x30c>
    3932:	fe 01       	movw	r30, r28
    3934:	e8 0d       	add	r30, r8
    3936:	f1 1d       	adc	r31, r1
    3938:	80 81       	ld	r24, Z
    393a:	80 33       	cpi	r24, 0x30	; 48
    393c:	21 f4       	brne	.+8      	; 0x3946 <vfprintf+0x302>
    393e:	9a 2d       	mov	r25, r10
    3940:	99 7e       	andi	r25, 0xE9	; 233
    3942:	a9 2e       	mov	r10, r25
    3944:	09 c0       	rjmp	.+18     	; 0x3958 <vfprintf+0x314>
    3946:	a2 fe       	sbrs	r10, 2
    3948:	06 c0       	rjmp	.+12     	; 0x3956 <vfprintf+0x312>
    394a:	b3 94       	inc	r11
    394c:	b3 94       	inc	r11
    394e:	04 c0       	rjmp	.+8      	; 0x3958 <vfprintf+0x314>
    3950:	8a 2d       	mov	r24, r10
    3952:	86 78       	andi	r24, 0x86	; 134
    3954:	09 f0       	breq	.+2      	; 0x3958 <vfprintf+0x314>
    3956:	b3 94       	inc	r11
    3958:	a3 fc       	sbrc	r10, 3
    395a:	10 c0       	rjmp	.+32     	; 0x397c <vfprintf+0x338>
    395c:	a0 fe       	sbrs	r10, 0
    395e:	06 c0       	rjmp	.+12     	; 0x396c <vfprintf+0x328>
    3960:	b2 14       	cp	r11, r2
    3962:	80 f4       	brcc	.+32     	; 0x3984 <vfprintf+0x340>
    3964:	28 0c       	add	r2, r8
    3966:	92 2c       	mov	r9, r2
    3968:	9b 18       	sub	r9, r11
    396a:	0d c0       	rjmp	.+26     	; 0x3986 <vfprintf+0x342>
    396c:	b2 14       	cp	r11, r2
    396e:	58 f4       	brcc	.+22     	; 0x3986 <vfprintf+0x342>
    3970:	b6 01       	movw	r22, r12
    3972:	80 e2       	ldi	r24, 0x20	; 32
    3974:	90 e0       	ldi	r25, 0x00	; 0
    3976:	c9 d4       	rcall	.+2450   	; 0x430a <fputc>
    3978:	b3 94       	inc	r11
    397a:	f8 cf       	rjmp	.-16     	; 0x396c <vfprintf+0x328>
    397c:	b2 14       	cp	r11, r2
    397e:	18 f4       	brcc	.+6      	; 0x3986 <vfprintf+0x342>
    3980:	2b 18       	sub	r2, r11
    3982:	02 c0       	rjmp	.+4      	; 0x3988 <vfprintf+0x344>
    3984:	98 2c       	mov	r9, r8
    3986:	21 2c       	mov	r2, r1
    3988:	a4 fe       	sbrs	r10, 4
    398a:	0f c0       	rjmp	.+30     	; 0x39aa <vfprintf+0x366>
    398c:	b6 01       	movw	r22, r12
    398e:	80 e3       	ldi	r24, 0x30	; 48
    3990:	90 e0       	ldi	r25, 0x00	; 0
    3992:	bb d4       	rcall	.+2422   	; 0x430a <fputc>
    3994:	a2 fe       	sbrs	r10, 2
    3996:	16 c0       	rjmp	.+44     	; 0x39c4 <vfprintf+0x380>
    3998:	a1 fc       	sbrc	r10, 1
    399a:	03 c0       	rjmp	.+6      	; 0x39a2 <vfprintf+0x35e>
    399c:	88 e7       	ldi	r24, 0x78	; 120
    399e:	90 e0       	ldi	r25, 0x00	; 0
    39a0:	02 c0       	rjmp	.+4      	; 0x39a6 <vfprintf+0x362>
    39a2:	88 e5       	ldi	r24, 0x58	; 88
    39a4:	90 e0       	ldi	r25, 0x00	; 0
    39a6:	b6 01       	movw	r22, r12
    39a8:	0c c0       	rjmp	.+24     	; 0x39c2 <vfprintf+0x37e>
    39aa:	8a 2d       	mov	r24, r10
    39ac:	86 78       	andi	r24, 0x86	; 134
    39ae:	51 f0       	breq	.+20     	; 0x39c4 <vfprintf+0x380>
    39b0:	a1 fe       	sbrs	r10, 1
    39b2:	02 c0       	rjmp	.+4      	; 0x39b8 <vfprintf+0x374>
    39b4:	8b e2       	ldi	r24, 0x2B	; 43
    39b6:	01 c0       	rjmp	.+2      	; 0x39ba <vfprintf+0x376>
    39b8:	80 e2       	ldi	r24, 0x20	; 32
    39ba:	a7 fc       	sbrc	r10, 7
    39bc:	8d e2       	ldi	r24, 0x2D	; 45
    39be:	b6 01       	movw	r22, r12
    39c0:	90 e0       	ldi	r25, 0x00	; 0
    39c2:	a3 d4       	rcall	.+2374   	; 0x430a <fputc>
    39c4:	89 14       	cp	r8, r9
    39c6:	30 f4       	brcc	.+12     	; 0x39d4 <vfprintf+0x390>
    39c8:	b6 01       	movw	r22, r12
    39ca:	80 e3       	ldi	r24, 0x30	; 48
    39cc:	90 e0       	ldi	r25, 0x00	; 0
    39ce:	9d d4       	rcall	.+2362   	; 0x430a <fputc>
    39d0:	9a 94       	dec	r9
    39d2:	f8 cf       	rjmp	.-16     	; 0x39c4 <vfprintf+0x380>
    39d4:	8a 94       	dec	r8
    39d6:	f3 01       	movw	r30, r6
    39d8:	e8 0d       	add	r30, r8
    39da:	f1 1d       	adc	r31, r1
    39dc:	80 81       	ld	r24, Z
    39de:	b6 01       	movw	r22, r12
    39e0:	90 e0       	ldi	r25, 0x00	; 0
    39e2:	93 d4       	rcall	.+2342   	; 0x430a <fputc>
    39e4:	81 10       	cpse	r8, r1
    39e6:	f6 cf       	rjmp	.-20     	; 0x39d4 <vfprintf+0x390>
    39e8:	22 20       	and	r2, r2
    39ea:	09 f4       	brne	.+2      	; 0x39ee <vfprintf+0x3aa>
    39ec:	4e ce       	rjmp	.-868    	; 0x368a <vfprintf+0x46>
    39ee:	b6 01       	movw	r22, r12
    39f0:	80 e2       	ldi	r24, 0x20	; 32
    39f2:	90 e0       	ldi	r25, 0x00	; 0
    39f4:	8a d4       	rcall	.+2324   	; 0x430a <fputc>
    39f6:	2a 94       	dec	r2
    39f8:	f7 cf       	rjmp	.-18     	; 0x39e8 <vfprintf+0x3a4>
    39fa:	f6 01       	movw	r30, r12
    39fc:	86 81       	ldd	r24, Z+6	; 0x06
    39fe:	97 81       	ldd	r25, Z+7	; 0x07
    3a00:	02 c0       	rjmp	.+4      	; 0x3a06 <vfprintf+0x3c2>
    3a02:	8f ef       	ldi	r24, 0xFF	; 255
    3a04:	9f ef       	ldi	r25, 0xFF	; 255
    3a06:	2b 96       	adiw	r28, 0x0b	; 11
    3a08:	cd bf       	out	0x3d, r28	; 61
    3a0a:	de bf       	out	0x3e, r29	; 62
    3a0c:	df 91       	pop	r29
    3a0e:	cf 91       	pop	r28
    3a10:	1f 91       	pop	r17
    3a12:	0f 91       	pop	r16
    3a14:	ff 90       	pop	r15
    3a16:	ef 90       	pop	r14
    3a18:	df 90       	pop	r13
    3a1a:	cf 90       	pop	r12
    3a1c:	bf 90       	pop	r11
    3a1e:	af 90       	pop	r10
    3a20:	9f 90       	pop	r9
    3a22:	8f 90       	pop	r8
    3a24:	7f 90       	pop	r7
    3a26:	6f 90       	pop	r6
    3a28:	5f 90       	pop	r5
    3a2a:	4f 90       	pop	r4
    3a2c:	3f 90       	pop	r3
    3a2e:	2f 90       	pop	r2
    3a30:	08 95       	ret

00003a32 <putval>:
    3a32:	20 fd       	sbrc	r18, 0
    3a34:	09 c0       	rjmp	.+18     	; 0x3a48 <putval+0x16>
    3a36:	fc 01       	movw	r30, r24
    3a38:	23 fd       	sbrc	r18, 3
    3a3a:	05 c0       	rjmp	.+10     	; 0x3a46 <putval+0x14>
    3a3c:	22 ff       	sbrs	r18, 2
    3a3e:	02 c0       	rjmp	.+4      	; 0x3a44 <putval+0x12>
    3a40:	73 83       	std	Z+3, r23	; 0x03
    3a42:	62 83       	std	Z+2, r22	; 0x02
    3a44:	51 83       	std	Z+1, r21	; 0x01
    3a46:	40 83       	st	Z, r20
    3a48:	08 95       	ret

00003a4a <mulacc>:
    3a4a:	44 fd       	sbrc	r20, 4
    3a4c:	17 c0       	rjmp	.+46     	; 0x3a7c <mulacc+0x32>
    3a4e:	46 fd       	sbrc	r20, 6
    3a50:	17 c0       	rjmp	.+46     	; 0x3a80 <mulacc+0x36>
    3a52:	ab 01       	movw	r20, r22
    3a54:	bc 01       	movw	r22, r24
    3a56:	da 01       	movw	r26, r20
    3a58:	fb 01       	movw	r30, r22
    3a5a:	aa 0f       	add	r26, r26
    3a5c:	bb 1f       	adc	r27, r27
    3a5e:	ee 1f       	adc	r30, r30
    3a60:	ff 1f       	adc	r31, r31
    3a62:	10 94       	com	r1
    3a64:	d1 f7       	brne	.-12     	; 0x3a5a <mulacc+0x10>
    3a66:	4a 0f       	add	r20, r26
    3a68:	5b 1f       	adc	r21, r27
    3a6a:	6e 1f       	adc	r22, r30
    3a6c:	7f 1f       	adc	r23, r31
    3a6e:	cb 01       	movw	r24, r22
    3a70:	ba 01       	movw	r22, r20
    3a72:	66 0f       	add	r22, r22
    3a74:	77 1f       	adc	r23, r23
    3a76:	88 1f       	adc	r24, r24
    3a78:	99 1f       	adc	r25, r25
    3a7a:	09 c0       	rjmp	.+18     	; 0x3a8e <mulacc+0x44>
    3a7c:	33 e0       	ldi	r19, 0x03	; 3
    3a7e:	01 c0       	rjmp	.+2      	; 0x3a82 <mulacc+0x38>
    3a80:	34 e0       	ldi	r19, 0x04	; 4
    3a82:	66 0f       	add	r22, r22
    3a84:	77 1f       	adc	r23, r23
    3a86:	88 1f       	adc	r24, r24
    3a88:	99 1f       	adc	r25, r25
    3a8a:	31 50       	subi	r19, 0x01	; 1
    3a8c:	d1 f7       	brne	.-12     	; 0x3a82 <mulacc+0x38>
    3a8e:	62 0f       	add	r22, r18
    3a90:	71 1d       	adc	r23, r1
    3a92:	81 1d       	adc	r24, r1
    3a94:	91 1d       	adc	r25, r1
    3a96:	08 95       	ret

00003a98 <skip_spaces>:
    3a98:	0f 93       	push	r16
    3a9a:	1f 93       	push	r17
    3a9c:	cf 93       	push	r28
    3a9e:	df 93       	push	r29
    3aa0:	8c 01       	movw	r16, r24
    3aa2:	c8 01       	movw	r24, r16
    3aa4:	f4 d3       	rcall	.+2024   	; 0x428e <fgetc>
    3aa6:	ec 01       	movw	r28, r24
    3aa8:	97 fd       	sbrc	r25, 7
    3aaa:	06 c0       	rjmp	.+12     	; 0x3ab8 <skip_spaces+0x20>
    3aac:	c0 d3       	rcall	.+1920   	; 0x422e <isspace>
    3aae:	89 2b       	or	r24, r25
    3ab0:	c1 f7       	brne	.-16     	; 0x3aa2 <skip_spaces+0xa>
    3ab2:	b8 01       	movw	r22, r16
    3ab4:	ce 01       	movw	r24, r28
    3ab6:	65 d4       	rcall	.+2250   	; 0x4382 <ungetc>
    3ab8:	ce 01       	movw	r24, r28
    3aba:	df 91       	pop	r29
    3abc:	cf 91       	pop	r28
    3abe:	1f 91       	pop	r17
    3ac0:	0f 91       	pop	r16
    3ac2:	08 95       	ret

00003ac4 <conv_int>:
    3ac4:	8f 92       	push	r8
    3ac6:	9f 92       	push	r9
    3ac8:	af 92       	push	r10
    3aca:	bf 92       	push	r11
    3acc:	ef 92       	push	r14
    3ace:	ff 92       	push	r15
    3ad0:	0f 93       	push	r16
    3ad2:	1f 93       	push	r17
    3ad4:	cf 93       	push	r28
    3ad6:	df 93       	push	r29
    3ad8:	8c 01       	movw	r16, r24
    3ada:	d6 2f       	mov	r29, r22
    3adc:	7a 01       	movw	r14, r20
    3ade:	b2 2e       	mov	r11, r18
    3ae0:	d6 d3       	rcall	.+1964   	; 0x428e <fgetc>
    3ae2:	9c 01       	movw	r18, r24
    3ae4:	33 27       	eor	r19, r19
    3ae6:	2b 32       	cpi	r18, 0x2B	; 43
    3ae8:	31 05       	cpc	r19, r1
    3aea:	31 f0       	breq	.+12     	; 0x3af8 <conv_int+0x34>
    3aec:	2d 32       	cpi	r18, 0x2D	; 45
    3aee:	31 05       	cpc	r19, r1
    3af0:	59 f4       	brne	.+22     	; 0x3b08 <conv_int+0x44>
    3af2:	8b 2d       	mov	r24, r11
    3af4:	80 68       	ori	r24, 0x80	; 128
    3af6:	b8 2e       	mov	r11, r24
    3af8:	d1 50       	subi	r29, 0x01	; 1
    3afa:	11 f4       	brne	.+4      	; 0x3b00 <conv_int+0x3c>
    3afc:	80 e0       	ldi	r24, 0x00	; 0
    3afe:	61 c0       	rjmp	.+194    	; 0x3bc2 <conv_int+0xfe>
    3b00:	c8 01       	movw	r24, r16
    3b02:	c5 d3       	rcall	.+1930   	; 0x428e <fgetc>
    3b04:	97 fd       	sbrc	r25, 7
    3b06:	fa cf       	rjmp	.-12     	; 0x3afc <conv_int+0x38>
    3b08:	cb 2d       	mov	r28, r11
    3b0a:	cd 7f       	andi	r28, 0xFD	; 253
    3b0c:	2b 2d       	mov	r18, r11
    3b0e:	20 73       	andi	r18, 0x30	; 48
    3b10:	f9 f4       	brne	.+62     	; 0x3b50 <conv_int+0x8c>
    3b12:	80 33       	cpi	r24, 0x30	; 48
    3b14:	e9 f4       	brne	.+58     	; 0x3b50 <conv_int+0x8c>
    3b16:	aa 24       	eor	r10, r10
    3b18:	aa 94       	dec	r10
    3b1a:	ad 0e       	add	r10, r29
    3b1c:	09 f4       	brne	.+2      	; 0x3b20 <conv_int+0x5c>
    3b1e:	3e c0       	rjmp	.+124    	; 0x3b9c <conv_int+0xd8>
    3b20:	c8 01       	movw	r24, r16
    3b22:	b5 d3       	rcall	.+1898   	; 0x428e <fgetc>
    3b24:	97 fd       	sbrc	r25, 7
    3b26:	3a c0       	rjmp	.+116    	; 0x3b9c <conv_int+0xd8>
    3b28:	9c 01       	movw	r18, r24
    3b2a:	2f 7d       	andi	r18, 0xDF	; 223
    3b2c:	33 27       	eor	r19, r19
    3b2e:	28 35       	cpi	r18, 0x58	; 88
    3b30:	31 05       	cpc	r19, r1
    3b32:	41 f4       	brne	.+16     	; 0x3b44 <conv_int+0x80>
    3b34:	c2 64       	ori	r28, 0x42	; 66
    3b36:	d2 50       	subi	r29, 0x02	; 2
    3b38:	89 f1       	breq	.+98     	; 0x3b9c <conv_int+0xd8>
    3b3a:	c8 01       	movw	r24, r16
    3b3c:	a8 d3       	rcall	.+1872   	; 0x428e <fgetc>
    3b3e:	97 ff       	sbrs	r25, 7
    3b40:	07 c0       	rjmp	.+14     	; 0x3b50 <conv_int+0x8c>
    3b42:	2c c0       	rjmp	.+88     	; 0x3b9c <conv_int+0xd8>
    3b44:	b6 fe       	sbrs	r11, 6
    3b46:	02 c0       	rjmp	.+4      	; 0x3b4c <conv_int+0x88>
    3b48:	c2 60       	ori	r28, 0x02	; 2
    3b4a:	01 c0       	rjmp	.+2      	; 0x3b4e <conv_int+0x8a>
    3b4c:	c2 61       	ori	r28, 0x12	; 18
    3b4e:	da 2d       	mov	r29, r10
    3b50:	81 2c       	mov	r8, r1
    3b52:	91 2c       	mov	r9, r1
    3b54:	54 01       	movw	r10, r8
    3b56:	20 ed       	ldi	r18, 0xD0	; 208
    3b58:	28 0f       	add	r18, r24
    3b5a:	28 30       	cpi	r18, 0x08	; 8
    3b5c:	78 f0       	brcs	.+30     	; 0x3b7c <conv_int+0xb8>
    3b5e:	c4 ff       	sbrs	r28, 4
    3b60:	03 c0       	rjmp	.+6      	; 0x3b68 <conv_int+0xa4>
    3b62:	b8 01       	movw	r22, r16
    3b64:	0e d4       	rcall	.+2076   	; 0x4382 <ungetc>
    3b66:	17 c0       	rjmp	.+46     	; 0x3b96 <conv_int+0xd2>
    3b68:	2a 30       	cpi	r18, 0x0A	; 10
    3b6a:	40 f0       	brcs	.+16     	; 0x3b7c <conv_int+0xb8>
    3b6c:	c6 ff       	sbrs	r28, 6
    3b6e:	f9 cf       	rjmp	.-14     	; 0x3b62 <conv_int+0x9e>
    3b70:	2f 7d       	andi	r18, 0xDF	; 223
    3b72:	3f ee       	ldi	r19, 0xEF	; 239
    3b74:	32 0f       	add	r19, r18
    3b76:	36 30       	cpi	r19, 0x06	; 6
    3b78:	a0 f7       	brcc	.-24     	; 0x3b62 <conv_int+0x9e>
    3b7a:	27 50       	subi	r18, 0x07	; 7
    3b7c:	4c 2f       	mov	r20, r28
    3b7e:	c5 01       	movw	r24, r10
    3b80:	b4 01       	movw	r22, r8
    3b82:	63 df       	rcall	.-314    	; 0x3a4a <mulacc>
    3b84:	4b 01       	movw	r8, r22
    3b86:	5c 01       	movw	r10, r24
    3b88:	c2 60       	ori	r28, 0x02	; 2
    3b8a:	d1 50       	subi	r29, 0x01	; 1
    3b8c:	51 f0       	breq	.+20     	; 0x3ba2 <conv_int+0xde>
    3b8e:	c8 01       	movw	r24, r16
    3b90:	7e d3       	rcall	.+1788   	; 0x428e <fgetc>
    3b92:	97 ff       	sbrs	r25, 7
    3b94:	e0 cf       	rjmp	.-64     	; 0x3b56 <conv_int+0x92>
    3b96:	c1 fd       	sbrc	r28, 1
    3b98:	04 c0       	rjmp	.+8      	; 0x3ba2 <conv_int+0xde>
    3b9a:	b0 cf       	rjmp	.-160    	; 0x3afc <conv_int+0x38>
    3b9c:	81 2c       	mov	r8, r1
    3b9e:	91 2c       	mov	r9, r1
    3ba0:	54 01       	movw	r10, r8
    3ba2:	c7 ff       	sbrs	r28, 7
    3ba4:	08 c0       	rjmp	.+16     	; 0x3bb6 <conv_int+0xf2>
    3ba6:	b0 94       	com	r11
    3ba8:	a0 94       	com	r10
    3baa:	90 94       	com	r9
    3bac:	80 94       	com	r8
    3bae:	81 1c       	adc	r8, r1
    3bb0:	91 1c       	adc	r9, r1
    3bb2:	a1 1c       	adc	r10, r1
    3bb4:	b1 1c       	adc	r11, r1
    3bb6:	2c 2f       	mov	r18, r28
    3bb8:	b5 01       	movw	r22, r10
    3bba:	a4 01       	movw	r20, r8
    3bbc:	c7 01       	movw	r24, r14
    3bbe:	39 df       	rcall	.-398    	; 0x3a32 <putval>
    3bc0:	81 e0       	ldi	r24, 0x01	; 1
    3bc2:	df 91       	pop	r29
    3bc4:	cf 91       	pop	r28
    3bc6:	1f 91       	pop	r17
    3bc8:	0f 91       	pop	r16
    3bca:	ff 90       	pop	r15
    3bcc:	ef 90       	pop	r14
    3bce:	bf 90       	pop	r11
    3bd0:	af 90       	pop	r10
    3bd2:	9f 90       	pop	r9
    3bd4:	8f 90       	pop	r8
    3bd6:	08 95       	ret

00003bd8 <conv_brk>:
    3bd8:	5f 92       	push	r5
    3bda:	6f 92       	push	r6
    3bdc:	7f 92       	push	r7
    3bde:	8f 92       	push	r8
    3be0:	9f 92       	push	r9
    3be2:	af 92       	push	r10
    3be4:	bf 92       	push	r11
    3be6:	cf 92       	push	r12
    3be8:	df 92       	push	r13
    3bea:	ef 92       	push	r14
    3bec:	ff 92       	push	r15
    3bee:	0f 93       	push	r16
    3bf0:	1f 93       	push	r17
    3bf2:	cf 93       	push	r28
    3bf4:	df 93       	push	r29
    3bf6:	cd b7       	in	r28, 0x3d	; 61
    3bf8:	de b7       	in	r29, 0x3e	; 62
    3bfa:	a0 97       	sbiw	r28, 0x20	; 32
    3bfc:	cd bf       	out	0x3d, r28	; 61
    3bfe:	de bf       	out	0x3e, r29	; 62
    3c00:	5c 01       	movw	r10, r24
    3c02:	96 2e       	mov	r9, r22
    3c04:	7a 01       	movw	r14, r20
    3c06:	f9 01       	movw	r30, r18
    3c08:	8e 01       	movw	r16, r28
    3c0a:	0f 5f       	subi	r16, 0xFF	; 255
    3c0c:	1f 4f       	sbci	r17, 0xFF	; 255
    3c0e:	68 01       	movw	r12, r16
    3c10:	80 e2       	ldi	r24, 0x20	; 32
    3c12:	d8 01       	movw	r26, r16
    3c14:	1d 92       	st	X+, r1
    3c16:	8a 95       	dec	r24
    3c18:	e9 f7       	brne	.-6      	; 0x3c14 <conv_brk+0x3c>
    3c1a:	d5 01       	movw	r26, r10
    3c1c:	13 96       	adiw	r26, 0x03	; 3
    3c1e:	8c 90       	ld	r8, X
    3c20:	80 e0       	ldi	r24, 0x00	; 0
    3c22:	90 e0       	ldi	r25, 0x00	; 0
    3c24:	61 2c       	mov	r6, r1
    3c26:	71 2c       	mov	r7, r1
    3c28:	30 e0       	ldi	r19, 0x00	; 0
    3c2a:	61 e0       	ldi	r22, 0x01	; 1
    3c2c:	70 e0       	ldi	r23, 0x00	; 0
    3c2e:	83 fc       	sbrc	r8, 3
    3c30:	25 91       	lpm	r18, Z+
    3c32:	83 fe       	sbrs	r8, 3
    3c34:	21 91       	ld	r18, Z+
    3c36:	8f 01       	movw	r16, r30
    3c38:	52 2e       	mov	r5, r18
    3c3a:	21 11       	cpse	r18, r1
    3c3c:	03 c0       	rjmp	.+6      	; 0x3c44 <conv_brk+0x6c>
    3c3e:	80 e0       	ldi	r24, 0x00	; 0
    3c40:	90 e0       	ldi	r25, 0x00	; 0
    3c42:	90 c0       	rjmp	.+288    	; 0x3d64 <conv_brk+0x18c>
    3c44:	2e 35       	cpi	r18, 0x5E	; 94
    3c46:	11 f4       	brne	.+4      	; 0x3c4c <conv_brk+0x74>
    3c48:	00 97       	sbiw	r24, 0x00	; 0
    3c4a:	51 f1       	breq	.+84     	; 0x3ca0 <conv_brk+0xc8>
    3c4c:	43 2f       	mov	r20, r19
    3c4e:	50 e0       	ldi	r21, 0x00	; 0
    3c50:	48 17       	cp	r20, r24
    3c52:	59 07       	cpc	r21, r25
    3c54:	3c f4       	brge	.+14     	; 0x3c64 <conv_brk+0x8c>
    3c56:	2d 35       	cpi	r18, 0x5D	; 93
    3c58:	59 f1       	breq	.+86     	; 0x3cb0 <conv_brk+0xd8>
    3c5a:	2d 32       	cpi	r18, 0x2D	; 45
    3c5c:	19 f4       	brne	.+6      	; 0x3c64 <conv_brk+0x8c>
    3c5e:	77 20       	and	r7, r7
    3c60:	09 f1       	breq	.+66     	; 0x3ca4 <conv_brk+0xcc>
    3c62:	03 c0       	rjmp	.+6      	; 0x3c6a <conv_brk+0x92>
    3c64:	77 20       	and	r7, r7
    3c66:	09 f4       	brne	.+2      	; 0x3c6a <conv_brk+0x92>
    3c68:	68 c0       	rjmp	.+208    	; 0x3d3a <conv_brk+0x162>
    3c6a:	45 2d       	mov	r20, r5
    3c6c:	46 95       	lsr	r20
    3c6e:	46 95       	lsr	r20
    3c70:	46 95       	lsr	r20
    3c72:	d6 01       	movw	r26, r12
    3c74:	a4 0f       	add	r26, r20
    3c76:	b1 1d       	adc	r27, r1
    3c78:	45 2d       	mov	r20, r5
    3c7a:	47 70       	andi	r20, 0x07	; 7
    3c7c:	8b 01       	movw	r16, r22
    3c7e:	02 c0       	rjmp	.+4      	; 0x3c84 <conv_brk+0xac>
    3c80:	00 0f       	add	r16, r16
    3c82:	11 1f       	adc	r17, r17
    3c84:	4a 95       	dec	r20
    3c86:	e2 f7       	brpl	.-8      	; 0x3c80 <conv_brk+0xa8>
    3c88:	a8 01       	movw	r20, r16
    3c8a:	5c 91       	ld	r21, X
    3c8c:	45 2b       	or	r20, r21
    3c8e:	4c 93       	st	X, r20
    3c90:	65 14       	cp	r6, r5
    3c92:	59 f0       	breq	.+22     	; 0x3caa <conv_brk+0xd2>
    3c94:	56 14       	cp	r5, r6
    3c96:	10 f4       	brcc	.+4      	; 0x3c9c <conv_brk+0xc4>
    3c98:	53 94       	inc	r5
    3c9a:	e7 cf       	rjmp	.-50     	; 0x3c6a <conv_brk+0x92>
    3c9c:	5a 94       	dec	r5
    3c9e:	e5 cf       	rjmp	.-54     	; 0x3c6a <conv_brk+0x92>
    3ca0:	31 e0       	ldi	r19, 0x01	; 1
    3ca2:	04 c0       	rjmp	.+8      	; 0x3cac <conv_brk+0xd4>
    3ca4:	77 24       	eor	r7, r7
    3ca6:	73 94       	inc	r7
    3ca8:	01 c0       	rjmp	.+2      	; 0x3cac <conv_brk+0xd4>
    3caa:	71 2c       	mov	r7, r1
    3cac:	01 96       	adiw	r24, 0x01	; 1
    3cae:	bf cf       	rjmp	.-130    	; 0x3c2e <conv_brk+0x56>
    3cb0:	77 20       	and	r7, r7
    3cb2:	19 f0       	breq	.+6      	; 0x3cba <conv_brk+0xe2>
    3cb4:	8e 81       	ldd	r24, Y+6	; 0x06
    3cb6:	80 62       	ori	r24, 0x20	; 32
    3cb8:	8e 83       	std	Y+6, r24	; 0x06
    3cba:	31 11       	cpse	r19, r1
    3cbc:	03 c0       	rjmp	.+6      	; 0x3cc4 <conv_brk+0xec>
    3cbe:	88 24       	eor	r8, r8
    3cc0:	83 94       	inc	r8
    3cc2:	17 c0       	rjmp	.+46     	; 0x3cf2 <conv_brk+0x11a>
    3cc4:	f6 01       	movw	r30, r12
    3cc6:	9e 01       	movw	r18, r28
    3cc8:	2f 5d       	subi	r18, 0xDF	; 223
    3cca:	3f 4f       	sbci	r19, 0xFF	; 255
    3ccc:	80 81       	ld	r24, Z
    3cce:	80 95       	com	r24
    3cd0:	81 93       	st	Z+, r24
    3cd2:	2e 17       	cp	r18, r30
    3cd4:	3f 07       	cpc	r19, r31
    3cd6:	d1 f7       	brne	.-12     	; 0x3ccc <conv_brk+0xf4>
    3cd8:	f2 cf       	rjmp	.-28     	; 0x3cbe <conv_brk+0xe6>
    3cda:	e1 14       	cp	r14, r1
    3cdc:	f1 04       	cpc	r15, r1
    3cde:	29 f0       	breq	.+10     	; 0x3cea <conv_brk+0x112>
    3ce0:	d7 01       	movw	r26, r14
    3ce2:	8c 93       	st	X, r24
    3ce4:	f7 01       	movw	r30, r14
    3ce6:	31 96       	adiw	r30, 0x01	; 1
    3ce8:	7f 01       	movw	r14, r30
    3cea:	9a 94       	dec	r9
    3cec:	81 2c       	mov	r8, r1
    3cee:	99 20       	and	r9, r9
    3cf0:	e9 f0       	breq	.+58     	; 0x3d2c <conv_brk+0x154>
    3cf2:	c5 01       	movw	r24, r10
    3cf4:	cc d2       	rcall	.+1432   	; 0x428e <fgetc>
    3cf6:	97 fd       	sbrc	r25, 7
    3cf8:	17 c0       	rjmp	.+46     	; 0x3d28 <conv_brk+0x150>
    3cfa:	fc 01       	movw	r30, r24
    3cfc:	ff 27       	eor	r31, r31
    3cfe:	23 e0       	ldi	r18, 0x03	; 3
    3d00:	f5 95       	asr	r31
    3d02:	e7 95       	ror	r30
    3d04:	2a 95       	dec	r18
    3d06:	e1 f7       	brne	.-8      	; 0x3d00 <conv_brk+0x128>
    3d08:	ec 0d       	add	r30, r12
    3d0a:	fd 1d       	adc	r31, r13
    3d0c:	20 81       	ld	r18, Z
    3d0e:	30 e0       	ldi	r19, 0x00	; 0
    3d10:	ac 01       	movw	r20, r24
    3d12:	47 70       	andi	r20, 0x07	; 7
    3d14:	55 27       	eor	r21, r21
    3d16:	02 c0       	rjmp	.+4      	; 0x3d1c <conv_brk+0x144>
    3d18:	35 95       	asr	r19
    3d1a:	27 95       	ror	r18
    3d1c:	4a 95       	dec	r20
    3d1e:	e2 f7       	brpl	.-8      	; 0x3d18 <conv_brk+0x140>
    3d20:	20 fd       	sbrc	r18, 0
    3d22:	db cf       	rjmp	.-74     	; 0x3cda <conv_brk+0x102>
    3d24:	b5 01       	movw	r22, r10
    3d26:	2d d3       	rcall	.+1626   	; 0x4382 <ungetc>
    3d28:	81 10       	cpse	r8, r1
    3d2a:	89 cf       	rjmp	.-238    	; 0x3c3e <conv_brk+0x66>
    3d2c:	e1 14       	cp	r14, r1
    3d2e:	f1 04       	cpc	r15, r1
    3d30:	11 f0       	breq	.+4      	; 0x3d36 <conv_brk+0x15e>
    3d32:	d7 01       	movw	r26, r14
    3d34:	1c 92       	st	X, r1
    3d36:	c8 01       	movw	r24, r16
    3d38:	15 c0       	rjmp	.+42     	; 0x3d64 <conv_brk+0x18c>
    3d3a:	42 2f       	mov	r20, r18
    3d3c:	46 95       	lsr	r20
    3d3e:	46 95       	lsr	r20
    3d40:	46 95       	lsr	r20
    3d42:	d6 01       	movw	r26, r12
    3d44:	a4 0f       	add	r26, r20
    3d46:	b1 1d       	adc	r27, r1
    3d48:	42 2f       	mov	r20, r18
    3d4a:	47 70       	andi	r20, 0x07	; 7
    3d4c:	8b 01       	movw	r16, r22
    3d4e:	02 c0       	rjmp	.+4      	; 0x3d54 <conv_brk+0x17c>
    3d50:	00 0f       	add	r16, r16
    3d52:	11 1f       	adc	r17, r17
    3d54:	4a 95       	dec	r20
    3d56:	e2 f7       	brpl	.-8      	; 0x3d50 <conv_brk+0x178>
    3d58:	a8 01       	movw	r20, r16
    3d5a:	5c 91       	ld	r21, X
    3d5c:	45 2b       	or	r20, r21
    3d5e:	4c 93       	st	X, r20
    3d60:	62 2e       	mov	r6, r18
    3d62:	a4 cf       	rjmp	.-184    	; 0x3cac <conv_brk+0xd4>
    3d64:	a0 96       	adiw	r28, 0x20	; 32
    3d66:	cd bf       	out	0x3d, r28	; 61
    3d68:	de bf       	out	0x3e, r29	; 62
    3d6a:	df 91       	pop	r29
    3d6c:	cf 91       	pop	r28
    3d6e:	1f 91       	pop	r17
    3d70:	0f 91       	pop	r16
    3d72:	ff 90       	pop	r15
    3d74:	ef 90       	pop	r14
    3d76:	df 90       	pop	r13
    3d78:	cf 90       	pop	r12
    3d7a:	bf 90       	pop	r11
    3d7c:	af 90       	pop	r10
    3d7e:	9f 90       	pop	r9
    3d80:	8f 90       	pop	r8
    3d82:	7f 90       	pop	r7
    3d84:	6f 90       	pop	r6
    3d86:	5f 90       	pop	r5
    3d88:	08 95       	ret

00003d8a <vfscanf>:
    3d8a:	5f 92       	push	r5
    3d8c:	6f 92       	push	r6
    3d8e:	7f 92       	push	r7
    3d90:	8f 92       	push	r8
    3d92:	9f 92       	push	r9
    3d94:	af 92       	push	r10
    3d96:	bf 92       	push	r11
    3d98:	cf 92       	push	r12
    3d9a:	df 92       	push	r13
    3d9c:	ef 92       	push	r14
    3d9e:	ff 92       	push	r15
    3da0:	0f 93       	push	r16
    3da2:	1f 93       	push	r17
    3da4:	cf 93       	push	r28
    3da6:	df 93       	push	r29
    3da8:	6c 01       	movw	r12, r24
    3daa:	eb 01       	movw	r28, r22
    3dac:	5a 01       	movw	r10, r20
    3dae:	fc 01       	movw	r30, r24
    3db0:	16 82       	std	Z+6, r1	; 0x06
    3db2:	17 82       	std	Z+7, r1	; 0x07
    3db4:	51 2c       	mov	r5, r1
    3db6:	f6 01       	movw	r30, r12
    3db8:	e3 80       	ldd	r14, Z+3	; 0x03
    3dba:	fe 01       	movw	r30, r28
    3dbc:	e3 fc       	sbrc	r14, 3
    3dbe:	85 91       	lpm	r24, Z+
    3dc0:	e3 fe       	sbrs	r14, 3
    3dc2:	81 91       	ld	r24, Z+
    3dc4:	18 2f       	mov	r17, r24
    3dc6:	ef 01       	movw	r28, r30
    3dc8:	88 23       	and	r24, r24
    3dca:	09 f4       	brne	.+2      	; 0x3dce <vfscanf+0x44>
    3dcc:	e0 c0       	rjmp	.+448    	; 0x3f8e <vfscanf+0x204>
    3dce:	90 e0       	ldi	r25, 0x00	; 0
    3dd0:	2e d2       	rcall	.+1116   	; 0x422e <isspace>
    3dd2:	89 2b       	or	r24, r25
    3dd4:	19 f0       	breq	.+6      	; 0x3ddc <vfscanf+0x52>
    3dd6:	c6 01       	movw	r24, r12
    3dd8:	5f de       	rcall	.-834    	; 0x3a98 <skip_spaces>
    3dda:	ed cf       	rjmp	.-38     	; 0x3db6 <vfscanf+0x2c>
    3ddc:	15 32       	cpi	r17, 0x25	; 37
    3dde:	41 f4       	brne	.+16     	; 0x3df0 <vfscanf+0x66>
    3de0:	fe 01       	movw	r30, r28
    3de2:	e3 fc       	sbrc	r14, 3
    3de4:	15 91       	lpm	r17, Z+
    3de6:	e3 fe       	sbrs	r14, 3
    3de8:	11 91       	ld	r17, Z+
    3dea:	ef 01       	movw	r28, r30
    3dec:	15 32       	cpi	r17, 0x25	; 37
    3dee:	71 f4       	brne	.+28     	; 0x3e0c <vfscanf+0x82>
    3df0:	c6 01       	movw	r24, r12
    3df2:	4d d2       	rcall	.+1178   	; 0x428e <fgetc>
    3df4:	97 fd       	sbrc	r25, 7
    3df6:	c9 c0       	rjmp	.+402    	; 0x3f8a <vfscanf+0x200>
    3df8:	41 2f       	mov	r20, r17
    3dfa:	50 e0       	ldi	r21, 0x00	; 0
    3dfc:	9c 01       	movw	r18, r24
    3dfe:	33 27       	eor	r19, r19
    3e00:	24 17       	cp	r18, r20
    3e02:	35 07       	cpc	r19, r21
    3e04:	c1 f2       	breq	.-80     	; 0x3db6 <vfscanf+0x2c>
    3e06:	b6 01       	movw	r22, r12
    3e08:	bc d2       	rcall	.+1400   	; 0x4382 <ungetc>
    3e0a:	c1 c0       	rjmp	.+386    	; 0x3f8e <vfscanf+0x204>
    3e0c:	1a 32       	cpi	r17, 0x2A	; 42
    3e0e:	39 f4       	brne	.+14     	; 0x3e1e <vfscanf+0x94>
    3e10:	e3 fc       	sbrc	r14, 3
    3e12:	15 91       	lpm	r17, Z+
    3e14:	e3 fe       	sbrs	r14, 3
    3e16:	11 91       	ld	r17, Z+
    3e18:	ef 01       	movw	r28, r30
    3e1a:	01 e0       	ldi	r16, 0x01	; 1
    3e1c:	01 c0       	rjmp	.+2      	; 0x3e20 <vfscanf+0x96>
    3e1e:	00 e0       	ldi	r16, 0x00	; 0
    3e20:	f1 2c       	mov	r15, r1
    3e22:	20 ed       	ldi	r18, 0xD0	; 208
    3e24:	21 0f       	add	r18, r17
    3e26:	2a 30       	cpi	r18, 0x0A	; 10
    3e28:	78 f4       	brcc	.+30     	; 0x3e48 <vfscanf+0xbe>
    3e2a:	02 60       	ori	r16, 0x02	; 2
    3e2c:	6f 2d       	mov	r22, r15
    3e2e:	70 e0       	ldi	r23, 0x00	; 0
    3e30:	80 e0       	ldi	r24, 0x00	; 0
    3e32:	90 e0       	ldi	r25, 0x00	; 0
    3e34:	40 e2       	ldi	r20, 0x20	; 32
    3e36:	09 de       	rcall	.-1006   	; 0x3a4a <mulacc>
    3e38:	f6 2e       	mov	r15, r22
    3e3a:	fe 01       	movw	r30, r28
    3e3c:	e3 fc       	sbrc	r14, 3
    3e3e:	15 91       	lpm	r17, Z+
    3e40:	e3 fe       	sbrs	r14, 3
    3e42:	11 91       	ld	r17, Z+
    3e44:	ef 01       	movw	r28, r30
    3e46:	ed cf       	rjmp	.-38     	; 0x3e22 <vfscanf+0x98>
    3e48:	01 ff       	sbrs	r16, 1
    3e4a:	03 c0       	rjmp	.+6      	; 0x3e52 <vfscanf+0xc8>
    3e4c:	f1 10       	cpse	r15, r1
    3e4e:	03 c0       	rjmp	.+6      	; 0x3e56 <vfscanf+0xcc>
    3e50:	9e c0       	rjmp	.+316    	; 0x3f8e <vfscanf+0x204>
    3e52:	ff 24       	eor	r15, r15
    3e54:	fa 94       	dec	r15
    3e56:	18 36       	cpi	r17, 0x68	; 104
    3e58:	19 f0       	breq	.+6      	; 0x3e60 <vfscanf+0xd6>
    3e5a:	1c 36       	cpi	r17, 0x6C	; 108
    3e5c:	51 f0       	breq	.+20     	; 0x3e72 <vfscanf+0xe8>
    3e5e:	10 c0       	rjmp	.+32     	; 0x3e80 <vfscanf+0xf6>
    3e60:	fe 01       	movw	r30, r28
    3e62:	e3 fc       	sbrc	r14, 3
    3e64:	15 91       	lpm	r17, Z+
    3e66:	e3 fe       	sbrs	r14, 3
    3e68:	11 91       	ld	r17, Z+
    3e6a:	ef 01       	movw	r28, r30
    3e6c:	18 36       	cpi	r17, 0x68	; 104
    3e6e:	41 f4       	brne	.+16     	; 0x3e80 <vfscanf+0xf6>
    3e70:	08 60       	ori	r16, 0x08	; 8
    3e72:	04 60       	ori	r16, 0x04	; 4
    3e74:	fe 01       	movw	r30, r28
    3e76:	e3 fc       	sbrc	r14, 3
    3e78:	15 91       	lpm	r17, Z+
    3e7a:	e3 fe       	sbrs	r14, 3
    3e7c:	11 91       	ld	r17, Z+
    3e7e:	ef 01       	movw	r28, r30
    3e80:	11 23       	and	r17, r17
    3e82:	09 f4       	brne	.+2      	; 0x3e86 <vfscanf+0xfc>
    3e84:	84 c0       	rjmp	.+264    	; 0x3f8e <vfscanf+0x204>
    3e86:	61 2f       	mov	r22, r17
    3e88:	70 e0       	ldi	r23, 0x00	; 0
    3e8a:	8e e7       	ldi	r24, 0x7E	; 126
    3e8c:	92 e0       	ldi	r25, 0x02	; 2
    3e8e:	d7 d1       	rcall	.+942    	; 0x423e <strchr_P>
    3e90:	89 2b       	or	r24, r25
    3e92:	09 f4       	brne	.+2      	; 0x3e96 <vfscanf+0x10c>
    3e94:	7c c0       	rjmp	.+248    	; 0x3f8e <vfscanf+0x204>
    3e96:	00 fd       	sbrc	r16, 0
    3e98:	07 c0       	rjmp	.+14     	; 0x3ea8 <vfscanf+0x11e>
    3e9a:	f5 01       	movw	r30, r10
    3e9c:	80 80       	ld	r8, Z
    3e9e:	91 80       	ldd	r9, Z+1	; 0x01
    3ea0:	c5 01       	movw	r24, r10
    3ea2:	02 96       	adiw	r24, 0x02	; 2
    3ea4:	5c 01       	movw	r10, r24
    3ea6:	02 c0       	rjmp	.+4      	; 0x3eac <vfscanf+0x122>
    3ea8:	81 2c       	mov	r8, r1
    3eaa:	91 2c       	mov	r9, r1
    3eac:	1e 36       	cpi	r17, 0x6E	; 110
    3eae:	49 f4       	brne	.+18     	; 0x3ec2 <vfscanf+0x138>
    3eb0:	f6 01       	movw	r30, r12
    3eb2:	46 81       	ldd	r20, Z+6	; 0x06
    3eb4:	57 81       	ldd	r21, Z+7	; 0x07
    3eb6:	60 e0       	ldi	r22, 0x00	; 0
    3eb8:	70 e0       	ldi	r23, 0x00	; 0
    3eba:	20 2f       	mov	r18, r16
    3ebc:	c4 01       	movw	r24, r8
    3ebe:	b9 dd       	rcall	.-1166   	; 0x3a32 <putval>
    3ec0:	7a cf       	rjmp	.-268    	; 0x3db6 <vfscanf+0x2c>
    3ec2:	13 36       	cpi	r17, 0x63	; 99
    3ec4:	a1 f4       	brne	.+40     	; 0x3eee <vfscanf+0x164>
    3ec6:	01 fd       	sbrc	r16, 1
    3ec8:	02 c0       	rjmp	.+4      	; 0x3ece <vfscanf+0x144>
    3eca:	ff 24       	eor	r15, r15
    3ecc:	f3 94       	inc	r15
    3ece:	c6 01       	movw	r24, r12
    3ed0:	de d1       	rcall	.+956    	; 0x428e <fgetc>
    3ed2:	97 fd       	sbrc	r25, 7
    3ed4:	5a c0       	rjmp	.+180    	; 0x3f8a <vfscanf+0x200>
    3ed6:	81 14       	cp	r8, r1
    3ed8:	91 04       	cpc	r9, r1
    3eda:	29 f0       	breq	.+10     	; 0x3ee6 <vfscanf+0x15c>
    3edc:	f4 01       	movw	r30, r8
    3ede:	80 83       	st	Z, r24
    3ee0:	c4 01       	movw	r24, r8
    3ee2:	01 96       	adiw	r24, 0x01	; 1
    3ee4:	4c 01       	movw	r8, r24
    3ee6:	fa 94       	dec	r15
    3ee8:	f1 10       	cpse	r15, r1
    3eea:	f1 cf       	rjmp	.-30     	; 0x3ece <vfscanf+0x144>
    3eec:	4a c0       	rjmp	.+148    	; 0x3f82 <vfscanf+0x1f8>
    3eee:	1b 35       	cpi	r17, 0x5B	; 91
    3ef0:	51 f4       	brne	.+20     	; 0x3f06 <vfscanf+0x17c>
    3ef2:	9e 01       	movw	r18, r28
    3ef4:	a4 01       	movw	r20, r8
    3ef6:	6f 2d       	mov	r22, r15
    3ef8:	c6 01       	movw	r24, r12
    3efa:	6e de       	rcall	.-804    	; 0x3bd8 <conv_brk>
    3efc:	ec 01       	movw	r28, r24
    3efe:	89 2b       	or	r24, r25
    3f00:	09 f0       	breq	.+2      	; 0x3f04 <vfscanf+0x17a>
    3f02:	3f c0       	rjmp	.+126    	; 0x3f82 <vfscanf+0x1f8>
    3f04:	39 c0       	rjmp	.+114    	; 0x3f78 <vfscanf+0x1ee>
    3f06:	c6 01       	movw	r24, r12
    3f08:	c7 dd       	rcall	.-1138   	; 0x3a98 <skip_spaces>
    3f0a:	97 fd       	sbrc	r25, 7
    3f0c:	3e c0       	rjmp	.+124    	; 0x3f8a <vfscanf+0x200>
    3f0e:	1f 36       	cpi	r17, 0x6F	; 111
    3f10:	49 f1       	breq	.+82     	; 0x3f64 <vfscanf+0x1da>
    3f12:	28 f4       	brcc	.+10     	; 0x3f1e <vfscanf+0x194>
    3f14:	14 36       	cpi	r17, 0x64	; 100
    3f16:	21 f1       	breq	.+72     	; 0x3f60 <vfscanf+0x1d6>
    3f18:	19 36       	cpi	r17, 0x69	; 105
    3f1a:	39 f1       	breq	.+78     	; 0x3f6a <vfscanf+0x1e0>
    3f1c:	25 c0       	rjmp	.+74     	; 0x3f68 <vfscanf+0x1de>
    3f1e:	13 37       	cpi	r17, 0x73	; 115
    3f20:	71 f0       	breq	.+28     	; 0x3f3e <vfscanf+0x1b4>
    3f22:	15 37       	cpi	r17, 0x75	; 117
    3f24:	e9 f0       	breq	.+58     	; 0x3f60 <vfscanf+0x1d6>
    3f26:	20 c0       	rjmp	.+64     	; 0x3f68 <vfscanf+0x1de>
    3f28:	81 14       	cp	r8, r1
    3f2a:	91 04       	cpc	r9, r1
    3f2c:	29 f0       	breq	.+10     	; 0x3f38 <vfscanf+0x1ae>
    3f2e:	f4 01       	movw	r30, r8
    3f30:	60 82       	st	Z, r6
    3f32:	c4 01       	movw	r24, r8
    3f34:	01 96       	adiw	r24, 0x01	; 1
    3f36:	4c 01       	movw	r8, r24
    3f38:	fa 94       	dec	r15
    3f3a:	ff 20       	and	r15, r15
    3f3c:	59 f0       	breq	.+22     	; 0x3f54 <vfscanf+0x1ca>
    3f3e:	c6 01       	movw	r24, r12
    3f40:	a6 d1       	rcall	.+844    	; 0x428e <fgetc>
    3f42:	3c 01       	movw	r6, r24
    3f44:	97 fd       	sbrc	r25, 7
    3f46:	06 c0       	rjmp	.+12     	; 0x3f54 <vfscanf+0x1ca>
    3f48:	72 d1       	rcall	.+740    	; 0x422e <isspace>
    3f4a:	89 2b       	or	r24, r25
    3f4c:	69 f3       	breq	.-38     	; 0x3f28 <vfscanf+0x19e>
    3f4e:	b6 01       	movw	r22, r12
    3f50:	c3 01       	movw	r24, r6
    3f52:	17 d2       	rcall	.+1070   	; 0x4382 <ungetc>
    3f54:	81 14       	cp	r8, r1
    3f56:	91 04       	cpc	r9, r1
    3f58:	a1 f0       	breq	.+40     	; 0x3f82 <vfscanf+0x1f8>
    3f5a:	f4 01       	movw	r30, r8
    3f5c:	10 82       	st	Z, r1
    3f5e:	11 c0       	rjmp	.+34     	; 0x3f82 <vfscanf+0x1f8>
    3f60:	00 62       	ori	r16, 0x20	; 32
    3f62:	03 c0       	rjmp	.+6      	; 0x3f6a <vfscanf+0x1e0>
    3f64:	00 61       	ori	r16, 0x10	; 16
    3f66:	01 c0       	rjmp	.+2      	; 0x3f6a <vfscanf+0x1e0>
    3f68:	00 64       	ori	r16, 0x40	; 64
    3f6a:	20 2f       	mov	r18, r16
    3f6c:	a4 01       	movw	r20, r8
    3f6e:	6f 2d       	mov	r22, r15
    3f70:	c6 01       	movw	r24, r12
    3f72:	a8 dd       	rcall	.-1200   	; 0x3ac4 <conv_int>
    3f74:	81 11       	cpse	r24, r1
    3f76:	05 c0       	rjmp	.+10     	; 0x3f82 <vfscanf+0x1f8>
    3f78:	f6 01       	movw	r30, r12
    3f7a:	83 81       	ldd	r24, Z+3	; 0x03
    3f7c:	80 73       	andi	r24, 0x30	; 48
    3f7e:	29 f4       	brne	.+10     	; 0x3f8a <vfscanf+0x200>
    3f80:	06 c0       	rjmp	.+12     	; 0x3f8e <vfscanf+0x204>
    3f82:	00 fd       	sbrc	r16, 0
    3f84:	18 cf       	rjmp	.-464    	; 0x3db6 <vfscanf+0x2c>
    3f86:	53 94       	inc	r5
    3f88:	16 cf       	rjmp	.-468    	; 0x3db6 <vfscanf+0x2c>
    3f8a:	55 20       	and	r5, r5
    3f8c:	19 f0       	breq	.+6      	; 0x3f94 <vfscanf+0x20a>
    3f8e:	85 2d       	mov	r24, r5
    3f90:	90 e0       	ldi	r25, 0x00	; 0
    3f92:	02 c0       	rjmp	.+4      	; 0x3f98 <vfscanf+0x20e>
    3f94:	8f ef       	ldi	r24, 0xFF	; 255
    3f96:	9f ef       	ldi	r25, 0xFF	; 255
    3f98:	df 91       	pop	r29
    3f9a:	cf 91       	pop	r28
    3f9c:	1f 91       	pop	r17
    3f9e:	0f 91       	pop	r16
    3fa0:	ff 90       	pop	r15
    3fa2:	ef 90       	pop	r14
    3fa4:	df 90       	pop	r13
    3fa6:	cf 90       	pop	r12
    3fa8:	bf 90       	pop	r11
    3faa:	af 90       	pop	r10
    3fac:	9f 90       	pop	r9
    3fae:	8f 90       	pop	r8
    3fb0:	7f 90       	pop	r7
    3fb2:	6f 90       	pop	r6
    3fb4:	5f 90       	pop	r5
    3fb6:	08 95       	ret

00003fb8 <calloc>:
    3fb8:	0f 93       	push	r16
    3fba:	1f 93       	push	r17
    3fbc:	cf 93       	push	r28
    3fbe:	df 93       	push	r29
    3fc0:	86 9f       	mul	r24, r22
    3fc2:	80 01       	movw	r16, r0
    3fc4:	87 9f       	mul	r24, r23
    3fc6:	10 0d       	add	r17, r0
    3fc8:	96 9f       	mul	r25, r22
    3fca:	10 0d       	add	r17, r0
    3fcc:	11 24       	eor	r1, r1
    3fce:	c8 01       	movw	r24, r16
    3fd0:	0d d0       	rcall	.+26     	; 0x3fec <malloc>
    3fd2:	ec 01       	movw	r28, r24
    3fd4:	00 97       	sbiw	r24, 0x00	; 0
    3fd6:	21 f0       	breq	.+8      	; 0x3fe0 <calloc+0x28>
    3fd8:	a8 01       	movw	r20, r16
    3fda:	60 e0       	ldi	r22, 0x00	; 0
    3fdc:	70 e0       	ldi	r23, 0x00	; 0
    3fde:	45 d1       	rcall	.+650    	; 0x426a <memset>
    3fe0:	ce 01       	movw	r24, r28
    3fe2:	df 91       	pop	r29
    3fe4:	cf 91       	pop	r28
    3fe6:	1f 91       	pop	r17
    3fe8:	0f 91       	pop	r16
    3fea:	08 95       	ret

00003fec <malloc>:
    3fec:	0f 93       	push	r16
    3fee:	1f 93       	push	r17
    3ff0:	cf 93       	push	r28
    3ff2:	df 93       	push	r29
    3ff4:	82 30       	cpi	r24, 0x02	; 2
    3ff6:	91 05       	cpc	r25, r1
    3ff8:	10 f4       	brcc	.+4      	; 0x3ffe <malloc+0x12>
    3ffa:	82 e0       	ldi	r24, 0x02	; 2
    3ffc:	90 e0       	ldi	r25, 0x00	; 0
    3ffe:	e0 91 ac 21 	lds	r30, 0x21AC	; 0x8021ac <__flp>
    4002:	f0 91 ad 21 	lds	r31, 0x21AD	; 0x8021ad <__flp+0x1>
    4006:	20 e0       	ldi	r18, 0x00	; 0
    4008:	30 e0       	ldi	r19, 0x00	; 0
    400a:	a0 e0       	ldi	r26, 0x00	; 0
    400c:	b0 e0       	ldi	r27, 0x00	; 0
    400e:	30 97       	sbiw	r30, 0x00	; 0
    4010:	19 f1       	breq	.+70     	; 0x4058 <__stack+0x59>
    4012:	40 81       	ld	r20, Z
    4014:	51 81       	ldd	r21, Z+1	; 0x01
    4016:	02 81       	ldd	r16, Z+2	; 0x02
    4018:	13 81       	ldd	r17, Z+3	; 0x03
    401a:	48 17       	cp	r20, r24
    401c:	59 07       	cpc	r21, r25
    401e:	c8 f0       	brcs	.+50     	; 0x4052 <__stack+0x53>
    4020:	84 17       	cp	r24, r20
    4022:	95 07       	cpc	r25, r21
    4024:	69 f4       	brne	.+26     	; 0x4040 <__stack+0x41>
    4026:	10 97       	sbiw	r26, 0x00	; 0
    4028:	31 f0       	breq	.+12     	; 0x4036 <__stack+0x37>
    402a:	12 96       	adiw	r26, 0x02	; 2
    402c:	0c 93       	st	X, r16
    402e:	12 97       	sbiw	r26, 0x02	; 2
    4030:	13 96       	adiw	r26, 0x03	; 3
    4032:	1c 93       	st	X, r17
    4034:	27 c0       	rjmp	.+78     	; 0x4084 <__stack+0x85>
    4036:	00 93 ac 21 	sts	0x21AC, r16	; 0x8021ac <__flp>
    403a:	10 93 ad 21 	sts	0x21AD, r17	; 0x8021ad <__flp+0x1>
    403e:	22 c0       	rjmp	.+68     	; 0x4084 <__stack+0x85>
    4040:	21 15       	cp	r18, r1
    4042:	31 05       	cpc	r19, r1
    4044:	19 f0       	breq	.+6      	; 0x404c <__stack+0x4d>
    4046:	42 17       	cp	r20, r18
    4048:	53 07       	cpc	r21, r19
    404a:	18 f4       	brcc	.+6      	; 0x4052 <__stack+0x53>
    404c:	9a 01       	movw	r18, r20
    404e:	bd 01       	movw	r22, r26
    4050:	ef 01       	movw	r28, r30
    4052:	df 01       	movw	r26, r30
    4054:	f8 01       	movw	r30, r16
    4056:	db cf       	rjmp	.-74     	; 0x400e <__stack+0xf>
    4058:	21 15       	cp	r18, r1
    405a:	31 05       	cpc	r19, r1
    405c:	f9 f0       	breq	.+62     	; 0x409c <__stack+0x9d>
    405e:	28 1b       	sub	r18, r24
    4060:	39 0b       	sbc	r19, r25
    4062:	24 30       	cpi	r18, 0x04	; 4
    4064:	31 05       	cpc	r19, r1
    4066:	80 f4       	brcc	.+32     	; 0x4088 <__stack+0x89>
    4068:	8a 81       	ldd	r24, Y+2	; 0x02
    406a:	9b 81       	ldd	r25, Y+3	; 0x03
    406c:	61 15       	cp	r22, r1
    406e:	71 05       	cpc	r23, r1
    4070:	21 f0       	breq	.+8      	; 0x407a <__stack+0x7b>
    4072:	fb 01       	movw	r30, r22
    4074:	82 83       	std	Z+2, r24	; 0x02
    4076:	93 83       	std	Z+3, r25	; 0x03
    4078:	04 c0       	rjmp	.+8      	; 0x4082 <__stack+0x83>
    407a:	80 93 ac 21 	sts	0x21AC, r24	; 0x8021ac <__flp>
    407e:	90 93 ad 21 	sts	0x21AD, r25	; 0x8021ad <__flp+0x1>
    4082:	fe 01       	movw	r30, r28
    4084:	32 96       	adiw	r30, 0x02	; 2
    4086:	44 c0       	rjmp	.+136    	; 0x4110 <__stack+0x111>
    4088:	fe 01       	movw	r30, r28
    408a:	e2 0f       	add	r30, r18
    408c:	f3 1f       	adc	r31, r19
    408e:	81 93       	st	Z+, r24
    4090:	91 93       	st	Z+, r25
    4092:	22 50       	subi	r18, 0x02	; 2
    4094:	31 09       	sbc	r19, r1
    4096:	28 83       	st	Y, r18
    4098:	39 83       	std	Y+1, r19	; 0x01
    409a:	3a c0       	rjmp	.+116    	; 0x4110 <__stack+0x111>
    409c:	20 91 aa 21 	lds	r18, 0x21AA	; 0x8021aa <__brkval>
    40a0:	30 91 ab 21 	lds	r19, 0x21AB	; 0x8021ab <__brkval+0x1>
    40a4:	23 2b       	or	r18, r19
    40a6:	41 f4       	brne	.+16     	; 0x40b8 <__stack+0xb9>
    40a8:	20 91 02 20 	lds	r18, 0x2002	; 0x802002 <__malloc_heap_start>
    40ac:	30 91 03 20 	lds	r19, 0x2003	; 0x802003 <__malloc_heap_start+0x1>
    40b0:	20 93 aa 21 	sts	0x21AA, r18	; 0x8021aa <__brkval>
    40b4:	30 93 ab 21 	sts	0x21AB, r19	; 0x8021ab <__brkval+0x1>
    40b8:	20 91 00 20 	lds	r18, 0x2000	; 0x802000 <__data_start>
    40bc:	30 91 01 20 	lds	r19, 0x2001	; 0x802001 <__data_start+0x1>
    40c0:	21 15       	cp	r18, r1
    40c2:	31 05       	cpc	r19, r1
    40c4:	41 f4       	brne	.+16     	; 0x40d6 <__stack+0xd7>
    40c6:	2d b7       	in	r18, 0x3d	; 61
    40c8:	3e b7       	in	r19, 0x3e	; 62
    40ca:	40 91 04 20 	lds	r20, 0x2004	; 0x802004 <__malloc_margin>
    40ce:	50 91 05 20 	lds	r21, 0x2005	; 0x802005 <__malloc_margin+0x1>
    40d2:	24 1b       	sub	r18, r20
    40d4:	35 0b       	sbc	r19, r21
    40d6:	e0 91 aa 21 	lds	r30, 0x21AA	; 0x8021aa <__brkval>
    40da:	f0 91 ab 21 	lds	r31, 0x21AB	; 0x8021ab <__brkval+0x1>
    40de:	e2 17       	cp	r30, r18
    40e0:	f3 07       	cpc	r31, r19
    40e2:	a0 f4       	brcc	.+40     	; 0x410c <__stack+0x10d>
    40e4:	2e 1b       	sub	r18, r30
    40e6:	3f 0b       	sbc	r19, r31
    40e8:	28 17       	cp	r18, r24
    40ea:	39 07       	cpc	r19, r25
    40ec:	78 f0       	brcs	.+30     	; 0x410c <__stack+0x10d>
    40ee:	ac 01       	movw	r20, r24
    40f0:	4e 5f       	subi	r20, 0xFE	; 254
    40f2:	5f 4f       	sbci	r21, 0xFF	; 255
    40f4:	24 17       	cp	r18, r20
    40f6:	35 07       	cpc	r19, r21
    40f8:	48 f0       	brcs	.+18     	; 0x410c <__stack+0x10d>
    40fa:	4e 0f       	add	r20, r30
    40fc:	5f 1f       	adc	r21, r31
    40fe:	40 93 aa 21 	sts	0x21AA, r20	; 0x8021aa <__brkval>
    4102:	50 93 ab 21 	sts	0x21AB, r21	; 0x8021ab <__brkval+0x1>
    4106:	81 93       	st	Z+, r24
    4108:	91 93       	st	Z+, r25
    410a:	02 c0       	rjmp	.+4      	; 0x4110 <__stack+0x111>
    410c:	e0 e0       	ldi	r30, 0x00	; 0
    410e:	f0 e0       	ldi	r31, 0x00	; 0
    4110:	cf 01       	movw	r24, r30
    4112:	df 91       	pop	r29
    4114:	cf 91       	pop	r28
    4116:	1f 91       	pop	r17
    4118:	0f 91       	pop	r16
    411a:	08 95       	ret

0000411c <free>:
    411c:	cf 93       	push	r28
    411e:	df 93       	push	r29
    4120:	00 97       	sbiw	r24, 0x00	; 0
    4122:	09 f4       	brne	.+2      	; 0x4126 <free+0xa>
    4124:	81 c0       	rjmp	.+258    	; 0x4228 <free+0x10c>
    4126:	fc 01       	movw	r30, r24
    4128:	32 97       	sbiw	r30, 0x02	; 2
    412a:	12 82       	std	Z+2, r1	; 0x02
    412c:	13 82       	std	Z+3, r1	; 0x03
    412e:	a0 91 ac 21 	lds	r26, 0x21AC	; 0x8021ac <__flp>
    4132:	b0 91 ad 21 	lds	r27, 0x21AD	; 0x8021ad <__flp+0x1>
    4136:	10 97       	sbiw	r26, 0x00	; 0
    4138:	81 f4       	brne	.+32     	; 0x415a <free+0x3e>
    413a:	20 81       	ld	r18, Z
    413c:	31 81       	ldd	r19, Z+1	; 0x01
    413e:	82 0f       	add	r24, r18
    4140:	93 1f       	adc	r25, r19
    4142:	20 91 aa 21 	lds	r18, 0x21AA	; 0x8021aa <__brkval>
    4146:	30 91 ab 21 	lds	r19, 0x21AB	; 0x8021ab <__brkval+0x1>
    414a:	28 17       	cp	r18, r24
    414c:	39 07       	cpc	r19, r25
    414e:	51 f5       	brne	.+84     	; 0x41a4 <free+0x88>
    4150:	e0 93 aa 21 	sts	0x21AA, r30	; 0x8021aa <__brkval>
    4154:	f0 93 ab 21 	sts	0x21AB, r31	; 0x8021ab <__brkval+0x1>
    4158:	67 c0       	rjmp	.+206    	; 0x4228 <free+0x10c>
    415a:	ed 01       	movw	r28, r26
    415c:	20 e0       	ldi	r18, 0x00	; 0
    415e:	30 e0       	ldi	r19, 0x00	; 0
    4160:	ce 17       	cp	r28, r30
    4162:	df 07       	cpc	r29, r31
    4164:	40 f4       	brcc	.+16     	; 0x4176 <free+0x5a>
    4166:	4a 81       	ldd	r20, Y+2	; 0x02
    4168:	5b 81       	ldd	r21, Y+3	; 0x03
    416a:	9e 01       	movw	r18, r28
    416c:	41 15       	cp	r20, r1
    416e:	51 05       	cpc	r21, r1
    4170:	f1 f0       	breq	.+60     	; 0x41ae <free+0x92>
    4172:	ea 01       	movw	r28, r20
    4174:	f5 cf       	rjmp	.-22     	; 0x4160 <free+0x44>
    4176:	c2 83       	std	Z+2, r28	; 0x02
    4178:	d3 83       	std	Z+3, r29	; 0x03
    417a:	40 81       	ld	r20, Z
    417c:	51 81       	ldd	r21, Z+1	; 0x01
    417e:	84 0f       	add	r24, r20
    4180:	95 1f       	adc	r25, r21
    4182:	c8 17       	cp	r28, r24
    4184:	d9 07       	cpc	r29, r25
    4186:	59 f4       	brne	.+22     	; 0x419e <free+0x82>
    4188:	88 81       	ld	r24, Y
    418a:	99 81       	ldd	r25, Y+1	; 0x01
    418c:	84 0f       	add	r24, r20
    418e:	95 1f       	adc	r25, r21
    4190:	02 96       	adiw	r24, 0x02	; 2
    4192:	80 83       	st	Z, r24
    4194:	91 83       	std	Z+1, r25	; 0x01
    4196:	8a 81       	ldd	r24, Y+2	; 0x02
    4198:	9b 81       	ldd	r25, Y+3	; 0x03
    419a:	82 83       	std	Z+2, r24	; 0x02
    419c:	93 83       	std	Z+3, r25	; 0x03
    419e:	21 15       	cp	r18, r1
    41a0:	31 05       	cpc	r19, r1
    41a2:	29 f4       	brne	.+10     	; 0x41ae <free+0x92>
    41a4:	e0 93 ac 21 	sts	0x21AC, r30	; 0x8021ac <__flp>
    41a8:	f0 93 ad 21 	sts	0x21AD, r31	; 0x8021ad <__flp+0x1>
    41ac:	3d c0       	rjmp	.+122    	; 0x4228 <free+0x10c>
    41ae:	e9 01       	movw	r28, r18
    41b0:	ea 83       	std	Y+2, r30	; 0x02
    41b2:	fb 83       	std	Y+3, r31	; 0x03
    41b4:	49 91       	ld	r20, Y+
    41b6:	59 91       	ld	r21, Y+
    41b8:	c4 0f       	add	r28, r20
    41ba:	d5 1f       	adc	r29, r21
    41bc:	ec 17       	cp	r30, r28
    41be:	fd 07       	cpc	r31, r29
    41c0:	61 f4       	brne	.+24     	; 0x41da <free+0xbe>
    41c2:	80 81       	ld	r24, Z
    41c4:	91 81       	ldd	r25, Z+1	; 0x01
    41c6:	84 0f       	add	r24, r20
    41c8:	95 1f       	adc	r25, r21
    41ca:	02 96       	adiw	r24, 0x02	; 2
    41cc:	e9 01       	movw	r28, r18
    41ce:	88 83       	st	Y, r24
    41d0:	99 83       	std	Y+1, r25	; 0x01
    41d2:	82 81       	ldd	r24, Z+2	; 0x02
    41d4:	93 81       	ldd	r25, Z+3	; 0x03
    41d6:	8a 83       	std	Y+2, r24	; 0x02
    41d8:	9b 83       	std	Y+3, r25	; 0x03
    41da:	e0 e0       	ldi	r30, 0x00	; 0
    41dc:	f0 e0       	ldi	r31, 0x00	; 0
    41de:	12 96       	adiw	r26, 0x02	; 2
    41e0:	8d 91       	ld	r24, X+
    41e2:	9c 91       	ld	r25, X
    41e4:	13 97       	sbiw	r26, 0x03	; 3
    41e6:	00 97       	sbiw	r24, 0x00	; 0
    41e8:	19 f0       	breq	.+6      	; 0x41f0 <free+0xd4>
    41ea:	fd 01       	movw	r30, r26
    41ec:	dc 01       	movw	r26, r24
    41ee:	f7 cf       	rjmp	.-18     	; 0x41de <free+0xc2>
    41f0:	8d 91       	ld	r24, X+
    41f2:	9c 91       	ld	r25, X
    41f4:	11 97       	sbiw	r26, 0x01	; 1
    41f6:	9d 01       	movw	r18, r26
    41f8:	2e 5f       	subi	r18, 0xFE	; 254
    41fa:	3f 4f       	sbci	r19, 0xFF	; 255
    41fc:	82 0f       	add	r24, r18
    41fe:	93 1f       	adc	r25, r19
    4200:	20 91 aa 21 	lds	r18, 0x21AA	; 0x8021aa <__brkval>
    4204:	30 91 ab 21 	lds	r19, 0x21AB	; 0x8021ab <__brkval+0x1>
    4208:	28 17       	cp	r18, r24
    420a:	39 07       	cpc	r19, r25
    420c:	69 f4       	brne	.+26     	; 0x4228 <free+0x10c>
    420e:	30 97       	sbiw	r30, 0x00	; 0
    4210:	29 f4       	brne	.+10     	; 0x421c <free+0x100>
    4212:	10 92 ac 21 	sts	0x21AC, r1	; 0x8021ac <__flp>
    4216:	10 92 ad 21 	sts	0x21AD, r1	; 0x8021ad <__flp+0x1>
    421a:	02 c0       	rjmp	.+4      	; 0x4220 <free+0x104>
    421c:	12 82       	std	Z+2, r1	; 0x02
    421e:	13 82       	std	Z+3, r1	; 0x03
    4220:	a0 93 aa 21 	sts	0x21AA, r26	; 0x8021aa <__brkval>
    4224:	b0 93 ab 21 	sts	0x21AB, r27	; 0x8021ab <__brkval+0x1>
    4228:	df 91       	pop	r29
    422a:	cf 91       	pop	r28
    422c:	08 95       	ret

0000422e <isspace>:
    422e:	91 11       	cpse	r25, r1
    4230:	1f c1       	rjmp	.+574    	; 0x4470 <__ctype_isfalse>
    4232:	80 32       	cpi	r24, 0x20	; 32
    4234:	19 f0       	breq	.+6      	; 0x423c <isspace+0xe>
    4236:	89 50       	subi	r24, 0x09	; 9
    4238:	85 50       	subi	r24, 0x05	; 5
    423a:	d0 f7       	brcc	.-12     	; 0x4230 <isspace+0x2>
    423c:	08 95       	ret

0000423e <strchr_P>:
    423e:	fc 01       	movw	r30, r24
    4240:	05 90       	lpm	r0, Z+
    4242:	06 16       	cp	r0, r22
    4244:	21 f0       	breq	.+8      	; 0x424e <strchr_P+0x10>
    4246:	00 20       	and	r0, r0
    4248:	d9 f7       	brne	.-10     	; 0x4240 <strchr_P+0x2>
    424a:	c0 01       	movw	r24, r0
    424c:	08 95       	ret
    424e:	31 97       	sbiw	r30, 0x01	; 1
    4250:	cf 01       	movw	r24, r30
    4252:	08 95       	ret

00004254 <strnlen_P>:
    4254:	fc 01       	movw	r30, r24
    4256:	05 90       	lpm	r0, Z+
    4258:	61 50       	subi	r22, 0x01	; 1
    425a:	70 40       	sbci	r23, 0x00	; 0
    425c:	01 10       	cpse	r0, r1
    425e:	d8 f7       	brcc	.-10     	; 0x4256 <strnlen_P+0x2>
    4260:	80 95       	com	r24
    4262:	90 95       	com	r25
    4264:	8e 0f       	add	r24, r30
    4266:	9f 1f       	adc	r25, r31
    4268:	08 95       	ret

0000426a <memset>:
    426a:	dc 01       	movw	r26, r24
    426c:	01 c0       	rjmp	.+2      	; 0x4270 <memset+0x6>
    426e:	6d 93       	st	X+, r22
    4270:	41 50       	subi	r20, 0x01	; 1
    4272:	50 40       	sbci	r21, 0x00	; 0
    4274:	e0 f7       	brcc	.-8      	; 0x426e <memset+0x4>
    4276:	08 95       	ret

00004278 <strnlen>:
    4278:	fc 01       	movw	r30, r24
    427a:	61 50       	subi	r22, 0x01	; 1
    427c:	70 40       	sbci	r23, 0x00	; 0
    427e:	01 90       	ld	r0, Z+
    4280:	01 10       	cpse	r0, r1
    4282:	d8 f7       	brcc	.-10     	; 0x427a <strnlen+0x2>
    4284:	80 95       	com	r24
    4286:	90 95       	com	r25
    4288:	8e 0f       	add	r24, r30
    428a:	9f 1f       	adc	r25, r31
    428c:	08 95       	ret

0000428e <fgetc>:
    428e:	cf 93       	push	r28
    4290:	df 93       	push	r29
    4292:	ec 01       	movw	r28, r24
    4294:	2b 81       	ldd	r18, Y+3	; 0x03
    4296:	20 ff       	sbrs	r18, 0
    4298:	33 c0       	rjmp	.+102    	; 0x4300 <fgetc+0x72>
    429a:	26 ff       	sbrs	r18, 6
    429c:	0a c0       	rjmp	.+20     	; 0x42b2 <fgetc+0x24>
    429e:	2f 7b       	andi	r18, 0xBF	; 191
    42a0:	2b 83       	std	Y+3, r18	; 0x03
    42a2:	8e 81       	ldd	r24, Y+6	; 0x06
    42a4:	9f 81       	ldd	r25, Y+7	; 0x07
    42a6:	01 96       	adiw	r24, 0x01	; 1
    42a8:	8e 83       	std	Y+6, r24	; 0x06
    42aa:	9f 83       	std	Y+7, r25	; 0x07
    42ac:	8a 81       	ldd	r24, Y+2	; 0x02
    42ae:	90 e0       	ldi	r25, 0x00	; 0
    42b0:	29 c0       	rjmp	.+82     	; 0x4304 <fgetc+0x76>
    42b2:	22 ff       	sbrs	r18, 2
    42b4:	0f c0       	rjmp	.+30     	; 0x42d4 <fgetc+0x46>
    42b6:	e8 81       	ld	r30, Y
    42b8:	f9 81       	ldd	r31, Y+1	; 0x01
    42ba:	80 81       	ld	r24, Z
    42bc:	08 2e       	mov	r0, r24
    42be:	00 0c       	add	r0, r0
    42c0:	99 0b       	sbc	r25, r25
    42c2:	00 97       	sbiw	r24, 0x00	; 0
    42c4:	19 f4       	brne	.+6      	; 0x42cc <fgetc+0x3e>
    42c6:	20 62       	ori	r18, 0x20	; 32
    42c8:	2b 83       	std	Y+3, r18	; 0x03
    42ca:	1a c0       	rjmp	.+52     	; 0x4300 <fgetc+0x72>
    42cc:	31 96       	adiw	r30, 0x01	; 1
    42ce:	e8 83       	st	Y, r30
    42d0:	f9 83       	std	Y+1, r31	; 0x01
    42d2:	0e c0       	rjmp	.+28     	; 0x42f0 <fgetc+0x62>
    42d4:	ea 85       	ldd	r30, Y+10	; 0x0a
    42d6:	fb 85       	ldd	r31, Y+11	; 0x0b
    42d8:	19 95       	eicall
    42da:	97 ff       	sbrs	r25, 7
    42dc:	09 c0       	rjmp	.+18     	; 0x42f0 <fgetc+0x62>
    42de:	2b 81       	ldd	r18, Y+3	; 0x03
    42e0:	01 96       	adiw	r24, 0x01	; 1
    42e2:	11 f0       	breq	.+4      	; 0x42e8 <fgetc+0x5a>
    42e4:	80 e2       	ldi	r24, 0x20	; 32
    42e6:	01 c0       	rjmp	.+2      	; 0x42ea <fgetc+0x5c>
    42e8:	80 e1       	ldi	r24, 0x10	; 16
    42ea:	82 2b       	or	r24, r18
    42ec:	8b 83       	std	Y+3, r24	; 0x03
    42ee:	08 c0       	rjmp	.+16     	; 0x4300 <fgetc+0x72>
    42f0:	2e 81       	ldd	r18, Y+6	; 0x06
    42f2:	3f 81       	ldd	r19, Y+7	; 0x07
    42f4:	2f 5f       	subi	r18, 0xFF	; 255
    42f6:	3f 4f       	sbci	r19, 0xFF	; 255
    42f8:	2e 83       	std	Y+6, r18	; 0x06
    42fa:	3f 83       	std	Y+7, r19	; 0x07
    42fc:	99 27       	eor	r25, r25
    42fe:	02 c0       	rjmp	.+4      	; 0x4304 <fgetc+0x76>
    4300:	8f ef       	ldi	r24, 0xFF	; 255
    4302:	9f ef       	ldi	r25, 0xFF	; 255
    4304:	df 91       	pop	r29
    4306:	cf 91       	pop	r28
    4308:	08 95       	ret

0000430a <fputc>:
    430a:	0f 93       	push	r16
    430c:	1f 93       	push	r17
    430e:	cf 93       	push	r28
    4310:	df 93       	push	r29
    4312:	fb 01       	movw	r30, r22
    4314:	23 81       	ldd	r18, Z+3	; 0x03
    4316:	21 fd       	sbrc	r18, 1
    4318:	03 c0       	rjmp	.+6      	; 0x4320 <fputc+0x16>
    431a:	8f ef       	ldi	r24, 0xFF	; 255
    431c:	9f ef       	ldi	r25, 0xFF	; 255
    431e:	2c c0       	rjmp	.+88     	; 0x4378 <fputc+0x6e>
    4320:	22 ff       	sbrs	r18, 2
    4322:	16 c0       	rjmp	.+44     	; 0x4350 <fputc+0x46>
    4324:	46 81       	ldd	r20, Z+6	; 0x06
    4326:	57 81       	ldd	r21, Z+7	; 0x07
    4328:	24 81       	ldd	r18, Z+4	; 0x04
    432a:	35 81       	ldd	r19, Z+5	; 0x05
    432c:	42 17       	cp	r20, r18
    432e:	53 07       	cpc	r21, r19
    4330:	44 f4       	brge	.+16     	; 0x4342 <fputc+0x38>
    4332:	a0 81       	ld	r26, Z
    4334:	b1 81       	ldd	r27, Z+1	; 0x01
    4336:	9d 01       	movw	r18, r26
    4338:	2f 5f       	subi	r18, 0xFF	; 255
    433a:	3f 4f       	sbci	r19, 0xFF	; 255
    433c:	20 83       	st	Z, r18
    433e:	31 83       	std	Z+1, r19	; 0x01
    4340:	8c 93       	st	X, r24
    4342:	26 81       	ldd	r18, Z+6	; 0x06
    4344:	37 81       	ldd	r19, Z+7	; 0x07
    4346:	2f 5f       	subi	r18, 0xFF	; 255
    4348:	3f 4f       	sbci	r19, 0xFF	; 255
    434a:	26 83       	std	Z+6, r18	; 0x06
    434c:	37 83       	std	Z+7, r19	; 0x07
    434e:	14 c0       	rjmp	.+40     	; 0x4378 <fputc+0x6e>
    4350:	8b 01       	movw	r16, r22
    4352:	ec 01       	movw	r28, r24
    4354:	fb 01       	movw	r30, r22
    4356:	00 84       	ldd	r0, Z+8	; 0x08
    4358:	f1 85       	ldd	r31, Z+9	; 0x09
    435a:	e0 2d       	mov	r30, r0
    435c:	19 95       	eicall
    435e:	89 2b       	or	r24, r25
    4360:	e1 f6       	brne	.-72     	; 0x431a <fputc+0x10>
    4362:	d8 01       	movw	r26, r16
    4364:	16 96       	adiw	r26, 0x06	; 6
    4366:	8d 91       	ld	r24, X+
    4368:	9c 91       	ld	r25, X
    436a:	17 97       	sbiw	r26, 0x07	; 7
    436c:	01 96       	adiw	r24, 0x01	; 1
    436e:	16 96       	adiw	r26, 0x06	; 6
    4370:	8d 93       	st	X+, r24
    4372:	9c 93       	st	X, r25
    4374:	17 97       	sbiw	r26, 0x07	; 7
    4376:	ce 01       	movw	r24, r28
    4378:	df 91       	pop	r29
    437a:	cf 91       	pop	r28
    437c:	1f 91       	pop	r17
    437e:	0f 91       	pop	r16
    4380:	08 95       	ret

00004382 <ungetc>:
    4382:	fb 01       	movw	r30, r22
    4384:	23 81       	ldd	r18, Z+3	; 0x03
    4386:	20 ff       	sbrs	r18, 0
    4388:	12 c0       	rjmp	.+36     	; 0x43ae <ungetc+0x2c>
    438a:	26 fd       	sbrc	r18, 6
    438c:	10 c0       	rjmp	.+32     	; 0x43ae <ungetc+0x2c>
    438e:	8f 3f       	cpi	r24, 0xFF	; 255
    4390:	3f ef       	ldi	r19, 0xFF	; 255
    4392:	93 07       	cpc	r25, r19
    4394:	61 f0       	breq	.+24     	; 0x43ae <ungetc+0x2c>
    4396:	82 83       	std	Z+2, r24	; 0x02
    4398:	2f 7d       	andi	r18, 0xDF	; 223
    439a:	20 64       	ori	r18, 0x40	; 64
    439c:	23 83       	std	Z+3, r18	; 0x03
    439e:	26 81       	ldd	r18, Z+6	; 0x06
    43a0:	37 81       	ldd	r19, Z+7	; 0x07
    43a2:	21 50       	subi	r18, 0x01	; 1
    43a4:	31 09       	sbc	r19, r1
    43a6:	26 83       	std	Z+6, r18	; 0x06
    43a8:	37 83       	std	Z+7, r19	; 0x07
    43aa:	99 27       	eor	r25, r25
    43ac:	08 95       	ret
    43ae:	8f ef       	ldi	r24, 0xFF	; 255
    43b0:	9f ef       	ldi	r25, 0xFF	; 255
    43b2:	08 95       	ret

000043b4 <__ultoa_invert>:
    43b4:	fa 01       	movw	r30, r20
    43b6:	aa 27       	eor	r26, r26
    43b8:	28 30       	cpi	r18, 0x08	; 8
    43ba:	51 f1       	breq	.+84     	; 0x4410 <__ultoa_invert+0x5c>
    43bc:	20 31       	cpi	r18, 0x10	; 16
    43be:	81 f1       	breq	.+96     	; 0x4420 <__ultoa_invert+0x6c>
    43c0:	e8 94       	clt
    43c2:	6f 93       	push	r22
    43c4:	6e 7f       	andi	r22, 0xFE	; 254
    43c6:	6e 5f       	subi	r22, 0xFE	; 254
    43c8:	7f 4f       	sbci	r23, 0xFF	; 255
    43ca:	8f 4f       	sbci	r24, 0xFF	; 255
    43cc:	9f 4f       	sbci	r25, 0xFF	; 255
    43ce:	af 4f       	sbci	r26, 0xFF	; 255
    43d0:	b1 e0       	ldi	r27, 0x01	; 1
    43d2:	3e d0       	rcall	.+124    	; 0x4450 <__ultoa_invert+0x9c>
    43d4:	b4 e0       	ldi	r27, 0x04	; 4
    43d6:	3c d0       	rcall	.+120    	; 0x4450 <__ultoa_invert+0x9c>
    43d8:	67 0f       	add	r22, r23
    43da:	78 1f       	adc	r23, r24
    43dc:	89 1f       	adc	r24, r25
    43de:	9a 1f       	adc	r25, r26
    43e0:	a1 1d       	adc	r26, r1
    43e2:	68 0f       	add	r22, r24
    43e4:	79 1f       	adc	r23, r25
    43e6:	8a 1f       	adc	r24, r26
    43e8:	91 1d       	adc	r25, r1
    43ea:	a1 1d       	adc	r26, r1
    43ec:	6a 0f       	add	r22, r26
    43ee:	71 1d       	adc	r23, r1
    43f0:	81 1d       	adc	r24, r1
    43f2:	91 1d       	adc	r25, r1
    43f4:	a1 1d       	adc	r26, r1
    43f6:	20 d0       	rcall	.+64     	; 0x4438 <__ultoa_invert+0x84>
    43f8:	09 f4       	brne	.+2      	; 0x43fc <__ultoa_invert+0x48>
    43fa:	68 94       	set
    43fc:	3f 91       	pop	r19
    43fe:	2a e0       	ldi	r18, 0x0A	; 10
    4400:	26 9f       	mul	r18, r22
    4402:	11 24       	eor	r1, r1
    4404:	30 19       	sub	r19, r0
    4406:	30 5d       	subi	r19, 0xD0	; 208
    4408:	31 93       	st	Z+, r19
    440a:	de f6       	brtc	.-74     	; 0x43c2 <__ultoa_invert+0xe>
    440c:	cf 01       	movw	r24, r30
    440e:	08 95       	ret
    4410:	46 2f       	mov	r20, r22
    4412:	47 70       	andi	r20, 0x07	; 7
    4414:	40 5d       	subi	r20, 0xD0	; 208
    4416:	41 93       	st	Z+, r20
    4418:	b3 e0       	ldi	r27, 0x03	; 3
    441a:	0f d0       	rcall	.+30     	; 0x443a <__ultoa_invert+0x86>
    441c:	c9 f7       	brne	.-14     	; 0x4410 <__ultoa_invert+0x5c>
    441e:	f6 cf       	rjmp	.-20     	; 0x440c <__ultoa_invert+0x58>
    4420:	46 2f       	mov	r20, r22
    4422:	4f 70       	andi	r20, 0x0F	; 15
    4424:	40 5d       	subi	r20, 0xD0	; 208
    4426:	4a 33       	cpi	r20, 0x3A	; 58
    4428:	18 f0       	brcs	.+6      	; 0x4430 <__ultoa_invert+0x7c>
    442a:	49 5d       	subi	r20, 0xD9	; 217
    442c:	31 fd       	sbrc	r19, 1
    442e:	40 52       	subi	r20, 0x20	; 32
    4430:	41 93       	st	Z+, r20
    4432:	02 d0       	rcall	.+4      	; 0x4438 <__ultoa_invert+0x84>
    4434:	a9 f7       	brne	.-22     	; 0x4420 <__ultoa_invert+0x6c>
    4436:	ea cf       	rjmp	.-44     	; 0x440c <__ultoa_invert+0x58>
    4438:	b4 e0       	ldi	r27, 0x04	; 4
    443a:	a6 95       	lsr	r26
    443c:	97 95       	ror	r25
    443e:	87 95       	ror	r24
    4440:	77 95       	ror	r23
    4442:	67 95       	ror	r22
    4444:	ba 95       	dec	r27
    4446:	c9 f7       	brne	.-14     	; 0x443a <__ultoa_invert+0x86>
    4448:	00 97       	sbiw	r24, 0x00	; 0
    444a:	61 05       	cpc	r22, r1
    444c:	71 05       	cpc	r23, r1
    444e:	08 95       	ret
    4450:	9b 01       	movw	r18, r22
    4452:	ac 01       	movw	r20, r24
    4454:	0a 2e       	mov	r0, r26
    4456:	06 94       	lsr	r0
    4458:	57 95       	ror	r21
    445a:	47 95       	ror	r20
    445c:	37 95       	ror	r19
    445e:	27 95       	ror	r18
    4460:	ba 95       	dec	r27
    4462:	c9 f7       	brne	.-14     	; 0x4456 <__ultoa_invert+0xa2>
    4464:	62 0f       	add	r22, r18
    4466:	73 1f       	adc	r23, r19
    4468:	84 1f       	adc	r24, r20
    446a:	95 1f       	adc	r25, r21
    446c:	a0 1d       	adc	r26, r0
    446e:	08 95       	ret

00004470 <__ctype_isfalse>:
    4470:	99 27       	eor	r25, r25
    4472:	88 27       	eor	r24, r24

00004474 <__ctype_istrue>:
    4474:	08 95       	ret

00004476 <_exit>:
    4476:	f8 94       	cli

00004478 <__stop_program>:
    4478:	ff cf       	rjmp	.-2      	; 0x4478 <__stop_program>
=======
}
    295a:	df 91       	pop	r29
    295c:	cf 91       	pop	r28
    295e:	ff 91       	pop	r31
    2960:	ef 91       	pop	r30
    2962:	bf 91       	pop	r27
    2964:	af 91       	pop	r26
    2966:	9f 91       	pop	r25
    2968:	8f 91       	pop	r24
    296a:	7f 91       	pop	r23
    296c:	6f 91       	pop	r22
    296e:	5f 91       	pop	r21
    2970:	4f 91       	pop	r20
    2972:	3f 91       	pop	r19
    2974:	2f 91       	pop	r18
    2976:	1f 91       	pop	r17
    2978:	ff 90       	pop	r15
    297a:	ef 90       	pop	r14
    297c:	df 90       	pop	r13
    297e:	cf 90       	pop	r12
    2980:	bf 90       	pop	r11
    2982:	af 90       	pop	r10
    2984:	9f 90       	pop	r9
    2986:	8f 90       	pop	r8
    2988:	0f 90       	pop	r0
    298a:	0b be       	out	0x3b, r0	; 59
    298c:	0f 90       	pop	r0
    298e:	0a be       	out	0x3a, r0	; 58
    2990:	0f 90       	pop	r0
    2992:	09 be       	out	0x39, r0	; 57
    2994:	0f 90       	pop	r0
    2996:	08 be       	out	0x38, r0	; 56
    2998:	0f 90       	pop	r0
    299a:	0f be       	out	0x3f, r0	; 63
    299c:	0f 90       	pop	r0
    299e:	1f 90       	pop	r1
    29a0:	18 95       	reti

000029a2 <__subsf3>:
    29a2:	50 58       	subi	r21, 0x80	; 128

000029a4 <__addsf3>:
    29a4:	bb 27       	eor	r27, r27
    29a6:	aa 27       	eor	r26, r26
    29a8:	0e d0       	rcall	.+28     	; 0x29c6 <__addsf3x>
    29aa:	9a c1       	rjmp	.+820    	; 0x2ce0 <__fp_round>
    29ac:	8b d1       	rcall	.+790    	; 0x2cc4 <__fp_pscA>
    29ae:	30 f0       	brcs	.+12     	; 0x29bc <__addsf3+0x18>
    29b0:	90 d1       	rcall	.+800    	; 0x2cd2 <__fp_pscB>
    29b2:	20 f0       	brcs	.+8      	; 0x29bc <__addsf3+0x18>
    29b4:	31 f4       	brne	.+12     	; 0x29c2 <__addsf3+0x1e>
    29b6:	9f 3f       	cpi	r25, 0xFF	; 255
    29b8:	11 f4       	brne	.+4      	; 0x29be <__addsf3+0x1a>
    29ba:	1e f4       	brtc	.+6      	; 0x29c2 <__addsf3+0x1e>
    29bc:	5b c1       	rjmp	.+694    	; 0x2c74 <__fp_nan>
    29be:	0e f4       	brtc	.+2      	; 0x29c2 <__addsf3+0x1e>
    29c0:	e0 95       	com	r30
    29c2:	e7 fb       	bst	r30, 7
    29c4:	51 c1       	rjmp	.+674    	; 0x2c68 <__fp_inf>

000029c6 <__addsf3x>:
    29c6:	e9 2f       	mov	r30, r25
    29c8:	9c d1       	rcall	.+824    	; 0x2d02 <__fp_split3>
    29ca:	80 f3       	brcs	.-32     	; 0x29ac <__addsf3+0x8>
    29cc:	ba 17       	cp	r27, r26
    29ce:	62 07       	cpc	r22, r18
    29d0:	73 07       	cpc	r23, r19
    29d2:	84 07       	cpc	r24, r20
    29d4:	95 07       	cpc	r25, r21
    29d6:	18 f0       	brcs	.+6      	; 0x29de <__addsf3x+0x18>
    29d8:	71 f4       	brne	.+28     	; 0x29f6 <__addsf3x+0x30>
    29da:	9e f5       	brtc	.+102    	; 0x2a42 <__addsf3x+0x7c>
    29dc:	b4 c1       	rjmp	.+872    	; 0x2d46 <__fp_zero>
    29de:	0e f4       	brtc	.+2      	; 0x29e2 <__addsf3x+0x1c>
    29e0:	e0 95       	com	r30
    29e2:	0b 2e       	mov	r0, r27
    29e4:	ba 2f       	mov	r27, r26
    29e6:	a0 2d       	mov	r26, r0
    29e8:	0b 01       	movw	r0, r22
    29ea:	b9 01       	movw	r22, r18
    29ec:	90 01       	movw	r18, r0
    29ee:	0c 01       	movw	r0, r24
    29f0:	ca 01       	movw	r24, r20
    29f2:	a0 01       	movw	r20, r0
    29f4:	11 24       	eor	r1, r1
    29f6:	ff 27       	eor	r31, r31
    29f8:	59 1b       	sub	r21, r25
    29fa:	99 f0       	breq	.+38     	; 0x2a22 <__addsf3x+0x5c>
    29fc:	59 3f       	cpi	r21, 0xF9	; 249
    29fe:	50 f4       	brcc	.+20     	; 0x2a14 <__addsf3x+0x4e>
    2a00:	50 3e       	cpi	r21, 0xE0	; 224
    2a02:	68 f1       	brcs	.+90     	; 0x2a5e <__addsf3x+0x98>
    2a04:	1a 16       	cp	r1, r26
    2a06:	f0 40       	sbci	r31, 0x00	; 0
    2a08:	a2 2f       	mov	r26, r18
    2a0a:	23 2f       	mov	r18, r19
    2a0c:	34 2f       	mov	r19, r20
    2a0e:	44 27       	eor	r20, r20
    2a10:	58 5f       	subi	r21, 0xF8	; 248
    2a12:	f3 cf       	rjmp	.-26     	; 0x29fa <__addsf3x+0x34>
    2a14:	46 95       	lsr	r20
    2a16:	37 95       	ror	r19
    2a18:	27 95       	ror	r18
    2a1a:	a7 95       	ror	r26
    2a1c:	f0 40       	sbci	r31, 0x00	; 0
    2a1e:	53 95       	inc	r21
    2a20:	c9 f7       	brne	.-14     	; 0x2a14 <__addsf3x+0x4e>
    2a22:	7e f4       	brtc	.+30     	; 0x2a42 <__addsf3x+0x7c>
    2a24:	1f 16       	cp	r1, r31
    2a26:	ba 0b       	sbc	r27, r26
    2a28:	62 0b       	sbc	r22, r18
    2a2a:	73 0b       	sbc	r23, r19
    2a2c:	84 0b       	sbc	r24, r20
    2a2e:	ba f0       	brmi	.+46     	; 0x2a5e <__addsf3x+0x98>
    2a30:	91 50       	subi	r25, 0x01	; 1
    2a32:	a1 f0       	breq	.+40     	; 0x2a5c <__addsf3x+0x96>
    2a34:	ff 0f       	add	r31, r31
    2a36:	bb 1f       	adc	r27, r27
    2a38:	66 1f       	adc	r22, r22
    2a3a:	77 1f       	adc	r23, r23
    2a3c:	88 1f       	adc	r24, r24
    2a3e:	c2 f7       	brpl	.-16     	; 0x2a30 <__addsf3x+0x6a>
    2a40:	0e c0       	rjmp	.+28     	; 0x2a5e <__addsf3x+0x98>
    2a42:	ba 0f       	add	r27, r26
    2a44:	62 1f       	adc	r22, r18
    2a46:	73 1f       	adc	r23, r19
    2a48:	84 1f       	adc	r24, r20
    2a4a:	48 f4       	brcc	.+18     	; 0x2a5e <__addsf3x+0x98>
    2a4c:	87 95       	ror	r24
    2a4e:	77 95       	ror	r23
    2a50:	67 95       	ror	r22
    2a52:	b7 95       	ror	r27
    2a54:	f7 95       	ror	r31
    2a56:	9e 3f       	cpi	r25, 0xFE	; 254
    2a58:	08 f0       	brcs	.+2      	; 0x2a5c <__addsf3x+0x96>
    2a5a:	b3 cf       	rjmp	.-154    	; 0x29c2 <__addsf3+0x1e>
    2a5c:	93 95       	inc	r25
    2a5e:	88 0f       	add	r24, r24
    2a60:	08 f0       	brcs	.+2      	; 0x2a64 <__addsf3x+0x9e>
    2a62:	99 27       	eor	r25, r25
    2a64:	ee 0f       	add	r30, r30
    2a66:	97 95       	ror	r25
    2a68:	87 95       	ror	r24
    2a6a:	08 95       	ret

00002a6c <__cmpsf2>:
    2a6c:	d9 d0       	rcall	.+434    	; 0x2c20 <__fp_cmp>
    2a6e:	08 f4       	brcc	.+2      	; 0x2a72 <__cmpsf2+0x6>
    2a70:	81 e0       	ldi	r24, 0x01	; 1
    2a72:	08 95       	ret

00002a74 <__divsf3>:
    2a74:	0c d0       	rcall	.+24     	; 0x2a8e <__divsf3x>
    2a76:	34 c1       	rjmp	.+616    	; 0x2ce0 <__fp_round>
    2a78:	2c d1       	rcall	.+600    	; 0x2cd2 <__fp_pscB>
    2a7a:	40 f0       	brcs	.+16     	; 0x2a8c <__divsf3+0x18>
    2a7c:	23 d1       	rcall	.+582    	; 0x2cc4 <__fp_pscA>
    2a7e:	30 f0       	brcs	.+12     	; 0x2a8c <__divsf3+0x18>
    2a80:	21 f4       	brne	.+8      	; 0x2a8a <__divsf3+0x16>
    2a82:	5f 3f       	cpi	r21, 0xFF	; 255
    2a84:	19 f0       	breq	.+6      	; 0x2a8c <__divsf3+0x18>
    2a86:	f0 c0       	rjmp	.+480    	; 0x2c68 <__fp_inf>
    2a88:	51 11       	cpse	r21, r1
    2a8a:	5e c1       	rjmp	.+700    	; 0x2d48 <__fp_szero>
    2a8c:	f3 c0       	rjmp	.+486    	; 0x2c74 <__fp_nan>

00002a8e <__divsf3x>:
    2a8e:	39 d1       	rcall	.+626    	; 0x2d02 <__fp_split3>
    2a90:	98 f3       	brcs	.-26     	; 0x2a78 <__divsf3+0x4>

00002a92 <__divsf3_pse>:
    2a92:	99 23       	and	r25, r25
    2a94:	c9 f3       	breq	.-14     	; 0x2a88 <__divsf3+0x14>
    2a96:	55 23       	and	r21, r21
    2a98:	b1 f3       	breq	.-20     	; 0x2a86 <__divsf3+0x12>
    2a9a:	95 1b       	sub	r25, r21
    2a9c:	55 0b       	sbc	r21, r21
    2a9e:	bb 27       	eor	r27, r27
    2aa0:	aa 27       	eor	r26, r26
    2aa2:	62 17       	cp	r22, r18
    2aa4:	73 07       	cpc	r23, r19
    2aa6:	84 07       	cpc	r24, r20
    2aa8:	38 f0       	brcs	.+14     	; 0x2ab8 <__divsf3_pse+0x26>
    2aaa:	9f 5f       	subi	r25, 0xFF	; 255
    2aac:	5f 4f       	sbci	r21, 0xFF	; 255
    2aae:	22 0f       	add	r18, r18
    2ab0:	33 1f       	adc	r19, r19
    2ab2:	44 1f       	adc	r20, r20
    2ab4:	aa 1f       	adc	r26, r26
    2ab6:	a9 f3       	breq	.-22     	; 0x2aa2 <__divsf3_pse+0x10>
    2ab8:	33 d0       	rcall	.+102    	; 0x2b20 <__divsf3_pse+0x8e>
    2aba:	0e 2e       	mov	r0, r30
    2abc:	3a f0       	brmi	.+14     	; 0x2acc <__divsf3_pse+0x3a>
    2abe:	e0 e8       	ldi	r30, 0x80	; 128
    2ac0:	30 d0       	rcall	.+96     	; 0x2b22 <__divsf3_pse+0x90>
    2ac2:	91 50       	subi	r25, 0x01	; 1
    2ac4:	50 40       	sbci	r21, 0x00	; 0
    2ac6:	e6 95       	lsr	r30
    2ac8:	00 1c       	adc	r0, r0
    2aca:	ca f7       	brpl	.-14     	; 0x2abe <__divsf3_pse+0x2c>
    2acc:	29 d0       	rcall	.+82     	; 0x2b20 <__divsf3_pse+0x8e>
    2ace:	fe 2f       	mov	r31, r30
    2ad0:	27 d0       	rcall	.+78     	; 0x2b20 <__divsf3_pse+0x8e>
    2ad2:	66 0f       	add	r22, r22
    2ad4:	77 1f       	adc	r23, r23
    2ad6:	88 1f       	adc	r24, r24
    2ad8:	bb 1f       	adc	r27, r27
    2ada:	26 17       	cp	r18, r22
    2adc:	37 07       	cpc	r19, r23
    2ade:	48 07       	cpc	r20, r24
    2ae0:	ab 07       	cpc	r26, r27
    2ae2:	b0 e8       	ldi	r27, 0x80	; 128
    2ae4:	09 f0       	breq	.+2      	; 0x2ae8 <__divsf3_pse+0x56>
    2ae6:	bb 0b       	sbc	r27, r27
    2ae8:	80 2d       	mov	r24, r0
    2aea:	bf 01       	movw	r22, r30
    2aec:	ff 27       	eor	r31, r31
    2aee:	93 58       	subi	r25, 0x83	; 131
    2af0:	5f 4f       	sbci	r21, 0xFF	; 255
    2af2:	2a f0       	brmi	.+10     	; 0x2afe <__divsf3_pse+0x6c>
    2af4:	9e 3f       	cpi	r25, 0xFE	; 254
    2af6:	51 05       	cpc	r21, r1
    2af8:	68 f0       	brcs	.+26     	; 0x2b14 <__divsf3_pse+0x82>
    2afa:	b6 c0       	rjmp	.+364    	; 0x2c68 <__fp_inf>
    2afc:	25 c1       	rjmp	.+586    	; 0x2d48 <__fp_szero>
    2afe:	5f 3f       	cpi	r21, 0xFF	; 255
    2b00:	ec f3       	brlt	.-6      	; 0x2afc <__divsf3_pse+0x6a>
    2b02:	98 3e       	cpi	r25, 0xE8	; 232
    2b04:	dc f3       	brlt	.-10     	; 0x2afc <__divsf3_pse+0x6a>
    2b06:	86 95       	lsr	r24
    2b08:	77 95       	ror	r23
    2b0a:	67 95       	ror	r22
    2b0c:	b7 95       	ror	r27
    2b0e:	f7 95       	ror	r31
    2b10:	9f 5f       	subi	r25, 0xFF	; 255
    2b12:	c9 f7       	brne	.-14     	; 0x2b06 <__divsf3_pse+0x74>
    2b14:	88 0f       	add	r24, r24
    2b16:	91 1d       	adc	r25, r1
    2b18:	96 95       	lsr	r25
    2b1a:	87 95       	ror	r24
    2b1c:	97 f9       	bld	r25, 7
    2b1e:	08 95       	ret
    2b20:	e1 e0       	ldi	r30, 0x01	; 1
    2b22:	66 0f       	add	r22, r22
    2b24:	77 1f       	adc	r23, r23
    2b26:	88 1f       	adc	r24, r24
    2b28:	bb 1f       	adc	r27, r27
    2b2a:	62 17       	cp	r22, r18
    2b2c:	73 07       	cpc	r23, r19
    2b2e:	84 07       	cpc	r24, r20
    2b30:	ba 07       	cpc	r27, r26
    2b32:	20 f0       	brcs	.+8      	; 0x2b3c <__divsf3_pse+0xaa>
    2b34:	62 1b       	sub	r22, r18
    2b36:	73 0b       	sbc	r23, r19
    2b38:	84 0b       	sbc	r24, r20
    2b3a:	ba 0b       	sbc	r27, r26
    2b3c:	ee 1f       	adc	r30, r30
    2b3e:	88 f7       	brcc	.-30     	; 0x2b22 <__divsf3_pse+0x90>
    2b40:	e0 95       	com	r30
    2b42:	08 95       	ret

00002b44 <__fixsfsi>:
    2b44:	04 d0       	rcall	.+8      	; 0x2b4e <__fixunssfsi>
    2b46:	68 94       	set
    2b48:	b1 11       	cpse	r27, r1
    2b4a:	fe c0       	rjmp	.+508    	; 0x2d48 <__fp_szero>
    2b4c:	08 95       	ret

00002b4e <__fixunssfsi>:
    2b4e:	e1 d0       	rcall	.+450    	; 0x2d12 <__fp_splitA>
    2b50:	88 f0       	brcs	.+34     	; 0x2b74 <__fixunssfsi+0x26>
    2b52:	9f 57       	subi	r25, 0x7F	; 127
    2b54:	90 f0       	brcs	.+36     	; 0x2b7a <__fixunssfsi+0x2c>
    2b56:	b9 2f       	mov	r27, r25
    2b58:	99 27       	eor	r25, r25
    2b5a:	b7 51       	subi	r27, 0x17	; 23
    2b5c:	a0 f0       	brcs	.+40     	; 0x2b86 <__fixunssfsi+0x38>
    2b5e:	d1 f0       	breq	.+52     	; 0x2b94 <__fixunssfsi+0x46>
    2b60:	66 0f       	add	r22, r22
    2b62:	77 1f       	adc	r23, r23
    2b64:	88 1f       	adc	r24, r24
    2b66:	99 1f       	adc	r25, r25
    2b68:	1a f0       	brmi	.+6      	; 0x2b70 <__fixunssfsi+0x22>
    2b6a:	ba 95       	dec	r27
    2b6c:	c9 f7       	brne	.-14     	; 0x2b60 <__fixunssfsi+0x12>
    2b6e:	12 c0       	rjmp	.+36     	; 0x2b94 <__fixunssfsi+0x46>
    2b70:	b1 30       	cpi	r27, 0x01	; 1
    2b72:	81 f0       	breq	.+32     	; 0x2b94 <__fixunssfsi+0x46>
    2b74:	e8 d0       	rcall	.+464    	; 0x2d46 <__fp_zero>
    2b76:	b1 e0       	ldi	r27, 0x01	; 1
    2b78:	08 95       	ret
    2b7a:	e5 c0       	rjmp	.+458    	; 0x2d46 <__fp_zero>
    2b7c:	67 2f       	mov	r22, r23
    2b7e:	78 2f       	mov	r23, r24
    2b80:	88 27       	eor	r24, r24
    2b82:	b8 5f       	subi	r27, 0xF8	; 248
    2b84:	39 f0       	breq	.+14     	; 0x2b94 <__fixunssfsi+0x46>
    2b86:	b9 3f       	cpi	r27, 0xF9	; 249
    2b88:	cc f3       	brlt	.-14     	; 0x2b7c <__fixunssfsi+0x2e>
    2b8a:	86 95       	lsr	r24
    2b8c:	77 95       	ror	r23
    2b8e:	67 95       	ror	r22
    2b90:	b3 95       	inc	r27
    2b92:	d9 f7       	brne	.-10     	; 0x2b8a <__fixunssfsi+0x3c>
    2b94:	3e f4       	brtc	.+14     	; 0x2ba4 <__fixunssfsi+0x56>
    2b96:	90 95       	com	r25
    2b98:	80 95       	com	r24
    2b9a:	70 95       	com	r23
    2b9c:	61 95       	neg	r22
    2b9e:	7f 4f       	sbci	r23, 0xFF	; 255
    2ba0:	8f 4f       	sbci	r24, 0xFF	; 255
    2ba2:	9f 4f       	sbci	r25, 0xFF	; 255
    2ba4:	08 95       	ret

00002ba6 <__floatunsisf>:
    2ba6:	e8 94       	clt
    2ba8:	09 c0       	rjmp	.+18     	; 0x2bbc <__floatsisf+0x12>

00002baa <__floatsisf>:
    2baa:	97 fb       	bst	r25, 7
    2bac:	3e f4       	brtc	.+14     	; 0x2bbc <__floatsisf+0x12>
    2bae:	90 95       	com	r25
    2bb0:	80 95       	com	r24
    2bb2:	70 95       	com	r23
    2bb4:	61 95       	neg	r22
    2bb6:	7f 4f       	sbci	r23, 0xFF	; 255
    2bb8:	8f 4f       	sbci	r24, 0xFF	; 255
    2bba:	9f 4f       	sbci	r25, 0xFF	; 255
    2bbc:	99 23       	and	r25, r25
    2bbe:	a9 f0       	breq	.+42     	; 0x2bea <__floatsisf+0x40>
    2bc0:	f9 2f       	mov	r31, r25
    2bc2:	96 e9       	ldi	r25, 0x96	; 150
    2bc4:	bb 27       	eor	r27, r27
    2bc6:	93 95       	inc	r25
    2bc8:	f6 95       	lsr	r31
    2bca:	87 95       	ror	r24
    2bcc:	77 95       	ror	r23
    2bce:	67 95       	ror	r22
    2bd0:	b7 95       	ror	r27
    2bd2:	f1 11       	cpse	r31, r1
    2bd4:	f8 cf       	rjmp	.-16     	; 0x2bc6 <__floatsisf+0x1c>
    2bd6:	fa f4       	brpl	.+62     	; 0x2c16 <__floatsisf+0x6c>
    2bd8:	bb 0f       	add	r27, r27
    2bda:	11 f4       	brne	.+4      	; 0x2be0 <__floatsisf+0x36>
    2bdc:	60 ff       	sbrs	r22, 0
    2bde:	1b c0       	rjmp	.+54     	; 0x2c16 <__floatsisf+0x6c>
    2be0:	6f 5f       	subi	r22, 0xFF	; 255
    2be2:	7f 4f       	sbci	r23, 0xFF	; 255
    2be4:	8f 4f       	sbci	r24, 0xFF	; 255
    2be6:	9f 4f       	sbci	r25, 0xFF	; 255
    2be8:	16 c0       	rjmp	.+44     	; 0x2c16 <__floatsisf+0x6c>
    2bea:	88 23       	and	r24, r24
    2bec:	11 f0       	breq	.+4      	; 0x2bf2 <__floatsisf+0x48>
    2bee:	96 e9       	ldi	r25, 0x96	; 150
    2bf0:	11 c0       	rjmp	.+34     	; 0x2c14 <__floatsisf+0x6a>
    2bf2:	77 23       	and	r23, r23
    2bf4:	21 f0       	breq	.+8      	; 0x2bfe <__floatsisf+0x54>
    2bf6:	9e e8       	ldi	r25, 0x8E	; 142
    2bf8:	87 2f       	mov	r24, r23
    2bfa:	76 2f       	mov	r23, r22
    2bfc:	05 c0       	rjmp	.+10     	; 0x2c08 <__floatsisf+0x5e>
    2bfe:	66 23       	and	r22, r22
    2c00:	71 f0       	breq	.+28     	; 0x2c1e <__floatsisf+0x74>
    2c02:	96 e8       	ldi	r25, 0x86	; 134
    2c04:	86 2f       	mov	r24, r22
    2c06:	70 e0       	ldi	r23, 0x00	; 0
    2c08:	60 e0       	ldi	r22, 0x00	; 0
    2c0a:	2a f0       	brmi	.+10     	; 0x2c16 <__floatsisf+0x6c>
    2c0c:	9a 95       	dec	r25
    2c0e:	66 0f       	add	r22, r22
    2c10:	77 1f       	adc	r23, r23
    2c12:	88 1f       	adc	r24, r24
    2c14:	da f7       	brpl	.-10     	; 0x2c0c <__floatsisf+0x62>
    2c16:	88 0f       	add	r24, r24
    2c18:	96 95       	lsr	r25
    2c1a:	87 95       	ror	r24
    2c1c:	97 f9       	bld	r25, 7
    2c1e:	08 95       	ret

00002c20 <__fp_cmp>:
    2c20:	99 0f       	add	r25, r25
    2c22:	00 08       	sbc	r0, r0
    2c24:	55 0f       	add	r21, r21
    2c26:	aa 0b       	sbc	r26, r26
    2c28:	e0 e8       	ldi	r30, 0x80	; 128
    2c2a:	fe ef       	ldi	r31, 0xFE	; 254
    2c2c:	16 16       	cp	r1, r22
    2c2e:	17 06       	cpc	r1, r23
    2c30:	e8 07       	cpc	r30, r24
    2c32:	f9 07       	cpc	r31, r25
    2c34:	c0 f0       	brcs	.+48     	; 0x2c66 <__fp_cmp+0x46>
    2c36:	12 16       	cp	r1, r18
    2c38:	13 06       	cpc	r1, r19
    2c3a:	e4 07       	cpc	r30, r20
    2c3c:	f5 07       	cpc	r31, r21
    2c3e:	98 f0       	brcs	.+38     	; 0x2c66 <__fp_cmp+0x46>
    2c40:	62 1b       	sub	r22, r18
    2c42:	73 0b       	sbc	r23, r19
    2c44:	84 0b       	sbc	r24, r20
    2c46:	95 0b       	sbc	r25, r21
    2c48:	39 f4       	brne	.+14     	; 0x2c58 <__fp_cmp+0x38>
    2c4a:	0a 26       	eor	r0, r26
    2c4c:	61 f0       	breq	.+24     	; 0x2c66 <__fp_cmp+0x46>
    2c4e:	23 2b       	or	r18, r19
    2c50:	24 2b       	or	r18, r20
    2c52:	25 2b       	or	r18, r21
    2c54:	21 f4       	brne	.+8      	; 0x2c5e <__fp_cmp+0x3e>
    2c56:	08 95       	ret
    2c58:	0a 26       	eor	r0, r26
    2c5a:	09 f4       	brne	.+2      	; 0x2c5e <__fp_cmp+0x3e>
    2c5c:	a1 40       	sbci	r26, 0x01	; 1
    2c5e:	a6 95       	lsr	r26
    2c60:	8f ef       	ldi	r24, 0xFF	; 255
    2c62:	81 1d       	adc	r24, r1
    2c64:	81 1d       	adc	r24, r1
    2c66:	08 95       	ret

00002c68 <__fp_inf>:
    2c68:	97 f9       	bld	r25, 7
    2c6a:	9f 67       	ori	r25, 0x7F	; 127
    2c6c:	80 e8       	ldi	r24, 0x80	; 128
    2c6e:	70 e0       	ldi	r23, 0x00	; 0
    2c70:	60 e0       	ldi	r22, 0x00	; 0
    2c72:	08 95       	ret

00002c74 <__fp_nan>:
    2c74:	9f ef       	ldi	r25, 0xFF	; 255
    2c76:	80 ec       	ldi	r24, 0xC0	; 192
    2c78:	08 95       	ret

00002c7a <__fp_powser>:
    2c7a:	df 93       	push	r29
    2c7c:	cf 93       	push	r28
    2c7e:	1f 93       	push	r17
    2c80:	0f 93       	push	r16
    2c82:	ff 92       	push	r15
    2c84:	ef 92       	push	r14
    2c86:	df 92       	push	r13
    2c88:	7b 01       	movw	r14, r22
    2c8a:	8c 01       	movw	r16, r24
    2c8c:	68 94       	set
    2c8e:	05 c0       	rjmp	.+10     	; 0x2c9a <__fp_powser+0x20>
    2c90:	da 2e       	mov	r13, r26
    2c92:	ef 01       	movw	r28, r30
    2c94:	76 d0       	rcall	.+236    	; 0x2d82 <__mulsf3x>
    2c96:	fe 01       	movw	r30, r28
    2c98:	e8 94       	clt
    2c9a:	a5 91       	lpm	r26, Z+
    2c9c:	25 91       	lpm	r18, Z+
    2c9e:	35 91       	lpm	r19, Z+
    2ca0:	45 91       	lpm	r20, Z+
    2ca2:	55 91       	lpm	r21, Z+
    2ca4:	ae f3       	brts	.-22     	; 0x2c90 <__fp_powser+0x16>
    2ca6:	ef 01       	movw	r28, r30
    2ca8:	8e de       	rcall	.-740    	; 0x29c6 <__addsf3x>
    2caa:	fe 01       	movw	r30, r28
    2cac:	97 01       	movw	r18, r14
    2cae:	a8 01       	movw	r20, r16
    2cb0:	da 94       	dec	r13
    2cb2:	79 f7       	brne	.-34     	; 0x2c92 <__fp_powser+0x18>
    2cb4:	df 90       	pop	r13
    2cb6:	ef 90       	pop	r14
    2cb8:	ff 90       	pop	r15
    2cba:	0f 91       	pop	r16
    2cbc:	1f 91       	pop	r17
    2cbe:	cf 91       	pop	r28
    2cc0:	df 91       	pop	r29
    2cc2:	08 95       	ret

00002cc4 <__fp_pscA>:
    2cc4:	00 24       	eor	r0, r0
    2cc6:	0a 94       	dec	r0
    2cc8:	16 16       	cp	r1, r22
    2cca:	17 06       	cpc	r1, r23
    2ccc:	18 06       	cpc	r1, r24
    2cce:	09 06       	cpc	r0, r25
    2cd0:	08 95       	ret

00002cd2 <__fp_pscB>:
    2cd2:	00 24       	eor	r0, r0
    2cd4:	0a 94       	dec	r0
    2cd6:	12 16       	cp	r1, r18
    2cd8:	13 06       	cpc	r1, r19
    2cda:	14 06       	cpc	r1, r20
    2cdc:	05 06       	cpc	r0, r21
    2cde:	08 95       	ret

00002ce0 <__fp_round>:
    2ce0:	09 2e       	mov	r0, r25
    2ce2:	03 94       	inc	r0
    2ce4:	00 0c       	add	r0, r0
    2ce6:	11 f4       	brne	.+4      	; 0x2cec <__fp_round+0xc>
    2ce8:	88 23       	and	r24, r24
    2cea:	52 f0       	brmi	.+20     	; 0x2d00 <__fp_round+0x20>
    2cec:	bb 0f       	add	r27, r27
    2cee:	40 f4       	brcc	.+16     	; 0x2d00 <__fp_round+0x20>
    2cf0:	bf 2b       	or	r27, r31
    2cf2:	11 f4       	brne	.+4      	; 0x2cf8 <__fp_round+0x18>
    2cf4:	60 ff       	sbrs	r22, 0
    2cf6:	04 c0       	rjmp	.+8      	; 0x2d00 <__fp_round+0x20>
    2cf8:	6f 5f       	subi	r22, 0xFF	; 255
    2cfa:	7f 4f       	sbci	r23, 0xFF	; 255
    2cfc:	8f 4f       	sbci	r24, 0xFF	; 255
    2cfe:	9f 4f       	sbci	r25, 0xFF	; 255
    2d00:	08 95       	ret

00002d02 <__fp_split3>:
    2d02:	57 fd       	sbrc	r21, 7
    2d04:	90 58       	subi	r25, 0x80	; 128
    2d06:	44 0f       	add	r20, r20
    2d08:	55 1f       	adc	r21, r21
    2d0a:	59 f0       	breq	.+22     	; 0x2d22 <__fp_splitA+0x10>
    2d0c:	5f 3f       	cpi	r21, 0xFF	; 255
    2d0e:	71 f0       	breq	.+28     	; 0x2d2c <__fp_splitA+0x1a>
    2d10:	47 95       	ror	r20

00002d12 <__fp_splitA>:
    2d12:	88 0f       	add	r24, r24
    2d14:	97 fb       	bst	r25, 7
    2d16:	99 1f       	adc	r25, r25
    2d18:	61 f0       	breq	.+24     	; 0x2d32 <__fp_splitA+0x20>
    2d1a:	9f 3f       	cpi	r25, 0xFF	; 255
    2d1c:	79 f0       	breq	.+30     	; 0x2d3c <__fp_splitA+0x2a>
    2d1e:	87 95       	ror	r24
    2d20:	08 95       	ret
    2d22:	12 16       	cp	r1, r18
    2d24:	13 06       	cpc	r1, r19
    2d26:	14 06       	cpc	r1, r20
    2d28:	55 1f       	adc	r21, r21
    2d2a:	f2 cf       	rjmp	.-28     	; 0x2d10 <__fp_split3+0xe>
    2d2c:	46 95       	lsr	r20
    2d2e:	f1 df       	rcall	.-30     	; 0x2d12 <__fp_splitA>
    2d30:	08 c0       	rjmp	.+16     	; 0x2d42 <__fp_splitA+0x30>
    2d32:	16 16       	cp	r1, r22
    2d34:	17 06       	cpc	r1, r23
    2d36:	18 06       	cpc	r1, r24
    2d38:	99 1f       	adc	r25, r25
    2d3a:	f1 cf       	rjmp	.-30     	; 0x2d1e <__fp_splitA+0xc>
    2d3c:	86 95       	lsr	r24
    2d3e:	71 05       	cpc	r23, r1
    2d40:	61 05       	cpc	r22, r1
    2d42:	08 94       	sec
    2d44:	08 95       	ret

00002d46 <__fp_zero>:
    2d46:	e8 94       	clt

00002d48 <__fp_szero>:
    2d48:	bb 27       	eor	r27, r27
    2d4a:	66 27       	eor	r22, r22
    2d4c:	77 27       	eor	r23, r23
    2d4e:	cb 01       	movw	r24, r22
    2d50:	97 f9       	bld	r25, 7
    2d52:	08 95       	ret

00002d54 <__gesf2>:
    2d54:	65 df       	rcall	.-310    	; 0x2c20 <__fp_cmp>
    2d56:	08 f4       	brcc	.+2      	; 0x2d5a <__gesf2+0x6>
    2d58:	8f ef       	ldi	r24, 0xFF	; 255
    2d5a:	08 95       	ret

00002d5c <inverse>:
    2d5c:	9b 01       	movw	r18, r22
    2d5e:	ac 01       	movw	r20, r24
    2d60:	60 e0       	ldi	r22, 0x00	; 0
    2d62:	70 e0       	ldi	r23, 0x00	; 0
    2d64:	80 e8       	ldi	r24, 0x80	; 128
    2d66:	9f e3       	ldi	r25, 0x3F	; 63
    2d68:	85 ce       	rjmp	.-758    	; 0x2a74 <__divsf3>

00002d6a <__mulsf3>:
    2d6a:	0b d0       	rcall	.+22     	; 0x2d82 <__mulsf3x>
    2d6c:	b9 cf       	rjmp	.-142    	; 0x2ce0 <__fp_round>
    2d6e:	aa df       	rcall	.-172    	; 0x2cc4 <__fp_pscA>
    2d70:	28 f0       	brcs	.+10     	; 0x2d7c <__mulsf3+0x12>
    2d72:	af df       	rcall	.-162    	; 0x2cd2 <__fp_pscB>
    2d74:	18 f0       	brcs	.+6      	; 0x2d7c <__mulsf3+0x12>
    2d76:	95 23       	and	r25, r21
    2d78:	09 f0       	breq	.+2      	; 0x2d7c <__mulsf3+0x12>
    2d7a:	76 cf       	rjmp	.-276    	; 0x2c68 <__fp_inf>
    2d7c:	7b cf       	rjmp	.-266    	; 0x2c74 <__fp_nan>
    2d7e:	11 24       	eor	r1, r1
    2d80:	e3 cf       	rjmp	.-58     	; 0x2d48 <__fp_szero>

00002d82 <__mulsf3x>:
    2d82:	bf df       	rcall	.-130    	; 0x2d02 <__fp_split3>
    2d84:	a0 f3       	brcs	.-24     	; 0x2d6e <__mulsf3+0x4>

00002d86 <__mulsf3_pse>:
    2d86:	95 9f       	mul	r25, r21
    2d88:	d1 f3       	breq	.-12     	; 0x2d7e <__mulsf3+0x14>
    2d8a:	95 0f       	add	r25, r21
    2d8c:	50 e0       	ldi	r21, 0x00	; 0
    2d8e:	55 1f       	adc	r21, r21
    2d90:	62 9f       	mul	r22, r18
    2d92:	f0 01       	movw	r30, r0
    2d94:	72 9f       	mul	r23, r18
    2d96:	bb 27       	eor	r27, r27
    2d98:	f0 0d       	add	r31, r0
    2d9a:	b1 1d       	adc	r27, r1
    2d9c:	63 9f       	mul	r22, r19
    2d9e:	aa 27       	eor	r26, r26
    2da0:	f0 0d       	add	r31, r0
    2da2:	b1 1d       	adc	r27, r1
    2da4:	aa 1f       	adc	r26, r26
    2da6:	64 9f       	mul	r22, r20
    2da8:	66 27       	eor	r22, r22
    2daa:	b0 0d       	add	r27, r0
    2dac:	a1 1d       	adc	r26, r1
    2dae:	66 1f       	adc	r22, r22
    2db0:	82 9f       	mul	r24, r18
    2db2:	22 27       	eor	r18, r18
    2db4:	b0 0d       	add	r27, r0
    2db6:	a1 1d       	adc	r26, r1
    2db8:	62 1f       	adc	r22, r18
    2dba:	73 9f       	mul	r23, r19
    2dbc:	b0 0d       	add	r27, r0
    2dbe:	a1 1d       	adc	r26, r1
    2dc0:	62 1f       	adc	r22, r18
    2dc2:	83 9f       	mul	r24, r19
    2dc4:	a0 0d       	add	r26, r0
    2dc6:	61 1d       	adc	r22, r1
    2dc8:	22 1f       	adc	r18, r18
    2dca:	74 9f       	mul	r23, r20
    2dcc:	33 27       	eor	r19, r19
    2dce:	a0 0d       	add	r26, r0
    2dd0:	61 1d       	adc	r22, r1
    2dd2:	23 1f       	adc	r18, r19
    2dd4:	84 9f       	mul	r24, r20
    2dd6:	60 0d       	add	r22, r0
    2dd8:	21 1d       	adc	r18, r1
    2dda:	82 2f       	mov	r24, r18
    2ddc:	76 2f       	mov	r23, r22
    2dde:	6a 2f       	mov	r22, r26
    2de0:	11 24       	eor	r1, r1
    2de2:	9f 57       	subi	r25, 0x7F	; 127
    2de4:	50 40       	sbci	r21, 0x00	; 0
    2de6:	8a f0       	brmi	.+34     	; 0x2e0a <__mulsf3_pse+0x84>
    2de8:	e1 f0       	breq	.+56     	; 0x2e22 <__mulsf3_pse+0x9c>
    2dea:	88 23       	and	r24, r24
    2dec:	4a f0       	brmi	.+18     	; 0x2e00 <__mulsf3_pse+0x7a>
    2dee:	ee 0f       	add	r30, r30
    2df0:	ff 1f       	adc	r31, r31
    2df2:	bb 1f       	adc	r27, r27
    2df4:	66 1f       	adc	r22, r22
    2df6:	77 1f       	adc	r23, r23
    2df8:	88 1f       	adc	r24, r24
    2dfa:	91 50       	subi	r25, 0x01	; 1
    2dfc:	50 40       	sbci	r21, 0x00	; 0
    2dfe:	a9 f7       	brne	.-22     	; 0x2dea <__mulsf3_pse+0x64>
    2e00:	9e 3f       	cpi	r25, 0xFE	; 254
    2e02:	51 05       	cpc	r21, r1
    2e04:	70 f0       	brcs	.+28     	; 0x2e22 <__mulsf3_pse+0x9c>
    2e06:	30 cf       	rjmp	.-416    	; 0x2c68 <__fp_inf>
    2e08:	9f cf       	rjmp	.-194    	; 0x2d48 <__fp_szero>
    2e0a:	5f 3f       	cpi	r21, 0xFF	; 255
    2e0c:	ec f3       	brlt	.-6      	; 0x2e08 <__mulsf3_pse+0x82>
    2e0e:	98 3e       	cpi	r25, 0xE8	; 232
    2e10:	dc f3       	brlt	.-10     	; 0x2e08 <__mulsf3_pse+0x82>
    2e12:	86 95       	lsr	r24
    2e14:	77 95       	ror	r23
    2e16:	67 95       	ror	r22
    2e18:	b7 95       	ror	r27
    2e1a:	f7 95       	ror	r31
    2e1c:	e7 95       	ror	r30
    2e1e:	9f 5f       	subi	r25, 0xFF	; 255
    2e20:	c1 f7       	brne	.-16     	; 0x2e12 <__mulsf3_pse+0x8c>
    2e22:	fe 2b       	or	r31, r30
    2e24:	88 0f       	add	r24, r24
    2e26:	91 1d       	adc	r25, r1
    2e28:	96 95       	lsr	r25
    2e2a:	87 95       	ror	r24
    2e2c:	97 f9       	bld	r25, 7
    2e2e:	08 95       	ret

00002e30 <pow>:
    2e30:	fa 01       	movw	r30, r20
    2e32:	ee 0f       	add	r30, r30
    2e34:	ff 1f       	adc	r31, r31
    2e36:	30 96       	adiw	r30, 0x00	; 0
    2e38:	21 05       	cpc	r18, r1
    2e3a:	31 05       	cpc	r19, r1
    2e3c:	99 f1       	breq	.+102    	; 0x2ea4 <pow+0x74>
    2e3e:	61 15       	cp	r22, r1
    2e40:	71 05       	cpc	r23, r1
    2e42:	61 f4       	brne	.+24     	; 0x2e5c <pow+0x2c>
    2e44:	80 38       	cpi	r24, 0x80	; 128
    2e46:	bf e3       	ldi	r27, 0x3F	; 63
    2e48:	9b 07       	cpc	r25, r27
    2e4a:	49 f1       	breq	.+82     	; 0x2e9e <pow+0x6e>
    2e4c:	68 94       	set
    2e4e:	90 38       	cpi	r25, 0x80	; 128
    2e50:	81 05       	cpc	r24, r1
    2e52:	61 f0       	breq	.+24     	; 0x2e6c <pow+0x3c>
    2e54:	80 38       	cpi	r24, 0x80	; 128
    2e56:	bf ef       	ldi	r27, 0xFF	; 255
    2e58:	9b 07       	cpc	r25, r27
    2e5a:	41 f0       	breq	.+16     	; 0x2e6c <pow+0x3c>
    2e5c:	99 23       	and	r25, r25
    2e5e:	42 f5       	brpl	.+80     	; 0x2eb0 <pow+0x80>
    2e60:	ff 3f       	cpi	r31, 0xFF	; 255
    2e62:	e1 05       	cpc	r30, r1
    2e64:	31 05       	cpc	r19, r1
    2e66:	21 05       	cpc	r18, r1
    2e68:	11 f1       	breq	.+68     	; 0x2eae <pow+0x7e>
    2e6a:	e8 94       	clt
    2e6c:	08 94       	sec
    2e6e:	e7 95       	ror	r30
    2e70:	d9 01       	movw	r26, r18
    2e72:	aa 23       	and	r26, r26
    2e74:	29 f4       	brne	.+10     	; 0x2e80 <pow+0x50>
    2e76:	ab 2f       	mov	r26, r27
    2e78:	be 2f       	mov	r27, r30
    2e7a:	f8 5f       	subi	r31, 0xF8	; 248
    2e7c:	d0 f3       	brcs	.-12     	; 0x2e72 <pow+0x42>
    2e7e:	10 c0       	rjmp	.+32     	; 0x2ea0 <pow+0x70>
    2e80:	ff 5f       	subi	r31, 0xFF	; 255
    2e82:	70 f4       	brcc	.+28     	; 0x2ea0 <pow+0x70>
    2e84:	a6 95       	lsr	r26
    2e86:	e0 f7       	brcc	.-8      	; 0x2e80 <pow+0x50>
    2e88:	f7 39       	cpi	r31, 0x97	; 151
    2e8a:	50 f0       	brcs	.+20     	; 0x2ea0 <pow+0x70>
    2e8c:	19 f0       	breq	.+6      	; 0x2e94 <pow+0x64>
    2e8e:	ff 3a       	cpi	r31, 0xAF	; 175
    2e90:	38 f4       	brcc	.+14     	; 0x2ea0 <pow+0x70>
    2e92:	9f 77       	andi	r25, 0x7F	; 127
    2e94:	9f 93       	push	r25
    2e96:	0c d0       	rcall	.+24     	; 0x2eb0 <pow+0x80>
    2e98:	0f 90       	pop	r0
    2e9a:	07 fc       	sbrc	r0, 7
    2e9c:	90 58       	subi	r25, 0x80	; 128
    2e9e:	08 95       	ret
    2ea0:	3e f0       	brts	.+14     	; 0x2eb0 <pow+0x80>
    2ea2:	e8 ce       	rjmp	.-560    	; 0x2c74 <__fp_nan>
    2ea4:	60 e0       	ldi	r22, 0x00	; 0
    2ea6:	70 e0       	ldi	r23, 0x00	; 0
    2ea8:	80 e8       	ldi	r24, 0x80	; 128
    2eaa:	9f e3       	ldi	r25, 0x3F	; 63
    2eac:	08 95       	ret
    2eae:	4f e7       	ldi	r20, 0x7F	; 127
    2eb0:	9f 77       	andi	r25, 0x7F	; 127
    2eb2:	5f 93       	push	r21
    2eb4:	4f 93       	push	r20
    2eb6:	3f 93       	push	r19
    2eb8:	2f 93       	push	r18
    2eba:	80 d0       	rcall	.+256    	; 0x2fbc <log>
    2ebc:	2f 91       	pop	r18
    2ebe:	3f 91       	pop	r19
    2ec0:	4f 91       	pop	r20
    2ec2:	5f 91       	pop	r21
    2ec4:	52 df       	rcall	.-348    	; 0x2d6a <__mulsf3>
    2ec6:	05 c0       	rjmp	.+10     	; 0x2ed2 <exp>
    2ec8:	19 f4       	brne	.+6      	; 0x2ed0 <pow+0xa0>
    2eca:	0e f0       	brts	.+2      	; 0x2ece <pow+0x9e>
    2ecc:	cd ce       	rjmp	.-614    	; 0x2c68 <__fp_inf>
    2ece:	3b cf       	rjmp	.-394    	; 0x2d46 <__fp_zero>
    2ed0:	d1 ce       	rjmp	.-606    	; 0x2c74 <__fp_nan>

00002ed2 <exp>:
    2ed2:	1f df       	rcall	.-450    	; 0x2d12 <__fp_splitA>
    2ed4:	c8 f3       	brcs	.-14     	; 0x2ec8 <pow+0x98>
    2ed6:	96 38       	cpi	r25, 0x86	; 134
    2ed8:	c0 f7       	brcc	.-16     	; 0x2eca <pow+0x9a>
    2eda:	07 f8       	bld	r0, 7
    2edc:	0f 92       	push	r0
    2ede:	e8 94       	clt
    2ee0:	2b e3       	ldi	r18, 0x3B	; 59
    2ee2:	3a ea       	ldi	r19, 0xAA	; 170
    2ee4:	48 eb       	ldi	r20, 0xB8	; 184
    2ee6:	5f e7       	ldi	r21, 0x7F	; 127
    2ee8:	4e df       	rcall	.-356    	; 0x2d86 <__mulsf3_pse>
    2eea:	0f 92       	push	r0
    2eec:	0f 92       	push	r0
    2eee:	0f 92       	push	r0
    2ef0:	4d b7       	in	r20, 0x3d	; 61
    2ef2:	5e b7       	in	r21, 0x3e	; 62
    2ef4:	0f 92       	push	r0
    2ef6:	a2 d0       	rcall	.+324    	; 0x303c <modf>
    2ef8:	ec ef       	ldi	r30, 0xFC	; 252
    2efa:	f1 e0       	ldi	r31, 0x01	; 1
    2efc:	be de       	rcall	.-644    	; 0x2c7a <__fp_powser>
    2efe:	4f 91       	pop	r20
    2f00:	5f 91       	pop	r21
    2f02:	ef 91       	pop	r30
    2f04:	ff 91       	pop	r31
    2f06:	e5 95       	asr	r30
    2f08:	ee 1f       	adc	r30, r30
    2f0a:	ff 1f       	adc	r31, r31
    2f0c:	49 f0       	breq	.+18     	; 0x2f20 <exp+0x4e>
    2f0e:	fe 57       	subi	r31, 0x7E	; 126
    2f10:	e0 68       	ori	r30, 0x80	; 128
    2f12:	44 27       	eor	r20, r20
    2f14:	ee 0f       	add	r30, r30
    2f16:	44 1f       	adc	r20, r20
    2f18:	fa 95       	dec	r31
    2f1a:	e1 f7       	brne	.-8      	; 0x2f14 <exp+0x42>
    2f1c:	41 95       	neg	r20
    2f1e:	55 0b       	sbc	r21, r21
    2f20:	14 d0       	rcall	.+40     	; 0x2f4a <ldexp>
    2f22:	0f 90       	pop	r0
    2f24:	07 fe       	sbrs	r0, 7
    2f26:	1a cf       	rjmp	.-460    	; 0x2d5c <inverse>
    2f28:	08 95       	ret

00002f2a <__fp_mpack>:
    2f2a:	9f 3f       	cpi	r25, 0xFF	; 255
    2f2c:	31 f0       	breq	.+12     	; 0x2f3a <__fp_mpack_finite+0xc>

00002f2e <__fp_mpack_finite>:
    2f2e:	91 50       	subi	r25, 0x01	; 1
    2f30:	20 f4       	brcc	.+8      	; 0x2f3a <__fp_mpack_finite+0xc>
    2f32:	87 95       	ror	r24
    2f34:	77 95       	ror	r23
    2f36:	67 95       	ror	r22
    2f38:	b7 95       	ror	r27
    2f3a:	88 0f       	add	r24, r24
    2f3c:	91 1d       	adc	r25, r1
    2f3e:	96 95       	lsr	r25
    2f40:	87 95       	ror	r24
    2f42:	97 f9       	bld	r25, 7
    2f44:	08 95       	ret
    2f46:	90 ce       	rjmp	.-736    	; 0x2c68 <__fp_inf>
    2f48:	f0 cf       	rjmp	.-32     	; 0x2f2a <__fp_mpack>

00002f4a <ldexp>:
    2f4a:	e3 de       	rcall	.-570    	; 0x2d12 <__fp_splitA>
    2f4c:	e8 f3       	brcs	.-6      	; 0x2f48 <__fp_mpack_finite+0x1a>
    2f4e:	99 23       	and	r25, r25
    2f50:	d9 f3       	breq	.-10     	; 0x2f48 <__fp_mpack_finite+0x1a>
    2f52:	94 0f       	add	r25, r20
    2f54:	51 1d       	adc	r21, r1
    2f56:	bb f3       	brvs	.-18     	; 0x2f46 <__fp_mpack_finite+0x18>
    2f58:	91 50       	subi	r25, 0x01	; 1
    2f5a:	50 40       	sbci	r21, 0x00	; 0
    2f5c:	94 f0       	brlt	.+36     	; 0x2f82 <ldexp+0x38>
    2f5e:	59 f0       	breq	.+22     	; 0x2f76 <ldexp+0x2c>
    2f60:	88 23       	and	r24, r24
    2f62:	32 f0       	brmi	.+12     	; 0x2f70 <ldexp+0x26>
    2f64:	66 0f       	add	r22, r22
    2f66:	77 1f       	adc	r23, r23
    2f68:	88 1f       	adc	r24, r24
    2f6a:	91 50       	subi	r25, 0x01	; 1
    2f6c:	50 40       	sbci	r21, 0x00	; 0
    2f6e:	c1 f7       	brne	.-16     	; 0x2f60 <ldexp+0x16>
    2f70:	9e 3f       	cpi	r25, 0xFE	; 254
    2f72:	51 05       	cpc	r21, r1
    2f74:	44 f7       	brge	.-48     	; 0x2f46 <__fp_mpack_finite+0x18>
    2f76:	88 0f       	add	r24, r24
    2f78:	91 1d       	adc	r25, r1
    2f7a:	96 95       	lsr	r25
    2f7c:	87 95       	ror	r24
    2f7e:	97 f9       	bld	r25, 7
    2f80:	08 95       	ret
    2f82:	5f 3f       	cpi	r21, 0xFF	; 255
    2f84:	ac f0       	brlt	.+42     	; 0x2fb0 <ldexp+0x66>
    2f86:	98 3e       	cpi	r25, 0xE8	; 232
    2f88:	9c f0       	brlt	.+38     	; 0x2fb0 <ldexp+0x66>
    2f8a:	bb 27       	eor	r27, r27
    2f8c:	86 95       	lsr	r24
    2f8e:	77 95       	ror	r23
    2f90:	67 95       	ror	r22
    2f92:	b7 95       	ror	r27
    2f94:	08 f4       	brcc	.+2      	; 0x2f98 <ldexp+0x4e>
    2f96:	b1 60       	ori	r27, 0x01	; 1
    2f98:	93 95       	inc	r25
    2f9a:	c1 f7       	brne	.-16     	; 0x2f8c <ldexp+0x42>
    2f9c:	bb 0f       	add	r27, r27
    2f9e:	58 f7       	brcc	.-42     	; 0x2f76 <ldexp+0x2c>
    2fa0:	11 f4       	brne	.+4      	; 0x2fa6 <ldexp+0x5c>
    2fa2:	60 ff       	sbrs	r22, 0
    2fa4:	e8 cf       	rjmp	.-48     	; 0x2f76 <ldexp+0x2c>
    2fa6:	6f 5f       	subi	r22, 0xFF	; 255
    2fa8:	7f 4f       	sbci	r23, 0xFF	; 255
    2faa:	8f 4f       	sbci	r24, 0xFF	; 255
    2fac:	9f 4f       	sbci	r25, 0xFF	; 255
    2fae:	e3 cf       	rjmp	.-58     	; 0x2f76 <ldexp+0x2c>
    2fb0:	cb ce       	rjmp	.-618    	; 0x2d48 <__fp_szero>
    2fb2:	0e f0       	brts	.+2      	; 0x2fb6 <ldexp+0x6c>
    2fb4:	ba cf       	rjmp	.-140    	; 0x2f2a <__fp_mpack>
    2fb6:	5e ce       	rjmp	.-836    	; 0x2c74 <__fp_nan>
    2fb8:	68 94       	set
    2fba:	56 ce       	rjmp	.-852    	; 0x2c68 <__fp_inf>

00002fbc <log>:
    2fbc:	aa de       	rcall	.-684    	; 0x2d12 <__fp_splitA>
    2fbe:	c8 f3       	brcs	.-14     	; 0x2fb2 <ldexp+0x68>
    2fc0:	99 23       	and	r25, r25
    2fc2:	d1 f3       	breq	.-12     	; 0x2fb8 <ldexp+0x6e>
    2fc4:	c6 f3       	brts	.-16     	; 0x2fb6 <ldexp+0x6c>
    2fc6:	df 93       	push	r29
    2fc8:	cf 93       	push	r28
    2fca:	1f 93       	push	r17
    2fcc:	0f 93       	push	r16
    2fce:	ff 92       	push	r15
    2fd0:	c9 2f       	mov	r28, r25
    2fd2:	dd 27       	eor	r29, r29
    2fd4:	88 23       	and	r24, r24
    2fd6:	2a f0       	brmi	.+10     	; 0x2fe2 <log+0x26>
    2fd8:	21 97       	sbiw	r28, 0x01	; 1
    2fda:	66 0f       	add	r22, r22
    2fdc:	77 1f       	adc	r23, r23
    2fde:	88 1f       	adc	r24, r24
    2fe0:	da f7       	brpl	.-10     	; 0x2fd8 <log+0x1c>
    2fe2:	20 e0       	ldi	r18, 0x00	; 0
    2fe4:	30 e0       	ldi	r19, 0x00	; 0
    2fe6:	40 e8       	ldi	r20, 0x80	; 128
    2fe8:	5f eb       	ldi	r21, 0xBF	; 191
    2fea:	9f e3       	ldi	r25, 0x3F	; 63
    2fec:	88 39       	cpi	r24, 0x98	; 152
    2fee:	20 f0       	brcs	.+8      	; 0x2ff8 <log+0x3c>
    2ff0:	80 3e       	cpi	r24, 0xE0	; 224
    2ff2:	30 f0       	brcs	.+12     	; 0x3000 <log+0x44>
    2ff4:	21 96       	adiw	r28, 0x01	; 1
    2ff6:	8f 77       	andi	r24, 0x7F	; 127
    2ff8:	d5 dc       	rcall	.-1622   	; 0x29a4 <__addsf3>
    2ffa:	e4 e2       	ldi	r30, 0x24	; 36
    2ffc:	f2 e0       	ldi	r31, 0x02	; 2
    2ffe:	03 c0       	rjmp	.+6      	; 0x3006 <log+0x4a>
    3000:	d1 dc       	rcall	.-1630   	; 0x29a4 <__addsf3>
    3002:	e1 e5       	ldi	r30, 0x51	; 81
    3004:	f2 e0       	ldi	r31, 0x02	; 2
    3006:	39 de       	rcall	.-910    	; 0x2c7a <__fp_powser>
    3008:	8b 01       	movw	r16, r22
    300a:	be 01       	movw	r22, r28
    300c:	ec 01       	movw	r28, r24
    300e:	fb 2e       	mov	r15, r27
    3010:	6f 57       	subi	r22, 0x7F	; 127
    3012:	71 09       	sbc	r23, r1
    3014:	75 95       	asr	r23
    3016:	77 1f       	adc	r23, r23
    3018:	88 0b       	sbc	r24, r24
    301a:	99 0b       	sbc	r25, r25
    301c:	c6 dd       	rcall	.-1140   	; 0x2baa <__floatsisf>
    301e:	28 e1       	ldi	r18, 0x18	; 24
    3020:	32 e7       	ldi	r19, 0x72	; 114
    3022:	41 e3       	ldi	r20, 0x31	; 49
    3024:	5f e3       	ldi	r21, 0x3F	; 63
    3026:	ad de       	rcall	.-678    	; 0x2d82 <__mulsf3x>
    3028:	af 2d       	mov	r26, r15
    302a:	98 01       	movw	r18, r16
    302c:	ae 01       	movw	r20, r28
    302e:	ff 90       	pop	r15
    3030:	0f 91       	pop	r16
    3032:	1f 91       	pop	r17
    3034:	cf 91       	pop	r28
    3036:	df 91       	pop	r29
    3038:	c6 dc       	rcall	.-1652   	; 0x29c6 <__addsf3x>
    303a:	52 ce       	rjmp	.-860    	; 0x2ce0 <__fp_round>

0000303c <modf>:
    303c:	fa 01       	movw	r30, r20
    303e:	dc 01       	movw	r26, r24
    3040:	aa 0f       	add	r26, r26
    3042:	bb 1f       	adc	r27, r27
    3044:	9b 01       	movw	r18, r22
    3046:	ac 01       	movw	r20, r24
    3048:	bf 57       	subi	r27, 0x7F	; 127
    304a:	28 f4       	brcc	.+10     	; 0x3056 <modf+0x1a>
    304c:	22 27       	eor	r18, r18
    304e:	33 27       	eor	r19, r19
    3050:	44 27       	eor	r20, r20
    3052:	50 78       	andi	r21, 0x80	; 128
    3054:	1f c0       	rjmp	.+62     	; 0x3094 <modf+0x58>
    3056:	b7 51       	subi	r27, 0x17	; 23
    3058:	88 f4       	brcc	.+34     	; 0x307c <modf+0x40>
    305a:	ab 2f       	mov	r26, r27
    305c:	00 24       	eor	r0, r0
    305e:	46 95       	lsr	r20
    3060:	37 95       	ror	r19
    3062:	27 95       	ror	r18
    3064:	01 1c       	adc	r0, r1
    3066:	a3 95       	inc	r26
    3068:	d2 f3       	brmi	.-12     	; 0x305e <modf+0x22>
    306a:	00 20       	and	r0, r0
    306c:	69 f0       	breq	.+26     	; 0x3088 <modf+0x4c>
    306e:	22 0f       	add	r18, r18
    3070:	33 1f       	adc	r19, r19
    3072:	44 1f       	adc	r20, r20
    3074:	b3 95       	inc	r27
    3076:	da f3       	brmi	.-10     	; 0x306e <modf+0x32>
    3078:	0d d0       	rcall	.+26     	; 0x3094 <modf+0x58>
    307a:	93 cc       	rjmp	.-1754   	; 0x29a2 <__subsf3>
    307c:	61 30       	cpi	r22, 0x01	; 1
    307e:	71 05       	cpc	r23, r1
    3080:	a0 e8       	ldi	r26, 0x80	; 128
    3082:	8a 07       	cpc	r24, r26
    3084:	b9 46       	sbci	r27, 0x69	; 105
    3086:	30 f4       	brcc	.+12     	; 0x3094 <modf+0x58>
    3088:	9b 01       	movw	r18, r22
    308a:	ac 01       	movw	r20, r24
    308c:	66 27       	eor	r22, r22
    308e:	77 27       	eor	r23, r23
    3090:	88 27       	eor	r24, r24
    3092:	90 78       	andi	r25, 0x80	; 128
    3094:	30 96       	adiw	r30, 0x00	; 0
    3096:	21 f0       	breq	.+8      	; 0x30a0 <modf+0x64>
    3098:	20 83       	st	Z, r18
    309a:	31 83       	std	Z+1, r19	; 0x01
    309c:	42 83       	std	Z+2, r20	; 0x02
    309e:	53 83       	std	Z+3, r21	; 0x03
    30a0:	08 95       	ret

000030a2 <__mulsi3>:
    30a2:	db 01       	movw	r26, r22
    30a4:	8f 93       	push	r24
    30a6:	9f 93       	push	r25
    30a8:	70 d0       	rcall	.+224    	; 0x318a <__muluhisi3>
    30aa:	bf 91       	pop	r27
    30ac:	af 91       	pop	r26
    30ae:	a2 9f       	mul	r26, r18
    30b0:	80 0d       	add	r24, r0
    30b2:	91 1d       	adc	r25, r1
    30b4:	a3 9f       	mul	r26, r19
    30b6:	90 0d       	add	r25, r0
    30b8:	b2 9f       	mul	r27, r18
    30ba:	90 0d       	add	r25, r0
    30bc:	11 24       	eor	r1, r1
    30be:	08 95       	ret

000030c0 <__udivmodhi4>:
    30c0:	aa 1b       	sub	r26, r26
    30c2:	bb 1b       	sub	r27, r27
    30c4:	51 e1       	ldi	r21, 0x11	; 17
    30c6:	07 c0       	rjmp	.+14     	; 0x30d6 <__udivmodhi4_ep>

000030c8 <__udivmodhi4_loop>:
    30c8:	aa 1f       	adc	r26, r26
    30ca:	bb 1f       	adc	r27, r27
    30cc:	a6 17       	cp	r26, r22
    30ce:	b7 07       	cpc	r27, r23
    30d0:	10 f0       	brcs	.+4      	; 0x30d6 <__udivmodhi4_ep>
    30d2:	a6 1b       	sub	r26, r22
    30d4:	b7 0b       	sbc	r27, r23

000030d6 <__udivmodhi4_ep>:
    30d6:	88 1f       	adc	r24, r24
    30d8:	99 1f       	adc	r25, r25
    30da:	5a 95       	dec	r21
    30dc:	a9 f7       	brne	.-22     	; 0x30c8 <__udivmodhi4_loop>
    30de:	80 95       	com	r24
    30e0:	90 95       	com	r25
    30e2:	bc 01       	movw	r22, r24
    30e4:	cd 01       	movw	r24, r26
    30e6:	08 95       	ret

000030e8 <__divmodhi4>:
    30e8:	97 fb       	bst	r25, 7
    30ea:	07 2e       	mov	r0, r23
    30ec:	16 f4       	brtc	.+4      	; 0x30f2 <__divmodhi4+0xa>
    30ee:	00 94       	com	r0
    30f0:	06 d0       	rcall	.+12     	; 0x30fe <__divmodhi4_neg1>
    30f2:	77 fd       	sbrc	r23, 7
    30f4:	08 d0       	rcall	.+16     	; 0x3106 <__divmodhi4_neg2>
    30f6:	e4 df       	rcall	.-56     	; 0x30c0 <__udivmodhi4>
    30f8:	07 fc       	sbrc	r0, 7
    30fa:	05 d0       	rcall	.+10     	; 0x3106 <__divmodhi4_neg2>
    30fc:	3e f4       	brtc	.+14     	; 0x310c <__divmodhi4_exit>

000030fe <__divmodhi4_neg1>:
    30fe:	90 95       	com	r25
    3100:	81 95       	neg	r24
    3102:	9f 4f       	sbci	r25, 0xFF	; 255
    3104:	08 95       	ret

00003106 <__divmodhi4_neg2>:
    3106:	70 95       	com	r23
    3108:	61 95       	neg	r22
    310a:	7f 4f       	sbci	r23, 0xFF	; 255

0000310c <__divmodhi4_exit>:
    310c:	08 95       	ret

0000310e <__udivmodsi4>:
    310e:	a1 e2       	ldi	r26, 0x21	; 33
    3110:	1a 2e       	mov	r1, r26
    3112:	aa 1b       	sub	r26, r26
    3114:	bb 1b       	sub	r27, r27
    3116:	fd 01       	movw	r30, r26
    3118:	0d c0       	rjmp	.+26     	; 0x3134 <__udivmodsi4_ep>

0000311a <__udivmodsi4_loop>:
    311a:	aa 1f       	adc	r26, r26
    311c:	bb 1f       	adc	r27, r27
    311e:	ee 1f       	adc	r30, r30
    3120:	ff 1f       	adc	r31, r31
    3122:	a2 17       	cp	r26, r18
    3124:	b3 07       	cpc	r27, r19
    3126:	e4 07       	cpc	r30, r20
    3128:	f5 07       	cpc	r31, r21
    312a:	20 f0       	brcs	.+8      	; 0x3134 <__udivmodsi4_ep>
    312c:	a2 1b       	sub	r26, r18
    312e:	b3 0b       	sbc	r27, r19
    3130:	e4 0b       	sbc	r30, r20
    3132:	f5 0b       	sbc	r31, r21

00003134 <__udivmodsi4_ep>:
    3134:	66 1f       	adc	r22, r22
    3136:	77 1f       	adc	r23, r23
    3138:	88 1f       	adc	r24, r24
    313a:	99 1f       	adc	r25, r25
    313c:	1a 94       	dec	r1
    313e:	69 f7       	brne	.-38     	; 0x311a <__udivmodsi4_loop>
    3140:	60 95       	com	r22
    3142:	70 95       	com	r23
    3144:	80 95       	com	r24
    3146:	90 95       	com	r25
    3148:	9b 01       	movw	r18, r22
    314a:	ac 01       	movw	r20, r24
    314c:	bd 01       	movw	r22, r26
    314e:	cf 01       	movw	r24, r30
    3150:	08 95       	ret

00003152 <__divmodsi4>:
    3152:	05 2e       	mov	r0, r21
    3154:	97 fb       	bst	r25, 7
    3156:	16 f4       	brtc	.+4      	; 0x315c <__divmodsi4+0xa>
    3158:	00 94       	com	r0
    315a:	0f d0       	rcall	.+30     	; 0x317a <__negsi2>
    315c:	57 fd       	sbrc	r21, 7
    315e:	05 d0       	rcall	.+10     	; 0x316a <__divmodsi4_neg2>
    3160:	d6 df       	rcall	.-84     	; 0x310e <__udivmodsi4>
    3162:	07 fc       	sbrc	r0, 7
    3164:	02 d0       	rcall	.+4      	; 0x316a <__divmodsi4_neg2>
    3166:	46 f4       	brtc	.+16     	; 0x3178 <__divmodsi4_exit>
    3168:	08 c0       	rjmp	.+16     	; 0x317a <__negsi2>

0000316a <__divmodsi4_neg2>:
    316a:	50 95       	com	r21
    316c:	40 95       	com	r20
    316e:	30 95       	com	r19
    3170:	21 95       	neg	r18
    3172:	3f 4f       	sbci	r19, 0xFF	; 255
    3174:	4f 4f       	sbci	r20, 0xFF	; 255
    3176:	5f 4f       	sbci	r21, 0xFF	; 255

00003178 <__divmodsi4_exit>:
    3178:	08 95       	ret

0000317a <__negsi2>:
    317a:	90 95       	com	r25
    317c:	80 95       	com	r24
    317e:	70 95       	com	r23
    3180:	61 95       	neg	r22
    3182:	7f 4f       	sbci	r23, 0xFF	; 255
    3184:	8f 4f       	sbci	r24, 0xFF	; 255
    3186:	9f 4f       	sbci	r25, 0xFF	; 255
    3188:	08 95       	ret

0000318a <__muluhisi3>:
    318a:	0f d0       	rcall	.+30     	; 0x31aa <__umulhisi3>
    318c:	a5 9f       	mul	r26, r21
    318e:	90 0d       	add	r25, r0
    3190:	b4 9f       	mul	r27, r20
    3192:	90 0d       	add	r25, r0
    3194:	a4 9f       	mul	r26, r20
    3196:	80 0d       	add	r24, r0
    3198:	91 1d       	adc	r25, r1
    319a:	11 24       	eor	r1, r1
    319c:	08 95       	ret

0000319e <__mulshisi3>:
    319e:	b7 ff       	sbrs	r27, 7
    31a0:	f4 cf       	rjmp	.-24     	; 0x318a <__muluhisi3>

000031a2 <__mulohisi3>:
    31a2:	f3 df       	rcall	.-26     	; 0x318a <__muluhisi3>
    31a4:	82 1b       	sub	r24, r18
    31a6:	93 0b       	sbc	r25, r19
    31a8:	08 95       	ret

000031aa <__umulhisi3>:
    31aa:	a2 9f       	mul	r26, r18
    31ac:	b0 01       	movw	r22, r0
    31ae:	b3 9f       	mul	r27, r19
    31b0:	c0 01       	movw	r24, r0
    31b2:	a3 9f       	mul	r26, r19
    31b4:	70 0d       	add	r23, r0
    31b6:	81 1d       	adc	r24, r1
    31b8:	11 24       	eor	r1, r1
    31ba:	91 1d       	adc	r25, r1
    31bc:	b2 9f       	mul	r27, r18
    31be:	70 0d       	add	r23, r0
    31c0:	81 1d       	adc	r24, r1
    31c2:	11 24       	eor	r1, r1
    31c4:	91 1d       	adc	r25, r1
    31c6:	08 95       	ret

000031c8 <fdevopen>:
    31c8:	0f 93       	push	r16
    31ca:	1f 93       	push	r17
    31cc:	cf 93       	push	r28
    31ce:	df 93       	push	r29
    31d0:	00 97       	sbiw	r24, 0x00	; 0
    31d2:	31 f4       	brne	.+12     	; 0x31e0 <fdevopen+0x18>
    31d4:	61 15       	cp	r22, r1
    31d6:	71 05       	cpc	r23, r1
    31d8:	19 f4       	brne	.+6      	; 0x31e0 <fdevopen+0x18>
    31da:	80 e0       	ldi	r24, 0x00	; 0
    31dc:	90 e0       	ldi	r25, 0x00	; 0
    31de:	39 c0       	rjmp	.+114    	; 0x3252 <fdevopen+0x8a>
    31e0:	8b 01       	movw	r16, r22
    31e2:	ec 01       	movw	r28, r24
    31e4:	6e e0       	ldi	r22, 0x0E	; 14
    31e6:	70 e0       	ldi	r23, 0x00	; 0
    31e8:	81 e0       	ldi	r24, 0x01	; 1
    31ea:	90 e0       	ldi	r25, 0x00	; 0
    31ec:	47 d5       	rcall	.+2702   	; 0x3c7c <calloc>
    31ee:	fc 01       	movw	r30, r24
    31f0:	89 2b       	or	r24, r25
    31f2:	99 f3       	breq	.-26     	; 0x31da <fdevopen+0x12>
    31f4:	80 e8       	ldi	r24, 0x80	; 128
    31f6:	83 83       	std	Z+3, r24	; 0x03
    31f8:	01 15       	cp	r16, r1
    31fa:	11 05       	cpc	r17, r1
    31fc:	71 f0       	breq	.+28     	; 0x321a <fdevopen+0x52>
    31fe:	02 87       	std	Z+10, r16	; 0x0a
    3200:	13 87       	std	Z+11, r17	; 0x0b
    3202:	81 e8       	ldi	r24, 0x81	; 129
    3204:	83 83       	std	Z+3, r24	; 0x03
    3206:	80 91 70 21 	lds	r24, 0x2170	; 0x802170 <__iob>
    320a:	90 91 71 21 	lds	r25, 0x2171	; 0x802171 <__iob+0x1>
    320e:	89 2b       	or	r24, r25
    3210:	21 f4       	brne	.+8      	; 0x321a <fdevopen+0x52>
    3212:	e0 93 70 21 	sts	0x2170, r30	; 0x802170 <__iob>
    3216:	f0 93 71 21 	sts	0x2171, r31	; 0x802171 <__iob+0x1>
    321a:	20 97       	sbiw	r28, 0x00	; 0
    321c:	c9 f0       	breq	.+50     	; 0x3250 <fdevopen+0x88>
    321e:	c0 87       	std	Z+8, r28	; 0x08
    3220:	d1 87       	std	Z+9, r29	; 0x09
    3222:	83 81       	ldd	r24, Z+3	; 0x03
    3224:	82 60       	ori	r24, 0x02	; 2
    3226:	83 83       	std	Z+3, r24	; 0x03
    3228:	80 91 72 21 	lds	r24, 0x2172	; 0x802172 <__iob+0x2>
    322c:	90 91 73 21 	lds	r25, 0x2173	; 0x802173 <__iob+0x3>
    3230:	89 2b       	or	r24, r25
    3232:	71 f4       	brne	.+28     	; 0x3250 <fdevopen+0x88>
    3234:	e0 93 72 21 	sts	0x2172, r30	; 0x802172 <__iob+0x2>
    3238:	f0 93 73 21 	sts	0x2173, r31	; 0x802173 <__iob+0x3>
    323c:	80 91 74 21 	lds	r24, 0x2174	; 0x802174 <__iob+0x4>
    3240:	90 91 75 21 	lds	r25, 0x2175	; 0x802175 <__iob+0x5>
    3244:	89 2b       	or	r24, r25
    3246:	21 f4       	brne	.+8      	; 0x3250 <fdevopen+0x88>
    3248:	e0 93 74 21 	sts	0x2174, r30	; 0x802174 <__iob+0x4>
    324c:	f0 93 75 21 	sts	0x2175, r31	; 0x802175 <__iob+0x5>
    3250:	cf 01       	movw	r24, r30
    3252:	df 91       	pop	r29
    3254:	cf 91       	pop	r28
    3256:	1f 91       	pop	r17
    3258:	0f 91       	pop	r16
    325a:	08 95       	ret

0000325c <printf>:
    325c:	cf 93       	push	r28
    325e:	df 93       	push	r29
    3260:	cd b7       	in	r28, 0x3d	; 61
    3262:	de b7       	in	r29, 0x3e	; 62
    3264:	ae 01       	movw	r20, r28
    3266:	4a 5f       	subi	r20, 0xFA	; 250
    3268:	5f 4f       	sbci	r21, 0xFF	; 255
    326a:	fa 01       	movw	r30, r20
    326c:	61 91       	ld	r22, Z+
    326e:	71 91       	ld	r23, Z+
    3270:	af 01       	movw	r20, r30
    3272:	80 91 72 21 	lds	r24, 0x2172	; 0x802172 <__iob+0x2>
    3276:	90 91 73 21 	lds	r25, 0x2173	; 0x802173 <__iob+0x3>
    327a:	46 d0       	rcall	.+140    	; 0x3308 <vfprintf>
    327c:	df 91       	pop	r29
    327e:	cf 91       	pop	r28
    3280:	08 95       	ret

00003282 <sprintf>:
    3282:	0f 93       	push	r16
    3284:	1f 93       	push	r17
    3286:	cf 93       	push	r28
    3288:	df 93       	push	r29
    328a:	cd b7       	in	r28, 0x3d	; 61
    328c:	de b7       	in	r29, 0x3e	; 62
    328e:	2e 97       	sbiw	r28, 0x0e	; 14
    3290:	cd bf       	out	0x3d, r28	; 61
    3292:	de bf       	out	0x3e, r29	; 62
    3294:	0e 89       	ldd	r16, Y+22	; 0x16
    3296:	1f 89       	ldd	r17, Y+23	; 0x17
    3298:	86 e0       	ldi	r24, 0x06	; 6
    329a:	8c 83       	std	Y+4, r24	; 0x04
    329c:	09 83       	std	Y+1, r16	; 0x01
    329e:	1a 83       	std	Y+2, r17	; 0x02
    32a0:	8f ef       	ldi	r24, 0xFF	; 255
    32a2:	9f e7       	ldi	r25, 0x7F	; 127
    32a4:	8d 83       	std	Y+5, r24	; 0x05
    32a6:	9e 83       	std	Y+6, r25	; 0x06
    32a8:	ae 01       	movw	r20, r28
    32aa:	46 5e       	subi	r20, 0xE6	; 230
    32ac:	5f 4f       	sbci	r21, 0xFF	; 255
    32ae:	68 8d       	ldd	r22, Y+24	; 0x18
    32b0:	79 8d       	ldd	r23, Y+25	; 0x19
    32b2:	ce 01       	movw	r24, r28
    32b4:	01 96       	adiw	r24, 0x01	; 1
    32b6:	28 d0       	rcall	.+80     	; 0x3308 <vfprintf>
    32b8:	ef 81       	ldd	r30, Y+7	; 0x07
    32ba:	f8 85       	ldd	r31, Y+8	; 0x08
    32bc:	e0 0f       	add	r30, r16
    32be:	f1 1f       	adc	r31, r17
    32c0:	10 82       	st	Z, r1
    32c2:	2e 96       	adiw	r28, 0x0e	; 14
    32c4:	cd bf       	out	0x3d, r28	; 61
    32c6:	de bf       	out	0x3e, r29	; 62
    32c8:	df 91       	pop	r29
    32ca:	cf 91       	pop	r28
    32cc:	1f 91       	pop	r17
    32ce:	0f 91       	pop	r16
    32d0:	08 95       	ret

000032d2 <sscanf>:
    32d2:	cf 93       	push	r28
    32d4:	df 93       	push	r29
    32d6:	cd b7       	in	r28, 0x3d	; 61
    32d8:	de b7       	in	r29, 0x3e	; 62
    32da:	2e 97       	sbiw	r28, 0x0e	; 14
    32dc:	cd bf       	out	0x3d, r28	; 61
    32de:	de bf       	out	0x3e, r29	; 62
    32e0:	85 e0       	ldi	r24, 0x05	; 5
    32e2:	8c 83       	std	Y+4, r24	; 0x04
    32e4:	8c 89       	ldd	r24, Y+20	; 0x14
    32e6:	9d 89       	ldd	r25, Y+21	; 0x15
    32e8:	89 83       	std	Y+1, r24	; 0x01
    32ea:	9a 83       	std	Y+2, r25	; 0x02
    32ec:	ae 01       	movw	r20, r28
    32ee:	48 5e       	subi	r20, 0xE8	; 232
    32f0:	5f 4f       	sbci	r21, 0xFF	; 255
    32f2:	6e 89       	ldd	r22, Y+22	; 0x16
    32f4:	7f 89       	ldd	r23, Y+23	; 0x17
    32f6:	ce 01       	movw	r24, r28
    32f8:	01 96       	adiw	r24, 0x01	; 1
    32fa:	a9 d3       	rcall	.+1874   	; 0x3a4e <vfscanf>
    32fc:	2e 96       	adiw	r28, 0x0e	; 14
    32fe:	cd bf       	out	0x3d, r28	; 61
    3300:	de bf       	out	0x3e, r29	; 62
    3302:	df 91       	pop	r29
    3304:	cf 91       	pop	r28
    3306:	08 95       	ret

00003308 <vfprintf>:
    3308:	2f 92       	push	r2
    330a:	3f 92       	push	r3
    330c:	4f 92       	push	r4
    330e:	5f 92       	push	r5
    3310:	6f 92       	push	r6
    3312:	7f 92       	push	r7
    3314:	8f 92       	push	r8
    3316:	9f 92       	push	r9
    3318:	af 92       	push	r10
    331a:	bf 92       	push	r11
    331c:	cf 92       	push	r12
    331e:	df 92       	push	r13
    3320:	ef 92       	push	r14
    3322:	ff 92       	push	r15
    3324:	0f 93       	push	r16
    3326:	1f 93       	push	r17
    3328:	cf 93       	push	r28
    332a:	df 93       	push	r29
    332c:	cd b7       	in	r28, 0x3d	; 61
    332e:	de b7       	in	r29, 0x3e	; 62
    3330:	2b 97       	sbiw	r28, 0x0b	; 11
    3332:	cd bf       	out	0x3d, r28	; 61
    3334:	de bf       	out	0x3e, r29	; 62
    3336:	6c 01       	movw	r12, r24
    3338:	7b 01       	movw	r14, r22
    333a:	8a 01       	movw	r16, r20
    333c:	fc 01       	movw	r30, r24
    333e:	16 82       	std	Z+6, r1	; 0x06
    3340:	17 82       	std	Z+7, r1	; 0x07
    3342:	83 81       	ldd	r24, Z+3	; 0x03
    3344:	81 ff       	sbrs	r24, 1
    3346:	bf c1       	rjmp	.+894    	; 0x36c6 <vfprintf+0x3be>
    3348:	ce 01       	movw	r24, r28
    334a:	01 96       	adiw	r24, 0x01	; 1
    334c:	3c 01       	movw	r6, r24
    334e:	f6 01       	movw	r30, r12
    3350:	93 81       	ldd	r25, Z+3	; 0x03
    3352:	f7 01       	movw	r30, r14
    3354:	93 fd       	sbrc	r25, 3
    3356:	85 91       	lpm	r24, Z+
    3358:	93 ff       	sbrs	r25, 3
    335a:	81 91       	ld	r24, Z+
    335c:	7f 01       	movw	r14, r30
    335e:	88 23       	and	r24, r24
    3360:	09 f4       	brne	.+2      	; 0x3364 <vfprintf+0x5c>
    3362:	ad c1       	rjmp	.+858    	; 0x36be <vfprintf+0x3b6>
    3364:	85 32       	cpi	r24, 0x25	; 37
    3366:	39 f4       	brne	.+14     	; 0x3376 <vfprintf+0x6e>
    3368:	93 fd       	sbrc	r25, 3
    336a:	85 91       	lpm	r24, Z+
    336c:	93 ff       	sbrs	r25, 3
    336e:	81 91       	ld	r24, Z+
    3370:	7f 01       	movw	r14, r30
    3372:	85 32       	cpi	r24, 0x25	; 37
    3374:	21 f4       	brne	.+8      	; 0x337e <vfprintf+0x76>
    3376:	b6 01       	movw	r22, r12
    3378:	90 e0       	ldi	r25, 0x00	; 0
    337a:	29 d6       	rcall	.+3154   	; 0x3fce <fputc>
    337c:	e8 cf       	rjmp	.-48     	; 0x334e <vfprintf+0x46>
    337e:	91 2c       	mov	r9, r1
    3380:	21 2c       	mov	r2, r1
    3382:	31 2c       	mov	r3, r1
    3384:	ff e1       	ldi	r31, 0x1F	; 31
    3386:	f3 15       	cp	r31, r3
    3388:	d8 f0       	brcs	.+54     	; 0x33c0 <vfprintf+0xb8>
    338a:	8b 32       	cpi	r24, 0x2B	; 43
    338c:	79 f0       	breq	.+30     	; 0x33ac <vfprintf+0xa4>
    338e:	38 f4       	brcc	.+14     	; 0x339e <vfprintf+0x96>
    3390:	80 32       	cpi	r24, 0x20	; 32
    3392:	79 f0       	breq	.+30     	; 0x33b2 <vfprintf+0xaa>
    3394:	83 32       	cpi	r24, 0x23	; 35
    3396:	a1 f4       	brne	.+40     	; 0x33c0 <vfprintf+0xb8>
    3398:	23 2d       	mov	r18, r3
    339a:	20 61       	ori	r18, 0x10	; 16
    339c:	1d c0       	rjmp	.+58     	; 0x33d8 <vfprintf+0xd0>
    339e:	8d 32       	cpi	r24, 0x2D	; 45
    33a0:	61 f0       	breq	.+24     	; 0x33ba <vfprintf+0xb2>
    33a2:	80 33       	cpi	r24, 0x30	; 48
    33a4:	69 f4       	brne	.+26     	; 0x33c0 <vfprintf+0xb8>
    33a6:	23 2d       	mov	r18, r3
    33a8:	21 60       	ori	r18, 0x01	; 1
    33aa:	16 c0       	rjmp	.+44     	; 0x33d8 <vfprintf+0xd0>
    33ac:	83 2d       	mov	r24, r3
    33ae:	82 60       	ori	r24, 0x02	; 2
    33b0:	38 2e       	mov	r3, r24
    33b2:	e3 2d       	mov	r30, r3
    33b4:	e4 60       	ori	r30, 0x04	; 4
    33b6:	3e 2e       	mov	r3, r30
    33b8:	2a c0       	rjmp	.+84     	; 0x340e <vfprintf+0x106>
    33ba:	f3 2d       	mov	r31, r3
    33bc:	f8 60       	ori	r31, 0x08	; 8
    33be:	1d c0       	rjmp	.+58     	; 0x33fa <vfprintf+0xf2>
    33c0:	37 fc       	sbrc	r3, 7
    33c2:	2d c0       	rjmp	.+90     	; 0x341e <vfprintf+0x116>
    33c4:	20 ed       	ldi	r18, 0xD0	; 208
    33c6:	28 0f       	add	r18, r24
    33c8:	2a 30       	cpi	r18, 0x0A	; 10
    33ca:	40 f0       	brcs	.+16     	; 0x33dc <vfprintf+0xd4>
    33cc:	8e 32       	cpi	r24, 0x2E	; 46
    33ce:	b9 f4       	brne	.+46     	; 0x33fe <vfprintf+0xf6>
    33d0:	36 fc       	sbrc	r3, 6
    33d2:	75 c1       	rjmp	.+746    	; 0x36be <vfprintf+0x3b6>
    33d4:	23 2d       	mov	r18, r3
    33d6:	20 64       	ori	r18, 0x40	; 64
    33d8:	32 2e       	mov	r3, r18
    33da:	19 c0       	rjmp	.+50     	; 0x340e <vfprintf+0x106>
    33dc:	36 fe       	sbrs	r3, 6
    33de:	06 c0       	rjmp	.+12     	; 0x33ec <vfprintf+0xe4>
    33e0:	8a e0       	ldi	r24, 0x0A	; 10
    33e2:	98 9e       	mul	r9, r24
    33e4:	20 0d       	add	r18, r0
    33e6:	11 24       	eor	r1, r1
    33e8:	92 2e       	mov	r9, r18
    33ea:	11 c0       	rjmp	.+34     	; 0x340e <vfprintf+0x106>
    33ec:	ea e0       	ldi	r30, 0x0A	; 10
    33ee:	2e 9e       	mul	r2, r30
    33f0:	20 0d       	add	r18, r0
    33f2:	11 24       	eor	r1, r1
    33f4:	22 2e       	mov	r2, r18
    33f6:	f3 2d       	mov	r31, r3
    33f8:	f0 62       	ori	r31, 0x20	; 32
    33fa:	3f 2e       	mov	r3, r31
    33fc:	08 c0       	rjmp	.+16     	; 0x340e <vfprintf+0x106>
    33fe:	8c 36       	cpi	r24, 0x6C	; 108
    3400:	21 f4       	brne	.+8      	; 0x340a <vfprintf+0x102>
    3402:	83 2d       	mov	r24, r3
    3404:	80 68       	ori	r24, 0x80	; 128
    3406:	38 2e       	mov	r3, r24
    3408:	02 c0       	rjmp	.+4      	; 0x340e <vfprintf+0x106>
    340a:	88 36       	cpi	r24, 0x68	; 104
    340c:	41 f4       	brne	.+16     	; 0x341e <vfprintf+0x116>
    340e:	f7 01       	movw	r30, r14
    3410:	93 fd       	sbrc	r25, 3
    3412:	85 91       	lpm	r24, Z+
    3414:	93 ff       	sbrs	r25, 3
    3416:	81 91       	ld	r24, Z+
    3418:	7f 01       	movw	r14, r30
    341a:	81 11       	cpse	r24, r1
    341c:	b3 cf       	rjmp	.-154    	; 0x3384 <vfprintf+0x7c>
    341e:	98 2f       	mov	r25, r24
    3420:	9f 7d       	andi	r25, 0xDF	; 223
    3422:	95 54       	subi	r25, 0x45	; 69
    3424:	93 30       	cpi	r25, 0x03	; 3
    3426:	28 f4       	brcc	.+10     	; 0x3432 <vfprintf+0x12a>
    3428:	0c 5f       	subi	r16, 0xFC	; 252
    342a:	1f 4f       	sbci	r17, 0xFF	; 255
    342c:	9f e3       	ldi	r25, 0x3F	; 63
    342e:	99 83       	std	Y+1, r25	; 0x01
    3430:	0d c0       	rjmp	.+26     	; 0x344c <vfprintf+0x144>
    3432:	83 36       	cpi	r24, 0x63	; 99
    3434:	31 f0       	breq	.+12     	; 0x3442 <vfprintf+0x13a>
    3436:	83 37       	cpi	r24, 0x73	; 115
    3438:	71 f0       	breq	.+28     	; 0x3456 <vfprintf+0x14e>
    343a:	83 35       	cpi	r24, 0x53	; 83
    343c:	09 f0       	breq	.+2      	; 0x3440 <vfprintf+0x138>
    343e:	55 c0       	rjmp	.+170    	; 0x34ea <vfprintf+0x1e2>
    3440:	20 c0       	rjmp	.+64     	; 0x3482 <vfprintf+0x17a>
    3442:	f8 01       	movw	r30, r16
    3444:	80 81       	ld	r24, Z
    3446:	89 83       	std	Y+1, r24	; 0x01
    3448:	0e 5f       	subi	r16, 0xFE	; 254
    344a:	1f 4f       	sbci	r17, 0xFF	; 255
    344c:	88 24       	eor	r8, r8
    344e:	83 94       	inc	r8
    3450:	91 2c       	mov	r9, r1
    3452:	53 01       	movw	r10, r6
    3454:	12 c0       	rjmp	.+36     	; 0x347a <vfprintf+0x172>
    3456:	28 01       	movw	r4, r16
    3458:	f2 e0       	ldi	r31, 0x02	; 2
    345a:	4f 0e       	add	r4, r31
    345c:	51 1c       	adc	r5, r1
    345e:	f8 01       	movw	r30, r16
    3460:	a0 80       	ld	r10, Z
    3462:	b1 80       	ldd	r11, Z+1	; 0x01
    3464:	36 fe       	sbrs	r3, 6
    3466:	03 c0       	rjmp	.+6      	; 0x346e <vfprintf+0x166>
    3468:	69 2d       	mov	r22, r9
    346a:	70 e0       	ldi	r23, 0x00	; 0
    346c:	02 c0       	rjmp	.+4      	; 0x3472 <vfprintf+0x16a>
    346e:	6f ef       	ldi	r22, 0xFF	; 255
    3470:	7f ef       	ldi	r23, 0xFF	; 255
    3472:	c5 01       	movw	r24, r10
    3474:	63 d5       	rcall	.+2758   	; 0x3f3c <strnlen>
    3476:	4c 01       	movw	r8, r24
    3478:	82 01       	movw	r16, r4
    347a:	f3 2d       	mov	r31, r3
    347c:	ff 77       	andi	r31, 0x7F	; 127
    347e:	3f 2e       	mov	r3, r31
    3480:	15 c0       	rjmp	.+42     	; 0x34ac <vfprintf+0x1a4>
    3482:	28 01       	movw	r4, r16
    3484:	22 e0       	ldi	r18, 0x02	; 2
    3486:	42 0e       	add	r4, r18
    3488:	51 1c       	adc	r5, r1
    348a:	f8 01       	movw	r30, r16
    348c:	a0 80       	ld	r10, Z
    348e:	b1 80       	ldd	r11, Z+1	; 0x01
    3490:	36 fe       	sbrs	r3, 6
    3492:	03 c0       	rjmp	.+6      	; 0x349a <vfprintf+0x192>
    3494:	69 2d       	mov	r22, r9
    3496:	70 e0       	ldi	r23, 0x00	; 0
    3498:	02 c0       	rjmp	.+4      	; 0x349e <vfprintf+0x196>
    349a:	6f ef       	ldi	r22, 0xFF	; 255
    349c:	7f ef       	ldi	r23, 0xFF	; 255
    349e:	c5 01       	movw	r24, r10
    34a0:	3b d5       	rcall	.+2678   	; 0x3f18 <strnlen_P>
    34a2:	4c 01       	movw	r8, r24
    34a4:	f3 2d       	mov	r31, r3
    34a6:	f0 68       	ori	r31, 0x80	; 128
    34a8:	3f 2e       	mov	r3, r31
    34aa:	82 01       	movw	r16, r4
    34ac:	33 fc       	sbrc	r3, 3
    34ae:	19 c0       	rjmp	.+50     	; 0x34e2 <vfprintf+0x1da>
    34b0:	82 2d       	mov	r24, r2
    34b2:	90 e0       	ldi	r25, 0x00	; 0
    34b4:	88 16       	cp	r8, r24
    34b6:	99 06       	cpc	r9, r25
    34b8:	a0 f4       	brcc	.+40     	; 0x34e2 <vfprintf+0x1da>
    34ba:	b6 01       	movw	r22, r12
    34bc:	80 e2       	ldi	r24, 0x20	; 32
    34be:	90 e0       	ldi	r25, 0x00	; 0
    34c0:	86 d5       	rcall	.+2828   	; 0x3fce <fputc>
    34c2:	2a 94       	dec	r2
    34c4:	f5 cf       	rjmp	.-22     	; 0x34b0 <vfprintf+0x1a8>
    34c6:	f5 01       	movw	r30, r10
    34c8:	37 fc       	sbrc	r3, 7
    34ca:	85 91       	lpm	r24, Z+
    34cc:	37 fe       	sbrs	r3, 7
    34ce:	81 91       	ld	r24, Z+
    34d0:	5f 01       	movw	r10, r30
    34d2:	b6 01       	movw	r22, r12
    34d4:	90 e0       	ldi	r25, 0x00	; 0
    34d6:	7b d5       	rcall	.+2806   	; 0x3fce <fputc>
    34d8:	21 10       	cpse	r2, r1
    34da:	2a 94       	dec	r2
    34dc:	21 e0       	ldi	r18, 0x01	; 1
    34de:	82 1a       	sub	r8, r18
    34e0:	91 08       	sbc	r9, r1
    34e2:	81 14       	cp	r8, r1
    34e4:	91 04       	cpc	r9, r1
    34e6:	79 f7       	brne	.-34     	; 0x34c6 <vfprintf+0x1be>
    34e8:	e1 c0       	rjmp	.+450    	; 0x36ac <vfprintf+0x3a4>
    34ea:	84 36       	cpi	r24, 0x64	; 100
    34ec:	11 f0       	breq	.+4      	; 0x34f2 <vfprintf+0x1ea>
    34ee:	89 36       	cpi	r24, 0x69	; 105
    34f0:	39 f5       	brne	.+78     	; 0x3540 <vfprintf+0x238>
    34f2:	f8 01       	movw	r30, r16
    34f4:	37 fe       	sbrs	r3, 7
    34f6:	07 c0       	rjmp	.+14     	; 0x3506 <vfprintf+0x1fe>
    34f8:	60 81       	ld	r22, Z
    34fa:	71 81       	ldd	r23, Z+1	; 0x01
    34fc:	82 81       	ldd	r24, Z+2	; 0x02
    34fe:	93 81       	ldd	r25, Z+3	; 0x03
    3500:	0c 5f       	subi	r16, 0xFC	; 252
    3502:	1f 4f       	sbci	r17, 0xFF	; 255
    3504:	08 c0       	rjmp	.+16     	; 0x3516 <vfprintf+0x20e>
    3506:	60 81       	ld	r22, Z
    3508:	71 81       	ldd	r23, Z+1	; 0x01
    350a:	07 2e       	mov	r0, r23
    350c:	00 0c       	add	r0, r0
    350e:	88 0b       	sbc	r24, r24
    3510:	99 0b       	sbc	r25, r25
    3512:	0e 5f       	subi	r16, 0xFE	; 254
    3514:	1f 4f       	sbci	r17, 0xFF	; 255
    3516:	f3 2d       	mov	r31, r3
    3518:	ff 76       	andi	r31, 0x6F	; 111
    351a:	3f 2e       	mov	r3, r31
    351c:	97 ff       	sbrs	r25, 7
    351e:	09 c0       	rjmp	.+18     	; 0x3532 <vfprintf+0x22a>
    3520:	90 95       	com	r25
    3522:	80 95       	com	r24
    3524:	70 95       	com	r23
    3526:	61 95       	neg	r22
    3528:	7f 4f       	sbci	r23, 0xFF	; 255
    352a:	8f 4f       	sbci	r24, 0xFF	; 255
    352c:	9f 4f       	sbci	r25, 0xFF	; 255
    352e:	f0 68       	ori	r31, 0x80	; 128
    3530:	3f 2e       	mov	r3, r31
    3532:	2a e0       	ldi	r18, 0x0A	; 10
    3534:	30 e0       	ldi	r19, 0x00	; 0
    3536:	a3 01       	movw	r20, r6
    3538:	9f d5       	rcall	.+2878   	; 0x4078 <__ultoa_invert>
    353a:	88 2e       	mov	r8, r24
    353c:	86 18       	sub	r8, r6
    353e:	44 c0       	rjmp	.+136    	; 0x35c8 <vfprintf+0x2c0>
    3540:	85 37       	cpi	r24, 0x75	; 117
    3542:	31 f4       	brne	.+12     	; 0x3550 <vfprintf+0x248>
    3544:	23 2d       	mov	r18, r3
    3546:	2f 7e       	andi	r18, 0xEF	; 239
    3548:	b2 2e       	mov	r11, r18
    354a:	2a e0       	ldi	r18, 0x0A	; 10
    354c:	30 e0       	ldi	r19, 0x00	; 0
    354e:	25 c0       	rjmp	.+74     	; 0x359a <vfprintf+0x292>
    3550:	93 2d       	mov	r25, r3
    3552:	99 7f       	andi	r25, 0xF9	; 249
    3554:	b9 2e       	mov	r11, r25
    3556:	8f 36       	cpi	r24, 0x6F	; 111
    3558:	c1 f0       	breq	.+48     	; 0x358a <vfprintf+0x282>
    355a:	18 f4       	brcc	.+6      	; 0x3562 <vfprintf+0x25a>
    355c:	88 35       	cpi	r24, 0x58	; 88
    355e:	79 f0       	breq	.+30     	; 0x357e <vfprintf+0x276>
    3560:	ae c0       	rjmp	.+348    	; 0x36be <vfprintf+0x3b6>
    3562:	80 37       	cpi	r24, 0x70	; 112
    3564:	19 f0       	breq	.+6      	; 0x356c <vfprintf+0x264>
    3566:	88 37       	cpi	r24, 0x78	; 120
    3568:	21 f0       	breq	.+8      	; 0x3572 <vfprintf+0x26a>
    356a:	a9 c0       	rjmp	.+338    	; 0x36be <vfprintf+0x3b6>
    356c:	e9 2f       	mov	r30, r25
    356e:	e0 61       	ori	r30, 0x10	; 16
    3570:	be 2e       	mov	r11, r30
    3572:	b4 fe       	sbrs	r11, 4
    3574:	0d c0       	rjmp	.+26     	; 0x3590 <vfprintf+0x288>
    3576:	fb 2d       	mov	r31, r11
    3578:	f4 60       	ori	r31, 0x04	; 4
    357a:	bf 2e       	mov	r11, r31
    357c:	09 c0       	rjmp	.+18     	; 0x3590 <vfprintf+0x288>
    357e:	34 fe       	sbrs	r3, 4
    3580:	0a c0       	rjmp	.+20     	; 0x3596 <vfprintf+0x28e>
    3582:	29 2f       	mov	r18, r25
    3584:	26 60       	ori	r18, 0x06	; 6
    3586:	b2 2e       	mov	r11, r18
    3588:	06 c0       	rjmp	.+12     	; 0x3596 <vfprintf+0x28e>
    358a:	28 e0       	ldi	r18, 0x08	; 8
    358c:	30 e0       	ldi	r19, 0x00	; 0
    358e:	05 c0       	rjmp	.+10     	; 0x359a <vfprintf+0x292>
    3590:	20 e1       	ldi	r18, 0x10	; 16
    3592:	30 e0       	ldi	r19, 0x00	; 0
    3594:	02 c0       	rjmp	.+4      	; 0x359a <vfprintf+0x292>
    3596:	20 e1       	ldi	r18, 0x10	; 16
    3598:	32 e0       	ldi	r19, 0x02	; 2
    359a:	f8 01       	movw	r30, r16
    359c:	b7 fe       	sbrs	r11, 7
    359e:	07 c0       	rjmp	.+14     	; 0x35ae <vfprintf+0x2a6>
    35a0:	60 81       	ld	r22, Z
    35a2:	71 81       	ldd	r23, Z+1	; 0x01
    35a4:	82 81       	ldd	r24, Z+2	; 0x02
    35a6:	93 81       	ldd	r25, Z+3	; 0x03
    35a8:	0c 5f       	subi	r16, 0xFC	; 252
    35aa:	1f 4f       	sbci	r17, 0xFF	; 255
    35ac:	06 c0       	rjmp	.+12     	; 0x35ba <vfprintf+0x2b2>
    35ae:	60 81       	ld	r22, Z
    35b0:	71 81       	ldd	r23, Z+1	; 0x01
    35b2:	80 e0       	ldi	r24, 0x00	; 0
    35b4:	90 e0       	ldi	r25, 0x00	; 0
    35b6:	0e 5f       	subi	r16, 0xFE	; 254
    35b8:	1f 4f       	sbci	r17, 0xFF	; 255
    35ba:	a3 01       	movw	r20, r6
    35bc:	5d d5       	rcall	.+2746   	; 0x4078 <__ultoa_invert>
    35be:	88 2e       	mov	r8, r24
    35c0:	86 18       	sub	r8, r6
    35c2:	fb 2d       	mov	r31, r11
    35c4:	ff 77       	andi	r31, 0x7F	; 127
    35c6:	3f 2e       	mov	r3, r31
    35c8:	36 fe       	sbrs	r3, 6
    35ca:	0d c0       	rjmp	.+26     	; 0x35e6 <vfprintf+0x2de>
    35cc:	23 2d       	mov	r18, r3
    35ce:	2e 7f       	andi	r18, 0xFE	; 254
    35d0:	a2 2e       	mov	r10, r18
    35d2:	89 14       	cp	r8, r9
    35d4:	58 f4       	brcc	.+22     	; 0x35ec <vfprintf+0x2e4>
    35d6:	34 fe       	sbrs	r3, 4
    35d8:	0b c0       	rjmp	.+22     	; 0x35f0 <vfprintf+0x2e8>
    35da:	32 fc       	sbrc	r3, 2
    35dc:	09 c0       	rjmp	.+18     	; 0x35f0 <vfprintf+0x2e8>
    35de:	83 2d       	mov	r24, r3
    35e0:	8e 7e       	andi	r24, 0xEE	; 238
    35e2:	a8 2e       	mov	r10, r24
    35e4:	05 c0       	rjmp	.+10     	; 0x35f0 <vfprintf+0x2e8>
    35e6:	b8 2c       	mov	r11, r8
    35e8:	a3 2c       	mov	r10, r3
    35ea:	03 c0       	rjmp	.+6      	; 0x35f2 <vfprintf+0x2ea>
    35ec:	b8 2c       	mov	r11, r8
    35ee:	01 c0       	rjmp	.+2      	; 0x35f2 <vfprintf+0x2ea>
    35f0:	b9 2c       	mov	r11, r9
    35f2:	a4 fe       	sbrs	r10, 4
    35f4:	0f c0       	rjmp	.+30     	; 0x3614 <vfprintf+0x30c>
    35f6:	fe 01       	movw	r30, r28
    35f8:	e8 0d       	add	r30, r8
    35fa:	f1 1d       	adc	r31, r1
    35fc:	80 81       	ld	r24, Z
    35fe:	80 33       	cpi	r24, 0x30	; 48
    3600:	21 f4       	brne	.+8      	; 0x360a <vfprintf+0x302>
    3602:	9a 2d       	mov	r25, r10
    3604:	99 7e       	andi	r25, 0xE9	; 233
    3606:	a9 2e       	mov	r10, r25
    3608:	09 c0       	rjmp	.+18     	; 0x361c <vfprintf+0x314>
    360a:	a2 fe       	sbrs	r10, 2
    360c:	06 c0       	rjmp	.+12     	; 0x361a <vfprintf+0x312>
    360e:	b3 94       	inc	r11
    3610:	b3 94       	inc	r11
    3612:	04 c0       	rjmp	.+8      	; 0x361c <vfprintf+0x314>
    3614:	8a 2d       	mov	r24, r10
    3616:	86 78       	andi	r24, 0x86	; 134
    3618:	09 f0       	breq	.+2      	; 0x361c <vfprintf+0x314>
    361a:	b3 94       	inc	r11
    361c:	a3 fc       	sbrc	r10, 3
    361e:	10 c0       	rjmp	.+32     	; 0x3640 <vfprintf+0x338>
    3620:	a0 fe       	sbrs	r10, 0
    3622:	06 c0       	rjmp	.+12     	; 0x3630 <vfprintf+0x328>
    3624:	b2 14       	cp	r11, r2
    3626:	80 f4       	brcc	.+32     	; 0x3648 <vfprintf+0x340>
    3628:	28 0c       	add	r2, r8
    362a:	92 2c       	mov	r9, r2
    362c:	9b 18       	sub	r9, r11
    362e:	0d c0       	rjmp	.+26     	; 0x364a <vfprintf+0x342>
    3630:	b2 14       	cp	r11, r2
    3632:	58 f4       	brcc	.+22     	; 0x364a <vfprintf+0x342>
    3634:	b6 01       	movw	r22, r12
    3636:	80 e2       	ldi	r24, 0x20	; 32
    3638:	90 e0       	ldi	r25, 0x00	; 0
    363a:	c9 d4       	rcall	.+2450   	; 0x3fce <fputc>
    363c:	b3 94       	inc	r11
    363e:	f8 cf       	rjmp	.-16     	; 0x3630 <vfprintf+0x328>
    3640:	b2 14       	cp	r11, r2
    3642:	18 f4       	brcc	.+6      	; 0x364a <vfprintf+0x342>
    3644:	2b 18       	sub	r2, r11
    3646:	02 c0       	rjmp	.+4      	; 0x364c <vfprintf+0x344>
    3648:	98 2c       	mov	r9, r8
    364a:	21 2c       	mov	r2, r1
    364c:	a4 fe       	sbrs	r10, 4
    364e:	0f c0       	rjmp	.+30     	; 0x366e <vfprintf+0x366>
    3650:	b6 01       	movw	r22, r12
    3652:	80 e3       	ldi	r24, 0x30	; 48
    3654:	90 e0       	ldi	r25, 0x00	; 0
    3656:	bb d4       	rcall	.+2422   	; 0x3fce <fputc>
    3658:	a2 fe       	sbrs	r10, 2
    365a:	16 c0       	rjmp	.+44     	; 0x3688 <vfprintf+0x380>
    365c:	a1 fc       	sbrc	r10, 1
    365e:	03 c0       	rjmp	.+6      	; 0x3666 <vfprintf+0x35e>
    3660:	88 e7       	ldi	r24, 0x78	; 120
    3662:	90 e0       	ldi	r25, 0x00	; 0
    3664:	02 c0       	rjmp	.+4      	; 0x366a <vfprintf+0x362>
    3666:	88 e5       	ldi	r24, 0x58	; 88
    3668:	90 e0       	ldi	r25, 0x00	; 0
    366a:	b6 01       	movw	r22, r12
    366c:	0c c0       	rjmp	.+24     	; 0x3686 <vfprintf+0x37e>
    366e:	8a 2d       	mov	r24, r10
    3670:	86 78       	andi	r24, 0x86	; 134
    3672:	51 f0       	breq	.+20     	; 0x3688 <vfprintf+0x380>
    3674:	a1 fe       	sbrs	r10, 1
    3676:	02 c0       	rjmp	.+4      	; 0x367c <vfprintf+0x374>
    3678:	8b e2       	ldi	r24, 0x2B	; 43
    367a:	01 c0       	rjmp	.+2      	; 0x367e <vfprintf+0x376>
    367c:	80 e2       	ldi	r24, 0x20	; 32
    367e:	a7 fc       	sbrc	r10, 7
    3680:	8d e2       	ldi	r24, 0x2D	; 45
    3682:	b6 01       	movw	r22, r12
    3684:	90 e0       	ldi	r25, 0x00	; 0
    3686:	a3 d4       	rcall	.+2374   	; 0x3fce <fputc>
    3688:	89 14       	cp	r8, r9
    368a:	30 f4       	brcc	.+12     	; 0x3698 <vfprintf+0x390>
    368c:	b6 01       	movw	r22, r12
    368e:	80 e3       	ldi	r24, 0x30	; 48
    3690:	90 e0       	ldi	r25, 0x00	; 0
    3692:	9d d4       	rcall	.+2362   	; 0x3fce <fputc>
    3694:	9a 94       	dec	r9
    3696:	f8 cf       	rjmp	.-16     	; 0x3688 <vfprintf+0x380>
    3698:	8a 94       	dec	r8
    369a:	f3 01       	movw	r30, r6
    369c:	e8 0d       	add	r30, r8
    369e:	f1 1d       	adc	r31, r1
    36a0:	80 81       	ld	r24, Z
    36a2:	b6 01       	movw	r22, r12
    36a4:	90 e0       	ldi	r25, 0x00	; 0
    36a6:	93 d4       	rcall	.+2342   	; 0x3fce <fputc>
    36a8:	81 10       	cpse	r8, r1
    36aa:	f6 cf       	rjmp	.-20     	; 0x3698 <vfprintf+0x390>
    36ac:	22 20       	and	r2, r2
    36ae:	09 f4       	brne	.+2      	; 0x36b2 <vfprintf+0x3aa>
    36b0:	4e ce       	rjmp	.-868    	; 0x334e <vfprintf+0x46>
    36b2:	b6 01       	movw	r22, r12
    36b4:	80 e2       	ldi	r24, 0x20	; 32
    36b6:	90 e0       	ldi	r25, 0x00	; 0
    36b8:	8a d4       	rcall	.+2324   	; 0x3fce <fputc>
    36ba:	2a 94       	dec	r2
    36bc:	f7 cf       	rjmp	.-18     	; 0x36ac <vfprintf+0x3a4>
    36be:	f6 01       	movw	r30, r12
    36c0:	86 81       	ldd	r24, Z+6	; 0x06
    36c2:	97 81       	ldd	r25, Z+7	; 0x07
    36c4:	02 c0       	rjmp	.+4      	; 0x36ca <vfprintf+0x3c2>
    36c6:	8f ef       	ldi	r24, 0xFF	; 255
    36c8:	9f ef       	ldi	r25, 0xFF	; 255
    36ca:	2b 96       	adiw	r28, 0x0b	; 11
    36cc:	cd bf       	out	0x3d, r28	; 61
    36ce:	de bf       	out	0x3e, r29	; 62
    36d0:	df 91       	pop	r29
    36d2:	cf 91       	pop	r28
    36d4:	1f 91       	pop	r17
    36d6:	0f 91       	pop	r16
    36d8:	ff 90       	pop	r15
    36da:	ef 90       	pop	r14
    36dc:	df 90       	pop	r13
    36de:	cf 90       	pop	r12
    36e0:	bf 90       	pop	r11
    36e2:	af 90       	pop	r10
    36e4:	9f 90       	pop	r9
    36e6:	8f 90       	pop	r8
    36e8:	7f 90       	pop	r7
    36ea:	6f 90       	pop	r6
    36ec:	5f 90       	pop	r5
    36ee:	4f 90       	pop	r4
    36f0:	3f 90       	pop	r3
    36f2:	2f 90       	pop	r2
    36f4:	08 95       	ret

000036f6 <putval>:
    36f6:	20 fd       	sbrc	r18, 0
    36f8:	09 c0       	rjmp	.+18     	; 0x370c <putval+0x16>
    36fa:	fc 01       	movw	r30, r24
    36fc:	23 fd       	sbrc	r18, 3
    36fe:	05 c0       	rjmp	.+10     	; 0x370a <putval+0x14>
    3700:	22 ff       	sbrs	r18, 2
    3702:	02 c0       	rjmp	.+4      	; 0x3708 <putval+0x12>
    3704:	73 83       	std	Z+3, r23	; 0x03
    3706:	62 83       	std	Z+2, r22	; 0x02
    3708:	51 83       	std	Z+1, r21	; 0x01
    370a:	40 83       	st	Z, r20
    370c:	08 95       	ret

0000370e <mulacc>:
    370e:	44 fd       	sbrc	r20, 4
    3710:	17 c0       	rjmp	.+46     	; 0x3740 <mulacc+0x32>
    3712:	46 fd       	sbrc	r20, 6
    3714:	17 c0       	rjmp	.+46     	; 0x3744 <mulacc+0x36>
    3716:	ab 01       	movw	r20, r22
    3718:	bc 01       	movw	r22, r24
    371a:	da 01       	movw	r26, r20
    371c:	fb 01       	movw	r30, r22
    371e:	aa 0f       	add	r26, r26
    3720:	bb 1f       	adc	r27, r27
    3722:	ee 1f       	adc	r30, r30
    3724:	ff 1f       	adc	r31, r31
    3726:	10 94       	com	r1
    3728:	d1 f7       	brne	.-12     	; 0x371e <mulacc+0x10>
    372a:	4a 0f       	add	r20, r26
    372c:	5b 1f       	adc	r21, r27
    372e:	6e 1f       	adc	r22, r30
    3730:	7f 1f       	adc	r23, r31
    3732:	cb 01       	movw	r24, r22
    3734:	ba 01       	movw	r22, r20
    3736:	66 0f       	add	r22, r22
    3738:	77 1f       	adc	r23, r23
    373a:	88 1f       	adc	r24, r24
    373c:	99 1f       	adc	r25, r25
    373e:	09 c0       	rjmp	.+18     	; 0x3752 <mulacc+0x44>
    3740:	33 e0       	ldi	r19, 0x03	; 3
    3742:	01 c0       	rjmp	.+2      	; 0x3746 <mulacc+0x38>
    3744:	34 e0       	ldi	r19, 0x04	; 4
    3746:	66 0f       	add	r22, r22
    3748:	77 1f       	adc	r23, r23
    374a:	88 1f       	adc	r24, r24
    374c:	99 1f       	adc	r25, r25
    374e:	31 50       	subi	r19, 0x01	; 1
    3750:	d1 f7       	brne	.-12     	; 0x3746 <mulacc+0x38>
    3752:	62 0f       	add	r22, r18
    3754:	71 1d       	adc	r23, r1
    3756:	81 1d       	adc	r24, r1
    3758:	91 1d       	adc	r25, r1
    375a:	08 95       	ret

0000375c <skip_spaces>:
    375c:	0f 93       	push	r16
    375e:	1f 93       	push	r17
    3760:	cf 93       	push	r28
    3762:	df 93       	push	r29
    3764:	8c 01       	movw	r16, r24
    3766:	c8 01       	movw	r24, r16
    3768:	f4 d3       	rcall	.+2024   	; 0x3f52 <fgetc>
    376a:	ec 01       	movw	r28, r24
    376c:	97 fd       	sbrc	r25, 7
    376e:	06 c0       	rjmp	.+12     	; 0x377c <skip_spaces+0x20>
    3770:	c0 d3       	rcall	.+1920   	; 0x3ef2 <isspace>
    3772:	89 2b       	or	r24, r25
    3774:	c1 f7       	brne	.-16     	; 0x3766 <skip_spaces+0xa>
    3776:	b8 01       	movw	r22, r16
    3778:	ce 01       	movw	r24, r28
    377a:	65 d4       	rcall	.+2250   	; 0x4046 <ungetc>
    377c:	ce 01       	movw	r24, r28
    377e:	df 91       	pop	r29
    3780:	cf 91       	pop	r28
    3782:	1f 91       	pop	r17
    3784:	0f 91       	pop	r16
    3786:	08 95       	ret

00003788 <conv_int>:
    3788:	8f 92       	push	r8
    378a:	9f 92       	push	r9
    378c:	af 92       	push	r10
    378e:	bf 92       	push	r11
    3790:	ef 92       	push	r14
    3792:	ff 92       	push	r15
    3794:	0f 93       	push	r16
    3796:	1f 93       	push	r17
    3798:	cf 93       	push	r28
    379a:	df 93       	push	r29
    379c:	8c 01       	movw	r16, r24
    379e:	d6 2f       	mov	r29, r22
    37a0:	7a 01       	movw	r14, r20
    37a2:	b2 2e       	mov	r11, r18
    37a4:	d6 d3       	rcall	.+1964   	; 0x3f52 <fgetc>
    37a6:	9c 01       	movw	r18, r24
    37a8:	33 27       	eor	r19, r19
    37aa:	2b 32       	cpi	r18, 0x2B	; 43
    37ac:	31 05       	cpc	r19, r1
    37ae:	31 f0       	breq	.+12     	; 0x37bc <conv_int+0x34>
    37b0:	2d 32       	cpi	r18, 0x2D	; 45
    37b2:	31 05       	cpc	r19, r1
    37b4:	59 f4       	brne	.+22     	; 0x37cc <conv_int+0x44>
    37b6:	8b 2d       	mov	r24, r11
    37b8:	80 68       	ori	r24, 0x80	; 128
    37ba:	b8 2e       	mov	r11, r24
    37bc:	d1 50       	subi	r29, 0x01	; 1
    37be:	11 f4       	brne	.+4      	; 0x37c4 <conv_int+0x3c>
    37c0:	80 e0       	ldi	r24, 0x00	; 0
    37c2:	61 c0       	rjmp	.+194    	; 0x3886 <conv_int+0xfe>
    37c4:	c8 01       	movw	r24, r16
    37c6:	c5 d3       	rcall	.+1930   	; 0x3f52 <fgetc>
    37c8:	97 fd       	sbrc	r25, 7
    37ca:	fa cf       	rjmp	.-12     	; 0x37c0 <conv_int+0x38>
    37cc:	cb 2d       	mov	r28, r11
    37ce:	cd 7f       	andi	r28, 0xFD	; 253
    37d0:	2b 2d       	mov	r18, r11
    37d2:	20 73       	andi	r18, 0x30	; 48
    37d4:	f9 f4       	brne	.+62     	; 0x3814 <conv_int+0x8c>
    37d6:	80 33       	cpi	r24, 0x30	; 48
    37d8:	e9 f4       	brne	.+58     	; 0x3814 <conv_int+0x8c>
    37da:	aa 24       	eor	r10, r10
    37dc:	aa 94       	dec	r10
    37de:	ad 0e       	add	r10, r29
    37e0:	09 f4       	brne	.+2      	; 0x37e4 <conv_int+0x5c>
    37e2:	3e c0       	rjmp	.+124    	; 0x3860 <conv_int+0xd8>
    37e4:	c8 01       	movw	r24, r16
    37e6:	b5 d3       	rcall	.+1898   	; 0x3f52 <fgetc>
    37e8:	97 fd       	sbrc	r25, 7
    37ea:	3a c0       	rjmp	.+116    	; 0x3860 <conv_int+0xd8>
    37ec:	9c 01       	movw	r18, r24
    37ee:	2f 7d       	andi	r18, 0xDF	; 223
    37f0:	33 27       	eor	r19, r19
    37f2:	28 35       	cpi	r18, 0x58	; 88
    37f4:	31 05       	cpc	r19, r1
    37f6:	41 f4       	brne	.+16     	; 0x3808 <conv_int+0x80>
    37f8:	c2 64       	ori	r28, 0x42	; 66
    37fa:	d2 50       	subi	r29, 0x02	; 2
    37fc:	89 f1       	breq	.+98     	; 0x3860 <conv_int+0xd8>
    37fe:	c8 01       	movw	r24, r16
    3800:	a8 d3       	rcall	.+1872   	; 0x3f52 <fgetc>
    3802:	97 ff       	sbrs	r25, 7
    3804:	07 c0       	rjmp	.+14     	; 0x3814 <conv_int+0x8c>
    3806:	2c c0       	rjmp	.+88     	; 0x3860 <conv_int+0xd8>
    3808:	b6 fe       	sbrs	r11, 6
    380a:	02 c0       	rjmp	.+4      	; 0x3810 <conv_int+0x88>
    380c:	c2 60       	ori	r28, 0x02	; 2
    380e:	01 c0       	rjmp	.+2      	; 0x3812 <conv_int+0x8a>
    3810:	c2 61       	ori	r28, 0x12	; 18
    3812:	da 2d       	mov	r29, r10
    3814:	81 2c       	mov	r8, r1
    3816:	91 2c       	mov	r9, r1
    3818:	54 01       	movw	r10, r8
    381a:	20 ed       	ldi	r18, 0xD0	; 208
    381c:	28 0f       	add	r18, r24
    381e:	28 30       	cpi	r18, 0x08	; 8
    3820:	78 f0       	brcs	.+30     	; 0x3840 <conv_int+0xb8>
    3822:	c4 ff       	sbrs	r28, 4
    3824:	03 c0       	rjmp	.+6      	; 0x382c <conv_int+0xa4>
    3826:	b8 01       	movw	r22, r16
    3828:	0e d4       	rcall	.+2076   	; 0x4046 <ungetc>
    382a:	17 c0       	rjmp	.+46     	; 0x385a <conv_int+0xd2>
    382c:	2a 30       	cpi	r18, 0x0A	; 10
    382e:	40 f0       	brcs	.+16     	; 0x3840 <conv_int+0xb8>
    3830:	c6 ff       	sbrs	r28, 6
    3832:	f9 cf       	rjmp	.-14     	; 0x3826 <conv_int+0x9e>
    3834:	2f 7d       	andi	r18, 0xDF	; 223
    3836:	3f ee       	ldi	r19, 0xEF	; 239
    3838:	32 0f       	add	r19, r18
    383a:	36 30       	cpi	r19, 0x06	; 6
    383c:	a0 f7       	brcc	.-24     	; 0x3826 <conv_int+0x9e>
    383e:	27 50       	subi	r18, 0x07	; 7
    3840:	4c 2f       	mov	r20, r28
    3842:	c5 01       	movw	r24, r10
    3844:	b4 01       	movw	r22, r8
    3846:	63 df       	rcall	.-314    	; 0x370e <mulacc>
    3848:	4b 01       	movw	r8, r22
    384a:	5c 01       	movw	r10, r24
    384c:	c2 60       	ori	r28, 0x02	; 2
    384e:	d1 50       	subi	r29, 0x01	; 1
    3850:	51 f0       	breq	.+20     	; 0x3866 <conv_int+0xde>
    3852:	c8 01       	movw	r24, r16
    3854:	7e d3       	rcall	.+1788   	; 0x3f52 <fgetc>
    3856:	97 ff       	sbrs	r25, 7
    3858:	e0 cf       	rjmp	.-64     	; 0x381a <conv_int+0x92>
    385a:	c1 fd       	sbrc	r28, 1
    385c:	04 c0       	rjmp	.+8      	; 0x3866 <conv_int+0xde>
    385e:	b0 cf       	rjmp	.-160    	; 0x37c0 <conv_int+0x38>
    3860:	81 2c       	mov	r8, r1
    3862:	91 2c       	mov	r9, r1
    3864:	54 01       	movw	r10, r8
    3866:	c7 ff       	sbrs	r28, 7
    3868:	08 c0       	rjmp	.+16     	; 0x387a <conv_int+0xf2>
    386a:	b0 94       	com	r11
    386c:	a0 94       	com	r10
    386e:	90 94       	com	r9
    3870:	80 94       	com	r8
    3872:	81 1c       	adc	r8, r1
    3874:	91 1c       	adc	r9, r1
    3876:	a1 1c       	adc	r10, r1
    3878:	b1 1c       	adc	r11, r1
    387a:	2c 2f       	mov	r18, r28
    387c:	b5 01       	movw	r22, r10
    387e:	a4 01       	movw	r20, r8
    3880:	c7 01       	movw	r24, r14
    3882:	39 df       	rcall	.-398    	; 0x36f6 <putval>
    3884:	81 e0       	ldi	r24, 0x01	; 1
    3886:	df 91       	pop	r29
    3888:	cf 91       	pop	r28
    388a:	1f 91       	pop	r17
    388c:	0f 91       	pop	r16
    388e:	ff 90       	pop	r15
    3890:	ef 90       	pop	r14
    3892:	bf 90       	pop	r11
    3894:	af 90       	pop	r10
    3896:	9f 90       	pop	r9
    3898:	8f 90       	pop	r8
    389a:	08 95       	ret

0000389c <conv_brk>:
    389c:	5f 92       	push	r5
    389e:	6f 92       	push	r6
    38a0:	7f 92       	push	r7
    38a2:	8f 92       	push	r8
    38a4:	9f 92       	push	r9
    38a6:	af 92       	push	r10
    38a8:	bf 92       	push	r11
    38aa:	cf 92       	push	r12
    38ac:	df 92       	push	r13
    38ae:	ef 92       	push	r14
    38b0:	ff 92       	push	r15
    38b2:	0f 93       	push	r16
    38b4:	1f 93       	push	r17
    38b6:	cf 93       	push	r28
    38b8:	df 93       	push	r29
    38ba:	cd b7       	in	r28, 0x3d	; 61
    38bc:	de b7       	in	r29, 0x3e	; 62
    38be:	a0 97       	sbiw	r28, 0x20	; 32
    38c0:	cd bf       	out	0x3d, r28	; 61
    38c2:	de bf       	out	0x3e, r29	; 62
    38c4:	5c 01       	movw	r10, r24
    38c6:	96 2e       	mov	r9, r22
    38c8:	7a 01       	movw	r14, r20
    38ca:	f9 01       	movw	r30, r18
    38cc:	8e 01       	movw	r16, r28
    38ce:	0f 5f       	subi	r16, 0xFF	; 255
    38d0:	1f 4f       	sbci	r17, 0xFF	; 255
    38d2:	68 01       	movw	r12, r16
    38d4:	80 e2       	ldi	r24, 0x20	; 32
    38d6:	d8 01       	movw	r26, r16
    38d8:	1d 92       	st	X+, r1
    38da:	8a 95       	dec	r24
    38dc:	e9 f7       	brne	.-6      	; 0x38d8 <conv_brk+0x3c>
    38de:	d5 01       	movw	r26, r10
    38e0:	13 96       	adiw	r26, 0x03	; 3
    38e2:	8c 90       	ld	r8, X
    38e4:	80 e0       	ldi	r24, 0x00	; 0
    38e6:	90 e0       	ldi	r25, 0x00	; 0
    38e8:	61 2c       	mov	r6, r1
    38ea:	71 2c       	mov	r7, r1
    38ec:	30 e0       	ldi	r19, 0x00	; 0
    38ee:	61 e0       	ldi	r22, 0x01	; 1
    38f0:	70 e0       	ldi	r23, 0x00	; 0
    38f2:	83 fc       	sbrc	r8, 3
    38f4:	25 91       	lpm	r18, Z+
    38f6:	83 fe       	sbrs	r8, 3
    38f8:	21 91       	ld	r18, Z+
    38fa:	8f 01       	movw	r16, r30
    38fc:	52 2e       	mov	r5, r18
    38fe:	21 11       	cpse	r18, r1
    3900:	03 c0       	rjmp	.+6      	; 0x3908 <conv_brk+0x6c>
    3902:	80 e0       	ldi	r24, 0x00	; 0
    3904:	90 e0       	ldi	r25, 0x00	; 0
    3906:	90 c0       	rjmp	.+288    	; 0x3a28 <conv_brk+0x18c>
    3908:	2e 35       	cpi	r18, 0x5E	; 94
    390a:	11 f4       	brne	.+4      	; 0x3910 <conv_brk+0x74>
    390c:	00 97       	sbiw	r24, 0x00	; 0
    390e:	51 f1       	breq	.+84     	; 0x3964 <conv_brk+0xc8>
    3910:	43 2f       	mov	r20, r19
    3912:	50 e0       	ldi	r21, 0x00	; 0
    3914:	48 17       	cp	r20, r24
    3916:	59 07       	cpc	r21, r25
    3918:	3c f4       	brge	.+14     	; 0x3928 <conv_brk+0x8c>
    391a:	2d 35       	cpi	r18, 0x5D	; 93
    391c:	59 f1       	breq	.+86     	; 0x3974 <conv_brk+0xd8>
    391e:	2d 32       	cpi	r18, 0x2D	; 45
    3920:	19 f4       	brne	.+6      	; 0x3928 <conv_brk+0x8c>
    3922:	77 20       	and	r7, r7
    3924:	09 f1       	breq	.+66     	; 0x3968 <conv_brk+0xcc>
    3926:	03 c0       	rjmp	.+6      	; 0x392e <conv_brk+0x92>
    3928:	77 20       	and	r7, r7
    392a:	09 f4       	brne	.+2      	; 0x392e <conv_brk+0x92>
    392c:	68 c0       	rjmp	.+208    	; 0x39fe <conv_brk+0x162>
    392e:	45 2d       	mov	r20, r5
    3930:	46 95       	lsr	r20
    3932:	46 95       	lsr	r20
    3934:	46 95       	lsr	r20
    3936:	d6 01       	movw	r26, r12
    3938:	a4 0f       	add	r26, r20
    393a:	b1 1d       	adc	r27, r1
    393c:	45 2d       	mov	r20, r5
    393e:	47 70       	andi	r20, 0x07	; 7
    3940:	8b 01       	movw	r16, r22
    3942:	02 c0       	rjmp	.+4      	; 0x3948 <conv_brk+0xac>
    3944:	00 0f       	add	r16, r16
    3946:	11 1f       	adc	r17, r17
    3948:	4a 95       	dec	r20
    394a:	e2 f7       	brpl	.-8      	; 0x3944 <conv_brk+0xa8>
    394c:	a8 01       	movw	r20, r16
    394e:	5c 91       	ld	r21, X
    3950:	45 2b       	or	r20, r21
    3952:	4c 93       	st	X, r20
    3954:	65 14       	cp	r6, r5
    3956:	59 f0       	breq	.+22     	; 0x396e <conv_brk+0xd2>
    3958:	56 14       	cp	r5, r6
    395a:	10 f4       	brcc	.+4      	; 0x3960 <conv_brk+0xc4>
    395c:	53 94       	inc	r5
    395e:	e7 cf       	rjmp	.-50     	; 0x392e <conv_brk+0x92>
    3960:	5a 94       	dec	r5
    3962:	e5 cf       	rjmp	.-54     	; 0x392e <conv_brk+0x92>
    3964:	31 e0       	ldi	r19, 0x01	; 1
    3966:	04 c0       	rjmp	.+8      	; 0x3970 <conv_brk+0xd4>
    3968:	77 24       	eor	r7, r7
    396a:	73 94       	inc	r7
    396c:	01 c0       	rjmp	.+2      	; 0x3970 <conv_brk+0xd4>
    396e:	71 2c       	mov	r7, r1
    3970:	01 96       	adiw	r24, 0x01	; 1
    3972:	bf cf       	rjmp	.-130    	; 0x38f2 <conv_brk+0x56>
    3974:	77 20       	and	r7, r7
    3976:	19 f0       	breq	.+6      	; 0x397e <conv_brk+0xe2>
    3978:	8e 81       	ldd	r24, Y+6	; 0x06
    397a:	80 62       	ori	r24, 0x20	; 32
    397c:	8e 83       	std	Y+6, r24	; 0x06
    397e:	31 11       	cpse	r19, r1
    3980:	03 c0       	rjmp	.+6      	; 0x3988 <conv_brk+0xec>
    3982:	88 24       	eor	r8, r8
    3984:	83 94       	inc	r8
    3986:	17 c0       	rjmp	.+46     	; 0x39b6 <conv_brk+0x11a>
    3988:	f6 01       	movw	r30, r12
    398a:	9e 01       	movw	r18, r28
    398c:	2f 5d       	subi	r18, 0xDF	; 223
    398e:	3f 4f       	sbci	r19, 0xFF	; 255
    3990:	80 81       	ld	r24, Z
    3992:	80 95       	com	r24
    3994:	81 93       	st	Z+, r24
    3996:	2e 17       	cp	r18, r30
    3998:	3f 07       	cpc	r19, r31
    399a:	d1 f7       	brne	.-12     	; 0x3990 <conv_brk+0xf4>
    399c:	f2 cf       	rjmp	.-28     	; 0x3982 <conv_brk+0xe6>
    399e:	e1 14       	cp	r14, r1
    39a0:	f1 04       	cpc	r15, r1
    39a2:	29 f0       	breq	.+10     	; 0x39ae <conv_brk+0x112>
    39a4:	d7 01       	movw	r26, r14
    39a6:	8c 93       	st	X, r24
    39a8:	f7 01       	movw	r30, r14
    39aa:	31 96       	adiw	r30, 0x01	; 1
    39ac:	7f 01       	movw	r14, r30
    39ae:	9a 94       	dec	r9
    39b0:	81 2c       	mov	r8, r1
    39b2:	99 20       	and	r9, r9
    39b4:	e9 f0       	breq	.+58     	; 0x39f0 <conv_brk+0x154>
    39b6:	c5 01       	movw	r24, r10
    39b8:	cc d2       	rcall	.+1432   	; 0x3f52 <fgetc>
    39ba:	97 fd       	sbrc	r25, 7
    39bc:	17 c0       	rjmp	.+46     	; 0x39ec <conv_brk+0x150>
    39be:	fc 01       	movw	r30, r24
    39c0:	ff 27       	eor	r31, r31
    39c2:	23 e0       	ldi	r18, 0x03	; 3
    39c4:	f5 95       	asr	r31
    39c6:	e7 95       	ror	r30
    39c8:	2a 95       	dec	r18
    39ca:	e1 f7       	brne	.-8      	; 0x39c4 <conv_brk+0x128>
    39cc:	ec 0d       	add	r30, r12
    39ce:	fd 1d       	adc	r31, r13
    39d0:	20 81       	ld	r18, Z
    39d2:	30 e0       	ldi	r19, 0x00	; 0
    39d4:	ac 01       	movw	r20, r24
    39d6:	47 70       	andi	r20, 0x07	; 7
    39d8:	55 27       	eor	r21, r21
    39da:	02 c0       	rjmp	.+4      	; 0x39e0 <conv_brk+0x144>
    39dc:	35 95       	asr	r19
    39de:	27 95       	ror	r18
    39e0:	4a 95       	dec	r20
    39e2:	e2 f7       	brpl	.-8      	; 0x39dc <conv_brk+0x140>
    39e4:	20 fd       	sbrc	r18, 0
    39e6:	db cf       	rjmp	.-74     	; 0x399e <conv_brk+0x102>
    39e8:	b5 01       	movw	r22, r10
    39ea:	2d d3       	rcall	.+1626   	; 0x4046 <ungetc>
    39ec:	81 10       	cpse	r8, r1
    39ee:	89 cf       	rjmp	.-238    	; 0x3902 <conv_brk+0x66>
    39f0:	e1 14       	cp	r14, r1
    39f2:	f1 04       	cpc	r15, r1
    39f4:	11 f0       	breq	.+4      	; 0x39fa <conv_brk+0x15e>
    39f6:	d7 01       	movw	r26, r14
    39f8:	1c 92       	st	X, r1
    39fa:	c8 01       	movw	r24, r16
    39fc:	15 c0       	rjmp	.+42     	; 0x3a28 <conv_brk+0x18c>
    39fe:	42 2f       	mov	r20, r18
    3a00:	46 95       	lsr	r20
    3a02:	46 95       	lsr	r20
    3a04:	46 95       	lsr	r20
    3a06:	d6 01       	movw	r26, r12
    3a08:	a4 0f       	add	r26, r20
    3a0a:	b1 1d       	adc	r27, r1
    3a0c:	42 2f       	mov	r20, r18
    3a0e:	47 70       	andi	r20, 0x07	; 7
    3a10:	8b 01       	movw	r16, r22
    3a12:	02 c0       	rjmp	.+4      	; 0x3a18 <conv_brk+0x17c>
    3a14:	00 0f       	add	r16, r16
    3a16:	11 1f       	adc	r17, r17
    3a18:	4a 95       	dec	r20
    3a1a:	e2 f7       	brpl	.-8      	; 0x3a14 <conv_brk+0x178>
    3a1c:	a8 01       	movw	r20, r16
    3a1e:	5c 91       	ld	r21, X
    3a20:	45 2b       	or	r20, r21
    3a22:	4c 93       	st	X, r20
    3a24:	62 2e       	mov	r6, r18
    3a26:	a4 cf       	rjmp	.-184    	; 0x3970 <conv_brk+0xd4>
    3a28:	a0 96       	adiw	r28, 0x20	; 32
    3a2a:	cd bf       	out	0x3d, r28	; 61
    3a2c:	de bf       	out	0x3e, r29	; 62
    3a2e:	df 91       	pop	r29
    3a30:	cf 91       	pop	r28
    3a32:	1f 91       	pop	r17
    3a34:	0f 91       	pop	r16
    3a36:	ff 90       	pop	r15
    3a38:	ef 90       	pop	r14
    3a3a:	df 90       	pop	r13
    3a3c:	cf 90       	pop	r12
    3a3e:	bf 90       	pop	r11
    3a40:	af 90       	pop	r10
    3a42:	9f 90       	pop	r9
    3a44:	8f 90       	pop	r8
    3a46:	7f 90       	pop	r7
    3a48:	6f 90       	pop	r6
    3a4a:	5f 90       	pop	r5
    3a4c:	08 95       	ret

00003a4e <vfscanf>:
    3a4e:	5f 92       	push	r5
    3a50:	6f 92       	push	r6
    3a52:	7f 92       	push	r7
    3a54:	8f 92       	push	r8
    3a56:	9f 92       	push	r9
    3a58:	af 92       	push	r10
    3a5a:	bf 92       	push	r11
    3a5c:	cf 92       	push	r12
    3a5e:	df 92       	push	r13
    3a60:	ef 92       	push	r14
    3a62:	ff 92       	push	r15
    3a64:	0f 93       	push	r16
    3a66:	1f 93       	push	r17
    3a68:	cf 93       	push	r28
    3a6a:	df 93       	push	r29
    3a6c:	6c 01       	movw	r12, r24
    3a6e:	eb 01       	movw	r28, r22
    3a70:	5a 01       	movw	r10, r20
    3a72:	fc 01       	movw	r30, r24
    3a74:	16 82       	std	Z+6, r1	; 0x06
    3a76:	17 82       	std	Z+7, r1	; 0x07
    3a78:	51 2c       	mov	r5, r1
    3a7a:	f6 01       	movw	r30, r12
    3a7c:	e3 80       	ldd	r14, Z+3	; 0x03
    3a7e:	fe 01       	movw	r30, r28
    3a80:	e3 fc       	sbrc	r14, 3
    3a82:	85 91       	lpm	r24, Z+
    3a84:	e3 fe       	sbrs	r14, 3
    3a86:	81 91       	ld	r24, Z+
    3a88:	18 2f       	mov	r17, r24
    3a8a:	ef 01       	movw	r28, r30
    3a8c:	88 23       	and	r24, r24
    3a8e:	09 f4       	brne	.+2      	; 0x3a92 <vfscanf+0x44>
    3a90:	e0 c0       	rjmp	.+448    	; 0x3c52 <vfscanf+0x204>
    3a92:	90 e0       	ldi	r25, 0x00	; 0
    3a94:	2e d2       	rcall	.+1116   	; 0x3ef2 <isspace>
    3a96:	89 2b       	or	r24, r25
    3a98:	19 f0       	breq	.+6      	; 0x3aa0 <vfscanf+0x52>
    3a9a:	c6 01       	movw	r24, r12
    3a9c:	5f de       	rcall	.-834    	; 0x375c <skip_spaces>
    3a9e:	ed cf       	rjmp	.-38     	; 0x3a7a <vfscanf+0x2c>
    3aa0:	15 32       	cpi	r17, 0x25	; 37
    3aa2:	41 f4       	brne	.+16     	; 0x3ab4 <vfscanf+0x66>
    3aa4:	fe 01       	movw	r30, r28
    3aa6:	e3 fc       	sbrc	r14, 3
    3aa8:	15 91       	lpm	r17, Z+
    3aaa:	e3 fe       	sbrs	r14, 3
    3aac:	11 91       	ld	r17, Z+
    3aae:	ef 01       	movw	r28, r30
    3ab0:	15 32       	cpi	r17, 0x25	; 37
    3ab2:	71 f4       	brne	.+28     	; 0x3ad0 <vfscanf+0x82>
    3ab4:	c6 01       	movw	r24, r12
    3ab6:	4d d2       	rcall	.+1178   	; 0x3f52 <fgetc>
    3ab8:	97 fd       	sbrc	r25, 7
    3aba:	c9 c0       	rjmp	.+402    	; 0x3c4e <vfscanf+0x200>
    3abc:	41 2f       	mov	r20, r17
    3abe:	50 e0       	ldi	r21, 0x00	; 0
    3ac0:	9c 01       	movw	r18, r24
    3ac2:	33 27       	eor	r19, r19
    3ac4:	24 17       	cp	r18, r20
    3ac6:	35 07       	cpc	r19, r21
    3ac8:	c1 f2       	breq	.-80     	; 0x3a7a <vfscanf+0x2c>
    3aca:	b6 01       	movw	r22, r12
    3acc:	bc d2       	rcall	.+1400   	; 0x4046 <ungetc>
    3ace:	c1 c0       	rjmp	.+386    	; 0x3c52 <vfscanf+0x204>
    3ad0:	1a 32       	cpi	r17, 0x2A	; 42
    3ad2:	39 f4       	brne	.+14     	; 0x3ae2 <vfscanf+0x94>
    3ad4:	e3 fc       	sbrc	r14, 3
    3ad6:	15 91       	lpm	r17, Z+
    3ad8:	e3 fe       	sbrs	r14, 3
    3ada:	11 91       	ld	r17, Z+
    3adc:	ef 01       	movw	r28, r30
    3ade:	01 e0       	ldi	r16, 0x01	; 1
    3ae0:	01 c0       	rjmp	.+2      	; 0x3ae4 <vfscanf+0x96>
    3ae2:	00 e0       	ldi	r16, 0x00	; 0
    3ae4:	f1 2c       	mov	r15, r1
    3ae6:	20 ed       	ldi	r18, 0xD0	; 208
    3ae8:	21 0f       	add	r18, r17
    3aea:	2a 30       	cpi	r18, 0x0A	; 10
    3aec:	78 f4       	brcc	.+30     	; 0x3b0c <vfscanf+0xbe>
    3aee:	02 60       	ori	r16, 0x02	; 2
    3af0:	6f 2d       	mov	r22, r15
    3af2:	70 e0       	ldi	r23, 0x00	; 0
    3af4:	80 e0       	ldi	r24, 0x00	; 0
    3af6:	90 e0       	ldi	r25, 0x00	; 0
    3af8:	40 e2       	ldi	r20, 0x20	; 32
    3afa:	09 de       	rcall	.-1006   	; 0x370e <mulacc>
    3afc:	f6 2e       	mov	r15, r22
    3afe:	fe 01       	movw	r30, r28
    3b00:	e3 fc       	sbrc	r14, 3
    3b02:	15 91       	lpm	r17, Z+
    3b04:	e3 fe       	sbrs	r14, 3
    3b06:	11 91       	ld	r17, Z+
    3b08:	ef 01       	movw	r28, r30
    3b0a:	ed cf       	rjmp	.-38     	; 0x3ae6 <vfscanf+0x98>
    3b0c:	01 ff       	sbrs	r16, 1
    3b0e:	03 c0       	rjmp	.+6      	; 0x3b16 <vfscanf+0xc8>
    3b10:	f1 10       	cpse	r15, r1
    3b12:	03 c0       	rjmp	.+6      	; 0x3b1a <vfscanf+0xcc>
    3b14:	9e c0       	rjmp	.+316    	; 0x3c52 <vfscanf+0x204>
    3b16:	ff 24       	eor	r15, r15
    3b18:	fa 94       	dec	r15
    3b1a:	18 36       	cpi	r17, 0x68	; 104
    3b1c:	19 f0       	breq	.+6      	; 0x3b24 <vfscanf+0xd6>
    3b1e:	1c 36       	cpi	r17, 0x6C	; 108
    3b20:	51 f0       	breq	.+20     	; 0x3b36 <vfscanf+0xe8>
    3b22:	10 c0       	rjmp	.+32     	; 0x3b44 <vfscanf+0xf6>
    3b24:	fe 01       	movw	r30, r28
    3b26:	e3 fc       	sbrc	r14, 3
    3b28:	15 91       	lpm	r17, Z+
    3b2a:	e3 fe       	sbrs	r14, 3
    3b2c:	11 91       	ld	r17, Z+
    3b2e:	ef 01       	movw	r28, r30
    3b30:	18 36       	cpi	r17, 0x68	; 104
    3b32:	41 f4       	brne	.+16     	; 0x3b44 <vfscanf+0xf6>
    3b34:	08 60       	ori	r16, 0x08	; 8
    3b36:	04 60       	ori	r16, 0x04	; 4
    3b38:	fe 01       	movw	r30, r28
    3b3a:	e3 fc       	sbrc	r14, 3
    3b3c:	15 91       	lpm	r17, Z+
    3b3e:	e3 fe       	sbrs	r14, 3
    3b40:	11 91       	ld	r17, Z+
    3b42:	ef 01       	movw	r28, r30
    3b44:	11 23       	and	r17, r17
    3b46:	09 f4       	brne	.+2      	; 0x3b4a <vfscanf+0xfc>
    3b48:	84 c0       	rjmp	.+264    	; 0x3c52 <vfscanf+0x204>
    3b4a:	61 2f       	mov	r22, r17
    3b4c:	70 e0       	ldi	r23, 0x00	; 0
    3b4e:	8e e7       	ldi	r24, 0x7E	; 126
    3b50:	92 e0       	ldi	r25, 0x02	; 2
    3b52:	d7 d1       	rcall	.+942    	; 0x3f02 <strchr_P>
    3b54:	89 2b       	or	r24, r25
    3b56:	09 f4       	brne	.+2      	; 0x3b5a <vfscanf+0x10c>
    3b58:	7c c0       	rjmp	.+248    	; 0x3c52 <vfscanf+0x204>
    3b5a:	00 fd       	sbrc	r16, 0
    3b5c:	07 c0       	rjmp	.+14     	; 0x3b6c <vfscanf+0x11e>
    3b5e:	f5 01       	movw	r30, r10
    3b60:	80 80       	ld	r8, Z
    3b62:	91 80       	ldd	r9, Z+1	; 0x01
    3b64:	c5 01       	movw	r24, r10
    3b66:	02 96       	adiw	r24, 0x02	; 2
    3b68:	5c 01       	movw	r10, r24
    3b6a:	02 c0       	rjmp	.+4      	; 0x3b70 <vfscanf+0x122>
    3b6c:	81 2c       	mov	r8, r1
    3b6e:	91 2c       	mov	r9, r1
    3b70:	1e 36       	cpi	r17, 0x6E	; 110
    3b72:	49 f4       	brne	.+18     	; 0x3b86 <vfscanf+0x138>
    3b74:	f6 01       	movw	r30, r12
    3b76:	46 81       	ldd	r20, Z+6	; 0x06
    3b78:	57 81       	ldd	r21, Z+7	; 0x07
    3b7a:	60 e0       	ldi	r22, 0x00	; 0
    3b7c:	70 e0       	ldi	r23, 0x00	; 0
    3b7e:	20 2f       	mov	r18, r16
    3b80:	c4 01       	movw	r24, r8
    3b82:	b9 dd       	rcall	.-1166   	; 0x36f6 <putval>
    3b84:	7a cf       	rjmp	.-268    	; 0x3a7a <vfscanf+0x2c>
    3b86:	13 36       	cpi	r17, 0x63	; 99
    3b88:	a1 f4       	brne	.+40     	; 0x3bb2 <vfscanf+0x164>
    3b8a:	01 fd       	sbrc	r16, 1
    3b8c:	02 c0       	rjmp	.+4      	; 0x3b92 <vfscanf+0x144>
    3b8e:	ff 24       	eor	r15, r15
    3b90:	f3 94       	inc	r15
    3b92:	c6 01       	movw	r24, r12
    3b94:	de d1       	rcall	.+956    	; 0x3f52 <fgetc>
    3b96:	97 fd       	sbrc	r25, 7
    3b98:	5a c0       	rjmp	.+180    	; 0x3c4e <vfscanf+0x200>
    3b9a:	81 14       	cp	r8, r1
    3b9c:	91 04       	cpc	r9, r1
    3b9e:	29 f0       	breq	.+10     	; 0x3baa <vfscanf+0x15c>
    3ba0:	f4 01       	movw	r30, r8
    3ba2:	80 83       	st	Z, r24
    3ba4:	c4 01       	movw	r24, r8
    3ba6:	01 96       	adiw	r24, 0x01	; 1
    3ba8:	4c 01       	movw	r8, r24
    3baa:	fa 94       	dec	r15
    3bac:	f1 10       	cpse	r15, r1
    3bae:	f1 cf       	rjmp	.-30     	; 0x3b92 <vfscanf+0x144>
    3bb0:	4a c0       	rjmp	.+148    	; 0x3c46 <vfscanf+0x1f8>
    3bb2:	1b 35       	cpi	r17, 0x5B	; 91
    3bb4:	51 f4       	brne	.+20     	; 0x3bca <vfscanf+0x17c>
    3bb6:	9e 01       	movw	r18, r28
    3bb8:	a4 01       	movw	r20, r8
    3bba:	6f 2d       	mov	r22, r15
    3bbc:	c6 01       	movw	r24, r12
    3bbe:	6e de       	rcall	.-804    	; 0x389c <conv_brk>
    3bc0:	ec 01       	movw	r28, r24
    3bc2:	89 2b       	or	r24, r25
    3bc4:	09 f0       	breq	.+2      	; 0x3bc8 <vfscanf+0x17a>
    3bc6:	3f c0       	rjmp	.+126    	; 0x3c46 <vfscanf+0x1f8>
    3bc8:	39 c0       	rjmp	.+114    	; 0x3c3c <vfscanf+0x1ee>
    3bca:	c6 01       	movw	r24, r12
    3bcc:	c7 dd       	rcall	.-1138   	; 0x375c <skip_spaces>
    3bce:	97 fd       	sbrc	r25, 7
    3bd0:	3e c0       	rjmp	.+124    	; 0x3c4e <vfscanf+0x200>
    3bd2:	1f 36       	cpi	r17, 0x6F	; 111
    3bd4:	49 f1       	breq	.+82     	; 0x3c28 <vfscanf+0x1da>
    3bd6:	28 f4       	brcc	.+10     	; 0x3be2 <vfscanf+0x194>
    3bd8:	14 36       	cpi	r17, 0x64	; 100
    3bda:	21 f1       	breq	.+72     	; 0x3c24 <vfscanf+0x1d6>
    3bdc:	19 36       	cpi	r17, 0x69	; 105
    3bde:	39 f1       	breq	.+78     	; 0x3c2e <vfscanf+0x1e0>
    3be0:	25 c0       	rjmp	.+74     	; 0x3c2c <vfscanf+0x1de>
    3be2:	13 37       	cpi	r17, 0x73	; 115
    3be4:	71 f0       	breq	.+28     	; 0x3c02 <vfscanf+0x1b4>
    3be6:	15 37       	cpi	r17, 0x75	; 117
    3be8:	e9 f0       	breq	.+58     	; 0x3c24 <vfscanf+0x1d6>
    3bea:	20 c0       	rjmp	.+64     	; 0x3c2c <vfscanf+0x1de>
    3bec:	81 14       	cp	r8, r1
    3bee:	91 04       	cpc	r9, r1
    3bf0:	29 f0       	breq	.+10     	; 0x3bfc <vfscanf+0x1ae>
    3bf2:	f4 01       	movw	r30, r8
    3bf4:	60 82       	st	Z, r6
    3bf6:	c4 01       	movw	r24, r8
    3bf8:	01 96       	adiw	r24, 0x01	; 1
    3bfa:	4c 01       	movw	r8, r24
    3bfc:	fa 94       	dec	r15
    3bfe:	ff 20       	and	r15, r15
    3c00:	59 f0       	breq	.+22     	; 0x3c18 <vfscanf+0x1ca>
    3c02:	c6 01       	movw	r24, r12
    3c04:	a6 d1       	rcall	.+844    	; 0x3f52 <fgetc>
    3c06:	3c 01       	movw	r6, r24
    3c08:	97 fd       	sbrc	r25, 7
    3c0a:	06 c0       	rjmp	.+12     	; 0x3c18 <vfscanf+0x1ca>
    3c0c:	72 d1       	rcall	.+740    	; 0x3ef2 <isspace>
    3c0e:	89 2b       	or	r24, r25
    3c10:	69 f3       	breq	.-38     	; 0x3bec <vfscanf+0x19e>
    3c12:	b6 01       	movw	r22, r12
    3c14:	c3 01       	movw	r24, r6
    3c16:	17 d2       	rcall	.+1070   	; 0x4046 <ungetc>
    3c18:	81 14       	cp	r8, r1
    3c1a:	91 04       	cpc	r9, r1
    3c1c:	a1 f0       	breq	.+40     	; 0x3c46 <vfscanf+0x1f8>
    3c1e:	f4 01       	movw	r30, r8
    3c20:	10 82       	st	Z, r1
    3c22:	11 c0       	rjmp	.+34     	; 0x3c46 <vfscanf+0x1f8>
    3c24:	00 62       	ori	r16, 0x20	; 32
    3c26:	03 c0       	rjmp	.+6      	; 0x3c2e <vfscanf+0x1e0>
    3c28:	00 61       	ori	r16, 0x10	; 16
    3c2a:	01 c0       	rjmp	.+2      	; 0x3c2e <vfscanf+0x1e0>
    3c2c:	00 64       	ori	r16, 0x40	; 64
    3c2e:	20 2f       	mov	r18, r16
    3c30:	a4 01       	movw	r20, r8
    3c32:	6f 2d       	mov	r22, r15
    3c34:	c6 01       	movw	r24, r12
    3c36:	a8 dd       	rcall	.-1200   	; 0x3788 <conv_int>
    3c38:	81 11       	cpse	r24, r1
    3c3a:	05 c0       	rjmp	.+10     	; 0x3c46 <vfscanf+0x1f8>
    3c3c:	f6 01       	movw	r30, r12
    3c3e:	83 81       	ldd	r24, Z+3	; 0x03
    3c40:	80 73       	andi	r24, 0x30	; 48
    3c42:	29 f4       	brne	.+10     	; 0x3c4e <vfscanf+0x200>
    3c44:	06 c0       	rjmp	.+12     	; 0x3c52 <vfscanf+0x204>
    3c46:	00 fd       	sbrc	r16, 0
    3c48:	18 cf       	rjmp	.-464    	; 0x3a7a <vfscanf+0x2c>
    3c4a:	53 94       	inc	r5
    3c4c:	16 cf       	rjmp	.-468    	; 0x3a7a <vfscanf+0x2c>
    3c4e:	55 20       	and	r5, r5
    3c50:	19 f0       	breq	.+6      	; 0x3c58 <vfscanf+0x20a>
    3c52:	85 2d       	mov	r24, r5
    3c54:	90 e0       	ldi	r25, 0x00	; 0
    3c56:	02 c0       	rjmp	.+4      	; 0x3c5c <vfscanf+0x20e>
    3c58:	8f ef       	ldi	r24, 0xFF	; 255
    3c5a:	9f ef       	ldi	r25, 0xFF	; 255
    3c5c:	df 91       	pop	r29
    3c5e:	cf 91       	pop	r28
    3c60:	1f 91       	pop	r17
    3c62:	0f 91       	pop	r16
    3c64:	ff 90       	pop	r15
    3c66:	ef 90       	pop	r14
    3c68:	df 90       	pop	r13
    3c6a:	cf 90       	pop	r12
    3c6c:	bf 90       	pop	r11
    3c6e:	af 90       	pop	r10
    3c70:	9f 90       	pop	r9
    3c72:	8f 90       	pop	r8
    3c74:	7f 90       	pop	r7
    3c76:	6f 90       	pop	r6
    3c78:	5f 90       	pop	r5
    3c7a:	08 95       	ret

00003c7c <calloc>:
    3c7c:	0f 93       	push	r16
    3c7e:	1f 93       	push	r17
    3c80:	cf 93       	push	r28
    3c82:	df 93       	push	r29
    3c84:	86 9f       	mul	r24, r22
    3c86:	80 01       	movw	r16, r0
    3c88:	87 9f       	mul	r24, r23
    3c8a:	10 0d       	add	r17, r0
    3c8c:	96 9f       	mul	r25, r22
    3c8e:	10 0d       	add	r17, r0
    3c90:	11 24       	eor	r1, r1
    3c92:	c8 01       	movw	r24, r16
    3c94:	0d d0       	rcall	.+26     	; 0x3cb0 <malloc>
    3c96:	ec 01       	movw	r28, r24
    3c98:	00 97       	sbiw	r24, 0x00	; 0
    3c9a:	21 f0       	breq	.+8      	; 0x3ca4 <calloc+0x28>
    3c9c:	a8 01       	movw	r20, r16
    3c9e:	60 e0       	ldi	r22, 0x00	; 0
    3ca0:	70 e0       	ldi	r23, 0x00	; 0
    3ca2:	45 d1       	rcall	.+650    	; 0x3f2e <memset>
    3ca4:	ce 01       	movw	r24, r28
    3ca6:	df 91       	pop	r29
    3ca8:	cf 91       	pop	r28
    3caa:	1f 91       	pop	r17
    3cac:	0f 91       	pop	r16
    3cae:	08 95       	ret

00003cb0 <malloc>:
    3cb0:	0f 93       	push	r16
    3cb2:	1f 93       	push	r17
    3cb4:	cf 93       	push	r28
    3cb6:	df 93       	push	r29
    3cb8:	82 30       	cpi	r24, 0x02	; 2
    3cba:	91 05       	cpc	r25, r1
    3cbc:	10 f4       	brcc	.+4      	; 0x3cc2 <malloc+0x12>
    3cbe:	82 e0       	ldi	r24, 0x02	; 2
    3cc0:	90 e0       	ldi	r25, 0x00	; 0
    3cc2:	e0 91 78 21 	lds	r30, 0x2178	; 0x802178 <__flp>
    3cc6:	f0 91 79 21 	lds	r31, 0x2179	; 0x802179 <__flp+0x1>
    3cca:	20 e0       	ldi	r18, 0x00	; 0
    3ccc:	30 e0       	ldi	r19, 0x00	; 0
    3cce:	a0 e0       	ldi	r26, 0x00	; 0
    3cd0:	b0 e0       	ldi	r27, 0x00	; 0
    3cd2:	30 97       	sbiw	r30, 0x00	; 0
    3cd4:	19 f1       	breq	.+70     	; 0x3d1c <malloc+0x6c>
    3cd6:	40 81       	ld	r20, Z
    3cd8:	51 81       	ldd	r21, Z+1	; 0x01
    3cda:	02 81       	ldd	r16, Z+2	; 0x02
    3cdc:	13 81       	ldd	r17, Z+3	; 0x03
    3cde:	48 17       	cp	r20, r24
    3ce0:	59 07       	cpc	r21, r25
    3ce2:	c8 f0       	brcs	.+50     	; 0x3d16 <malloc+0x66>
    3ce4:	84 17       	cp	r24, r20
    3ce6:	95 07       	cpc	r25, r21
    3ce8:	69 f4       	brne	.+26     	; 0x3d04 <malloc+0x54>
    3cea:	10 97       	sbiw	r26, 0x00	; 0
    3cec:	31 f0       	breq	.+12     	; 0x3cfa <malloc+0x4a>
    3cee:	12 96       	adiw	r26, 0x02	; 2
    3cf0:	0c 93       	st	X, r16
    3cf2:	12 97       	sbiw	r26, 0x02	; 2
    3cf4:	13 96       	adiw	r26, 0x03	; 3
    3cf6:	1c 93       	st	X, r17
    3cf8:	27 c0       	rjmp	.+78     	; 0x3d48 <malloc+0x98>
    3cfa:	00 93 78 21 	sts	0x2178, r16	; 0x802178 <__flp>
    3cfe:	10 93 79 21 	sts	0x2179, r17	; 0x802179 <__flp+0x1>
    3d02:	22 c0       	rjmp	.+68     	; 0x3d48 <malloc+0x98>
    3d04:	21 15       	cp	r18, r1
    3d06:	31 05       	cpc	r19, r1
    3d08:	19 f0       	breq	.+6      	; 0x3d10 <malloc+0x60>
    3d0a:	42 17       	cp	r20, r18
    3d0c:	53 07       	cpc	r21, r19
    3d0e:	18 f4       	brcc	.+6      	; 0x3d16 <malloc+0x66>
    3d10:	9a 01       	movw	r18, r20
    3d12:	bd 01       	movw	r22, r26
    3d14:	ef 01       	movw	r28, r30
    3d16:	df 01       	movw	r26, r30
    3d18:	f8 01       	movw	r30, r16
    3d1a:	db cf       	rjmp	.-74     	; 0x3cd2 <malloc+0x22>
    3d1c:	21 15       	cp	r18, r1
    3d1e:	31 05       	cpc	r19, r1
    3d20:	f9 f0       	breq	.+62     	; 0x3d60 <malloc+0xb0>
    3d22:	28 1b       	sub	r18, r24
    3d24:	39 0b       	sbc	r19, r25
    3d26:	24 30       	cpi	r18, 0x04	; 4
    3d28:	31 05       	cpc	r19, r1
    3d2a:	80 f4       	brcc	.+32     	; 0x3d4c <malloc+0x9c>
    3d2c:	8a 81       	ldd	r24, Y+2	; 0x02
    3d2e:	9b 81       	ldd	r25, Y+3	; 0x03
    3d30:	61 15       	cp	r22, r1
    3d32:	71 05       	cpc	r23, r1
    3d34:	21 f0       	breq	.+8      	; 0x3d3e <malloc+0x8e>
    3d36:	fb 01       	movw	r30, r22
    3d38:	82 83       	std	Z+2, r24	; 0x02
    3d3a:	93 83       	std	Z+3, r25	; 0x03
    3d3c:	04 c0       	rjmp	.+8      	; 0x3d46 <malloc+0x96>
    3d3e:	80 93 78 21 	sts	0x2178, r24	; 0x802178 <__flp>
    3d42:	90 93 79 21 	sts	0x2179, r25	; 0x802179 <__flp+0x1>
    3d46:	fe 01       	movw	r30, r28
    3d48:	32 96       	adiw	r30, 0x02	; 2
    3d4a:	44 c0       	rjmp	.+136    	; 0x3dd4 <malloc+0x124>
    3d4c:	fe 01       	movw	r30, r28
    3d4e:	e2 0f       	add	r30, r18
    3d50:	f3 1f       	adc	r31, r19
    3d52:	81 93       	st	Z+, r24
    3d54:	91 93       	st	Z+, r25
    3d56:	22 50       	subi	r18, 0x02	; 2
    3d58:	31 09       	sbc	r19, r1
    3d5a:	28 83       	st	Y, r18
    3d5c:	39 83       	std	Y+1, r19	; 0x01
    3d5e:	3a c0       	rjmp	.+116    	; 0x3dd4 <malloc+0x124>
    3d60:	20 91 76 21 	lds	r18, 0x2176	; 0x802176 <__brkval>
    3d64:	30 91 77 21 	lds	r19, 0x2177	; 0x802177 <__brkval+0x1>
    3d68:	23 2b       	or	r18, r19
    3d6a:	41 f4       	brne	.+16     	; 0x3d7c <malloc+0xcc>
    3d6c:	20 91 02 20 	lds	r18, 0x2002	; 0x802002 <__malloc_heap_start>
    3d70:	30 91 03 20 	lds	r19, 0x2003	; 0x802003 <__malloc_heap_start+0x1>
    3d74:	20 93 76 21 	sts	0x2176, r18	; 0x802176 <__brkval>
    3d78:	30 93 77 21 	sts	0x2177, r19	; 0x802177 <__brkval+0x1>
    3d7c:	20 91 00 20 	lds	r18, 0x2000	; 0x802000 <__data_start>
    3d80:	30 91 01 20 	lds	r19, 0x2001	; 0x802001 <__data_start+0x1>
    3d84:	21 15       	cp	r18, r1
    3d86:	31 05       	cpc	r19, r1
    3d88:	41 f4       	brne	.+16     	; 0x3d9a <malloc+0xea>
    3d8a:	2d b7       	in	r18, 0x3d	; 61
    3d8c:	3e b7       	in	r19, 0x3e	; 62
    3d8e:	40 91 04 20 	lds	r20, 0x2004	; 0x802004 <__malloc_margin>
    3d92:	50 91 05 20 	lds	r21, 0x2005	; 0x802005 <__malloc_margin+0x1>
    3d96:	24 1b       	sub	r18, r20
    3d98:	35 0b       	sbc	r19, r21
    3d9a:	e0 91 76 21 	lds	r30, 0x2176	; 0x802176 <__brkval>
    3d9e:	f0 91 77 21 	lds	r31, 0x2177	; 0x802177 <__brkval+0x1>
    3da2:	e2 17       	cp	r30, r18
    3da4:	f3 07       	cpc	r31, r19
    3da6:	a0 f4       	brcc	.+40     	; 0x3dd0 <malloc+0x120>
    3da8:	2e 1b       	sub	r18, r30
    3daa:	3f 0b       	sbc	r19, r31
    3dac:	28 17       	cp	r18, r24
    3dae:	39 07       	cpc	r19, r25
    3db0:	78 f0       	brcs	.+30     	; 0x3dd0 <malloc+0x120>
    3db2:	ac 01       	movw	r20, r24
    3db4:	4e 5f       	subi	r20, 0xFE	; 254
    3db6:	5f 4f       	sbci	r21, 0xFF	; 255
    3db8:	24 17       	cp	r18, r20
    3dba:	35 07       	cpc	r19, r21
    3dbc:	48 f0       	brcs	.+18     	; 0x3dd0 <malloc+0x120>
    3dbe:	4e 0f       	add	r20, r30
    3dc0:	5f 1f       	adc	r21, r31
    3dc2:	40 93 76 21 	sts	0x2176, r20	; 0x802176 <__brkval>
    3dc6:	50 93 77 21 	sts	0x2177, r21	; 0x802177 <__brkval+0x1>
    3dca:	81 93       	st	Z+, r24
    3dcc:	91 93       	st	Z+, r25
    3dce:	02 c0       	rjmp	.+4      	; 0x3dd4 <malloc+0x124>
    3dd0:	e0 e0       	ldi	r30, 0x00	; 0
    3dd2:	f0 e0       	ldi	r31, 0x00	; 0
    3dd4:	cf 01       	movw	r24, r30
    3dd6:	df 91       	pop	r29
    3dd8:	cf 91       	pop	r28
    3dda:	1f 91       	pop	r17
    3ddc:	0f 91       	pop	r16
    3dde:	08 95       	ret

00003de0 <free>:
    3de0:	cf 93       	push	r28
    3de2:	df 93       	push	r29
    3de4:	00 97       	sbiw	r24, 0x00	; 0
    3de6:	09 f4       	brne	.+2      	; 0x3dea <free+0xa>
    3de8:	81 c0       	rjmp	.+258    	; 0x3eec <free+0x10c>
    3dea:	fc 01       	movw	r30, r24
    3dec:	32 97       	sbiw	r30, 0x02	; 2
    3dee:	12 82       	std	Z+2, r1	; 0x02
    3df0:	13 82       	std	Z+3, r1	; 0x03
    3df2:	a0 91 78 21 	lds	r26, 0x2178	; 0x802178 <__flp>
    3df6:	b0 91 79 21 	lds	r27, 0x2179	; 0x802179 <__flp+0x1>
    3dfa:	10 97       	sbiw	r26, 0x00	; 0
    3dfc:	81 f4       	brne	.+32     	; 0x3e1e <free+0x3e>
    3dfe:	20 81       	ld	r18, Z
    3e00:	31 81       	ldd	r19, Z+1	; 0x01
    3e02:	82 0f       	add	r24, r18
    3e04:	93 1f       	adc	r25, r19
    3e06:	20 91 76 21 	lds	r18, 0x2176	; 0x802176 <__brkval>
    3e0a:	30 91 77 21 	lds	r19, 0x2177	; 0x802177 <__brkval+0x1>
    3e0e:	28 17       	cp	r18, r24
    3e10:	39 07       	cpc	r19, r25
    3e12:	51 f5       	brne	.+84     	; 0x3e68 <free+0x88>
    3e14:	e0 93 76 21 	sts	0x2176, r30	; 0x802176 <__brkval>
    3e18:	f0 93 77 21 	sts	0x2177, r31	; 0x802177 <__brkval+0x1>
    3e1c:	67 c0       	rjmp	.+206    	; 0x3eec <free+0x10c>
    3e1e:	ed 01       	movw	r28, r26
    3e20:	20 e0       	ldi	r18, 0x00	; 0
    3e22:	30 e0       	ldi	r19, 0x00	; 0
    3e24:	ce 17       	cp	r28, r30
    3e26:	df 07       	cpc	r29, r31
    3e28:	40 f4       	brcc	.+16     	; 0x3e3a <free+0x5a>
    3e2a:	4a 81       	ldd	r20, Y+2	; 0x02
    3e2c:	5b 81       	ldd	r21, Y+3	; 0x03
    3e2e:	9e 01       	movw	r18, r28
    3e30:	41 15       	cp	r20, r1
    3e32:	51 05       	cpc	r21, r1
    3e34:	f1 f0       	breq	.+60     	; 0x3e72 <free+0x92>
    3e36:	ea 01       	movw	r28, r20
    3e38:	f5 cf       	rjmp	.-22     	; 0x3e24 <free+0x44>
    3e3a:	c2 83       	std	Z+2, r28	; 0x02
    3e3c:	d3 83       	std	Z+3, r29	; 0x03
    3e3e:	40 81       	ld	r20, Z
    3e40:	51 81       	ldd	r21, Z+1	; 0x01
    3e42:	84 0f       	add	r24, r20
    3e44:	95 1f       	adc	r25, r21
    3e46:	c8 17       	cp	r28, r24
    3e48:	d9 07       	cpc	r29, r25
    3e4a:	59 f4       	brne	.+22     	; 0x3e62 <free+0x82>
    3e4c:	88 81       	ld	r24, Y
    3e4e:	99 81       	ldd	r25, Y+1	; 0x01
    3e50:	84 0f       	add	r24, r20
    3e52:	95 1f       	adc	r25, r21
    3e54:	02 96       	adiw	r24, 0x02	; 2
    3e56:	80 83       	st	Z, r24
    3e58:	91 83       	std	Z+1, r25	; 0x01
    3e5a:	8a 81       	ldd	r24, Y+2	; 0x02
    3e5c:	9b 81       	ldd	r25, Y+3	; 0x03
    3e5e:	82 83       	std	Z+2, r24	; 0x02
    3e60:	93 83       	std	Z+3, r25	; 0x03
    3e62:	21 15       	cp	r18, r1
    3e64:	31 05       	cpc	r19, r1
    3e66:	29 f4       	brne	.+10     	; 0x3e72 <free+0x92>
    3e68:	e0 93 78 21 	sts	0x2178, r30	; 0x802178 <__flp>
    3e6c:	f0 93 79 21 	sts	0x2179, r31	; 0x802179 <__flp+0x1>
    3e70:	3d c0       	rjmp	.+122    	; 0x3eec <free+0x10c>
    3e72:	e9 01       	movw	r28, r18
    3e74:	ea 83       	std	Y+2, r30	; 0x02
    3e76:	fb 83       	std	Y+3, r31	; 0x03
    3e78:	49 91       	ld	r20, Y+
    3e7a:	59 91       	ld	r21, Y+
    3e7c:	c4 0f       	add	r28, r20
    3e7e:	d5 1f       	adc	r29, r21
    3e80:	ec 17       	cp	r30, r28
    3e82:	fd 07       	cpc	r31, r29
    3e84:	61 f4       	brne	.+24     	; 0x3e9e <free+0xbe>
    3e86:	80 81       	ld	r24, Z
    3e88:	91 81       	ldd	r25, Z+1	; 0x01
    3e8a:	84 0f       	add	r24, r20
    3e8c:	95 1f       	adc	r25, r21
    3e8e:	02 96       	adiw	r24, 0x02	; 2
    3e90:	e9 01       	movw	r28, r18
    3e92:	88 83       	st	Y, r24
    3e94:	99 83       	std	Y+1, r25	; 0x01
    3e96:	82 81       	ldd	r24, Z+2	; 0x02
    3e98:	93 81       	ldd	r25, Z+3	; 0x03
    3e9a:	8a 83       	std	Y+2, r24	; 0x02
    3e9c:	9b 83       	std	Y+3, r25	; 0x03
    3e9e:	e0 e0       	ldi	r30, 0x00	; 0
    3ea0:	f0 e0       	ldi	r31, 0x00	; 0
    3ea2:	12 96       	adiw	r26, 0x02	; 2
    3ea4:	8d 91       	ld	r24, X+
    3ea6:	9c 91       	ld	r25, X
    3ea8:	13 97       	sbiw	r26, 0x03	; 3
    3eaa:	00 97       	sbiw	r24, 0x00	; 0
    3eac:	19 f0       	breq	.+6      	; 0x3eb4 <free+0xd4>
    3eae:	fd 01       	movw	r30, r26
    3eb0:	dc 01       	movw	r26, r24
    3eb2:	f7 cf       	rjmp	.-18     	; 0x3ea2 <free+0xc2>
    3eb4:	8d 91       	ld	r24, X+
    3eb6:	9c 91       	ld	r25, X
    3eb8:	11 97       	sbiw	r26, 0x01	; 1
    3eba:	9d 01       	movw	r18, r26
    3ebc:	2e 5f       	subi	r18, 0xFE	; 254
    3ebe:	3f 4f       	sbci	r19, 0xFF	; 255
    3ec0:	82 0f       	add	r24, r18
    3ec2:	93 1f       	adc	r25, r19
    3ec4:	20 91 76 21 	lds	r18, 0x2176	; 0x802176 <__brkval>
    3ec8:	30 91 77 21 	lds	r19, 0x2177	; 0x802177 <__brkval+0x1>
    3ecc:	28 17       	cp	r18, r24
    3ece:	39 07       	cpc	r19, r25
    3ed0:	69 f4       	brne	.+26     	; 0x3eec <free+0x10c>
    3ed2:	30 97       	sbiw	r30, 0x00	; 0
    3ed4:	29 f4       	brne	.+10     	; 0x3ee0 <free+0x100>
    3ed6:	10 92 78 21 	sts	0x2178, r1	; 0x802178 <__flp>
    3eda:	10 92 79 21 	sts	0x2179, r1	; 0x802179 <__flp+0x1>
    3ede:	02 c0       	rjmp	.+4      	; 0x3ee4 <free+0x104>
    3ee0:	12 82       	std	Z+2, r1	; 0x02
    3ee2:	13 82       	std	Z+3, r1	; 0x03
    3ee4:	a0 93 76 21 	sts	0x2176, r26	; 0x802176 <__brkval>
    3ee8:	b0 93 77 21 	sts	0x2177, r27	; 0x802177 <__brkval+0x1>
    3eec:	df 91       	pop	r29
    3eee:	cf 91       	pop	r28
    3ef0:	08 95       	ret

00003ef2 <isspace>:
    3ef2:	91 11       	cpse	r25, r1
    3ef4:	1f c1       	rjmp	.+574    	; 0x4134 <__ctype_isfalse>
    3ef6:	80 32       	cpi	r24, 0x20	; 32
    3ef8:	19 f0       	breq	.+6      	; 0x3f00 <isspace+0xe>
    3efa:	89 50       	subi	r24, 0x09	; 9
    3efc:	85 50       	subi	r24, 0x05	; 5
    3efe:	d0 f7       	brcc	.-12     	; 0x3ef4 <isspace+0x2>
    3f00:	08 95       	ret

00003f02 <strchr_P>:
    3f02:	fc 01       	movw	r30, r24
    3f04:	05 90       	lpm	r0, Z+
    3f06:	06 16       	cp	r0, r22
    3f08:	21 f0       	breq	.+8      	; 0x3f12 <strchr_P+0x10>
    3f0a:	00 20       	and	r0, r0
    3f0c:	d9 f7       	brne	.-10     	; 0x3f04 <strchr_P+0x2>
    3f0e:	c0 01       	movw	r24, r0
    3f10:	08 95       	ret
    3f12:	31 97       	sbiw	r30, 0x01	; 1
    3f14:	cf 01       	movw	r24, r30
    3f16:	08 95       	ret

00003f18 <strnlen_P>:
    3f18:	fc 01       	movw	r30, r24
    3f1a:	05 90       	lpm	r0, Z+
    3f1c:	61 50       	subi	r22, 0x01	; 1
    3f1e:	70 40       	sbci	r23, 0x00	; 0
    3f20:	01 10       	cpse	r0, r1
    3f22:	d8 f7       	brcc	.-10     	; 0x3f1a <strnlen_P+0x2>
    3f24:	80 95       	com	r24
    3f26:	90 95       	com	r25
    3f28:	8e 0f       	add	r24, r30
    3f2a:	9f 1f       	adc	r25, r31
    3f2c:	08 95       	ret

00003f2e <memset>:
    3f2e:	dc 01       	movw	r26, r24
    3f30:	01 c0       	rjmp	.+2      	; 0x3f34 <memset+0x6>
    3f32:	6d 93       	st	X+, r22
    3f34:	41 50       	subi	r20, 0x01	; 1
    3f36:	50 40       	sbci	r21, 0x00	; 0
    3f38:	e0 f7       	brcc	.-8      	; 0x3f32 <memset+0x4>
    3f3a:	08 95       	ret

00003f3c <strnlen>:
    3f3c:	fc 01       	movw	r30, r24
    3f3e:	61 50       	subi	r22, 0x01	; 1
    3f40:	70 40       	sbci	r23, 0x00	; 0
    3f42:	01 90       	ld	r0, Z+
    3f44:	01 10       	cpse	r0, r1
    3f46:	d8 f7       	brcc	.-10     	; 0x3f3e <strnlen+0x2>
    3f48:	80 95       	com	r24
    3f4a:	90 95       	com	r25
    3f4c:	8e 0f       	add	r24, r30
    3f4e:	9f 1f       	adc	r25, r31
    3f50:	08 95       	ret

00003f52 <fgetc>:
    3f52:	cf 93       	push	r28
    3f54:	df 93       	push	r29
    3f56:	ec 01       	movw	r28, r24
    3f58:	2b 81       	ldd	r18, Y+3	; 0x03
    3f5a:	20 ff       	sbrs	r18, 0
    3f5c:	33 c0       	rjmp	.+102    	; 0x3fc4 <fgetc+0x72>
    3f5e:	26 ff       	sbrs	r18, 6
    3f60:	0a c0       	rjmp	.+20     	; 0x3f76 <fgetc+0x24>
    3f62:	2f 7b       	andi	r18, 0xBF	; 191
    3f64:	2b 83       	std	Y+3, r18	; 0x03
    3f66:	8e 81       	ldd	r24, Y+6	; 0x06
    3f68:	9f 81       	ldd	r25, Y+7	; 0x07
    3f6a:	01 96       	adiw	r24, 0x01	; 1
    3f6c:	8e 83       	std	Y+6, r24	; 0x06
    3f6e:	9f 83       	std	Y+7, r25	; 0x07
    3f70:	8a 81       	ldd	r24, Y+2	; 0x02
    3f72:	90 e0       	ldi	r25, 0x00	; 0
    3f74:	29 c0       	rjmp	.+82     	; 0x3fc8 <fgetc+0x76>
    3f76:	22 ff       	sbrs	r18, 2
    3f78:	0f c0       	rjmp	.+30     	; 0x3f98 <fgetc+0x46>
    3f7a:	e8 81       	ld	r30, Y
    3f7c:	f9 81       	ldd	r31, Y+1	; 0x01
    3f7e:	80 81       	ld	r24, Z
    3f80:	08 2e       	mov	r0, r24
    3f82:	00 0c       	add	r0, r0
    3f84:	99 0b       	sbc	r25, r25
    3f86:	00 97       	sbiw	r24, 0x00	; 0
    3f88:	19 f4       	brne	.+6      	; 0x3f90 <fgetc+0x3e>
    3f8a:	20 62       	ori	r18, 0x20	; 32
    3f8c:	2b 83       	std	Y+3, r18	; 0x03
    3f8e:	1a c0       	rjmp	.+52     	; 0x3fc4 <fgetc+0x72>
    3f90:	31 96       	adiw	r30, 0x01	; 1
    3f92:	e8 83       	st	Y, r30
    3f94:	f9 83       	std	Y+1, r31	; 0x01
    3f96:	0e c0       	rjmp	.+28     	; 0x3fb4 <fgetc+0x62>
    3f98:	ea 85       	ldd	r30, Y+10	; 0x0a
    3f9a:	fb 85       	ldd	r31, Y+11	; 0x0b
    3f9c:	19 95       	eicall
    3f9e:	97 ff       	sbrs	r25, 7
    3fa0:	09 c0       	rjmp	.+18     	; 0x3fb4 <fgetc+0x62>
    3fa2:	2b 81       	ldd	r18, Y+3	; 0x03
    3fa4:	01 96       	adiw	r24, 0x01	; 1
    3fa6:	11 f0       	breq	.+4      	; 0x3fac <fgetc+0x5a>
    3fa8:	80 e2       	ldi	r24, 0x20	; 32
    3faa:	01 c0       	rjmp	.+2      	; 0x3fae <fgetc+0x5c>
    3fac:	80 e1       	ldi	r24, 0x10	; 16
    3fae:	82 2b       	or	r24, r18
    3fb0:	8b 83       	std	Y+3, r24	; 0x03
    3fb2:	08 c0       	rjmp	.+16     	; 0x3fc4 <fgetc+0x72>
    3fb4:	2e 81       	ldd	r18, Y+6	; 0x06
    3fb6:	3f 81       	ldd	r19, Y+7	; 0x07
    3fb8:	2f 5f       	subi	r18, 0xFF	; 255
    3fba:	3f 4f       	sbci	r19, 0xFF	; 255
    3fbc:	2e 83       	std	Y+6, r18	; 0x06
    3fbe:	3f 83       	std	Y+7, r19	; 0x07
    3fc0:	99 27       	eor	r25, r25
    3fc2:	02 c0       	rjmp	.+4      	; 0x3fc8 <fgetc+0x76>
    3fc4:	8f ef       	ldi	r24, 0xFF	; 255
    3fc6:	9f ef       	ldi	r25, 0xFF	; 255
    3fc8:	df 91       	pop	r29
    3fca:	cf 91       	pop	r28
    3fcc:	08 95       	ret

00003fce <fputc>:
    3fce:	0f 93       	push	r16
    3fd0:	1f 93       	push	r17
    3fd2:	cf 93       	push	r28
    3fd4:	df 93       	push	r29
    3fd6:	fb 01       	movw	r30, r22
    3fd8:	23 81       	ldd	r18, Z+3	; 0x03
    3fda:	21 fd       	sbrc	r18, 1
    3fdc:	03 c0       	rjmp	.+6      	; 0x3fe4 <fputc+0x16>
    3fde:	8f ef       	ldi	r24, 0xFF	; 255
    3fe0:	9f ef       	ldi	r25, 0xFF	; 255
    3fe2:	2c c0       	rjmp	.+88     	; 0x403c <__stack+0x3d>
    3fe4:	22 ff       	sbrs	r18, 2
    3fe6:	16 c0       	rjmp	.+44     	; 0x4014 <__stack+0x15>
    3fe8:	46 81       	ldd	r20, Z+6	; 0x06
    3fea:	57 81       	ldd	r21, Z+7	; 0x07
    3fec:	24 81       	ldd	r18, Z+4	; 0x04
    3fee:	35 81       	ldd	r19, Z+5	; 0x05
    3ff0:	42 17       	cp	r20, r18
    3ff2:	53 07       	cpc	r21, r19
    3ff4:	44 f4       	brge	.+16     	; 0x4006 <__stack+0x7>
    3ff6:	a0 81       	ld	r26, Z
    3ff8:	b1 81       	ldd	r27, Z+1	; 0x01
    3ffa:	9d 01       	movw	r18, r26
    3ffc:	2f 5f       	subi	r18, 0xFF	; 255
    3ffe:	3f 4f       	sbci	r19, 0xFF	; 255
    4000:	20 83       	st	Z, r18
    4002:	31 83       	std	Z+1, r19	; 0x01
    4004:	8c 93       	st	X, r24
    4006:	26 81       	ldd	r18, Z+6	; 0x06
    4008:	37 81       	ldd	r19, Z+7	; 0x07
    400a:	2f 5f       	subi	r18, 0xFF	; 255
    400c:	3f 4f       	sbci	r19, 0xFF	; 255
    400e:	26 83       	std	Z+6, r18	; 0x06
    4010:	37 83       	std	Z+7, r19	; 0x07
    4012:	14 c0       	rjmp	.+40     	; 0x403c <__stack+0x3d>
    4014:	8b 01       	movw	r16, r22
    4016:	ec 01       	movw	r28, r24
    4018:	fb 01       	movw	r30, r22
    401a:	00 84       	ldd	r0, Z+8	; 0x08
    401c:	f1 85       	ldd	r31, Z+9	; 0x09
    401e:	e0 2d       	mov	r30, r0
    4020:	19 95       	eicall
    4022:	89 2b       	or	r24, r25
    4024:	e1 f6       	brne	.-72     	; 0x3fde <fputc+0x10>
    4026:	d8 01       	movw	r26, r16
    4028:	16 96       	adiw	r26, 0x06	; 6
    402a:	8d 91       	ld	r24, X+
    402c:	9c 91       	ld	r25, X
    402e:	17 97       	sbiw	r26, 0x07	; 7
    4030:	01 96       	adiw	r24, 0x01	; 1
    4032:	16 96       	adiw	r26, 0x06	; 6
    4034:	8d 93       	st	X+, r24
    4036:	9c 93       	st	X, r25
    4038:	17 97       	sbiw	r26, 0x07	; 7
    403a:	ce 01       	movw	r24, r28
    403c:	df 91       	pop	r29
    403e:	cf 91       	pop	r28
    4040:	1f 91       	pop	r17
    4042:	0f 91       	pop	r16
    4044:	08 95       	ret

00004046 <ungetc>:
    4046:	fb 01       	movw	r30, r22
    4048:	23 81       	ldd	r18, Z+3	; 0x03
    404a:	20 ff       	sbrs	r18, 0
    404c:	12 c0       	rjmp	.+36     	; 0x4072 <ungetc+0x2c>
    404e:	26 fd       	sbrc	r18, 6
    4050:	10 c0       	rjmp	.+32     	; 0x4072 <ungetc+0x2c>
    4052:	8f 3f       	cpi	r24, 0xFF	; 255
    4054:	3f ef       	ldi	r19, 0xFF	; 255
    4056:	93 07       	cpc	r25, r19
    4058:	61 f0       	breq	.+24     	; 0x4072 <ungetc+0x2c>
    405a:	82 83       	std	Z+2, r24	; 0x02
    405c:	2f 7d       	andi	r18, 0xDF	; 223
    405e:	20 64       	ori	r18, 0x40	; 64
    4060:	23 83       	std	Z+3, r18	; 0x03
    4062:	26 81       	ldd	r18, Z+6	; 0x06
    4064:	37 81       	ldd	r19, Z+7	; 0x07
    4066:	21 50       	subi	r18, 0x01	; 1
    4068:	31 09       	sbc	r19, r1
    406a:	26 83       	std	Z+6, r18	; 0x06
    406c:	37 83       	std	Z+7, r19	; 0x07
    406e:	99 27       	eor	r25, r25
    4070:	08 95       	ret
    4072:	8f ef       	ldi	r24, 0xFF	; 255
    4074:	9f ef       	ldi	r25, 0xFF	; 255
    4076:	08 95       	ret

00004078 <__ultoa_invert>:
    4078:	fa 01       	movw	r30, r20
    407a:	aa 27       	eor	r26, r26
    407c:	28 30       	cpi	r18, 0x08	; 8
    407e:	51 f1       	breq	.+84     	; 0x40d4 <__ultoa_invert+0x5c>
    4080:	20 31       	cpi	r18, 0x10	; 16
    4082:	81 f1       	breq	.+96     	; 0x40e4 <__ultoa_invert+0x6c>
    4084:	e8 94       	clt
    4086:	6f 93       	push	r22
    4088:	6e 7f       	andi	r22, 0xFE	; 254
    408a:	6e 5f       	subi	r22, 0xFE	; 254
    408c:	7f 4f       	sbci	r23, 0xFF	; 255
    408e:	8f 4f       	sbci	r24, 0xFF	; 255
    4090:	9f 4f       	sbci	r25, 0xFF	; 255
    4092:	af 4f       	sbci	r26, 0xFF	; 255
    4094:	b1 e0       	ldi	r27, 0x01	; 1
    4096:	3e d0       	rcall	.+124    	; 0x4114 <__ultoa_invert+0x9c>
    4098:	b4 e0       	ldi	r27, 0x04	; 4
    409a:	3c d0       	rcall	.+120    	; 0x4114 <__ultoa_invert+0x9c>
    409c:	67 0f       	add	r22, r23
    409e:	78 1f       	adc	r23, r24
    40a0:	89 1f       	adc	r24, r25
    40a2:	9a 1f       	adc	r25, r26
    40a4:	a1 1d       	adc	r26, r1
    40a6:	68 0f       	add	r22, r24
    40a8:	79 1f       	adc	r23, r25
    40aa:	8a 1f       	adc	r24, r26
    40ac:	91 1d       	adc	r25, r1
    40ae:	a1 1d       	adc	r26, r1
    40b0:	6a 0f       	add	r22, r26
    40b2:	71 1d       	adc	r23, r1
    40b4:	81 1d       	adc	r24, r1
    40b6:	91 1d       	adc	r25, r1
    40b8:	a1 1d       	adc	r26, r1
    40ba:	20 d0       	rcall	.+64     	; 0x40fc <__ultoa_invert+0x84>
    40bc:	09 f4       	brne	.+2      	; 0x40c0 <__ultoa_invert+0x48>
    40be:	68 94       	set
    40c0:	3f 91       	pop	r19
    40c2:	2a e0       	ldi	r18, 0x0A	; 10
    40c4:	26 9f       	mul	r18, r22
    40c6:	11 24       	eor	r1, r1
    40c8:	30 19       	sub	r19, r0
    40ca:	30 5d       	subi	r19, 0xD0	; 208
    40cc:	31 93       	st	Z+, r19
    40ce:	de f6       	brtc	.-74     	; 0x4086 <__ultoa_invert+0xe>
    40d0:	cf 01       	movw	r24, r30
    40d2:	08 95       	ret
    40d4:	46 2f       	mov	r20, r22
    40d6:	47 70       	andi	r20, 0x07	; 7
    40d8:	40 5d       	subi	r20, 0xD0	; 208
    40da:	41 93       	st	Z+, r20
    40dc:	b3 e0       	ldi	r27, 0x03	; 3
    40de:	0f d0       	rcall	.+30     	; 0x40fe <__ultoa_invert+0x86>
    40e0:	c9 f7       	brne	.-14     	; 0x40d4 <__ultoa_invert+0x5c>
    40e2:	f6 cf       	rjmp	.-20     	; 0x40d0 <__ultoa_invert+0x58>
    40e4:	46 2f       	mov	r20, r22
    40e6:	4f 70       	andi	r20, 0x0F	; 15
    40e8:	40 5d       	subi	r20, 0xD0	; 208
    40ea:	4a 33       	cpi	r20, 0x3A	; 58
    40ec:	18 f0       	brcs	.+6      	; 0x40f4 <__ultoa_invert+0x7c>
    40ee:	49 5d       	subi	r20, 0xD9	; 217
    40f0:	31 fd       	sbrc	r19, 1
    40f2:	40 52       	subi	r20, 0x20	; 32
    40f4:	41 93       	st	Z+, r20
    40f6:	02 d0       	rcall	.+4      	; 0x40fc <__ultoa_invert+0x84>
    40f8:	a9 f7       	brne	.-22     	; 0x40e4 <__ultoa_invert+0x6c>
    40fa:	ea cf       	rjmp	.-44     	; 0x40d0 <__ultoa_invert+0x58>
    40fc:	b4 e0       	ldi	r27, 0x04	; 4
    40fe:	a6 95       	lsr	r26
    4100:	97 95       	ror	r25
    4102:	87 95       	ror	r24
    4104:	77 95       	ror	r23
    4106:	67 95       	ror	r22
    4108:	ba 95       	dec	r27
    410a:	c9 f7       	brne	.-14     	; 0x40fe <__ultoa_invert+0x86>
    410c:	00 97       	sbiw	r24, 0x00	; 0
    410e:	61 05       	cpc	r22, r1
    4110:	71 05       	cpc	r23, r1
    4112:	08 95       	ret
    4114:	9b 01       	movw	r18, r22
    4116:	ac 01       	movw	r20, r24
    4118:	0a 2e       	mov	r0, r26
    411a:	06 94       	lsr	r0
    411c:	57 95       	ror	r21
    411e:	47 95       	ror	r20
    4120:	37 95       	ror	r19
    4122:	27 95       	ror	r18
    4124:	ba 95       	dec	r27
    4126:	c9 f7       	brne	.-14     	; 0x411a <__ultoa_invert+0xa2>
    4128:	62 0f       	add	r22, r18
    412a:	73 1f       	adc	r23, r19
    412c:	84 1f       	adc	r24, r20
    412e:	95 1f       	adc	r25, r21
    4130:	a0 1d       	adc	r26, r0
    4132:	08 95       	ret

00004134 <__ctype_isfalse>:
    4134:	99 27       	eor	r25, r25
    4136:	88 27       	eor	r24, r24

00004138 <__ctype_istrue>:
    4138:	08 95       	ret

0000413a <_exit>:
    413a:	f8 94       	cli

0000413c <__stop_program>:
    413c:	ff cf       	rjmp	.-2      	; 0x413c <__stop_program>
>>>>>>> 12b72fca4e03fe1aed4bfac7a40aae484c094347
