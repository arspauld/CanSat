
SkyFire.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000049e4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000c4  00802000  000049e4  00004a78  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000d4  008020c4  008020c4  00004b3c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00004b3c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004b98  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000004b0  00000000  00000000  00004bd8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000165d4  00000000  00000000  00005088  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00005d12  00000000  00000000  0001b65c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000882f  00000000  00000000  0002136e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001428  00000000  00000000  00029ba0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00033774  00000000  00000000  0002afc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000558f  00000000  00000000  0005e73c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000460  00000000  00000000  00063ccb  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000033da  00000000  00000000  0006412b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	79 c1       	rjmp	.+754    	; 0x2f4 <__ctors_end>
       2:	00 00       	nop
       4:	9d c1       	rjmp	.+826    	; 0x340 <__bad_interrupt>
       6:	00 00       	nop
       8:	9b c1       	rjmp	.+822    	; 0x340 <__bad_interrupt>
       a:	00 00       	nop
       c:	99 c1       	rjmp	.+818    	; 0x340 <__bad_interrupt>
       e:	00 00       	nop
      10:	97 c1       	rjmp	.+814    	; 0x340 <__bad_interrupt>
      12:	00 00       	nop
      14:	95 c1       	rjmp	.+810    	; 0x340 <__bad_interrupt>
      16:	00 00       	nop
      18:	93 c1       	rjmp	.+806    	; 0x340 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	91 c1       	rjmp	.+802    	; 0x340 <__bad_interrupt>
      1e:	00 00       	nop
      20:	8f c1       	rjmp	.+798    	; 0x340 <__bad_interrupt>
      22:	00 00       	nop
      24:	8d c1       	rjmp	.+794    	; 0x340 <__bad_interrupt>
      26:	00 00       	nop
      28:	8b c1       	rjmp	.+790    	; 0x340 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	89 c1       	rjmp	.+786    	; 0x340 <__bad_interrupt>
      2e:	00 00       	nop
      30:	87 c1       	rjmp	.+782    	; 0x340 <__bad_interrupt>
      32:	00 00       	nop
      34:	85 c1       	rjmp	.+778    	; 0x340 <__bad_interrupt>
      36:	00 00       	nop
      38:	0c 94 10 12 	jmp	0x2420	; 0x2420 <__vector_14>
      3c:	81 c1       	rjmp	.+770    	; 0x340 <__bad_interrupt>
      3e:	00 00       	nop
      40:	7f c1       	rjmp	.+766    	; 0x340 <__bad_interrupt>
      42:	00 00       	nop
      44:	7d c1       	rjmp	.+762    	; 0x340 <__bad_interrupt>
      46:	00 00       	nop
      48:	7b c1       	rjmp	.+758    	; 0x340 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	79 c1       	rjmp	.+754    	; 0x340 <__bad_interrupt>
      4e:	00 00       	nop
      50:	77 c1       	rjmp	.+750    	; 0x340 <__bad_interrupt>
      52:	00 00       	nop
      54:	75 c1       	rjmp	.+746    	; 0x340 <__bad_interrupt>
      56:	00 00       	nop
      58:	73 c1       	rjmp	.+742    	; 0x340 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	71 c1       	rjmp	.+738    	; 0x340 <__bad_interrupt>
      5e:	00 00       	nop
      60:	6f c1       	rjmp	.+734    	; 0x340 <__bad_interrupt>
      62:	00 00       	nop
      64:	6d c1       	rjmp	.+730    	; 0x340 <__bad_interrupt>
      66:	00 00       	nop
      68:	6b c1       	rjmp	.+726    	; 0x340 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	69 c1       	rjmp	.+722    	; 0x340 <__bad_interrupt>
      6e:	00 00       	nop
      70:	67 c1       	rjmp	.+718    	; 0x340 <__bad_interrupt>
      72:	00 00       	nop
      74:	65 c1       	rjmp	.+714    	; 0x340 <__bad_interrupt>
      76:	00 00       	nop
      78:	63 c1       	rjmp	.+710    	; 0x340 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	61 c1       	rjmp	.+706    	; 0x340 <__bad_interrupt>
      7e:	00 00       	nop
      80:	5f c1       	rjmp	.+702    	; 0x340 <__bad_interrupt>
      82:	00 00       	nop
      84:	5d c1       	rjmp	.+698    	; 0x340 <__bad_interrupt>
      86:	00 00       	nop
      88:	5b c1       	rjmp	.+694    	; 0x340 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	59 c1       	rjmp	.+690    	; 0x340 <__bad_interrupt>
      8e:	00 00       	nop
      90:	57 c1       	rjmp	.+686    	; 0x340 <__bad_interrupt>
      92:	00 00       	nop
      94:	55 c1       	rjmp	.+682    	; 0x340 <__bad_interrupt>
      96:	00 00       	nop
      98:	53 c1       	rjmp	.+678    	; 0x340 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	71 c2       	rjmp	.+1250   	; 0x580 <__vector_39>
      9e:	00 00       	nop
      a0:	ac c2       	rjmp	.+1368   	; 0x5fa <__vector_40>
      a2:	00 00       	nop
      a4:	e7 c2       	rjmp	.+1486   	; 0x674 <__vector_41>
      a6:	00 00       	nop
      a8:	22 c3       	rjmp	.+1604   	; 0x6ee <__vector_42>
      aa:	00 00       	nop
      ac:	49 c1       	rjmp	.+658    	; 0x340 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	47 c1       	rjmp	.+654    	; 0x340 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	45 c1       	rjmp	.+650    	; 0x340 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	43 c1       	rjmp	.+646    	; 0x340 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 bf 12 	jmp	0x257e	; 0x257e <__vector_47>
      c0:	3f c1       	rjmp	.+638    	; 0x340 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	3d c1       	rjmp	.+634    	; 0x340 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	3b c1       	rjmp	.+630    	; 0x340 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	39 c1       	rjmp	.+626    	; 0x340 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	37 c1       	rjmp	.+622    	; 0x340 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	35 c1       	rjmp	.+618    	; 0x340 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	33 c1       	rjmp	.+614    	; 0x340 <__bad_interrupt>
      da:	00 00       	nop
      dc:	31 c1       	rjmp	.+610    	; 0x340 <__bad_interrupt>
      de:	00 00       	nop
      e0:	2f c1       	rjmp	.+606    	; 0x340 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	2d c1       	rjmp	.+602    	; 0x340 <__bad_interrupt>
      e6:	00 00       	nop
      e8:	0c 94 44 14 	jmp	0x2888	; 0x2888 <__vector_58>
      ec:	29 c1       	rjmp	.+594    	; 0x340 <__bad_interrupt>
      ee:	00 00       	nop
      f0:	27 c1       	rjmp	.+590    	; 0x340 <__bad_interrupt>
      f2:	00 00       	nop
      f4:	25 c1       	rjmp	.+586    	; 0x340 <__bad_interrupt>
      f6:	00 00       	nop
      f8:	23 c1       	rjmp	.+582    	; 0x340 <__bad_interrupt>
      fa:	00 00       	nop
      fc:	21 c1       	rjmp	.+578    	; 0x340 <__bad_interrupt>
      fe:	00 00       	nop
     100:	1f c1       	rjmp	.+574    	; 0x340 <__bad_interrupt>
     102:	00 00       	nop
     104:	1d c1       	rjmp	.+570    	; 0x340 <__bad_interrupt>
     106:	00 00       	nop
     108:	1b c1       	rjmp	.+566    	; 0x340 <__bad_interrupt>
     10a:	00 00       	nop
     10c:	19 c1       	rjmp	.+562    	; 0x340 <__bad_interrupt>
     10e:	00 00       	nop
     110:	17 c1       	rjmp	.+558    	; 0x340 <__bad_interrupt>
     112:	00 00       	nop
     114:	15 c1       	rjmp	.+554    	; 0x340 <__bad_interrupt>
     116:	00 00       	nop
     118:	13 c1       	rjmp	.+550    	; 0x340 <__bad_interrupt>
     11a:	00 00       	nop
     11c:	3d c1       	rjmp	.+634    	; 0x398 <__vector_71>
     11e:	00 00       	nop
     120:	78 c1       	rjmp	.+752    	; 0x412 <__vector_72>
     122:	00 00       	nop
     124:	b3 c1       	rjmp	.+870    	; 0x48c <__vector_73>
     126:	00 00       	nop
     128:	ee c1       	rjmp	.+988    	; 0x506 <__vector_74>
     12a:	00 00       	nop
     12c:	09 c1       	rjmp	.+530    	; 0x340 <__bad_interrupt>
     12e:	00 00       	nop
     130:	07 c1       	rjmp	.+526    	; 0x340 <__bad_interrupt>
     132:	00 00       	nop
     134:	05 c1       	rjmp	.+522    	; 0x340 <__bad_interrupt>
     136:	00 00       	nop
     138:	03 c1       	rjmp	.+518    	; 0x340 <__bad_interrupt>
     13a:	00 00       	nop
     13c:	01 c1       	rjmp	.+514    	; 0x340 <__bad_interrupt>
     13e:	00 00       	nop
     140:	ff c0       	rjmp	.+510    	; 0x340 <__bad_interrupt>
     142:	00 00       	nop
     144:	fd c0       	rjmp	.+506    	; 0x340 <__bad_interrupt>
     146:	00 00       	nop
     148:	fb c0       	rjmp	.+502    	; 0x340 <__bad_interrupt>
     14a:	00 00       	nop
     14c:	f9 c0       	rjmp	.+498    	; 0x340 <__bad_interrupt>
     14e:	00 00       	nop
     150:	f7 c0       	rjmp	.+494    	; 0x340 <__bad_interrupt>
     152:	00 00       	nop
     154:	f5 c0       	rjmp	.+490    	; 0x340 <__bad_interrupt>
     156:	00 00       	nop
     158:	f3 c0       	rjmp	.+486    	; 0x340 <__bad_interrupt>
     15a:	00 00       	nop
     15c:	f1 c0       	rjmp	.+482    	; 0x340 <__bad_interrupt>
     15e:	00 00       	nop
     160:	ef c0       	rjmp	.+478    	; 0x340 <__bad_interrupt>
     162:	00 00       	nop
     164:	ed c0       	rjmp	.+474    	; 0x340 <__bad_interrupt>
     166:	00 00       	nop
     168:	eb c0       	rjmp	.+470    	; 0x340 <__bad_interrupt>
     16a:	00 00       	nop
     16c:	0c 94 9d 14 	jmp	0x293a	; 0x293a <__vector_91>
     170:	e7 c0       	rjmp	.+462    	; 0x340 <__bad_interrupt>
     172:	00 00       	nop
     174:	e5 c0       	rjmp	.+458    	; 0x340 <__bad_interrupt>
     176:	00 00       	nop
     178:	e3 c0       	rjmp	.+454    	; 0x340 <__bad_interrupt>
     17a:	00 00       	nop
     17c:	e1 c0       	rjmp	.+450    	; 0x340 <__bad_interrupt>
     17e:	00 00       	nop
     180:	df c0       	rjmp	.+446    	; 0x340 <__bad_interrupt>
     182:	00 00       	nop
     184:	dd c0       	rjmp	.+442    	; 0x340 <__bad_interrupt>
     186:	00 00       	nop
     188:	db c0       	rjmp	.+438    	; 0x340 <__bad_interrupt>
     18a:	00 00       	nop
     18c:	d9 c0       	rjmp	.+434    	; 0x340 <__bad_interrupt>
     18e:	00 00       	nop
     190:	d7 c0       	rjmp	.+430    	; 0x340 <__bad_interrupt>
     192:	00 00       	nop
     194:	d5 c0       	rjmp	.+426    	; 0x340 <__bad_interrupt>
     196:	00 00       	nop
     198:	d3 c0       	rjmp	.+422    	; 0x340 <__bad_interrupt>
     19a:	00 00       	nop
     19c:	d1 c0       	rjmp	.+418    	; 0x340 <__bad_interrupt>
     19e:	00 00       	nop
     1a0:	cf c0       	rjmp	.+414    	; 0x340 <__bad_interrupt>
     1a2:	00 00       	nop
     1a4:	cd c0       	rjmp	.+410    	; 0x340 <__bad_interrupt>
     1a6:	00 00       	nop
     1a8:	cb c0       	rjmp	.+406    	; 0x340 <__bad_interrupt>
     1aa:	00 00       	nop
     1ac:	c9 c0       	rjmp	.+402    	; 0x340 <__bad_interrupt>
     1ae:	00 00       	nop
     1b0:	c7 c0       	rjmp	.+398    	; 0x340 <__bad_interrupt>
     1b2:	00 00       	nop
     1b4:	c5 c0       	rjmp	.+394    	; 0x340 <__bad_interrupt>
     1b6:	00 00       	nop
     1b8:	c3 c0       	rjmp	.+390    	; 0x340 <__bad_interrupt>
     1ba:	00 00       	nop
     1bc:	c1 c0       	rjmp	.+386    	; 0x340 <__bad_interrupt>
     1be:	00 00       	nop
     1c0:	bf c0       	rjmp	.+382    	; 0x340 <__bad_interrupt>
     1c2:	00 00       	nop
     1c4:	bd c0       	rjmp	.+378    	; 0x340 <__bad_interrupt>
     1c6:	00 00       	nop
     1c8:	bb c0       	rjmp	.+374    	; 0x340 <__bad_interrupt>
     1ca:	00 00       	nop
     1cc:	b9 c0       	rjmp	.+370    	; 0x340 <__bad_interrupt>
     1ce:	00 00       	nop
     1d0:	b7 c0       	rjmp	.+366    	; 0x340 <__bad_interrupt>
     1d2:	00 00       	nop
     1d4:	b5 c0       	rjmp	.+362    	; 0x340 <__bad_interrupt>
     1d6:	00 00       	nop
     1d8:	b3 c0       	rjmp	.+358    	; 0x340 <__bad_interrupt>
     1da:	00 00       	nop
     1dc:	b1 c0       	rjmp	.+354    	; 0x340 <__bad_interrupt>
     1de:	00 00       	nop
     1e0:	af c0       	rjmp	.+350    	; 0x340 <__bad_interrupt>
     1e2:	00 00       	nop
     1e4:	ad c0       	rjmp	.+346    	; 0x340 <__bad_interrupt>
     1e6:	00 00       	nop
     1e8:	ab c0       	rjmp	.+342    	; 0x340 <__bad_interrupt>
     1ea:	00 00       	nop
     1ec:	a9 c0       	rjmp	.+338    	; 0x340 <__bad_interrupt>
     1ee:	00 00       	nop
     1f0:	a7 c0       	rjmp	.+334    	; 0x340 <__bad_interrupt>
     1f2:	00 00       	nop
     1f4:	a5 c0       	rjmp	.+330    	; 0x340 <__bad_interrupt>
     1f6:	00 00       	nop
     1f8:	a3 c0       	rjmp	.+326    	; 0x340 <__bad_interrupt>
     1fa:	00 00       	nop
     1fc:	03 6e       	ori	r16, 0xE3	; 227
     1fe:	db 36       	cpi	r29, 0x6B	; 107
     200:	3d 9a       	sbi	0x07, 5	; 7
     202:	99 99       	sbic	0x13, 1	; 19
     204:	99 3d       	cpi	r25, 0xD9	; 217
     206:	ab aa       	std	Y+51, r10	; 0x33
     208:	aa 2a       	or	r10, r26
     20a:	3e 00       	.word	0x003e	; ????
     20c:	00 00       	nop
     20e:	80 3f       	cpi	r24, 0xF0	; 240
     210:	08 4a       	sbci	r16, 0xA8	; 168
     212:	d7 3b       	cpi	r29, 0xB7	; 183
     214:	3b ce       	rjmp	.-906    	; 0xfffffe8c <__eeprom_end+0xff7efe8c>
     216:	01 6e       	ori	r16, 0xE1	; 225
     218:	84 bc       	out	0x24, r8	; 36
     21a:	bf fd       	.word	0xfdbf	; ????
     21c:	c1 2f       	mov	r28, r17
     21e:	3d 6c       	ori	r19, 0xCD	; 205
     220:	74 31       	cpi	r23, 0x14	; 20
     222:	9a bd       	out	0x2a, r25	; 42
     224:	56 83       	std	Z+6, r21	; 0x06
     226:	3d da       	rcall	.-2950   	; 0xfffff6a2 <__eeprom_end+0xff7ef6a2>
     228:	3d 00       	.word	0x003d	; ????
     22a:	c7 7f       	andi	r28, 0xF7	; 247
     22c:	11 be       	out	0x31, r1	; 49
     22e:	d9 e4       	ldi	r29, 0x49	; 73
     230:	bb 4c       	sbci	r27, 0xCB	; 203
     232:	3e 91       	ld	r19, -X
     234:	6b aa       	std	Y+51, r6	; 0x33
     236:	aa be       	out	0x3a, r10	; 58
     238:	00 00       	nop
     23a:	00 80       	ld	r0, Z
     23c:	3f 07       	cpc	r19, r31
     23e:	2c 7a       	andi	r18, 0xAC	; 172
     240:	a5 ba       	out	0x15, r10	; 21
     242:	6c c5       	rjmp	.+2776   	; 0xd1c <spi_read+0xc>
     244:	90 da       	rcall	.-2784   	; 0xfffff766 <__eeprom_end+0xff7ef766>
     246:	3b 93       	.word	0x933b	; ????
     248:	65 fc       	sbrc	r6, 5
     24a:	8b bc       	out	0x2b, r8	; 43
     24c:	53 f8       	bld	r5, 3
     24e:	10 fd       	sbrc	r17, 0
     250:	3c 56       	subi	r19, 0x6C	; 108
     252:	92 83       	std	Z+2, r25	; 0x02
     254:	4d bd       	out	0x2d, r20	; 45
     256:	87 9d       	mul	r24, r7
     258:	3a b6       	in	r3, 0x3a	; 58
     25a:	3d cb       	rjmp	.-2438   	; 0xfffff8d6 <__eeprom_end+0xff7ef8d6>
     25c:	c9 bf       	out	0x39, r28	; 57
     25e:	5b be       	out	0x3b, r5	; 59
     260:	73 da       	rcall	.-2842   	; 0xfffff748 <__eeprom_end+0xff7ef748>
     262:	0f c9       	rjmp	.-3554   	; 0xfffff482 <__eeprom_end+0xff7ef482>
     264:	3f 07       	cpc	r19, r31
     266:	63 42       	sbci	r22, 0x23	; 35
     268:	36 b7       	in	r19, 0x36	; 54
     26a:	9b d8       	rcall	.-3786   	; 0xfffff3a2 <__eeprom_end+0xff7ef3a2>
     26c:	a7 1a       	sub	r10, r23
     26e:	39 68       	ori	r19, 0x89	; 137
     270:	56 18       	sub	r5, r6
     272:	ae ba       	out	0x1e, r10	; 30
     274:	ab 55       	subi	r26, 0x5B	; 91
     276:	8c 1d       	adc	r24, r12
     278:	3c b7       	in	r19, 0x3c	; 60
     27a:	cc 57       	subi	r28, 0x7C	; 124
     27c:	63 bd       	out	0x23, r22	; 35
     27e:	6d ed       	ldi	r22, 0xDD	; 221
     280:	fd 75       	andi	r31, 0x5D	; 93
     282:	3e f6       	brtc	.-114    	; 0x212 <__SREG__+0x1d3>
     284:	17 72       	andi	r17, 0x27	; 39
     286:	31 bf       	out	0x31, r19	; 49
     288:	00 00       	nop
     28a:	00 80       	ld	r0, Z
     28c:	3f 08       	sbc	r3, r15
     28e:	00 00       	nop
     290:	00 be       	out	0x30, r0	; 48
     292:	92 24       	eor	r9, r2
     294:	49 12       	cpse	r4, r25
     296:	3e ab       	std	Y+54, r19	; 0x36
     298:	aa aa       	std	Y+50, r10	; 0x32
     29a:	2a be       	out	0x3a, r2	; 58
     29c:	cd cc       	rjmp	.-1638   	; 0xfffffc38 <__eeprom_end+0xff7efc38>
     29e:	cc 4c       	sbci	r28, 0xCC	; 204
     2a0:	3e 00       	.word	0x003e	; ????
     2a2:	00 00       	nop
     2a4:	80 be       	out	0x30, r8	; 48
     2a6:	ab aa       	std	Y+51, r10	; 0x33
     2a8:	aa aa       	std	Y+50, r10	; 0x32
     2aa:	3e 00       	.word	0x003e	; ????
     2ac:	00 00       	nop
     2ae:	00 bf       	out	0x30, r16	; 48
     2b0:	00 00       	nop
     2b2:	00 80       	ld	r0, Z
     2b4:	3f 00       	.word	0x003f	; ????
     2b6:	00 00       	nop
     2b8:	00 00       	nop
     2ba:	08 41       	sbci	r16, 0x18	; 24
     2bc:	78 d3       	rcall	.+1776   	; 0x9ae <usart_init_rs232+0x4>
     2be:	bb 43       	sbci	r27, 0x3B	; 59
     2c0:	87 d1       	rcall	.+782    	; 0x5d0 <__vector_39+0x50>
     2c2:	13 3d       	cpi	r17, 0xD3	; 211
     2c4:	19 0e       	add	r1, r25
     2c6:	3c c3       	rjmp	.+1656   	; 0x940 <usart_set_baudrate+0x1bc>
     2c8:	bd 42       	sbci	r27, 0x2D	; 45
     2ca:	82 ad       	ldd	r24, Z+58	; 0x3a
     2cc:	2b 3e       	cpi	r18, 0xEB	; 235
     2ce:	68 ec       	ldi	r22, 0xC8	; 200
     2d0:	82 76       	andi	r24, 0x62	; 98
     2d2:	be d9       	rcall	.-3204   	; 0xfffff650 <__eeprom_end+0xff7ef650>
     2d4:	8f e1       	ldi	r24, 0x1F	; 31
     2d6:	a9 3e       	cpi	r26, 0xE9	; 233
     2d8:	4c 80       	ldd	r4, Y+4	; 0x04
     2da:	ef ff       	.word	0xffef	; ????
     2dc:	be 01       	movw	r22, r28
     2de:	c4 ff       	sbrs	r28, 4
     2e0:	7f 3f       	cpi	r23, 0xFF	; 255
     2e2:	00 00       	nop
     2e4:	00 00       	nop
	...

000002e8 <__trampolines_end>:
     2e8:	63 64       	ori	r22, 0x43	; 67
     2ea:	69 6e       	ori	r22, 0xE9	; 233
     2ec:	6f 70       	andi	r22, 0x0F	; 15
     2ee:	73 75       	andi	r23, 0x53	; 83
     2f0:	78 58       	subi	r23, 0x88	; 136
     2f2:	5b 00       	.word	0x005b	; ????

000002f4 <__ctors_end>:
     2f4:	11 24       	eor	r1, r1
     2f6:	1f be       	out	0x3f, r1	; 63
     2f8:	cf ef       	ldi	r28, 0xFF	; 255
     2fa:	cd bf       	out	0x3d, r28	; 61
     2fc:	df e3       	ldi	r29, 0x3F	; 63
     2fe:	de bf       	out	0x3e, r29	; 62
     300:	00 e0       	ldi	r16, 0x00	; 0
     302:	0c bf       	out	0x3c, r16	; 60
     304:	18 be       	out	0x38, r1	; 56
     306:	19 be       	out	0x39, r1	; 57
     308:	1a be       	out	0x3a, r1	; 58
     30a:	1b be       	out	0x3b, r1	; 59

0000030c <__do_copy_data>:
     30c:	10 e2       	ldi	r17, 0x20	; 32
     30e:	a0 e0       	ldi	r26, 0x00	; 0
     310:	b0 e2       	ldi	r27, 0x20	; 32
     312:	e4 ee       	ldi	r30, 0xE4	; 228
     314:	f9 e4       	ldi	r31, 0x49	; 73
     316:	00 e0       	ldi	r16, 0x00	; 0
     318:	0b bf       	out	0x3b, r16	; 59
     31a:	02 c0       	rjmp	.+4      	; 0x320 <__do_copy_data+0x14>
     31c:	07 90       	elpm	r0, Z+
     31e:	0d 92       	st	X+, r0
     320:	a4 3c       	cpi	r26, 0xC4	; 196
     322:	b1 07       	cpc	r27, r17
     324:	d9 f7       	brne	.-10     	; 0x31c <__do_copy_data+0x10>
     326:	1b be       	out	0x3b, r1	; 59

00000328 <__do_clear_bss>:
     328:	21 e2       	ldi	r18, 0x21	; 33
     32a:	a4 ec       	ldi	r26, 0xC4	; 196
     32c:	b0 e2       	ldi	r27, 0x20	; 32
     32e:	01 c0       	rjmp	.+2      	; 0x332 <.do_clear_bss_start>

00000330 <.do_clear_bss_loop>:
     330:	1d 92       	st	X+, r1

00000332 <.do_clear_bss_start>:
     332:	a8 39       	cpi	r26, 0x98	; 152
     334:	b2 07       	cpc	r27, r18
     336:	e1 f7       	brne	.-8      	; 0x330 <.do_clear_bss_loop>
     338:	0e 94 f7 10 	call	0x21ee	; 0x21ee <main>
     33c:	0c 94 f0 24 	jmp	0x49e0	; 0x49e0 <_exit>

00000340 <__bad_interrupt>:
     340:	5f ce       	rjmp	.-834    	; 0x0 <__vectors>

00000342 <_read>:
#elif (defined(__GNUC__) && (XMEGA || MEGA) )

int _read (int *f); // Remove GCC compiler warning

int _read (int *f)
{
     342:	cf 93       	push	r28
     344:	df 93       	push	r29
     346:	1f 92       	push	r1
     348:	cd b7       	in	r28, 0x3d	; 61
     34a:	de b7       	in	r29, 0x3e	; 62
	char c;
	ptr_get(stdio_base,&c);
     34c:	80 91 10 21 	lds	r24, 0x2110	; 0x802110 <stdio_base>
     350:	90 91 11 21 	lds	r25, 0x2111	; 0x802111 <stdio_base+0x1>
     354:	e0 91 0c 21 	lds	r30, 0x210C	; 0x80210c <ptr_get>
     358:	f0 91 0d 21 	lds	r31, 0x210D	; 0x80210d <ptr_get+0x1>
     35c:	be 01       	movw	r22, r28
     35e:	6f 5f       	subi	r22, 0xFF	; 255
     360:	7f 4f       	sbci	r23, 0xFF	; 255
     362:	19 95       	eicall
	return c;
     364:	89 81       	ldd	r24, Y+1	; 0x01
}
     366:	08 2e       	mov	r0, r24
     368:	00 0c       	add	r0, r0
     36a:	99 0b       	sbc	r25, r25
     36c:	0f 90       	pop	r0
     36e:	df 91       	pop	r29
     370:	cf 91       	pop	r28
     372:	08 95       	ret

00000374 <_write>:
#elif (defined(__GNUC__) && (XMEGA || MEGA))

int _write (char c, int *f);

int _write (char c, int *f)
{
     374:	68 2f       	mov	r22, r24
	if (ptr_put(stdio_base, c) < 0) {
     376:	80 91 10 21 	lds	r24, 0x2110	; 0x802110 <stdio_base>
     37a:	90 91 11 21 	lds	r25, 0x2111	; 0x802111 <stdio_base+0x1>
     37e:	e0 91 0e 21 	lds	r30, 0x210E	; 0x80210e <ptr_put>
     382:	f0 91 0f 21 	lds	r31, 0x210F	; 0x80210f <ptr_put+0x1>
     386:	19 95       	eicall
     388:	99 23       	and	r25, r25
     38a:	1c f0       	brlt	.+6      	; 0x392 <_write+0x1e>
		return -1;
	}
	return 1;
     38c:	81 e0       	ldi	r24, 0x01	; 1
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	08 95       	ret
int _write (char c, int *f);

int _write (char c, int *f)
{
	if (ptr_put(stdio_base, c) < 0) {
		return -1;
     392:	8f ef       	ldi	r24, 0xFF	; 255
     394:	9f ef       	ldi	r25, 0xFF	; 255
	}
	return 1;
}
     396:	08 95       	ret

00000398 <__vector_71>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCA_CH0_vect)
{
     398:	1f 92       	push	r1
     39a:	0f 92       	push	r0
     39c:	0f b6       	in	r0, 0x3f	; 63
     39e:	0f 92       	push	r0
     3a0:	11 24       	eor	r1, r1
     3a2:	08 b6       	in	r0, 0x38	; 56
     3a4:	0f 92       	push	r0
     3a6:	18 be       	out	0x38, r1	; 56
     3a8:	09 b6       	in	r0, 0x39	; 57
     3aa:	0f 92       	push	r0
     3ac:	19 be       	out	0x39, r1	; 57
     3ae:	0b b6       	in	r0, 0x3b	; 59
     3b0:	0f 92       	push	r0
     3b2:	1b be       	out	0x3b, r1	; 59
     3b4:	2f 93       	push	r18
     3b6:	3f 93       	push	r19
     3b8:	4f 93       	push	r20
     3ba:	5f 93       	push	r21
     3bc:	6f 93       	push	r22
     3be:	7f 93       	push	r23
     3c0:	8f 93       	push	r24
     3c2:	9f 93       	push	r25
     3c4:	af 93       	push	r26
     3c6:	bf 93       	push	r27
     3c8:	ef 93       	push	r30
     3ca:	ff 93       	push	r31
	adca_callback(&ADCA, ADC_CH0, adc_get_result(&ADCA, ADC_CH0));
     3cc:	40 91 24 02 	lds	r20, 0x0224	; 0x800224 <__TEXT_REGION_LENGTH__+0x700224>
     3d0:	50 91 25 02 	lds	r21, 0x0225	; 0x800225 <__TEXT_REGION_LENGTH__+0x700225>
     3d4:	e0 91 14 21 	lds	r30, 0x2114	; 0x802114 <adca_callback>
     3d8:	f0 91 15 21 	lds	r31, 0x2115	; 0x802115 <adca_callback+0x1>
     3dc:	61 e0       	ldi	r22, 0x01	; 1
     3de:	80 e0       	ldi	r24, 0x00	; 0
     3e0:	92 e0       	ldi	r25, 0x02	; 2
     3e2:	19 95       	eicall
}
     3e4:	ff 91       	pop	r31
     3e6:	ef 91       	pop	r30
     3e8:	bf 91       	pop	r27
     3ea:	af 91       	pop	r26
     3ec:	9f 91       	pop	r25
     3ee:	8f 91       	pop	r24
     3f0:	7f 91       	pop	r23
     3f2:	6f 91       	pop	r22
     3f4:	5f 91       	pop	r21
     3f6:	4f 91       	pop	r20
     3f8:	3f 91       	pop	r19
     3fa:	2f 91       	pop	r18
     3fc:	0f 90       	pop	r0
     3fe:	0b be       	out	0x3b, r0	; 59
     400:	0f 90       	pop	r0
     402:	09 be       	out	0x39, r0	; 57
     404:	0f 90       	pop	r0
     406:	08 be       	out	0x38, r0	; 56
     408:	0f 90       	pop	r0
     40a:	0f be       	out	0x3f, r0	; 63
     40c:	0f 90       	pop	r0
     40e:	1f 90       	pop	r1
     410:	18 95       	reti

00000412 <__vector_72>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCA_CH1_vect)
{
     412:	1f 92       	push	r1
     414:	0f 92       	push	r0
     416:	0f b6       	in	r0, 0x3f	; 63
     418:	0f 92       	push	r0
     41a:	11 24       	eor	r1, r1
     41c:	08 b6       	in	r0, 0x38	; 56
     41e:	0f 92       	push	r0
     420:	18 be       	out	0x38, r1	; 56
     422:	09 b6       	in	r0, 0x39	; 57
     424:	0f 92       	push	r0
     426:	19 be       	out	0x39, r1	; 57
     428:	0b b6       	in	r0, 0x3b	; 59
     42a:	0f 92       	push	r0
     42c:	1b be       	out	0x3b, r1	; 59
     42e:	2f 93       	push	r18
     430:	3f 93       	push	r19
     432:	4f 93       	push	r20
     434:	5f 93       	push	r21
     436:	6f 93       	push	r22
     438:	7f 93       	push	r23
     43a:	8f 93       	push	r24
     43c:	9f 93       	push	r25
     43e:	af 93       	push	r26
     440:	bf 93       	push	r27
     442:	ef 93       	push	r30
     444:	ff 93       	push	r31
	adca_callback(&ADCA, ADC_CH1, adc_get_result(&ADCA, ADC_CH1));
     446:	40 91 2c 02 	lds	r20, 0x022C	; 0x80022c <__TEXT_REGION_LENGTH__+0x70022c>
     44a:	50 91 2d 02 	lds	r21, 0x022D	; 0x80022d <__TEXT_REGION_LENGTH__+0x70022d>
     44e:	e0 91 14 21 	lds	r30, 0x2114	; 0x802114 <adca_callback>
     452:	f0 91 15 21 	lds	r31, 0x2115	; 0x802115 <adca_callback+0x1>
     456:	62 e0       	ldi	r22, 0x02	; 2
     458:	80 e0       	ldi	r24, 0x00	; 0
     45a:	92 e0       	ldi	r25, 0x02	; 2
     45c:	19 95       	eicall
}
     45e:	ff 91       	pop	r31
     460:	ef 91       	pop	r30
     462:	bf 91       	pop	r27
     464:	af 91       	pop	r26
     466:	9f 91       	pop	r25
     468:	8f 91       	pop	r24
     46a:	7f 91       	pop	r23
     46c:	6f 91       	pop	r22
     46e:	5f 91       	pop	r21
     470:	4f 91       	pop	r20
     472:	3f 91       	pop	r19
     474:	2f 91       	pop	r18
     476:	0f 90       	pop	r0
     478:	0b be       	out	0x3b, r0	; 59
     47a:	0f 90       	pop	r0
     47c:	09 be       	out	0x39, r0	; 57
     47e:	0f 90       	pop	r0
     480:	08 be       	out	0x38, r0	; 56
     482:	0f 90       	pop	r0
     484:	0f be       	out	0x3f, r0	; 63
     486:	0f 90       	pop	r0
     488:	1f 90       	pop	r1
     48a:	18 95       	reti

0000048c <__vector_73>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCA_CH2_vect)
{
     48c:	1f 92       	push	r1
     48e:	0f 92       	push	r0
     490:	0f b6       	in	r0, 0x3f	; 63
     492:	0f 92       	push	r0
     494:	11 24       	eor	r1, r1
     496:	08 b6       	in	r0, 0x38	; 56
     498:	0f 92       	push	r0
     49a:	18 be       	out	0x38, r1	; 56
     49c:	09 b6       	in	r0, 0x39	; 57
     49e:	0f 92       	push	r0
     4a0:	19 be       	out	0x39, r1	; 57
     4a2:	0b b6       	in	r0, 0x3b	; 59
     4a4:	0f 92       	push	r0
     4a6:	1b be       	out	0x3b, r1	; 59
     4a8:	2f 93       	push	r18
     4aa:	3f 93       	push	r19
     4ac:	4f 93       	push	r20
     4ae:	5f 93       	push	r21
     4b0:	6f 93       	push	r22
     4b2:	7f 93       	push	r23
     4b4:	8f 93       	push	r24
     4b6:	9f 93       	push	r25
     4b8:	af 93       	push	r26
     4ba:	bf 93       	push	r27
     4bc:	ef 93       	push	r30
     4be:	ff 93       	push	r31
	adca_callback(&ADCA, ADC_CH2, adc_get_result(&ADCA, ADC_CH2));
     4c0:	40 91 34 02 	lds	r20, 0x0234	; 0x800234 <__TEXT_REGION_LENGTH__+0x700234>
     4c4:	50 91 35 02 	lds	r21, 0x0235	; 0x800235 <__TEXT_REGION_LENGTH__+0x700235>
     4c8:	e0 91 14 21 	lds	r30, 0x2114	; 0x802114 <adca_callback>
     4cc:	f0 91 15 21 	lds	r31, 0x2115	; 0x802115 <adca_callback+0x1>
     4d0:	64 e0       	ldi	r22, 0x04	; 4
     4d2:	80 e0       	ldi	r24, 0x00	; 0
     4d4:	92 e0       	ldi	r25, 0x02	; 2
     4d6:	19 95       	eicall
}
     4d8:	ff 91       	pop	r31
     4da:	ef 91       	pop	r30
     4dc:	bf 91       	pop	r27
     4de:	af 91       	pop	r26
     4e0:	9f 91       	pop	r25
     4e2:	8f 91       	pop	r24
     4e4:	7f 91       	pop	r23
     4e6:	6f 91       	pop	r22
     4e8:	5f 91       	pop	r21
     4ea:	4f 91       	pop	r20
     4ec:	3f 91       	pop	r19
     4ee:	2f 91       	pop	r18
     4f0:	0f 90       	pop	r0
     4f2:	0b be       	out	0x3b, r0	; 59
     4f4:	0f 90       	pop	r0
     4f6:	09 be       	out	0x39, r0	; 57
     4f8:	0f 90       	pop	r0
     4fa:	08 be       	out	0x38, r0	; 56
     4fc:	0f 90       	pop	r0
     4fe:	0f be       	out	0x3f, r0	; 63
     500:	0f 90       	pop	r0
     502:	1f 90       	pop	r1
     504:	18 95       	reti

00000506 <__vector_74>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCA_CH3_vect)
{
     506:	1f 92       	push	r1
     508:	0f 92       	push	r0
     50a:	0f b6       	in	r0, 0x3f	; 63
     50c:	0f 92       	push	r0
     50e:	11 24       	eor	r1, r1
     510:	08 b6       	in	r0, 0x38	; 56
     512:	0f 92       	push	r0
     514:	18 be       	out	0x38, r1	; 56
     516:	09 b6       	in	r0, 0x39	; 57
     518:	0f 92       	push	r0
     51a:	19 be       	out	0x39, r1	; 57
     51c:	0b b6       	in	r0, 0x3b	; 59
     51e:	0f 92       	push	r0
     520:	1b be       	out	0x3b, r1	; 59
     522:	2f 93       	push	r18
     524:	3f 93       	push	r19
     526:	4f 93       	push	r20
     528:	5f 93       	push	r21
     52a:	6f 93       	push	r22
     52c:	7f 93       	push	r23
     52e:	8f 93       	push	r24
     530:	9f 93       	push	r25
     532:	af 93       	push	r26
     534:	bf 93       	push	r27
     536:	ef 93       	push	r30
     538:	ff 93       	push	r31
	adca_callback(&ADCA, ADC_CH3, adc_get_result(&ADCA, ADC_CH3));
     53a:	40 91 3c 02 	lds	r20, 0x023C	; 0x80023c <__TEXT_REGION_LENGTH__+0x70023c>
     53e:	50 91 3d 02 	lds	r21, 0x023D	; 0x80023d <__TEXT_REGION_LENGTH__+0x70023d>
     542:	e0 91 14 21 	lds	r30, 0x2114	; 0x802114 <adca_callback>
     546:	f0 91 15 21 	lds	r31, 0x2115	; 0x802115 <adca_callback+0x1>
     54a:	68 e0       	ldi	r22, 0x08	; 8
     54c:	80 e0       	ldi	r24, 0x00	; 0
     54e:	92 e0       	ldi	r25, 0x02	; 2
     550:	19 95       	eicall
}
     552:	ff 91       	pop	r31
     554:	ef 91       	pop	r30
     556:	bf 91       	pop	r27
     558:	af 91       	pop	r26
     55a:	9f 91       	pop	r25
     55c:	8f 91       	pop	r24
     55e:	7f 91       	pop	r23
     560:	6f 91       	pop	r22
     562:	5f 91       	pop	r21
     564:	4f 91       	pop	r20
     566:	3f 91       	pop	r19
     568:	2f 91       	pop	r18
     56a:	0f 90       	pop	r0
     56c:	0b be       	out	0x3b, r0	; 59
     56e:	0f 90       	pop	r0
     570:	09 be       	out	0x39, r0	; 57
     572:	0f 90       	pop	r0
     574:	08 be       	out	0x38, r0	; 56
     576:	0f 90       	pop	r0
     578:	0f be       	out	0x3f, r0	; 63
     57a:	0f 90       	pop	r0
     57c:	1f 90       	pop	r1
     57e:	18 95       	reti

00000580 <__vector_39>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCB_CH0_vect)
{
     580:	1f 92       	push	r1
     582:	0f 92       	push	r0
     584:	0f b6       	in	r0, 0x3f	; 63
     586:	0f 92       	push	r0
     588:	11 24       	eor	r1, r1
     58a:	08 b6       	in	r0, 0x38	; 56
     58c:	0f 92       	push	r0
     58e:	18 be       	out	0x38, r1	; 56
     590:	09 b6       	in	r0, 0x39	; 57
     592:	0f 92       	push	r0
     594:	19 be       	out	0x39, r1	; 57
     596:	0b b6       	in	r0, 0x3b	; 59
     598:	0f 92       	push	r0
     59a:	1b be       	out	0x3b, r1	; 59
     59c:	2f 93       	push	r18
     59e:	3f 93       	push	r19
     5a0:	4f 93       	push	r20
     5a2:	5f 93       	push	r21
     5a4:	6f 93       	push	r22
     5a6:	7f 93       	push	r23
     5a8:	8f 93       	push	r24
     5aa:	9f 93       	push	r25
     5ac:	af 93       	push	r26
     5ae:	bf 93       	push	r27
     5b0:	ef 93       	push	r30
     5b2:	ff 93       	push	r31
	adcb_callback(&ADCB, ADC_CH0, adc_get_result(&ADCB, ADC_CH0));
     5b4:	40 91 64 02 	lds	r20, 0x0264	; 0x800264 <__TEXT_REGION_LENGTH__+0x700264>
     5b8:	50 91 65 02 	lds	r21, 0x0265	; 0x800265 <__TEXT_REGION_LENGTH__+0x700265>
     5bc:	e0 91 12 21 	lds	r30, 0x2112	; 0x802112 <adcb_callback>
     5c0:	f0 91 13 21 	lds	r31, 0x2113	; 0x802113 <adcb_callback+0x1>
     5c4:	61 e0       	ldi	r22, 0x01	; 1
     5c6:	80 e4       	ldi	r24, 0x40	; 64
     5c8:	92 e0       	ldi	r25, 0x02	; 2
     5ca:	19 95       	eicall
}
     5cc:	ff 91       	pop	r31
     5ce:	ef 91       	pop	r30
     5d0:	bf 91       	pop	r27
     5d2:	af 91       	pop	r26
     5d4:	9f 91       	pop	r25
     5d6:	8f 91       	pop	r24
     5d8:	7f 91       	pop	r23
     5da:	6f 91       	pop	r22
     5dc:	5f 91       	pop	r21
     5de:	4f 91       	pop	r20
     5e0:	3f 91       	pop	r19
     5e2:	2f 91       	pop	r18
     5e4:	0f 90       	pop	r0
     5e6:	0b be       	out	0x3b, r0	; 59
     5e8:	0f 90       	pop	r0
     5ea:	09 be       	out	0x39, r0	; 57
     5ec:	0f 90       	pop	r0
     5ee:	08 be       	out	0x38, r0	; 56
     5f0:	0f 90       	pop	r0
     5f2:	0f be       	out	0x3f, r0	; 63
     5f4:	0f 90       	pop	r0
     5f6:	1f 90       	pop	r1
     5f8:	18 95       	reti

000005fa <__vector_40>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCB_CH1_vect)
{
     5fa:	1f 92       	push	r1
     5fc:	0f 92       	push	r0
     5fe:	0f b6       	in	r0, 0x3f	; 63
     600:	0f 92       	push	r0
     602:	11 24       	eor	r1, r1
     604:	08 b6       	in	r0, 0x38	; 56
     606:	0f 92       	push	r0
     608:	18 be       	out	0x38, r1	; 56
     60a:	09 b6       	in	r0, 0x39	; 57
     60c:	0f 92       	push	r0
     60e:	19 be       	out	0x39, r1	; 57
     610:	0b b6       	in	r0, 0x3b	; 59
     612:	0f 92       	push	r0
     614:	1b be       	out	0x3b, r1	; 59
     616:	2f 93       	push	r18
     618:	3f 93       	push	r19
     61a:	4f 93       	push	r20
     61c:	5f 93       	push	r21
     61e:	6f 93       	push	r22
     620:	7f 93       	push	r23
     622:	8f 93       	push	r24
     624:	9f 93       	push	r25
     626:	af 93       	push	r26
     628:	bf 93       	push	r27
     62a:	ef 93       	push	r30
     62c:	ff 93       	push	r31
	adcb_callback(&ADCB, ADC_CH1, adc_get_result(&ADCB, ADC_CH1));
     62e:	40 91 6c 02 	lds	r20, 0x026C	; 0x80026c <__TEXT_REGION_LENGTH__+0x70026c>
     632:	50 91 6d 02 	lds	r21, 0x026D	; 0x80026d <__TEXT_REGION_LENGTH__+0x70026d>
     636:	e0 91 12 21 	lds	r30, 0x2112	; 0x802112 <adcb_callback>
     63a:	f0 91 13 21 	lds	r31, 0x2113	; 0x802113 <adcb_callback+0x1>
     63e:	62 e0       	ldi	r22, 0x02	; 2
     640:	80 e4       	ldi	r24, 0x40	; 64
     642:	92 e0       	ldi	r25, 0x02	; 2
     644:	19 95       	eicall
}
     646:	ff 91       	pop	r31
     648:	ef 91       	pop	r30
     64a:	bf 91       	pop	r27
     64c:	af 91       	pop	r26
     64e:	9f 91       	pop	r25
     650:	8f 91       	pop	r24
     652:	7f 91       	pop	r23
     654:	6f 91       	pop	r22
     656:	5f 91       	pop	r21
     658:	4f 91       	pop	r20
     65a:	3f 91       	pop	r19
     65c:	2f 91       	pop	r18
     65e:	0f 90       	pop	r0
     660:	0b be       	out	0x3b, r0	; 59
     662:	0f 90       	pop	r0
     664:	09 be       	out	0x39, r0	; 57
     666:	0f 90       	pop	r0
     668:	08 be       	out	0x38, r0	; 56
     66a:	0f 90       	pop	r0
     66c:	0f be       	out	0x3f, r0	; 63
     66e:	0f 90       	pop	r0
     670:	1f 90       	pop	r1
     672:	18 95       	reti

00000674 <__vector_41>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCB_CH2_vect)
{
     674:	1f 92       	push	r1
     676:	0f 92       	push	r0
     678:	0f b6       	in	r0, 0x3f	; 63
     67a:	0f 92       	push	r0
     67c:	11 24       	eor	r1, r1
     67e:	08 b6       	in	r0, 0x38	; 56
     680:	0f 92       	push	r0
     682:	18 be       	out	0x38, r1	; 56
     684:	09 b6       	in	r0, 0x39	; 57
     686:	0f 92       	push	r0
     688:	19 be       	out	0x39, r1	; 57
     68a:	0b b6       	in	r0, 0x3b	; 59
     68c:	0f 92       	push	r0
     68e:	1b be       	out	0x3b, r1	; 59
     690:	2f 93       	push	r18
     692:	3f 93       	push	r19
     694:	4f 93       	push	r20
     696:	5f 93       	push	r21
     698:	6f 93       	push	r22
     69a:	7f 93       	push	r23
     69c:	8f 93       	push	r24
     69e:	9f 93       	push	r25
     6a0:	af 93       	push	r26
     6a2:	bf 93       	push	r27
     6a4:	ef 93       	push	r30
     6a6:	ff 93       	push	r31
	adcb_callback(&ADCB, ADC_CH2, adc_get_result(&ADCB, ADC_CH2));
     6a8:	40 91 74 02 	lds	r20, 0x0274	; 0x800274 <__TEXT_REGION_LENGTH__+0x700274>
     6ac:	50 91 75 02 	lds	r21, 0x0275	; 0x800275 <__TEXT_REGION_LENGTH__+0x700275>
     6b0:	e0 91 12 21 	lds	r30, 0x2112	; 0x802112 <adcb_callback>
     6b4:	f0 91 13 21 	lds	r31, 0x2113	; 0x802113 <adcb_callback+0x1>
     6b8:	64 e0       	ldi	r22, 0x04	; 4
     6ba:	80 e4       	ldi	r24, 0x40	; 64
     6bc:	92 e0       	ldi	r25, 0x02	; 2
     6be:	19 95       	eicall
}
     6c0:	ff 91       	pop	r31
     6c2:	ef 91       	pop	r30
     6c4:	bf 91       	pop	r27
     6c6:	af 91       	pop	r26
     6c8:	9f 91       	pop	r25
     6ca:	8f 91       	pop	r24
     6cc:	7f 91       	pop	r23
     6ce:	6f 91       	pop	r22
     6d0:	5f 91       	pop	r21
     6d2:	4f 91       	pop	r20
     6d4:	3f 91       	pop	r19
     6d6:	2f 91       	pop	r18
     6d8:	0f 90       	pop	r0
     6da:	0b be       	out	0x3b, r0	; 59
     6dc:	0f 90       	pop	r0
     6de:	09 be       	out	0x39, r0	; 57
     6e0:	0f 90       	pop	r0
     6e2:	08 be       	out	0x38, r0	; 56
     6e4:	0f 90       	pop	r0
     6e6:	0f be       	out	0x3f, r0	; 63
     6e8:	0f 90       	pop	r0
     6ea:	1f 90       	pop	r1
     6ec:	18 95       	reti

000006ee <__vector_42>:
 *
 * Calls the callback function that has been set for the ADC when the channel's
 * interrupt flag is set, if its interrupt has been enabled.
 */
ISR(ADCB_CH3_vect)
{
     6ee:	1f 92       	push	r1
     6f0:	0f 92       	push	r0
     6f2:	0f b6       	in	r0, 0x3f	; 63
     6f4:	0f 92       	push	r0
     6f6:	11 24       	eor	r1, r1
     6f8:	08 b6       	in	r0, 0x38	; 56
     6fa:	0f 92       	push	r0
     6fc:	18 be       	out	0x38, r1	; 56
     6fe:	09 b6       	in	r0, 0x39	; 57
     700:	0f 92       	push	r0
     702:	19 be       	out	0x39, r1	; 57
     704:	0b b6       	in	r0, 0x3b	; 59
     706:	0f 92       	push	r0
     708:	1b be       	out	0x3b, r1	; 59
     70a:	2f 93       	push	r18
     70c:	3f 93       	push	r19
     70e:	4f 93       	push	r20
     710:	5f 93       	push	r21
     712:	6f 93       	push	r22
     714:	7f 93       	push	r23
     716:	8f 93       	push	r24
     718:	9f 93       	push	r25
     71a:	af 93       	push	r26
     71c:	bf 93       	push	r27
     71e:	ef 93       	push	r30
     720:	ff 93       	push	r31
	adcb_callback(&ADCB, ADC_CH3, adc_get_result(&ADCB, ADC_CH3));
     722:	40 91 7c 02 	lds	r20, 0x027C	; 0x80027c <__TEXT_REGION_LENGTH__+0x70027c>
     726:	50 91 7d 02 	lds	r21, 0x027D	; 0x80027d <__TEXT_REGION_LENGTH__+0x70027d>
     72a:	e0 91 12 21 	lds	r30, 0x2112	; 0x802112 <adcb_callback>
     72e:	f0 91 13 21 	lds	r31, 0x2113	; 0x802113 <adcb_callback+0x1>
     732:	68 e0       	ldi	r22, 0x08	; 8
     734:	80 e4       	ldi	r24, 0x40	; 64
     736:	92 e0       	ldi	r25, 0x02	; 2
     738:	19 95       	eicall
}
     73a:	ff 91       	pop	r31
     73c:	ef 91       	pop	r30
     73e:	bf 91       	pop	r27
     740:	af 91       	pop	r26
     742:	9f 91       	pop	r25
     744:	8f 91       	pop	r24
     746:	7f 91       	pop	r23
     748:	6f 91       	pop	r22
     74a:	5f 91       	pop	r21
     74c:	4f 91       	pop	r20
     74e:	3f 91       	pop	r19
     750:	2f 91       	pop	r18
     752:	0f 90       	pop	r0
     754:	0b be       	out	0x3b, r0	; 59
     756:	0f 90       	pop	r0
     758:	09 be       	out	0x39, r0	; 57
     75a:	0f 90       	pop	r0
     75c:	08 be       	out	0x38, r0	; 56
     75e:	0f 90       	pop	r0
     760:	0f be       	out	0x3f, r0	; 63
     762:	0f 90       	pop	r0
     764:	1f 90       	pop	r1
     766:	18 95       	reti

00000768 <usart_putchar>:

	if (baud_offset != USART_BAUD_UNDEFINED) {
		(usart)->BAUDCTRLB = (uint8_t)((uint16_t)baudctrl);
		(usart)->BAUDCTRLA = (uint8_t)((uint16_t)baudctrl >> 8);
	}
}
     768:	fc 01       	movw	r30, r24
     76a:	91 81       	ldd	r25, Z+1	; 0x01
     76c:	95 ff       	sbrs	r25, 5
     76e:	fd cf       	rjmp	.-6      	; 0x76a <usart_putchar+0x2>
     770:	60 83       	st	Z, r22
     772:	80 e0       	ldi	r24, 0x00	; 0
     774:	90 e0       	ldi	r25, 0x00	; 0
     776:	08 95       	ret

00000778 <usart_getchar>:
     778:	fc 01       	movw	r30, r24
     77a:	91 81       	ldd	r25, Z+1	; 0x01
     77c:	99 23       	and	r25, r25
     77e:	ec f7       	brge	.-6      	; 0x77a <usart_getchar+0x2>
     780:	80 81       	ld	r24, Z
     782:	08 95       	ret

00000784 <usart_set_baudrate>:
 * \retval true if the hardware supports the baud rate
 * \retval false if the hardware does not support the baud rate (i.e. it's
 *               either too high or too low.)
 */
bool usart_set_baudrate(USART_t *usart, uint32_t baud, uint32_t cpu_hz)
{
     784:	4f 92       	push	r4
     786:	5f 92       	push	r5
     788:	6f 92       	push	r6
     78a:	7f 92       	push	r7
     78c:	8f 92       	push	r8
     78e:	9f 92       	push	r9
     790:	af 92       	push	r10
     792:	bf 92       	push	r11
     794:	ef 92       	push	r14
     796:	ff 92       	push	r15
     798:	0f 93       	push	r16
     79a:	1f 93       	push	r17
     79c:	cf 93       	push	r28
     79e:	7c 01       	movw	r14, r24
     7a0:	4a 01       	movw	r8, r20
     7a2:	5b 01       	movw	r10, r22
     7a4:	28 01       	movw	r4, r16
     7a6:	39 01       	movw	r6, r18
	/* 8 = (2^0) * 8 * (2^0) = (2^BSCALE_MIN) * 8 * (BSEL_MIN) */
	max_rate = cpu_hz / 8;
	/* 4194304 = (2^7) * 8 * (2^12) = (2^BSCALE_MAX) * 8 * (BSEL_MAX+1) */
	min_rate = cpu_hz / 4194304;

	if (!((usart)->CTRLB & USART_CLK2X_bm)) {
     7a8:	fc 01       	movw	r30, r24
     7aa:	84 81       	ldd	r24, Z+4	; 0x04
     7ac:	82 ff       	sbrs	r24, 2
     7ae:	16 c0       	rjmp	.+44     	; 0x7dc <usart_set_baudrate+0x58>

	/*
	 * Check if the hardware supports the given baud rate
	 */
	/* 8 = (2^0) * 8 * (2^0) = (2^BSCALE_MIN) * 8 * (BSEL_MIN) */
	max_rate = cpu_hz / 8;
     7b0:	d9 01       	movw	r26, r18
     7b2:	c8 01       	movw	r24, r16
     7b4:	68 94       	set
     7b6:	12 f8       	bld	r1, 2
     7b8:	b6 95       	lsr	r27
     7ba:	a7 95       	ror	r26
     7bc:	97 95       	ror	r25
     7be:	87 95       	ror	r24
     7c0:	16 94       	lsr	r1
     7c2:	d1 f7       	brne	.-12     	; 0x7b8 <usart_set_baudrate+0x34>
	/* 4194304 = (2^7) * 8 * (2^12) = (2^BSCALE_MAX) * 8 * (BSEL_MAX+1) */
	min_rate = cpu_hz / 4194304;
     7c4:	b9 01       	movw	r22, r18
     7c6:	a8 01       	movw	r20, r16
     7c8:	03 2e       	mov	r0, r19
     7ca:	36 e1       	ldi	r19, 0x16	; 22
     7cc:	76 95       	lsr	r23
     7ce:	67 95       	ror	r22
     7d0:	57 95       	ror	r21
     7d2:	47 95       	ror	r20
     7d4:	3a 95       	dec	r19
     7d6:	d1 f7       	brne	.-12     	; 0x7cc <usart_set_baudrate+0x48>
     7d8:	30 2d       	mov	r19, r0
     7da:	15 c0       	rjmp	.+42     	; 0x806 <usart_set_baudrate+0x82>

	if (!((usart)->CTRLB & USART_CLK2X_bm)) {
		max_rate /= 2;
     7dc:	d9 01       	movw	r26, r18
     7de:	c8 01       	movw	r24, r16
     7e0:	68 94       	set
     7e2:	13 f8       	bld	r1, 3
     7e4:	b6 95       	lsr	r27
     7e6:	a7 95       	ror	r26
     7e8:	97 95       	ror	r25
     7ea:	87 95       	ror	r24
     7ec:	16 94       	lsr	r1
     7ee:	d1 f7       	brne	.-12     	; 0x7e4 <usart_set_baudrate+0x60>
		min_rate /= 2;
     7f0:	b9 01       	movw	r22, r18
     7f2:	a8 01       	movw	r20, r16
     7f4:	03 2e       	mov	r0, r19
     7f6:	37 e1       	ldi	r19, 0x17	; 23
     7f8:	76 95       	lsr	r23
     7fa:	67 95       	ror	r22
     7fc:	57 95       	ror	r21
     7fe:	47 95       	ror	r20
     800:	3a 95       	dec	r19
     802:	d1 f7       	brne	.-12     	; 0x7f8 <usart_set_baudrate+0x74>
     804:	30 2d       	mov	r19, r0
	}

	if ((baud > max_rate) || (baud < min_rate)) {
     806:	88 15       	cp	r24, r8
     808:	99 05       	cpc	r25, r9
     80a:	aa 05       	cpc	r26, r10
     80c:	bb 05       	cpc	r27, r11
     80e:	08 f4       	brcc	.+2      	; 0x812 <usart_set_baudrate+0x8e>
     810:	a6 c0       	rjmp	.+332    	; 0x95e <usart_set_baudrate+0x1da>
     812:	84 16       	cp	r8, r20
     814:	95 06       	cpc	r9, r21
     816:	a6 06       	cpc	r10, r22
     818:	b7 06       	cpc	r11, r23
     81a:	08 f4       	brcc	.+2      	; 0x81e <usart_set_baudrate+0x9a>
     81c:	a2 c0       	rjmp	.+324    	; 0x962 <usart_set_baudrate+0x1de>
		return false;
	}

	/* Check if double speed is enabled. */
	if (!((usart)->CTRLB & USART_CLK2X_bm)) {
     81e:	f7 01       	movw	r30, r14
     820:	84 81       	ldd	r24, Z+4	; 0x04
     822:	82 fd       	sbrc	r24, 2
     824:	04 c0       	rjmp	.+8      	; 0x82e <usart_set_baudrate+0xaa>
		baud *= 2;
     826:	88 0c       	add	r8, r8
     828:	99 1c       	adc	r9, r9
     82a:	aa 1c       	adc	r10, r10
     82c:	bb 1c       	adc	r11, r11
	}

	/* Find the lowest possible exponent. */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;
     82e:	c3 01       	movw	r24, r6
     830:	b2 01       	movw	r22, r4
     832:	a5 01       	movw	r20, r10
     834:	94 01       	movw	r18, r8
     836:	0e 94 8c 1c 	call	0x3918	; 0x3918 <__udivmodsi4>

	for (exp = -7; exp < 7; exp++) {
		if (ratio < limit) {
     83a:	2f 3f       	cpi	r18, 0xFF	; 255
     83c:	31 05       	cpc	r19, r1
     83e:	41 05       	cpc	r20, r1
     840:	51 05       	cpc	r21, r1
     842:	08 f4       	brcc	.+2      	; 0x846 <usart_set_baudrate+0xc2>
     844:	90 c0       	rjmp	.+288    	; 0x966 <usart_set_baudrate+0x1e2>
     846:	8f ef       	ldi	r24, 0xFF	; 255
     848:	90 e0       	ldi	r25, 0x00	; 0
     84a:	a0 e0       	ldi	r26, 0x00	; 0
     84c:	b0 e0       	ldi	r27, 0x00	; 0
     84e:	c9 ef       	ldi	r28, 0xF9	; 249
     850:	05 c0       	rjmp	.+10     	; 0x85c <usart_set_baudrate+0xd8>
     852:	28 17       	cp	r18, r24
     854:	39 07       	cpc	r19, r25
     856:	4a 07       	cpc	r20, r26
     858:	5b 07       	cpc	r21, r27
     85a:	58 f0       	brcs	.+22     	; 0x872 <usart_set_baudrate+0xee>
			break;
		}

		limit <<= 1;
     85c:	88 0f       	add	r24, r24
     85e:	99 1f       	adc	r25, r25
     860:	aa 1f       	adc	r26, r26
     862:	bb 1f       	adc	r27, r27

		if (exp < -3) {
     864:	cd 3f       	cpi	r28, 0xFD	; 253
     866:	0c f4       	brge	.+2      	; 0x86a <usart_set_baudrate+0xe6>
			limit |= 1;
     868:	81 60       	ori	r24, 0x01	; 1
     86a:	cf 5f       	subi	r28, 0xFF	; 255

	/* Find the lowest possible exponent. */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;

	for (exp = -7; exp < 7; exp++) {
     86c:	c7 30       	cpi	r28, 0x07	; 7
     86e:	89 f7       	brne	.-30     	; 0x852 <usart_set_baudrate+0xce>
     870:	4f c0       	rjmp	.+158    	; 0x910 <usart_set_baudrate+0x18c>
	 * point.
	 *
	 * The formula for calculating BSEL is slightly different when exp is
	 * negative than it is when exp is positive.
	 */
	if (exp < 0) {
     872:	cc 23       	and	r28, r28
     874:	0c f0       	brlt	.+2      	; 0x878 <usart_set_baudrate+0xf4>
     876:	4c c0       	rjmp	.+152    	; 0x910 <usart_set_baudrate+0x18c>
		/* We are supposed to subtract 1, then apply BSCALE. We want to
		 * apply BSCALE first, so we need to turn everything inside the
		 * parenthesis into a single fractional expression.
		 */
		cpu_hz -= 8 * baud;
     878:	d5 01       	movw	r26, r10
     87a:	c4 01       	movw	r24, r8
     87c:	88 0f       	add	r24, r24
     87e:	99 1f       	adc	r25, r25
     880:	aa 1f       	adc	r26, r26
     882:	bb 1f       	adc	r27, r27
     884:	88 0f       	add	r24, r24
     886:	99 1f       	adc	r25, r25
     888:	aa 1f       	adc	r26, r26
     88a:	bb 1f       	adc	r27, r27
     88c:	88 0f       	add	r24, r24
     88e:	99 1f       	adc	r25, r25
     890:	aa 1f       	adc	r26, r26
     892:	bb 1f       	adc	r27, r27
     894:	48 1a       	sub	r4, r24
     896:	59 0a       	sbc	r5, r25
     898:	6a 0a       	sbc	r6, r26
     89a:	7b 0a       	sbc	r7, r27
		/* If we end up with a left-shift after taking the final
		 * divide-by-8 into account, do the shift before the divide.
		 * Otherwise, left-shift the denominator instead (effectively
		 * resulting in an overall right shift.)
		 */
		if (exp <= -3) {
     89c:	ce 3f       	cpi	r28, 0xFE	; 254
     89e:	f4 f4       	brge	.+60     	; 0x8dc <usart_set_baudrate+0x158>
			div = ((cpu_hz << (-exp - 3)) + baud / 2) / baud;
     8a0:	8d ef       	ldi	r24, 0xFD	; 253
     8a2:	9f ef       	ldi	r25, 0xFF	; 255
     8a4:	8c 1b       	sub	r24, r28
     8a6:	91 09       	sbc	r25, r1
     8a8:	c7 fd       	sbrc	r28, 7
     8aa:	93 95       	inc	r25
     8ac:	04 c0       	rjmp	.+8      	; 0x8b6 <usart_set_baudrate+0x132>
     8ae:	44 0c       	add	r4, r4
     8b0:	55 1c       	adc	r5, r5
     8b2:	66 1c       	adc	r6, r6
     8b4:	77 1c       	adc	r7, r7
     8b6:	8a 95       	dec	r24
     8b8:	d2 f7       	brpl	.-12     	; 0x8ae <usart_set_baudrate+0x12a>
     8ba:	d5 01       	movw	r26, r10
     8bc:	c4 01       	movw	r24, r8
     8be:	b6 95       	lsr	r27
     8c0:	a7 95       	ror	r26
     8c2:	97 95       	ror	r25
     8c4:	87 95       	ror	r24
     8c6:	bc 01       	movw	r22, r24
     8c8:	cd 01       	movw	r24, r26
     8ca:	64 0d       	add	r22, r4
     8cc:	75 1d       	adc	r23, r5
     8ce:	86 1d       	adc	r24, r6
     8d0:	97 1d       	adc	r25, r7
     8d2:	a5 01       	movw	r20, r10
     8d4:	94 01       	movw	r18, r8
     8d6:	0e 94 8c 1c 	call	0x3918	; 0x3918 <__udivmodsi4>
     8da:	37 c0       	rjmp	.+110    	; 0x94a <usart_set_baudrate+0x1c6>
		} else {
			baud <<= exp + 3;
     8dc:	83 e0       	ldi	r24, 0x03	; 3
     8de:	8c 0f       	add	r24, r28
     8e0:	a5 01       	movw	r20, r10
     8e2:	94 01       	movw	r18, r8
     8e4:	04 c0       	rjmp	.+8      	; 0x8ee <usart_set_baudrate+0x16a>
     8e6:	22 0f       	add	r18, r18
     8e8:	33 1f       	adc	r19, r19
     8ea:	44 1f       	adc	r20, r20
     8ec:	55 1f       	adc	r21, r21
     8ee:	8a 95       	dec	r24
     8f0:	d2 f7       	brpl	.-12     	; 0x8e6 <usart_set_baudrate+0x162>
			div = (cpu_hz + baud / 2) / baud;
     8f2:	da 01       	movw	r26, r20
     8f4:	c9 01       	movw	r24, r18
     8f6:	b6 95       	lsr	r27
     8f8:	a7 95       	ror	r26
     8fa:	97 95       	ror	r25
     8fc:	87 95       	ror	r24
     8fe:	bc 01       	movw	r22, r24
     900:	cd 01       	movw	r24, r26
     902:	64 0d       	add	r22, r4
     904:	75 1d       	adc	r23, r5
     906:	86 1d       	adc	r24, r6
     908:	97 1d       	adc	r25, r7
     90a:	0e 94 8c 1c 	call	0x3918	; 0x3918 <__udivmodsi4>
     90e:	1d c0       	rjmp	.+58     	; 0x94a <usart_set_baudrate+0x1c6>
		}
	} else {
		/* We will always do a right shift in this case, but we need to
		 * shift three extra positions because of the divide-by-8.
		 */
		baud <<= exp + 3;
     910:	83 e0       	ldi	r24, 0x03	; 3
     912:	8c 0f       	add	r24, r28
     914:	a5 01       	movw	r20, r10
     916:	94 01       	movw	r18, r8
     918:	04 c0       	rjmp	.+8      	; 0x922 <usart_set_baudrate+0x19e>
     91a:	22 0f       	add	r18, r18
     91c:	33 1f       	adc	r19, r19
     91e:	44 1f       	adc	r20, r20
     920:	55 1f       	adc	r21, r21
     922:	8a 95       	dec	r24
     924:	d2 f7       	brpl	.-12     	; 0x91a <usart_set_baudrate+0x196>
		div = (cpu_hz + baud / 2) / baud - 1;
     926:	da 01       	movw	r26, r20
     928:	c9 01       	movw	r24, r18
     92a:	b6 95       	lsr	r27
     92c:	a7 95       	ror	r26
     92e:	97 95       	ror	r25
     930:	87 95       	ror	r24
     932:	bc 01       	movw	r22, r24
     934:	cd 01       	movw	r24, r26
     936:	64 0d       	add	r22, r4
     938:	75 1d       	adc	r23, r5
     93a:	86 1d       	adc	r24, r6
     93c:	97 1d       	adc	r25, r7
     93e:	0e 94 8c 1c 	call	0x3918	; 0x3918 <__udivmodsi4>
     942:	21 50       	subi	r18, 0x01	; 1
     944:	31 09       	sbc	r19, r1
     946:	41 09       	sbc	r20, r1
     948:	51 09       	sbc	r21, r1
	}

	(usart)->BAUDCTRLB = (uint8_t)(((div >> 8) & 0X0F) | (exp << 4));
     94a:	83 2f       	mov	r24, r19
     94c:	8f 70       	andi	r24, 0x0F	; 15
     94e:	c2 95       	swap	r28
     950:	c0 7f       	andi	r28, 0xF0	; 240
     952:	c8 2b       	or	r28, r24
     954:	f7 01       	movw	r30, r14
     956:	c7 83       	std	Z+7, r28	; 0x07
	(usart)->BAUDCTRLA = (uint8_t)div;
     958:	26 83       	std	Z+6, r18	; 0x06

	return true;
     95a:	81 e0       	ldi	r24, 0x01	; 1
     95c:	18 c0       	rjmp	.+48     	; 0x98e <usart_set_baudrate+0x20a>
		max_rate /= 2;
		min_rate /= 2;
	}

	if ((baud > max_rate) || (baud < min_rate)) {
		return false;
     95e:	80 e0       	ldi	r24, 0x00	; 0
     960:	16 c0       	rjmp	.+44     	; 0x98e <usart_set_baudrate+0x20a>
     962:	80 e0       	ldi	r24, 0x00	; 0
     964:	14 c0       	rjmp	.+40     	; 0x98e <usart_set_baudrate+0x20a>
	if (exp < 0) {
		/* We are supposed to subtract 1, then apply BSCALE. We want to
		 * apply BSCALE first, so we need to turn everything inside the
		 * parenthesis into a single fractional expression.
		 */
		cpu_hz -= 8 * baud;
     966:	d5 01       	movw	r26, r10
     968:	c4 01       	movw	r24, r8
     96a:	88 0f       	add	r24, r24
     96c:	99 1f       	adc	r25, r25
     96e:	aa 1f       	adc	r26, r26
     970:	bb 1f       	adc	r27, r27
     972:	88 0f       	add	r24, r24
     974:	99 1f       	adc	r25, r25
     976:	aa 1f       	adc	r26, r26
     978:	bb 1f       	adc	r27, r27
     97a:	88 0f       	add	r24, r24
     97c:	99 1f       	adc	r25, r25
     97e:	aa 1f       	adc	r26, r26
     980:	bb 1f       	adc	r27, r27
     982:	48 1a       	sub	r4, r24
     984:	59 0a       	sbc	r5, r25
     986:	6a 0a       	sbc	r6, r26
     988:	7b 0a       	sbc	r7, r27

	/* Find the lowest possible exponent. */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;

	for (exp = -7; exp < 7; exp++) {
     98a:	c9 ef       	ldi	r28, 0xF9	; 249
     98c:	89 cf       	rjmp	.-238    	; 0x8a0 <usart_set_baudrate+0x11c>

	(usart)->BAUDCTRLB = (uint8_t)(((div >> 8) & 0X0F) | (exp << 4));
	(usart)->BAUDCTRLA = (uint8_t)div;

	return true;
}
     98e:	cf 91       	pop	r28
     990:	1f 91       	pop	r17
     992:	0f 91       	pop	r16
     994:	ff 90       	pop	r15
     996:	ef 90       	pop	r14
     998:	bf 90       	pop	r11
     99a:	af 90       	pop	r10
     99c:	9f 90       	pop	r9
     99e:	8f 90       	pop	r8
     9a0:	7f 90       	pop	r7
     9a2:	6f 90       	pop	r6
     9a4:	5f 90       	pop	r5
     9a6:	4f 90       	pop	r4
     9a8:	08 95       	ret

000009aa <usart_init_rs232>:
 *
 * \retval true if the initialization was successfull
 * \retval false if the initialization failed (error in baud rate calculation)
 */
bool usart_init_rs232(USART_t *usart, const usart_rs232_options_t *opt)
{
     9aa:	0f 93       	push	r16
     9ac:	1f 93       	push	r17
     9ae:	cf 93       	push	r28
     9b0:	df 93       	push	r29
     9b2:	ec 01       	movw	r28, r24
     9b4:	8b 01       	movw	r16, r22
 *
 * \param module Pointer to the module's base address.
 */
static inline void sysclk_enable_peripheral_clock(const volatile void *module)
{
	if (module == NULL) {
     9b6:	00 97       	sbiw	r24, 0x00	; 0
     9b8:	09 f4       	brne	.+2      	; 0x9bc <usart_init_rs232+0x12>
     9ba:	36 c1       	rjmp	.+620    	; 0xc28 <usart_init_rs232+0x27e>
		Assert(false);
	}
#ifdef AES
	else if (module == &AES) {
     9bc:	80 3c       	cpi	r24, 0xC0	; 192
     9be:	91 05       	cpc	r25, r1
     9c0:	21 f4       	brne	.+8      	; 0x9ca <usart_init_rs232+0x20>
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_AES);
     9c2:	60 e1       	ldi	r22, 0x10	; 16
     9c4:	80 e0       	ldi	r24, 0x00	; 0
     9c6:	3a d3       	rcall	.+1652   	; 0x103c <sysclk_enable_module>
     9c8:	2f c1       	rjmp	.+606    	; 0xc28 <usart_init_rs232+0x27e>
	}
#endif
#ifdef EBI
	else if (module == &EBI) {
     9ca:	c0 34       	cpi	r28, 0x40	; 64
     9cc:	84 e0       	ldi	r24, 0x04	; 4
     9ce:	d8 07       	cpc	r29, r24
     9d0:	21 f4       	brne	.+8      	; 0x9da <usart_init_rs232+0x30>
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_EBI);
     9d2:	68 e0       	ldi	r22, 0x08	; 8
     9d4:	80 e0       	ldi	r24, 0x00	; 0
     9d6:	32 d3       	rcall	.+1636   	; 0x103c <sysclk_enable_module>
     9d8:	27 c1       	rjmp	.+590    	; 0xc28 <usart_init_rs232+0x27e>
	}
#endif
#ifdef RTC
	else if (module == &RTC) {
     9da:	c1 15       	cp	r28, r1
     9dc:	e4 e0       	ldi	r30, 0x04	; 4
     9de:	de 07       	cpc	r29, r30
     9e0:	21 f4       	brne	.+8      	; 0x9ea <usart_init_rs232+0x40>
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_RTC);
     9e2:	64 e0       	ldi	r22, 0x04	; 4
     9e4:	80 e0       	ldi	r24, 0x00	; 0
     9e6:	2a d3       	rcall	.+1620   	; 0x103c <sysclk_enable_module>
     9e8:	1f c1       	rjmp	.+574    	; 0xc28 <usart_init_rs232+0x27e>
	}
#endif
#ifdef EVSYS
	else if (module == &EVSYS) {
     9ea:	c0 38       	cpi	r28, 0x80	; 128
     9ec:	f1 e0       	ldi	r31, 0x01	; 1
     9ee:	df 07       	cpc	r29, r31
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_EVSYS);
     9f0:	21 f4       	brne	.+8      	; 0x9fa <usart_init_rs232+0x50>
     9f2:	62 e0       	ldi	r22, 0x02	; 2
     9f4:	80 e0       	ldi	r24, 0x00	; 0
     9f6:	22 d3       	rcall	.+1604   	; 0x103c <sysclk_enable_module>
     9f8:	17 c1       	rjmp	.+558    	; 0xc28 <usart_init_rs232+0x27e>
	}
#endif
#ifdef DMA
	else if (module == &DMA) {
     9fa:	c1 15       	cp	r28, r1
     9fc:	81 e0       	ldi	r24, 0x01	; 1
     9fe:	d8 07       	cpc	r29, r24
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_DMA);
     a00:	21 f4       	brne	.+8      	; 0xa0a <usart_init_rs232+0x60>
     a02:	61 e0       	ldi	r22, 0x01	; 1
     a04:	80 e0       	ldi	r24, 0x00	; 0
     a06:	1a d3       	rcall	.+1588   	; 0x103c <sysclk_enable_module>
     a08:	0f c1       	rjmp	.+542    	; 0xc28 <usart_init_rs232+0x27e>
	else if (module == &EDMA) {
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_EDMA);
	}
#endif
#ifdef ACA
	else if (module == &ACA) {
     a0a:	c0 38       	cpi	r28, 0x80	; 128
     a0c:	e3 e0       	ldi	r30, 0x03	; 3
     a0e:	de 07       	cpc	r29, r30
		sysclk_enable_module(SYSCLK_PORT_A, SYSCLK_AC);
     a10:	21 f4       	brne	.+8      	; 0xa1a <usart_init_rs232+0x70>
     a12:	61 e0       	ldi	r22, 0x01	; 1
     a14:	81 e0       	ldi	r24, 0x01	; 1
     a16:	12 d3       	rcall	.+1572   	; 0x103c <sysclk_enable_module>
     a18:	07 c1       	rjmp	.+526    	; 0xc28 <usart_init_rs232+0x27e>
	}
#endif
#ifdef ACB
	else if (module == &ACB) {
     a1a:	c0 39       	cpi	r28, 0x90	; 144
     a1c:	f3 e0       	ldi	r31, 0x03	; 3
     a1e:	df 07       	cpc	r29, r31
		sysclk_enable_module(SYSCLK_PORT_B, SYSCLK_AC);
     a20:	21 f4       	brne	.+8      	; 0xa2a <usart_init_rs232+0x80>
     a22:	61 e0       	ldi	r22, 0x01	; 1
     a24:	82 e0       	ldi	r24, 0x02	; 2
     a26:	0a d3       	rcall	.+1556   	; 0x103c <sysclk_enable_module>
	}
#endif
#ifdef ADCA
	else if (module == &ADCA) {
     a28:	ff c0       	rjmp	.+510    	; 0xc28 <usart_init_rs232+0x27e>
     a2a:	c1 15       	cp	r28, r1
     a2c:	82 e0       	ldi	r24, 0x02	; 2
     a2e:	d8 07       	cpc	r29, r24
		sysclk_enable_module(SYSCLK_PORT_A, SYSCLK_ADC);
     a30:	21 f4       	brne	.+8      	; 0xa3a <usart_init_rs232+0x90>
     a32:	62 e0       	ldi	r22, 0x02	; 2
     a34:	81 e0       	ldi	r24, 0x01	; 1
     a36:	02 d3       	rcall	.+1540   	; 0x103c <sysclk_enable_module>
	}
#endif
#ifdef ADCB
	else if (module == &ADCB) {
     a38:	f7 c0       	rjmp	.+494    	; 0xc28 <usart_init_rs232+0x27e>
     a3a:	c0 34       	cpi	r28, 0x40	; 64
     a3c:	e2 e0       	ldi	r30, 0x02	; 2
     a3e:	de 07       	cpc	r29, r30
		sysclk_enable_module(SYSCLK_PORT_B, SYSCLK_ADC);
     a40:	21 f4       	brne	.+8      	; 0xa4a <usart_init_rs232+0xa0>
     a42:	62 e0       	ldi	r22, 0x02	; 2
     a44:	82 e0       	ldi	r24, 0x02	; 2
     a46:	fa d2       	rcall	.+1524   	; 0x103c <sysclk_enable_module>
	}
#endif
#ifdef DACA
	else if (module == &DACA) {
     a48:	ef c0       	rjmp	.+478    	; 0xc28 <usart_init_rs232+0x27e>
     a4a:	c1 15       	cp	r28, r1
     a4c:	f3 e0       	ldi	r31, 0x03	; 3
     a4e:	df 07       	cpc	r29, r31
		sysclk_enable_module(SYSCLK_PORT_A, SYSCLK_DAC);
     a50:	21 f4       	brne	.+8      	; 0xa5a <usart_init_rs232+0xb0>
     a52:	64 e0       	ldi	r22, 0x04	; 4
     a54:	81 e0       	ldi	r24, 0x01	; 1
     a56:	f2 d2       	rcall	.+1508   	; 0x103c <sysclk_enable_module>
	}
#endif
// Workaround for bad XMEGA D header file
#if !XMEGA_D
#ifdef DACB
	else if (module == &DACB) {
     a58:	e7 c0       	rjmp	.+462    	; 0xc28 <usart_init_rs232+0x27e>
     a5a:	c0 32       	cpi	r28, 0x20	; 32
     a5c:	83 e0       	ldi	r24, 0x03	; 3
     a5e:	d8 07       	cpc	r29, r24
		sysclk_enable_module(SYSCLK_PORT_B, SYSCLK_DAC);
     a60:	21 f4       	brne	.+8      	; 0xa6a <usart_init_rs232+0xc0>
     a62:	64 e0       	ldi	r22, 0x04	; 4
     a64:	82 e0       	ldi	r24, 0x02	; 2
     a66:	ea d2       	rcall	.+1492   	; 0x103c <sysclk_enable_module>
	}
#endif
#endif // Workaround end
#ifdef TCC0
	else if (module == &TCC0) {
     a68:	df c0       	rjmp	.+446    	; 0xc28 <usart_init_rs232+0x27e>
     a6a:	c1 15       	cp	r28, r1
     a6c:	e8 e0       	ldi	r30, 0x08	; 8
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TC0);
     a6e:	de 07       	cpc	r29, r30
     a70:	21 f4       	brne	.+8      	; 0xa7a <usart_init_rs232+0xd0>
     a72:	61 e0       	ldi	r22, 0x01	; 1
     a74:	83 e0       	ldi	r24, 0x03	; 3
     a76:	e2 d2       	rcall	.+1476   	; 0x103c <sysclk_enable_module>
	}
#endif
#ifdef TCD0
	else if (module == &TCD0) {
     a78:	d7 c0       	rjmp	.+430    	; 0xc28 <usart_init_rs232+0x27e>
     a7a:	c1 15       	cp	r28, r1
     a7c:	f9 e0       	ldi	r31, 0x09	; 9
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC0);
     a7e:	df 07       	cpc	r29, r31
     a80:	21 f4       	brne	.+8      	; 0xa8a <usart_init_rs232+0xe0>
     a82:	61 e0       	ldi	r22, 0x01	; 1
     a84:	84 e0       	ldi	r24, 0x04	; 4
     a86:	da d2       	rcall	.+1460   	; 0x103c <sysclk_enable_module>
	}
#endif
#ifdef TCE0
	else if (module == &TCE0) {
     a88:	cf c0       	rjmp	.+414    	; 0xc28 <usart_init_rs232+0x27e>
     a8a:	c1 15       	cp	r28, r1
     a8c:	8a e0       	ldi	r24, 0x0A	; 10
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TC0);
     a8e:	d8 07       	cpc	r29, r24
     a90:	21 f4       	brne	.+8      	; 0xa9a <usart_init_rs232+0xf0>
     a92:	61 e0       	ldi	r22, 0x01	; 1
     a94:	85 e0       	ldi	r24, 0x05	; 5
     a96:	d2 d2       	rcall	.+1444   	; 0x103c <sysclk_enable_module>
	}
#endif
#ifdef TCF0
	else if (module == &TCF0) {
     a98:	c7 c0       	rjmp	.+398    	; 0xc28 <usart_init_rs232+0x27e>
     a9a:	c1 15       	cp	r28, r1
     a9c:	eb e0       	ldi	r30, 0x0B	; 11
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_TC0);
     a9e:	de 07       	cpc	r29, r30
     aa0:	21 f4       	brne	.+8      	; 0xaaa <usart_init_rs232+0x100>
     aa2:	61 e0       	ldi	r22, 0x01	; 1
     aa4:	86 e0       	ldi	r24, 0x06	; 6
	}
#endif
#ifdef TCC1
	else if (module == &TCC1) {
     aa6:	ca d2       	rcall	.+1428   	; 0x103c <sysclk_enable_module>
     aa8:	bf c0       	rjmp	.+382    	; 0xc28 <usart_init_rs232+0x27e>
     aaa:	c0 34       	cpi	r28, 0x40	; 64
     aac:	f8 e0       	ldi	r31, 0x08	; 8
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TC1);
     aae:	df 07       	cpc	r29, r31
     ab0:	21 f4       	brne	.+8      	; 0xaba <usart_init_rs232+0x110>
     ab2:	62 e0       	ldi	r22, 0x02	; 2
     ab4:	83 e0       	ldi	r24, 0x03	; 3
	}
#endif
#ifdef TCD1
	else if (module == &TCD1) {
     ab6:	c2 d2       	rcall	.+1412   	; 0x103c <sysclk_enable_module>
     ab8:	b7 c0       	rjmp	.+366    	; 0xc28 <usart_init_rs232+0x27e>
     aba:	c0 34       	cpi	r28, 0x40	; 64
     abc:	89 e0       	ldi	r24, 0x09	; 9
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC1);
     abe:	d8 07       	cpc	r29, r24
     ac0:	21 f4       	brne	.+8      	; 0xaca <usart_init_rs232+0x120>
     ac2:	62 e0       	ldi	r22, 0x02	; 2
     ac4:	84 e0       	ldi	r24, 0x04	; 4
	}
#endif
#ifdef TCE1
	else if (module == &TCE1) {
     ac6:	ba d2       	rcall	.+1396   	; 0x103c <sysclk_enable_module>
     ac8:	af c0       	rjmp	.+350    	; 0xc28 <usart_init_rs232+0x27e>
     aca:	c0 34       	cpi	r28, 0x40	; 64
     acc:	ea e0       	ldi	r30, 0x0A	; 10
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TC1);
     ace:	de 07       	cpc	r29, r30
     ad0:	21 f4       	brne	.+8      	; 0xada <usart_init_rs232+0x130>
     ad2:	62 e0       	ldi	r22, 0x02	; 2
     ad4:	85 e0       	ldi	r24, 0x05	; 5
	}
#endif
#ifdef TCF1
	else if (module == &TCF1) {
     ad6:	b2 d2       	rcall	.+1380   	; 0x103c <sysclk_enable_module>
     ad8:	a7 c0       	rjmp	.+334    	; 0xc28 <usart_init_rs232+0x27e>
     ada:	c0 34       	cpi	r28, 0x40	; 64
     adc:	fb e0       	ldi	r31, 0x0B	; 11
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_TC1);
     ade:	df 07       	cpc	r29, r31
     ae0:	21 f4       	brne	.+8      	; 0xaea <usart_init_rs232+0x140>
     ae2:	62 e0       	ldi	r22, 0x02	; 2
     ae4:	86 e0       	ldi	r24, 0x06	; 6
	else if (module == &TCD5) {
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC5);
	}
#endif
#ifdef HIRESC
	else if (module == &HIRESC) {
     ae6:	aa d2       	rcall	.+1364   	; 0x103c <sysclk_enable_module>
     ae8:	9f c0       	rjmp	.+318    	; 0xc28 <usart_init_rs232+0x27e>
     aea:	c0 39       	cpi	r28, 0x90	; 144
			sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_HIRES);
     aec:	88 e0       	ldi	r24, 0x08	; 8
     aee:	d8 07       	cpc	r29, r24
     af0:	21 f4       	brne	.+8      	; 0xafa <usart_init_rs232+0x150>
     af2:	64 e0       	ldi	r22, 0x04	; 4
     af4:	83 e0       	ldi	r24, 0x03	; 3
	}
#endif
#ifdef HIRESD
	else if (module == &HIRESD) {
     af6:	a2 d2       	rcall	.+1348   	; 0x103c <sysclk_enable_module>
     af8:	97 c0       	rjmp	.+302    	; 0xc28 <usart_init_rs232+0x27e>
     afa:	c0 39       	cpi	r28, 0x90	; 144
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_HIRES);
     afc:	e9 e0       	ldi	r30, 0x09	; 9
     afe:	de 07       	cpc	r29, r30
     b00:	21 f4       	brne	.+8      	; 0xb0a <usart_init_rs232+0x160>
     b02:	64 e0       	ldi	r22, 0x04	; 4
     b04:	84 e0       	ldi	r24, 0x04	; 4
	}
#endif
#ifdef HIRESE
	else if (module == &HIRESE) {
     b06:	9a d2       	rcall	.+1332   	; 0x103c <sysclk_enable_module>
     b08:	8f c0       	rjmp	.+286    	; 0xc28 <usart_init_rs232+0x27e>
     b0a:	c0 39       	cpi	r28, 0x90	; 144
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_HIRES);
     b0c:	fa e0       	ldi	r31, 0x0A	; 10
     b0e:	df 07       	cpc	r29, r31
     b10:	21 f4       	brne	.+8      	; 0xb1a <usart_init_rs232+0x170>
     b12:	64 e0       	ldi	r22, 0x04	; 4
     b14:	85 e0       	ldi	r24, 0x05	; 5
	}
#endif
#ifdef HIRESF
	else if (module == &HIRESF) {
     b16:	92 d2       	rcall	.+1316   	; 0x103c <sysclk_enable_module>
     b18:	87 c0       	rjmp	.+270    	; 0xc28 <usart_init_rs232+0x27e>
     b1a:	c0 39       	cpi	r28, 0x90	; 144
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_HIRES);
     b1c:	8b e0       	ldi	r24, 0x0B	; 11
     b1e:	d8 07       	cpc	r29, r24
     b20:	21 f4       	brne	.+8      	; 0xb2a <usart_init_rs232+0x180>
     b22:	64 e0       	ldi	r22, 0x04	; 4
	}
#endif
#ifdef SPIC
	else if (module == &SPIC) {
     b24:	86 e0       	ldi	r24, 0x06	; 6
     b26:	8a d2       	rcall	.+1300   	; 0x103c <sysclk_enable_module>
     b28:	7f c0       	rjmp	.+254    	; 0xc28 <usart_init_rs232+0x27e>
     b2a:	c0 3c       	cpi	r28, 0xC0	; 192
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_SPI);
     b2c:	e8 e0       	ldi	r30, 0x08	; 8
     b2e:	de 07       	cpc	r29, r30
     b30:	21 f4       	brne	.+8      	; 0xb3a <usart_init_rs232+0x190>
     b32:	68 e0       	ldi	r22, 0x08	; 8
	}
#endif
#ifdef SPID
	else if (module == &SPID) {
     b34:	83 e0       	ldi	r24, 0x03	; 3
     b36:	82 d2       	rcall	.+1284   	; 0x103c <sysclk_enable_module>
     b38:	77 c0       	rjmp	.+238    	; 0xc28 <usart_init_rs232+0x27e>
     b3a:	c0 3c       	cpi	r28, 0xC0	; 192
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_SPI);
     b3c:	f9 e0       	ldi	r31, 0x09	; 9
     b3e:	df 07       	cpc	r29, r31
     b40:	21 f4       	brne	.+8      	; 0xb4a <usart_init_rs232+0x1a0>
     b42:	68 e0       	ldi	r22, 0x08	; 8
	}
#endif
#ifdef SPIE
	else if (module == &SPIE) {
     b44:	84 e0       	ldi	r24, 0x04	; 4
     b46:	7a d2       	rcall	.+1268   	; 0x103c <sysclk_enable_module>
     b48:	6f c0       	rjmp	.+222    	; 0xc28 <usart_init_rs232+0x27e>
     b4a:	c0 3c       	cpi	r28, 0xC0	; 192
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_SPI);
     b4c:	8a e0       	ldi	r24, 0x0A	; 10
     b4e:	d8 07       	cpc	r29, r24
     b50:	21 f4       	brne	.+8      	; 0xb5a <usart_init_rs232+0x1b0>
     b52:	68 e0       	ldi	r22, 0x08	; 8
	}
#endif
#ifdef SPIF
	else if (module == &SPIF) {
     b54:	85 e0       	ldi	r24, 0x05	; 5
     b56:	72 d2       	rcall	.+1252   	; 0x103c <sysclk_enable_module>
     b58:	67 c0       	rjmp	.+206    	; 0xc28 <usart_init_rs232+0x27e>
     b5a:	c0 3c       	cpi	r28, 0xC0	; 192
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_SPI);
     b5c:	eb e0       	ldi	r30, 0x0B	; 11
     b5e:	de 07       	cpc	r29, r30
     b60:	21 f4       	brne	.+8      	; 0xb6a <usart_init_rs232+0x1c0>
     b62:	68 e0       	ldi	r22, 0x08	; 8
	}
#endif
#ifdef USARTC0
	else if (module == &USARTC0) {
     b64:	86 e0       	ldi	r24, 0x06	; 6
     b66:	6a d2       	rcall	.+1236   	; 0x103c <sysclk_enable_module>
     b68:	5f c0       	rjmp	.+190    	; 0xc28 <usart_init_rs232+0x27e>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_USART0);
     b6a:	c0 3a       	cpi	r28, 0xA0	; 160
     b6c:	f8 e0       	ldi	r31, 0x08	; 8
     b6e:	df 07       	cpc	r29, r31
     b70:	21 f4       	brne	.+8      	; 0xb7a <usart_init_rs232+0x1d0>
     b72:	60 e1       	ldi	r22, 0x10	; 16
	}
#endif
#ifdef USARTD0
	else if (module == &USARTD0) {
     b74:	83 e0       	ldi	r24, 0x03	; 3
     b76:	62 d2       	rcall	.+1220   	; 0x103c <sysclk_enable_module>
     b78:	57 c0       	rjmp	.+174    	; 0xc28 <usart_init_rs232+0x27e>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_USART0);
     b7a:	c0 3a       	cpi	r28, 0xA0	; 160
     b7c:	89 e0       	ldi	r24, 0x09	; 9
     b7e:	d8 07       	cpc	r29, r24
     b80:	21 f4       	brne	.+8      	; 0xb8a <usart_init_rs232+0x1e0>
     b82:	60 e1       	ldi	r22, 0x10	; 16
	}
#endif
#ifdef USARTE0
	else if (module == &USARTE0) {
     b84:	84 e0       	ldi	r24, 0x04	; 4
     b86:	5a d2       	rcall	.+1204   	; 0x103c <sysclk_enable_module>
     b88:	4f c0       	rjmp	.+158    	; 0xc28 <usart_init_rs232+0x27e>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_USART0);
     b8a:	c0 3a       	cpi	r28, 0xA0	; 160
     b8c:	ea e0       	ldi	r30, 0x0A	; 10
     b8e:	de 07       	cpc	r29, r30
     b90:	21 f4       	brne	.+8      	; 0xb9a <usart_init_rs232+0x1f0>
     b92:	60 e1       	ldi	r22, 0x10	; 16
	}
#endif
#ifdef USARTF0
	else if (module == &USARTF0) {
     b94:	85 e0       	ldi	r24, 0x05	; 5
     b96:	52 d2       	rcall	.+1188   	; 0x103c <sysclk_enable_module>
     b98:	47 c0       	rjmp	.+142    	; 0xc28 <usart_init_rs232+0x27e>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_USART0);
     b9a:	c0 3a       	cpi	r28, 0xA0	; 160
     b9c:	fb e0       	ldi	r31, 0x0B	; 11
     b9e:	df 07       	cpc	r29, r31
     ba0:	21 f4       	brne	.+8      	; 0xbaa <usart_init_rs232+0x200>
	}
#endif
#ifdef USARTC1
	else if (module == &USARTC1) {
     ba2:	60 e1       	ldi	r22, 0x10	; 16
     ba4:	86 e0       	ldi	r24, 0x06	; 6
     ba6:	4a d2       	rcall	.+1172   	; 0x103c <sysclk_enable_module>
     ba8:	3f c0       	rjmp	.+126    	; 0xc28 <usart_init_rs232+0x27e>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_USART1);
     baa:	c0 3b       	cpi	r28, 0xB0	; 176
     bac:	88 e0       	ldi	r24, 0x08	; 8
     bae:	d8 07       	cpc	r29, r24
     bb0:	21 f4       	brne	.+8      	; 0xbba <usart_init_rs232+0x210>
	}
#endif
#ifdef USARTD1
	else if (module == &USARTD1) {
     bb2:	60 e2       	ldi	r22, 0x20	; 32
     bb4:	83 e0       	ldi	r24, 0x03	; 3
     bb6:	42 d2       	rcall	.+1156   	; 0x103c <sysclk_enable_module>
     bb8:	37 c0       	rjmp	.+110    	; 0xc28 <usart_init_rs232+0x27e>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_USART1);
     bba:	c0 3b       	cpi	r28, 0xB0	; 176
     bbc:	e9 e0       	ldi	r30, 0x09	; 9
     bbe:	de 07       	cpc	r29, r30
     bc0:	21 f4       	brne	.+8      	; 0xbca <usart_init_rs232+0x220>
	}
#endif
#ifdef USARTE1
	else if (module == &USARTE1) {
     bc2:	60 e2       	ldi	r22, 0x20	; 32
     bc4:	84 e0       	ldi	r24, 0x04	; 4
     bc6:	3a d2       	rcall	.+1140   	; 0x103c <sysclk_enable_module>
     bc8:	2f c0       	rjmp	.+94     	; 0xc28 <usart_init_rs232+0x27e>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_USART1);
     bca:	c0 3b       	cpi	r28, 0xB0	; 176
     bcc:	fa e0       	ldi	r31, 0x0A	; 10
     bce:	df 07       	cpc	r29, r31
     bd0:	21 f4       	brne	.+8      	; 0xbda <usart_init_rs232+0x230>
	}
#endif
#ifdef USARTF1
	else if (module == &USARTF1) {
     bd2:	60 e2       	ldi	r22, 0x20	; 32
     bd4:	85 e0       	ldi	r24, 0x05	; 5
     bd6:	32 d2       	rcall	.+1124   	; 0x103c <sysclk_enable_module>
     bd8:	27 c0       	rjmp	.+78     	; 0xc28 <usart_init_rs232+0x27e>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_USART1);
     bda:	c0 3b       	cpi	r28, 0xB0	; 176
     bdc:	8b e0       	ldi	r24, 0x0B	; 11
     bde:	d8 07       	cpc	r29, r24
     be0:	21 f4       	brne	.+8      	; 0xbea <usart_init_rs232+0x240>
	}
#endif
#ifdef TWIC
	else if (module == &TWIC) {
     be2:	60 e2       	ldi	r22, 0x20	; 32
     be4:	86 e0       	ldi	r24, 0x06	; 6
     be6:	2a d2       	rcall	.+1108   	; 0x103c <sysclk_enable_module>
     be8:	1f c0       	rjmp	.+62     	; 0xc28 <usart_init_rs232+0x27e>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TWI);
     bea:	c0 38       	cpi	r28, 0x80	; 128
     bec:	e4 e0       	ldi	r30, 0x04	; 4
     bee:	de 07       	cpc	r29, r30
     bf0:	21 f4       	brne	.+8      	; 0xbfa <usart_init_rs232+0x250>
     bf2:	60 e4       	ldi	r22, 0x40	; 64
	}
#endif
#ifdef TWID
	else if (module == &TWID) {
     bf4:	83 e0       	ldi	r24, 0x03	; 3
     bf6:	22 d2       	rcall	.+1092   	; 0x103c <sysclk_enable_module>
     bf8:	17 c0       	rjmp	.+46     	; 0xc28 <usart_init_rs232+0x27e>
     bfa:	c0 39       	cpi	r28, 0x90	; 144
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TWI);
     bfc:	f4 e0       	ldi	r31, 0x04	; 4
     bfe:	df 07       	cpc	r29, r31
     c00:	21 f4       	brne	.+8      	; 0xc0a <usart_init_rs232+0x260>
     c02:	60 e4       	ldi	r22, 0x40	; 64
     c04:	84 e0       	ldi	r24, 0x04	; 4
	}
#endif
#ifdef TWIE
	else if (module == &TWIE) {
     c06:	1a d2       	rcall	.+1076   	; 0x103c <sysclk_enable_module>
     c08:	0f c0       	rjmp	.+30     	; 0xc28 <usart_init_rs232+0x27e>
     c0a:	c0 3a       	cpi	r28, 0xA0	; 160
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TWI);
     c0c:	84 e0       	ldi	r24, 0x04	; 4
     c0e:	d8 07       	cpc	r29, r24
     c10:	21 f4       	brne	.+8      	; 0xc1a <usart_init_rs232+0x270>
     c12:	60 e4       	ldi	r22, 0x40	; 64
     c14:	85 e0       	ldi	r24, 0x05	; 5
	}
#endif
#ifdef TWIF
	else if (module == &TWIF) {
     c16:	12 d2       	rcall	.+1060   	; 0x103c <sysclk_enable_module>
     c18:	07 c0       	rjmp	.+14     	; 0xc28 <usart_init_rs232+0x27e>
     c1a:	c0 3b       	cpi	r28, 0xB0	; 176
     c1c:	e4 e0       	ldi	r30, 0x04	; 4
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_TWI);
     c1e:	de 07       	cpc	r29, r30
     c20:	19 f4       	brne	.+6      	; 0xc28 <usart_init_rs232+0x27e>
     c22:	60 e4       	ldi	r22, 0x40	; 64
     c24:	86 e0       	ldi	r24, 0x06	; 6
 * - 0x2        : IrDA mode.
 * - 0x3        : Master SPI mode.
 */
static inline void usart_set_mode(USART_t *usart, USART_CMODE_t usartmode)
{
	(usart)->CTRLC = ((usart)->CTRLC & (~USART_CMODE_gm)) | usartmode;
     c26:	0a d2       	rcall	.+1044   	; 0x103c <sysclk_enable_module>
     c28:	8d 81       	ldd	r24, Y+5	; 0x05
     c2a:	8f 73       	andi	r24, 0x3F	; 63
 *  \param twoStopBits Enable two stop bit mode. Use bool type.
 */
static inline void usart_format_set(USART_t *usart, USART_CHSIZE_t charSize,
		USART_PMODE_t parityMode, bool twoStopBits)
{
	(usart)->CTRLC = (uint8_t)charSize | parityMode
     c2c:	8d 83       	std	Y+5, r24	; 0x05
     c2e:	f8 01       	movw	r30, r16
     c30:	95 81       	ldd	r25, Z+5	; 0x05
     c32:	84 81       	ldd	r24, Z+4	; 0x04
     c34:	89 2b       	or	r24, r25
     c36:	96 81       	ldd	r25, Z+6	; 0x06
     c38:	91 11       	cpse	r25, r1
     c3a:	98 e0       	ldi	r25, 0x08	; 8
     c3c:	89 2b       	or	r24, r25
	bool result;
	sysclk_enable_peripheral_clock(usart);
	usart_set_mode(usart, USART_CMODE_ASYNCHRONOUS_gc);
	usart_format_set(usart, opt->charlength, opt->paritytype,
			opt->stopbits);
	result = usart_set_baudrate(usart, opt->baudrate, sysclk_get_per_hz());
     c3e:	8d 83       	std	Y+5, r24	; 0x05
     c40:	f8 01       	movw	r30, r16
     c42:	40 81       	ld	r20, Z
     c44:	51 81       	ldd	r21, Z+1	; 0x01
     c46:	62 81       	ldd	r22, Z+2	; 0x02
     c48:	73 81       	ldd	r23, Z+3	; 0x03
     c4a:	00 e0       	ldi	r16, 0x00	; 0
     c4c:	18 e4       	ldi	r17, 0x48	; 72
     c4e:	28 ee       	ldi	r18, 0xE8	; 232
     c50:	31 e0       	ldi	r19, 0x01	; 1
     c52:	ce 01       	movw	r24, r28
     c54:	97 dd       	rcall	.-1234   	; 0x784 <usart_set_baudrate>
 *
 * \param usart Pointer to the USART module.
 */
static inline void usart_tx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_TXEN_bm;
     c56:	9c 81       	ldd	r25, Y+4	; 0x04
     c58:	98 60       	ori	r25, 0x08	; 8
     c5a:	9c 83       	std	Y+4, r25	; 0x04
 *
 * \param usart Pointer to the USART module
 */
static inline void usart_rx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_RXEN_bm;
     c5c:	9c 81       	ldd	r25, Y+4	; 0x04
     c5e:	90 61       	ori	r25, 0x10	; 16
     c60:	9c 83       	std	Y+4, r25	; 0x04
	usart_tx_enable(usart);
	usart_rx_enable(usart);
	
	return result;
}
     c62:	df 91       	pop	r29
     c64:	cf 91       	pop	r28
     c66:	1f 91       	pop	r17
     c68:	0f 91       	pop	r16
     c6a:	08 95       	ret

00000c6c <bno085_read>:
	TCC0.CTRLA = 0x05; // divisor set to 64
	TCC0.PER = 25000; // 20 Hz
	TCC0.INTCTRLA = TC_OVFINTLVL_LO_gc; // CCA int flag Lo level
}

void bno085_read(uint8_t* data){
     c6c:	0f 93       	push	r16
     c6e:	1f 93       	push	r17
     c70:	cf 93       	push	r28
     c72:	df 93       	push	r29
     c74:	8c 01       	movw	r16, r24
	spi_select(BNO085_SS_PIN);
     c76:	88 e0       	ldi	r24, 0x08	; 8
     c78:	45 d0       	rcall	.+138    	; 0xd04 <spi_select>
     c7a:	e8 01       	movw	r28, r16
     c7c:	0e 5e       	subi	r16, 0xEE	; 238
     c7e:	1f 4f       	sbci	r17, 0xFF	; 255
	for(uint8_t i = 0; i < 18; i++){
		data[i] = spi_read();
     c80:	47 d0       	rcall	.+142    	; 0xd10 <spi_read>
     c82:	89 93       	st	Y+, r24
     c84:	c0 17       	cp	r28, r16
	TCC0.INTCTRLA = TC_OVFINTLVL_LO_gc; // CCA int flag Lo level
}

void bno085_read(uint8_t* data){
	spi_select(BNO085_SS_PIN);
	for(uint8_t i = 0; i < 18; i++){
     c86:	d1 07       	cpc	r29, r17
     c88:	d9 f7       	brne	.-10     	; 0xc80 <bno085_read+0x14>
		data[i] = spi_read();
	}
	spi_select(BNO085_SS_PIN);
     c8a:	88 e0       	ldi	r24, 0x08	; 8
     c8c:	3b d0       	rcall	.+118    	; 0xd04 <spi_select>
     c8e:	df 91       	pop	r29
     c90:	cf 91       	pop	r28
     c92:	1f 91       	pop	r17
     c94:	0f 91       	pop	r16
     c96:	08 95       	ret

00000c98 <hall_sensor_init>:
 */ 

#include <asf.h>
#include "hall.h"

void hall_sensor_init(void){
     c98:	08 95       	ret

00000c9a <cam_switch>:
void cam_init(void){
	PORTA.DIR |= 0x08; // Sets A3 to output
}

void cam_switch(void){
	PORTA.OUT ^= 0x08; // Changes A3 from high to low or vice-versa
     c9a:	e0 e0       	ldi	r30, 0x00	; 0
     c9c:	f6 e0       	ldi	r31, 0x06	; 6
     c9e:	94 81       	ldd	r25, Z+4	; 0x04
     ca0:	88 e0       	ldi	r24, 0x08	; 8
     ca2:	89 27       	eor	r24, r25
     ca4:	84 83       	std	Z+4, r24	; 0x04
     ca6:	08 95       	ret

00000ca8 <gps_uart_init>:

#include <asf.h>
#include <string.h>
#include "mt3339.h"

void gps_uart_init(void){
     ca8:	cf 93       	push	r28
     caa:	df 93       	push	r29
     cac:	cd b7       	in	r28, 0x3d	; 61
     cae:	de b7       	in	r29, 0x3e	; 62
     cb0:	27 97       	sbiw	r28, 0x07	; 7
     cb2:	cd bf       	out	0x3d, r28	; 61
     cb4:	de bf       	out	0x3e, r29	; 62
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_USART1);
	}
#endif
#ifdef USARTD1
	else if (module == &USARTD1) {
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_USART1);
     cb6:	60 e2       	ldi	r22, 0x20	; 32
     cb8:	84 e0       	ldi	r24, 0x04	; 4
     cba:	c0 d1       	rcall	.+896    	; 0x103c <sysclk_enable_module>
		.charlength =	GPS_TERMINAL_SERIAL_CHAR_LEN,
		.paritytype =	GPS_TERMINAL_SERIAL_PARITY,
		.stopbits	=	GPS_TERMINAL_SERIAL_STOP_BIT
	};
	
	GPS_TERMINAL_PORT.DIR |= GPS_TERMINAL_TX_PIN; // Puts pin to output
     cbc:	e0 e6       	ldi	r30, 0x60	; 96
     cbe:	f6 e0       	ldi	r31, 0x06	; 6
     cc0:	80 81       	ld	r24, Z
     cc2:	80 68       	ori	r24, 0x80	; 128
     cc4:	80 83       	st	Z, r24
static inline bool usart_serial_init(usart_if usart, const
		usart_serial_options_t *options)
{
	// USART options.
	usart_rs232_options_t usart_rs232_options;
	usart_rs232_options.charlength   = options->charlength;
     cc6:	e6 e0       	ldi	r30, 0x06	; 6
     cc8:	f0 e2       	ldi	r31, 0x20	; 32
     cca:	84 81       	ldd	r24, Z+4	; 0x04
     ccc:	8d 83       	std	Y+5, r24	; 0x05
	usart_rs232_options.paritytype   = options->paritytype;
     cce:	85 81       	ldd	r24, Z+5	; 0x05
     cd0:	8e 83       	std	Y+6, r24	; 0x06
	usart_rs232_options.stopbits     = options->stopbits;
     cd2:	86 81       	ldd	r24, Z+6	; 0x06
     cd4:	8f 83       	std	Y+7, r24	; 0x07
	usart_rs232_options.baudrate     = options->baudrate;
     cd6:	80 81       	ld	r24, Z
     cd8:	91 81       	ldd	r25, Z+1	; 0x01
     cda:	a2 81       	ldd	r26, Z+2	; 0x02
     cdc:	b3 81       	ldd	r27, Z+3	; 0x03
     cde:	89 83       	std	Y+1, r24	; 0x01
     ce0:	9a 83       	std	Y+2, r25	; 0x02
     ce2:	ab 83       	std	Y+3, r26	; 0x03
     ce4:	bc 83       	std	Y+4, r27	; 0x04
		sysclk_enable_module(SYSCLK_PORT_D,PR_USART0_bm);
	}
#endif
#ifdef USARTD1
	if((uint16_t)usart == (uint16_t)&USARTD1) {
		sysclk_enable_module(SYSCLK_PORT_D,PR_USART1_bm);
     ce6:	60 e2       	ldi	r22, 0x20	; 32
     ce8:	84 e0       	ldi	r24, 0x04	; 4
     cea:	a8 d1       	rcall	.+848    	; 0x103c <sysclk_enable_module>
#ifdef USARTF1
	if((uint16_t)usart == (uint16_t)&USARTF1) {
		sysclk_enable_module(SYSCLK_PORT_F,PR_USART1_bm);
	}
#endif
	if (usart_init_rs232(usart, &usart_rs232_options)) {
     cec:	be 01       	movw	r22, r28
     cee:	6f 5f       	subi	r22, 0xFF	; 255
     cf0:	7f 4f       	sbci	r23, 0xFF	; 255
     cf2:	80 eb       	ldi	r24, 0xB0	; 176
     cf4:	99 e0       	ldi	r25, 0x09	; 9
     cf6:	59 de       	rcall	.-846    	; 0x9aa <usart_init_rs232>
	
	usart_serial_init(GPS_TERMINAL_SERIAL,&gps_config);
}
     cf8:	27 96       	adiw	r28, 0x07	; 7
     cfa:	cd bf       	out	0x3d, r28	; 61
     cfc:	de bf       	out	0x3e, r29	; 62
     cfe:	df 91       	pop	r29
     d00:	cf 91       	pop	r28
     d02:	08 95       	ret

00000d04 <spi_select>:
	PORTC.DIR |= 0b10110000; 
}

void spi_select(uint8_t port)
{
	PORTC.OUT ^= port; //switches SS
     d04:	e0 e4       	ldi	r30, 0x40	; 64
     d06:	f6 e0       	ldi	r31, 0x06	; 6
     d08:	94 81       	ldd	r25, Z+4	; 0x04
     d0a:	89 27       	eor	r24, r25
     d0c:	84 83       	std	Z+4, r24	; 0x04
     d0e:	08 95       	ret

00000d10 <spi_read>:
}

uint8_t spi_read(void)
{
	SPIC.DATA = 0xFF; // make the DATA register something we know
     d10:	8f ef       	ldi	r24, 0xFF	; 255
     d12:	80 93 c3 08 	sts	0x08C3, r24	; 0x8008c3 <__TEXT_REGION_LENGTH__+0x7008c3>
	while(!(SPIC.STATUS>>7));
     d16:	e0 ec       	ldi	r30, 0xC0	; 192
     d18:	f8 e0       	ldi	r31, 0x08	; 8
     d1a:	82 81       	ldd	r24, Z+2	; 0x02
     d1c:	88 23       	and	r24, r24
     d1e:	ec f7       	brge	.-6      	; 0xd1a <spi_read+0xa>
	
	return SPIC.DATA; // return the data from this function
     d20:	80 91 c3 08 	lds	r24, 0x08C3	; 0x8008c3 <__TEXT_REGION_LENGTH__+0x7008c3>
}
     d24:	08 95       	ret

00000d26 <usart_serial_getchar>:
 * \param usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if usart, uint8_t *data)
{
     d26:	cf 93       	push	r28
     d28:	df 93       	push	r29
     d2a:	eb 01       	movw	r28, r22
	*data = usart_getchar(usart);
     d2c:	25 dd       	rcall	.-1462   	; 0x778 <usart_getchar>
     d2e:	88 83       	st	Y, r24
}
     d30:	df 91       	pop	r29
     d32:	cf 91       	pop	r28
     d34:	08 95       	ret

00000d36 <usart_serial_putchar>:
 *
 * \return Status code
 */
static inline enum status_code usart_serial_putchar(usart_if usart, uint8_t c)
{
	return usart_putchar(usart, c);
     d36:	18 cd       	rjmp	.-1488   	; 0x768 <usart_putchar>
}
     d38:	08 95       	ret

00000d3a <data_terminal_init>:
#include <asf.h>
#include <string.h>
#include "data_logger.h"

void data_terminal_init()
{
     d3a:	cf 93       	push	r28
     d3c:	df 93       	push	r29
     d3e:	cd b7       	in	r28, 0x3d	; 61
     d40:	de b7       	in	r29, 0x3e	; 62
     d42:	27 97       	sbiw	r28, 0x07	; 7
     d44:	cd bf       	out	0x3d, r28	; 61
     d46:	de bf       	out	0x3e, r29	; 62
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_SPI);
	}
#endif
#ifdef USARTC0
	else if (module == &USARTC0) {
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_USART0);
     d48:	60 e1       	ldi	r22, 0x10	; 16
     d4a:	83 e0       	ldi	r24, 0x03	; 3
     d4c:	77 d1       	rcall	.+750    	; 0x103c <sysclk_enable_module>
		.charlength =	UART_TERMINAL_SERIAL_CHAR_LEN,
		.paritytype =	UART_TERMINAL_SERIAL_PARITY,
		.stopbits	=	UART_TERMINAL_SERIAL_STOP_BIT
	};
	
	UART_TERMINAL_PORT.DIR |= UART_TERMINAL_TX_PIN;	// set the USART transmit pin to output
     d4e:	e0 e4       	ldi	r30, 0x40	; 64
     d50:	f6 e0       	ldi	r31, 0x06	; 6
     d52:	80 81       	ld	r24, Z
     d54:	88 60       	ori	r24, 0x08	; 8
     d56:	80 83       	st	Z, r24
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
     d58:	80 ea       	ldi	r24, 0xA0	; 160
     d5a:	98 e0       	ldi	r25, 0x08	; 8
     d5c:	80 93 10 21 	sts	0x2110, r24	; 0x802110 <stdio_base>
     d60:	90 93 11 21 	sts	0x2111, r25	; 0x802111 <stdio_base+0x1>
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
     d64:	8b e9       	ldi	r24, 0x9B	; 155
     d66:	96 e0       	ldi	r25, 0x06	; 6
     d68:	80 93 0e 21 	sts	0x210E, r24	; 0x80210e <ptr_put>
     d6c:	90 93 0f 21 	sts	0x210F, r25	; 0x80210f <ptr_put+0x1>
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
     d70:	83 e9       	ldi	r24, 0x93	; 147
     d72:	96 e0       	ldi	r25, 0x06	; 6
     d74:	80 93 0c 21 	sts	0x210C, r24	; 0x80210c <ptr_get>
     d78:	90 93 0d 21 	sts	0x210D, r25	; 0x80210d <ptr_get+0x1>
static inline bool usart_serial_init(usart_if usart, const
		usart_serial_options_t *options)
{
	// USART options.
	usart_rs232_options_t usart_rs232_options;
	usart_rs232_options.charlength   = options->charlength;
     d7c:	ed e0       	ldi	r30, 0x0D	; 13
     d7e:	f0 e2       	ldi	r31, 0x20	; 32
     d80:	84 81       	ldd	r24, Z+4	; 0x04
     d82:	8d 83       	std	Y+5, r24	; 0x05
	usart_rs232_options.paritytype   = options->paritytype;
     d84:	85 81       	ldd	r24, Z+5	; 0x05
     d86:	8e 83       	std	Y+6, r24	; 0x06
	usart_rs232_options.stopbits     = options->stopbits;
     d88:	86 81       	ldd	r24, Z+6	; 0x06
     d8a:	8f 83       	std	Y+7, r24	; 0x07
	usart_rs232_options.baudrate     = options->baudrate;
     d8c:	80 81       	ld	r24, Z
     d8e:	91 81       	ldd	r25, Z+1	; 0x01
     d90:	a2 81       	ldd	r26, Z+2	; 0x02
     d92:	b3 81       	ldd	r27, Z+3	; 0x03
     d94:	89 83       	std	Y+1, r24	; 0x01
     d96:	9a 83       	std	Y+2, r25	; 0x02
     d98:	ab 83       	std	Y+3, r26	; 0x03
     d9a:	bc 83       	std	Y+4, r27	; 0x04

#ifdef USARTC0
	if((uint16_t)usart == (uint16_t)&USARTC0) {
		sysclk_enable_module(SYSCLK_PORT_C,PR_USART0_bm);
     d9c:	60 e1       	ldi	r22, 0x10	; 16
     d9e:	83 e0       	ldi	r24, 0x03	; 3
     da0:	4d d1       	rcall	.+666    	; 0x103c <sysclk_enable_module>
#ifdef USARTF1
	if((uint16_t)usart == (uint16_t)&USARTF1) {
		sysclk_enable_module(SYSCLK_PORT_F,PR_USART1_bm);
	}
#endif
	if (usart_init_rs232(usart, &usart_rs232_options)) {
     da2:	be 01       	movw	r22, r28
     da4:	6f 5f       	subi	r22, 0xFF	; 255
     da6:	7f 4f       	sbci	r23, 0xFF	; 255
     da8:	80 ea       	ldi	r24, 0xA0	; 160
     daa:	98 e0       	ldi	r25, 0x08	; 8
     dac:	fe dd       	rcall	.-1028   	; 0x9aa <usart_init_rs232>
# endif

# if defined(__GNUC__)
#  if (XMEGA || MEGA_RF)
	// For AVR GCC libc print redirection uses fdevopen.
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
     dae:	61 ea       	ldi	r22, 0xA1	; 161
     db0:	71 e0       	ldi	r23, 0x01	; 1
     db2:	8a eb       	ldi	r24, 0xBA	; 186
     db4:	91 e0       	ldi	r25, 0x01	; 1
     db6:	0e 94 07 1d 	call	0x3a0e	; 0x3a0e <fdevopen>
	
	//usart_serial_init(UART_TERMINAL_SERIAL, &usart_config);
	stdio_serial_init(UART_TERMINAL_SERIAL, &usart_config); // function maps the serial output to printf, not necessary to know how it works
}
     dba:	27 96       	adiw	r28, 0x07	; 7
     dbc:	cd bf       	out	0x3d, r28	; 61
     dbe:	de bf       	out	0x3e, r29	; 62
     dc0:	df 91       	pop	r29
     dc2:	cf 91       	pop	r28
     dc4:	08 95       	ret

00000dc6 <rb16_write>:
	}
	else
	{
		buffer->tail = (buffer->tail + move_distance) % buffer->array_length; //Modulus is so that we don't point to above the buffer's location
	}
}
     dc6:	cf 93       	push	r28
     dc8:	df 93       	push	r29
     dca:	fc 01       	movw	r30, r24
     dcc:	41 15       	cp	r20, r1
     dce:	51 05       	cpc	r21, r1
     dd0:	b1 f1       	breq	.+108    	; 0xe3e <rb16_write+0x78>
     dd2:	80 e0       	ldi	r24, 0x00	; 0
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	20 e0       	ldi	r18, 0x00	; 0
     dd8:	88 0f       	add	r24, r24
     dda:	99 1f       	adc	r25, r25
     ddc:	db 01       	movw	r26, r22
     dde:	a8 0f       	add	r26, r24
     de0:	b9 1f       	adc	r27, r25
     de2:	8d 91       	ld	r24, X+
     de4:	9c 91       	ld	r25, X
     de6:	a2 81       	ldd	r26, Z+2	; 0x02
     de8:	b3 81       	ldd	r27, Z+3	; 0x03
     dea:	aa 0f       	add	r26, r26
     dec:	bb 1f       	adc	r27, r27
     dee:	c6 81       	ldd	r28, Z+6	; 0x06
     df0:	d7 81       	ldd	r29, Z+7	; 0x07
     df2:	ac 0f       	add	r26, r28
     df4:	bd 1f       	adc	r27, r29
     df6:	8d 93       	st	X+, r24
     df8:	9c 93       	st	X, r25
     dfa:	82 81       	ldd	r24, Z+2	; 0x02
     dfc:	93 81       	ldd	r25, Z+3	; 0x03
     dfe:	01 96       	adiw	r24, 0x01	; 1
     e00:	82 83       	std	Z+2, r24	; 0x02
     e02:	93 83       	std	Z+3, r25	; 0x03
     e04:	a0 81       	ld	r26, Z
     e06:	b1 81       	ldd	r27, Z+1	; 0x01
     e08:	8a 17       	cp	r24, r26
     e0a:	9b 07       	cpc	r25, r27
     e0c:	11 f4       	brne	.+4      	; 0xe12 <rb16_write+0x4c>
     e0e:	12 82       	std	Z+2, r1	; 0x02
     e10:	13 82       	std	Z+3, r1	; 0x03
     e12:	82 81       	ldd	r24, Z+2	; 0x02
     e14:	93 81       	ldd	r25, Z+3	; 0x03
     e16:	c4 81       	ldd	r28, Z+4	; 0x04
     e18:	d5 81       	ldd	r29, Z+5	; 0x05
     e1a:	8c 17       	cp	r24, r28
     e1c:	9d 07       	cpc	r25, r29
     e1e:	49 f4       	brne	.+18     	; 0xe32 <rb16_write+0x6c>
     e20:	01 96       	adiw	r24, 0x01	; 1
     e22:	a8 17       	cp	r26, r24
     e24:	b9 07       	cpc	r27, r25
     e26:	19 f0       	breq	.+6      	; 0xe2e <rb16_write+0x68>
     e28:	84 83       	std	Z+4, r24	; 0x04
     e2a:	95 83       	std	Z+5, r25	; 0x05
     e2c:	02 c0       	rjmp	.+4      	; 0xe32 <rb16_write+0x6c>
     e2e:	14 82       	std	Z+4, r1	; 0x04
     e30:	15 82       	std	Z+5, r1	; 0x05
     e32:	2f 5f       	subi	r18, 0xFF	; 255
     e34:	82 2f       	mov	r24, r18
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	84 17       	cp	r24, r20
     e3a:	95 07       	cpc	r25, r21
     e3c:	68 f2       	brcs	.-102    	; 0xdd8 <rb16_write+0x12>
     e3e:	df 91       	pop	r29
     e40:	cf 91       	pop	r28
     e42:	08 95       	ret

00000e44 <rb16_init>:
     e44:	fc 01       	movw	r30, r24
     e46:	12 82       	std	Z+2, r1	; 0x02
     e48:	13 82       	std	Z+3, r1	; 0x03
     e4a:	14 82       	std	Z+4, r1	; 0x04
     e4c:	15 82       	std	Z+5, r1	; 0x05
     e4e:	66 83       	std	Z+6, r22	; 0x06
     e50:	77 83       	std	Z+7, r23	; 0x07
     e52:	40 83       	st	Z, r20
     e54:	51 83       	std	Z+1, r21	; 0x01
     e56:	08 95       	ret

00000e58 <rb16_get_nth>:
     e58:	dc 01       	movw	r26, r24
     e5a:	12 96       	adiw	r26, 0x02	; 2
     e5c:	ed 91       	ld	r30, X+
     e5e:	fc 91       	ld	r31, X
     e60:	13 97       	sbiw	r26, 0x03	; 3
     e62:	cb 01       	movw	r24, r22
     e64:	01 96       	adiw	r24, 0x01	; 1
     e66:	e8 17       	cp	r30, r24
     e68:	f9 07       	cpc	r31, r25
     e6a:	78 f0       	brcs	.+30     	; 0xe8a <rb16_get_nth+0x32>
     e6c:	e1 50       	subi	r30, 0x01	; 1
     e6e:	f0 48       	sbci	r31, 0x80	; 128
     e70:	e6 1b       	sub	r30, r22
     e72:	f7 0b       	sbc	r31, r23
     e74:	ee 0f       	add	r30, r30
     e76:	ff 1f       	adc	r31, r31
     e78:	16 96       	adiw	r26, 0x06	; 6
     e7a:	8d 91       	ld	r24, X+
     e7c:	9c 91       	ld	r25, X
     e7e:	17 97       	sbiw	r26, 0x07	; 7
     e80:	e8 0f       	add	r30, r24
     e82:	f9 1f       	adc	r31, r25
     e84:	80 81       	ld	r24, Z
     e86:	91 81       	ldd	r25, Z+1	; 0x01
     e88:	08 95       	ret
     e8a:	2d 91       	ld	r18, X+
     e8c:	3c 91       	ld	r19, X
     e8e:	11 97       	sbiw	r26, 0x01	; 1
     e90:	e2 0f       	add	r30, r18
     e92:	f3 1f       	adc	r31, r19
     e94:	e1 50       	subi	r30, 0x01	; 1
     e96:	f0 48       	sbci	r31, 0x80	; 128
     e98:	e6 1b       	sub	r30, r22
     e9a:	f7 0b       	sbc	r31, r23
     e9c:	ee 0f       	add	r30, r30
     e9e:	ff 1f       	adc	r31, r31
     ea0:	16 96       	adiw	r26, 0x06	; 6
     ea2:	8d 91       	ld	r24, X+
     ea4:	9c 91       	ld	r25, X
     ea6:	17 97       	sbiw	r26, 0x07	; 7
     ea8:	e8 0f       	add	r30, r24
     eaa:	f9 1f       	adc	r31, r25
     eac:	80 81       	ld	r24, Z
     eae:	91 81       	ldd	r25, Z+1	; 0x01
     eb0:	08 95       	ret

00000eb2 <rb32_write>:
     eb2:	cf 92       	push	r12
     eb4:	df 92       	push	r13
     eb6:	ef 92       	push	r14
     eb8:	ff 92       	push	r15
     eba:	cf 93       	push	r28
     ebc:	df 93       	push	r29
     ebe:	fc 01       	movw	r30, r24
     ec0:	41 15       	cp	r20, r1
     ec2:	51 05       	cpc	r21, r1
     ec4:	09 f4       	brne	.+2      	; 0xec8 <rb32_write+0x16>
     ec6:	3f c0       	rjmp	.+126    	; 0xf46 <rb32_write+0x94>
     ec8:	80 e0       	ldi	r24, 0x00	; 0
     eca:	90 e0       	ldi	r25, 0x00	; 0
     ecc:	20 e0       	ldi	r18, 0x00	; 0
     ece:	88 0f       	add	r24, r24
     ed0:	99 1f       	adc	r25, r25
     ed2:	88 0f       	add	r24, r24
     ed4:	99 1f       	adc	r25, r25
     ed6:	db 01       	movw	r26, r22
     ed8:	a8 0f       	add	r26, r24
     eda:	b9 1f       	adc	r27, r25
     edc:	cd 90       	ld	r12, X+
     ede:	dd 90       	ld	r13, X+
     ee0:	ed 90       	ld	r14, X+
     ee2:	fc 90       	ld	r15, X
     ee4:	a2 81       	ldd	r26, Z+2	; 0x02
     ee6:	b3 81       	ldd	r27, Z+3	; 0x03
     ee8:	aa 0f       	add	r26, r26
     eea:	bb 1f       	adc	r27, r27
     eec:	aa 0f       	add	r26, r26
     eee:	bb 1f       	adc	r27, r27
     ef0:	86 81       	ldd	r24, Z+6	; 0x06
     ef2:	97 81       	ldd	r25, Z+7	; 0x07
     ef4:	a8 0f       	add	r26, r24
     ef6:	b9 1f       	adc	r27, r25
     ef8:	cd 92       	st	X+, r12
     efa:	dd 92       	st	X+, r13
     efc:	ed 92       	st	X+, r14
     efe:	fc 92       	st	X, r15
     f00:	13 97       	sbiw	r26, 0x03	; 3
     f02:	82 81       	ldd	r24, Z+2	; 0x02
     f04:	93 81       	ldd	r25, Z+3	; 0x03
     f06:	01 96       	adiw	r24, 0x01	; 1
     f08:	82 83       	std	Z+2, r24	; 0x02
     f0a:	93 83       	std	Z+3, r25	; 0x03
     f0c:	a0 81       	ld	r26, Z
     f0e:	b1 81       	ldd	r27, Z+1	; 0x01
     f10:	8a 17       	cp	r24, r26
     f12:	9b 07       	cpc	r25, r27
     f14:	11 f4       	brne	.+4      	; 0xf1a <rb32_write+0x68>
     f16:	12 82       	std	Z+2, r1	; 0x02
     f18:	13 82       	std	Z+3, r1	; 0x03
     f1a:	82 81       	ldd	r24, Z+2	; 0x02
     f1c:	93 81       	ldd	r25, Z+3	; 0x03
     f1e:	c4 81       	ldd	r28, Z+4	; 0x04
     f20:	d5 81       	ldd	r29, Z+5	; 0x05
     f22:	8c 17       	cp	r24, r28
     f24:	9d 07       	cpc	r25, r29
     f26:	49 f4       	brne	.+18     	; 0xf3a <rb32_write+0x88>
     f28:	01 96       	adiw	r24, 0x01	; 1
     f2a:	a8 17       	cp	r26, r24
     f2c:	b9 07       	cpc	r27, r25
     f2e:	19 f0       	breq	.+6      	; 0xf36 <rb32_write+0x84>
     f30:	84 83       	std	Z+4, r24	; 0x04
     f32:	95 83       	std	Z+5, r25	; 0x05
     f34:	02 c0       	rjmp	.+4      	; 0xf3a <rb32_write+0x88>
     f36:	14 82       	std	Z+4, r1	; 0x04
     f38:	15 82       	std	Z+5, r1	; 0x05
     f3a:	2f 5f       	subi	r18, 0xFF	; 255
     f3c:	82 2f       	mov	r24, r18
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	84 17       	cp	r24, r20
     f42:	95 07       	cpc	r25, r21
     f44:	20 f2       	brcs	.-120    	; 0xece <rb32_write+0x1c>
     f46:	df 91       	pop	r29
     f48:	cf 91       	pop	r28
     f4a:	ff 90       	pop	r15
     f4c:	ef 90       	pop	r14
     f4e:	df 90       	pop	r13
     f50:	cf 90       	pop	r12
     f52:	08 95       	ret

00000f54 <rb32_init>:
     f54:	fc 01       	movw	r30, r24
     f56:	12 82       	std	Z+2, r1	; 0x02
     f58:	13 82       	std	Z+3, r1	; 0x03
     f5a:	14 82       	std	Z+4, r1	; 0x04
     f5c:	15 82       	std	Z+5, r1	; 0x05
     f5e:	66 83       	std	Z+6, r22	; 0x06
     f60:	77 83       	std	Z+7, r23	; 0x07
     f62:	40 83       	st	Z, r20
     f64:	51 83       	std	Z+1, r21	; 0x01
     f66:	08 95       	ret

00000f68 <rb32_get_nth>:
	}
}

int32_t rb32_get_nth(RingBuffer32_t* buffer, uint16_t index)
//Returns the nth newest value in the RingBuffer
{
     f68:	dc 01       	movw	r26, r24
	//Does not do bounds checking, so be careful in usage
	//	Verify index < rb16_length() to guard against requesting a value beyond what the buffer currently stores
	//	Verify index < buffer->array_length to guard against requesting a value from some random memory location
	
	//Most recent value is in head - 1
	if (index + 1 <= buffer->head) //Value is between zero and buffer->head
     f6a:	12 96       	adiw	r26, 0x02	; 2
     f6c:	ed 91       	ld	r30, X+
     f6e:	fc 91       	ld	r31, X
     f70:	13 97       	sbiw	r26, 0x03	; 3
     f72:	cb 01       	movw	r24, r22
     f74:	01 96       	adiw	r24, 0x01	; 1
     f76:	e8 17       	cp	r30, r24
     f78:	f9 07       	cpc	r31, r25
     f7a:	98 f0       	brcs	.+38     	; 0xfa2 <rb32_get_nth+0x3a>
		return buffer->buffer[buffer->head - index - 1];
     f7c:	e1 50       	subi	r30, 0x01	; 1
     f7e:	f0 4c       	sbci	r31, 0xC0	; 192
     f80:	e6 1b       	sub	r30, r22
     f82:	f7 0b       	sbc	r31, r23
     f84:	ee 0f       	add	r30, r30
     f86:	ff 1f       	adc	r31, r31
     f88:	ee 0f       	add	r30, r30
     f8a:	ff 1f       	adc	r31, r31
     f8c:	16 96       	adiw	r26, 0x06	; 6
     f8e:	8d 91       	ld	r24, X+
     f90:	9c 91       	ld	r25, X
     f92:	17 97       	sbiw	r26, 0x07	; 7
     f94:	e8 0f       	add	r30, r24
     f96:	f9 1f       	adc	r31, r25
     f98:	60 81       	ld	r22, Z
     f9a:	71 81       	ldd	r23, Z+1	; 0x01
     f9c:	82 81       	ldd	r24, Z+2	; 0x02
     f9e:	93 81       	ldd	r25, Z+3	; 0x03
     fa0:	08 95       	ret
	else
		return buffer->buffer[buffer->array_length - 1 - index + buffer->head];
     fa2:	2d 91       	ld	r18, X+
     fa4:	3c 91       	ld	r19, X
     fa6:	11 97       	sbiw	r26, 0x01	; 1
     fa8:	e2 0f       	add	r30, r18
     faa:	f3 1f       	adc	r31, r19
     fac:	e1 50       	subi	r30, 0x01	; 1
     fae:	f0 4c       	sbci	r31, 0xC0	; 192
     fb0:	e6 1b       	sub	r30, r22
     fb2:	f7 0b       	sbc	r31, r23
     fb4:	ee 0f       	add	r30, r30
     fb6:	ff 1f       	adc	r31, r31
     fb8:	ee 0f       	add	r30, r30
     fba:	ff 1f       	adc	r31, r31
     fbc:	16 96       	adiw	r26, 0x06	; 6
     fbe:	8d 91       	ld	r24, X+
     fc0:	9c 91       	ld	r25, X
     fc2:	17 97       	sbiw	r26, 0x07	; 7
     fc4:	e8 0f       	add	r30, r24
     fc6:	f9 1f       	adc	r31, r25
     fc8:	60 81       	ld	r22, Z
     fca:	71 81       	ldd	r23, Z+1	; 0x01
     fcc:	82 81       	ldd	r24, Z+2	; 0x02
     fce:	93 81       	ldd	r25, Z+3	; 0x03
}
     fd0:	08 95       	ret

00000fd2 <sysclk_init>:
#  include <nvm.h>
#endif


void sysclk_init(void)
{
     fd2:	cf 93       	push	r28
     fd4:	df 93       	push	r29
     fd6:	1f 92       	push	r1
     fd8:	1f 92       	push	r1
     fda:	cd b7       	in	r28, 0x3d	; 61
     fdc:	de b7       	in	r29, 0x3e	; 62
#endif
	bool need_rc2mhz = false;

	/* Turn off all peripheral clocks that can be turned off. */
	for (i = 0; i <= SYSCLK_PORT_F; i++) {
		*(reg++) = 0xff;
     fde:	8f ef       	ldi	r24, 0xFF	; 255
     fe0:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x700070>
     fe4:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <__TEXT_REGION_LENGTH__+0x700071>
     fe8:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__TEXT_REGION_LENGTH__+0x700072>
     fec:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x700073>
     ff0:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x700074>
     ff4:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <__TEXT_REGION_LENGTH__+0x700075>
     ff8:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <__TEXT_REGION_LENGTH__+0x700076>

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
     ffc:	8f b7       	in	r24, 0x3f	; 63
     ffe:	8a 83       	std	Y+2, r24	; 0x02
	cpu_irq_disable();
    1000:	f8 94       	cli
	return flags;
    1002:	9a 81       	ldd	r25, Y+2	; 0x02
	irqflags_t flags;

	Assert(id != OSC_ID_USBSOF);

	flags = cpu_irq_save();
	OSC.CTRL |= id;
    1004:	e0 e5       	ldi	r30, 0x50	; 80
    1006:	f0 e0       	ldi	r31, 0x00	; 0
    1008:	80 81       	ld	r24, Z
    100a:	82 60       	ori	r24, 0x02	; 2
    100c:	80 83       	st	Z, r24
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
    100e:	9f bf       	out	0x3f, r25	; 63

static inline bool osc_is_ready(uint8_t id)
{
	Assert(id != OSC_ID_USBSOF);

	return OSC.STATUS & id;
    1010:	81 81       	ldd	r24, Z+1	; 0x01
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
    1012:	81 ff       	sbrs	r24, 1
    1014:	fd cf       	rjmp	.-6      	; 0x1010 <sysclk_init+0x3e>
		default:
			//unhandled_case(CONFIG_SYSCLK_SOURCE);
			return;
		}

		ccp_write_io((uint8_t *)&CLK.CTRL, CONFIG_SYSCLK_SOURCE);
    1016:	61 e0       	ldi	r22, 0x01	; 1
    1018:	80 e4       	ldi	r24, 0x40	; 64
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	25 d0       	rcall	.+74     	; 0x1068 <ccp_write_io>

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
    101e:	8f b7       	in	r24, 0x3f	; 63
    1020:	89 83       	std	Y+1, r24	; 0x01
	cpu_irq_disable();
    1022:	f8 94       	cli
	return flags;
    1024:	99 81       	ldd	r25, Y+1	; 0x01
	irqflags_t flags;

	Assert(id != OSC_ID_USBSOF);

	flags = cpu_irq_save();
	OSC.CTRL &= ~id;
    1026:	e0 e5       	ldi	r30, 0x50	; 80
    1028:	f0 e0       	ldi	r31, 0x00	; 0
    102a:	80 81       	ld	r24, Z
    102c:	8e 7f       	andi	r24, 0xFE	; 254
    102e:	80 83       	st	Z, r24
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
    1030:	9f bf       	out	0x3f, r25	; 63
	}

#ifdef CONFIG_RTC_SOURCE
	sysclk_rtcsrc_enable(CONFIG_RTC_SOURCE);
#endif
}
    1032:	0f 90       	pop	r0
    1034:	0f 90       	pop	r0
    1036:	df 91       	pop	r29
    1038:	cf 91       	pop	r28
    103a:	08 95       	ret

0000103c <sysclk_enable_module>:

void sysclk_enable_module(enum sysclk_port_id port, uint8_t id)
{
    103c:	cf 93       	push	r28
    103e:	df 93       	push	r29
    1040:	1f 92       	push	r1
    1042:	cd b7       	in	r28, 0x3d	; 61
    1044:	de b7       	in	r29, 0x3e	; 62

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
    1046:	9f b7       	in	r25, 0x3f	; 63
    1048:	99 83       	std	Y+1, r25	; 0x01
	cpu_irq_disable();
    104a:	f8 94       	cli
	return flags;
    104c:	99 81       	ldd	r25, Y+1	; 0x01
	irqflags_t flags = cpu_irq_save();

	*((uint8_t *)&PR.PRGEN + port) &= ~id;
    104e:	e8 2f       	mov	r30, r24
    1050:	f0 e0       	ldi	r31, 0x00	; 0
    1052:	e0 59       	subi	r30, 0x90	; 144
    1054:	ff 4f       	sbci	r31, 0xFF	; 255
    1056:	60 95       	com	r22
    1058:	80 81       	ld	r24, Z
    105a:	68 23       	and	r22, r24
    105c:	60 83       	st	Z, r22
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
    105e:	9f bf       	out	0x3f, r25	; 63

	cpu_irq_restore(flags);
}
    1060:	0f 90       	pop	r0
    1062:	df 91       	pop	r29
    1064:	cf 91       	pop	r28
    1066:	08 95       	ret

00001068 <ccp_write_io>:

	PUBLIC_FUNCTION(ccp_write_io)

#if defined(__GNUC__)

	out     RAMPZ, r1               // Reset bits 23:16 of Z
    1068:	1b be       	out	0x3b, r1	; 59
	movw    r30, r24                // Load addr into Z
    106a:	fc 01       	movw	r30, r24
	ldi     r18, CCP_IOREG          // Load magic CCP value
    106c:	28 ed       	ldi	r18, 0xD8	; 216
	out     CCP, r18                // Start CCP handshake
    106e:	24 bf       	out	0x34, r18	; 52
	st      Z, r22                  // Write value to I/O register
    1070:	60 83       	st	Z, r22
	ret                             // Return to caller
    1072:	08 95       	ret

00001074 <__portable_avr_delay_cycles>:
	
	NVM.CMD = ERASE_EEPROM;
	CCP = CCP_IOREG_MODE;
	NVM.CTRLA = CTRLA_CMDEX_BYTE;
	while(NVM.STATUS>>7);
}
    1074:	04 c0       	rjmp	.+8      	; 0x107e <__portable_avr_delay_cycles+0xa>
    1076:	61 50       	subi	r22, 0x01	; 1
    1078:	71 09       	sbc	r23, r1
    107a:	81 09       	sbc	r24, r1
    107c:	91 09       	sbc	r25, r1
    107e:	61 15       	cp	r22, r1
    1080:	71 05       	cpc	r23, r1
    1082:	81 05       	cpc	r24, r1
    1084:	91 05       	cpc	r25, r1
    1086:	b9 f7       	brne	.-18     	; 0x1076 <__portable_avr_delay_cycles+0x2>
    1088:	08 95       	ret

0000108a <gps_init>:
    108a:	0e de       	rcall	.-996    	; 0xca8 <gps_uart_init>
    108c:	6b ea       	ldi	r22, 0xAB	; 171
    108e:	79 e2       	ldi	r23, 0x29	; 41
    1090:	80 e0       	ldi	r24, 0x00	; 0
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	ef df       	rcall	.-34     	; 0x1074 <__portable_avr_delay_cycles>
    1096:	80 e3       	ldi	r24, 0x30	; 48
    1098:	80 93 b3 09 	sts	0x09B3, r24	; 0x8009b3 <__TEXT_REGION_LENGTH__+0x7009b3>
    109c:	08 95       	ret

0000109e <xbee_init>:
    109e:	86 ea       	ldi	r24, 0xA6	; 166
    10a0:	90 e2       	ldi	r25, 0x20	; 32
    10a2:	0e 94 64 1d 	call	0x3ac8	; 0x3ac8 <puts>
    10a6:	80 e2       	ldi	r24, 0x20	; 32
    10a8:	80 93 a3 0a 	sts	0x0AA3, r24	; 0x800aa3 <__TEXT_REGION_LENGTH__+0x700aa3>
    10ac:	08 95       	ret

000010ae <release>:
    10ae:	80 eb       	ldi	r24, 0xB0	; 176
    10b0:	94 e0       	ldi	r25, 0x04	; 4
    10b2:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <__TEXT_REGION_LENGTH__+0x700928>
    10b6:	90 93 29 09 	sts	0x0929, r25	; 0x800929 <__TEXT_REGION_LENGTH__+0x700929>
    10ba:	81 e0       	ldi	r24, 0x01	; 1
    10bc:	80 93 0a 21 	sts	0x210A, r24	; 0x80210a <released>
    10c0:	08 95       	ret

000010c2 <get_altitude>:
    10c2:	4f 92       	push	r4
    10c4:	5f 92       	push	r5
    10c6:	6f 92       	push	r6
    10c8:	7f 92       	push	r7
    10ca:	8f 92       	push	r8
    10cc:	9f 92       	push	r9
    10ce:	af 92       	push	r10
    10d0:	bf 92       	push	r11
    10d2:	cf 92       	push	r12
    10d4:	df 92       	push	r13
    10d6:	ef 92       	push	r14
    10d8:	ff 92       	push	r15
    10da:	2b 01       	movw	r4, r22
    10dc:	3c 01       	movw	r6, r24
    10de:	c0 90 21 20 	lds	r12, 0x2021	; 0x802021 <L>
    10e2:	d0 90 22 20 	lds	r13, 0x2022	; 0x802022 <L+0x1>
    10e6:	e0 90 23 20 	lds	r14, 0x2023	; 0x802023 <L+0x2>
    10ea:	f0 90 24 20 	lds	r15, 0x2024	; 0x802024 <L+0x3>
    10ee:	20 91 25 20 	lds	r18, 0x2025	; 0x802025 <R>
    10f2:	30 91 26 20 	lds	r19, 0x2026	; 0x802026 <R+0x1>
    10f6:	40 91 27 20 	lds	r20, 0x2027	; 0x802027 <R+0x2>
    10fa:	50 91 28 20 	lds	r21, 0x2028	; 0x802028 <R+0x3>
    10fe:	c7 01       	movw	r24, r14
    1100:	b6 01       	movw	r22, r12
    1102:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    1106:	20 91 1d 20 	lds	r18, 0x201D	; 0x80201d <g_0>
    110a:	30 91 1e 20 	lds	r19, 0x201E	; 0x80201e <g_0+0x1>
    110e:	40 91 1f 20 	lds	r20, 0x201F	; 0x80201f <g_0+0x2>
    1112:	50 91 20 20 	lds	r21, 0x2020	; 0x802020 <g_0+0x3>
    1116:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__divsf3>
    111a:	4b 01       	movw	r8, r22
    111c:	5c 01       	movw	r10, r24
    111e:	a3 01       	movw	r20, r6
    1120:	92 01       	movw	r18, r4
    1122:	60 91 2d 20 	lds	r22, 0x202D	; 0x80202d <ground_p>
    1126:	70 91 2e 20 	lds	r23, 0x202E	; 0x80202e <ground_p+0x1>
    112a:	80 91 2f 20 	lds	r24, 0x202F	; 0x80202f <ground_p+0x2>
    112e:	90 91 30 20 	lds	r25, 0x2030	; 0x802030 <ground_p+0x3>
    1132:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__divsf3>
    1136:	a5 01       	movw	r20, r10
    1138:	94 01       	movw	r18, r8
    113a:	0e 94 d1 1a 	call	0x35a2	; 0x35a2 <pow>
    113e:	20 e0       	ldi	r18, 0x00	; 0
    1140:	30 e0       	ldi	r19, 0x00	; 0
    1142:	40 e8       	ldi	r20, 0x80	; 128
    1144:	5f e3       	ldi	r21, 0x3F	; 63
    1146:	0e 94 9b 17 	call	0x2f36	; 0x2f36 <__subsf3>
    114a:	20 91 29 20 	lds	r18, 0x2029	; 0x802029 <ground_t>
    114e:	30 91 2a 20 	lds	r19, 0x202A	; 0x80202a <ground_t+0x1>
    1152:	40 91 2b 20 	lds	r20, 0x202B	; 0x80202b <ground_t+0x2>
    1156:	50 91 2c 20 	lds	r21, 0x202C	; 0x80202c <ground_t+0x3>
    115a:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    115e:	a7 01       	movw	r20, r14
    1160:	96 01       	movw	r18, r12
    1162:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__divsf3>
    1166:	20 91 05 21 	lds	r18, 0x2105	; 0x802105 <ground_a>
    116a:	30 91 06 21 	lds	r19, 0x2106	; 0x802106 <ground_a+0x1>
    116e:	40 91 07 21 	lds	r20, 0x2107	; 0x802107 <ground_a+0x2>
    1172:	50 91 08 21 	lds	r21, 0x2108	; 0x802108 <ground_a+0x3>
    1176:	0e 94 9b 17 	call	0x2f36	; 0x2f36 <__subsf3>
    117a:	ff 90       	pop	r15
    117c:	ef 90       	pop	r14
    117e:	df 90       	pop	r13
    1180:	cf 90       	pop	r12
    1182:	bf 90       	pop	r11
    1184:	af 90       	pop	r10
    1186:	9f 90       	pop	r9
    1188:	8f 90       	pop	r8
    118a:	7f 90       	pop	r7
    118c:	6f 90       	pop	r6
    118e:	5f 90       	pop	r5
    1190:	4f 90       	pop	r4
    1192:	08 95       	ret

00001194 <diff>:
    1194:	2f 92       	push	r2
    1196:	3f 92       	push	r3
    1198:	4f 92       	push	r4
    119a:	5f 92       	push	r5
    119c:	6f 92       	push	r6
    119e:	7f 92       	push	r7
    11a0:	8f 92       	push	r8
    11a2:	9f 92       	push	r9
    11a4:	af 92       	push	r10
    11a6:	bf 92       	push	r11
    11a8:	cf 92       	push	r12
    11aa:	df 92       	push	r13
    11ac:	ef 92       	push	r14
    11ae:	ff 92       	push	r15
    11b0:	0f 93       	push	r16
    11b2:	1f 93       	push	r17
    11b4:	cf 93       	push	r28
    11b6:	df 93       	push	r29
    11b8:	00 d0       	rcall	.+0      	; 0x11ba <diff+0x26>
    11ba:	00 d0       	rcall	.+0      	; 0x11bc <diff+0x28>
    11bc:	cd b7       	in	r28, 0x3d	; 61
    11be:	de b7       	in	r29, 0x3e	; 62
    11c0:	6c 01       	movw	r12, r24
    11c2:	80 91 16 20 	lds	r24, 0x2016	; 0x802016 <data_samples>
    11c6:	88 23       	and	r24, r24
    11c8:	09 f4       	brne	.+2      	; 0x11cc <diff+0x38>
    11ca:	6c c0       	rjmp	.+216    	; 0x12a4 <diff+0x110>
    11cc:	00 e0       	ldi	r16, 0x00	; 0
    11ce:	10 e0       	ldi	r17, 0x00	; 0
    11d0:	41 2c       	mov	r4, r1
    11d2:	51 2c       	mov	r5, r1
    11d4:	32 01       	movw	r6, r4
    11d6:	86 2e       	mov	r8, r22
    11d8:	91 2c       	mov	r9, r1
    11da:	a1 2c       	mov	r10, r1
    11dc:	b1 2c       	mov	r11, r1
    11de:	89 82       	std	Y+1, r8	; 0x01
    11e0:	9a 82       	std	Y+2, r9	; 0x02
    11e2:	ab 82       	std	Y+3, r10	; 0x03
    11e4:	bc 82       	std	Y+4, r11	; 0x04
    11e6:	b8 01       	movw	r22, r16
    11e8:	c6 01       	movw	r24, r12
    11ea:	36 de       	rcall	.-916    	; 0xe58 <rb16_get_nth>
    11ec:	5c 01       	movw	r10, r24
    11ee:	18 01       	movw	r2, r16
    11f0:	2f ef       	ldi	r18, 0xFF	; 255
    11f2:	22 1a       	sub	r2, r18
    11f4:	32 0a       	sbc	r3, r18
    11f6:	b1 01       	movw	r22, r2
    11f8:	c6 01       	movw	r24, r12
    11fa:	2e de       	rcall	.-932    	; 0xe58 <rb16_get_nth>
    11fc:	7c 01       	movw	r14, r24
    11fe:	b8 01       	movw	r22, r16
    1200:	6e 5f       	subi	r22, 0xFE	; 254
    1202:	7f 4f       	sbci	r23, 0xFF	; 255
    1204:	c6 01       	movw	r24, r12
    1206:	28 de       	rcall	.-944    	; 0xe58 <rb16_get_nth>
    1208:	a5 01       	movw	r20, r10
    120a:	bb 0c       	add	r11, r11
    120c:	66 0b       	sbc	r22, r22
    120e:	77 0b       	sbc	r23, r23
    1210:	8a 01       	movw	r16, r20
    1212:	9b 01       	movw	r18, r22
    1214:	00 0f       	add	r16, r16
    1216:	11 1f       	adc	r17, r17
    1218:	22 1f       	adc	r18, r18
    121a:	33 1f       	adc	r19, r19
    121c:	40 0f       	add	r20, r16
    121e:	51 1f       	adc	r21, r17
    1220:	62 1f       	adc	r22, r18
    1222:	73 1f       	adc	r23, r19
    1224:	87 01       	movw	r16, r14
    1226:	ff 0c       	add	r15, r15
    1228:	22 0b       	sbc	r18, r18
    122a:	33 0b       	sbc	r19, r19
    122c:	78 01       	movw	r14, r16
    122e:	89 01       	movw	r16, r18
    1230:	ee 0c       	add	r14, r14
    1232:	ff 1c       	adc	r15, r15
    1234:	00 1f       	adc	r16, r16
    1236:	11 1f       	adc	r17, r17
    1238:	ee 0c       	add	r14, r14
    123a:	ff 1c       	adc	r15, r15
    123c:	00 1f       	adc	r16, r16
    123e:	11 1f       	adc	r17, r17
    1240:	4a 01       	movw	r8, r20
    1242:	5b 01       	movw	r10, r22
    1244:	8e 18       	sub	r8, r14
    1246:	9f 08       	sbc	r9, r15
    1248:	a0 0a       	sbc	r10, r16
    124a:	b1 0a       	sbc	r11, r17
    124c:	ac 01       	movw	r20, r24
    124e:	99 0f       	add	r25, r25
    1250:	66 0b       	sbc	r22, r22
    1252:	77 0b       	sbc	r23, r23
    1254:	d5 01       	movw	r26, r10
    1256:	c4 01       	movw	r24, r8
    1258:	84 0f       	add	r24, r20
    125a:	95 1f       	adc	r25, r21
    125c:	a6 1f       	adc	r26, r22
    125e:	b7 1f       	adc	r27, r23
    1260:	9c 01       	movw	r18, r24
    1262:	ad 01       	movw	r20, r26
    1264:	69 81       	ldd	r22, Y+1	; 0x01
    1266:	7a 81       	ldd	r23, Y+2	; 0x02
    1268:	8b 81       	ldd	r24, Y+3	; 0x03
    126a:	9c 81       	ldd	r25, Y+4	; 0x04
    126c:	0e 94 56 1c 	call	0x38ac	; 0x38ac <__mulsi3>
    1270:	0e 94 52 19 	call	0x32a4	; 0x32a4 <__floatsisf>
    1274:	20 e0       	ldi	r18, 0x00	; 0
    1276:	30 e0       	ldi	r19, 0x00	; 0
    1278:	40 e0       	ldi	r20, 0x00	; 0
    127a:	5f e3       	ldi	r21, 0x3F	; 63
    127c:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    1280:	9b 01       	movw	r18, r22
    1282:	ac 01       	movw	r20, r24
    1284:	c3 01       	movw	r24, r6
    1286:	b2 01       	movw	r22, r4
    1288:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__addsf3>
    128c:	2b 01       	movw	r4, r22
    128e:	3c 01       	movw	r6, r24
    1290:	80 91 16 20 	lds	r24, 0x2016	; 0x802016 <data_samples>
    1294:	81 01       	movw	r16, r2
    1296:	28 2f       	mov	r18, r24
    1298:	30 e0       	ldi	r19, 0x00	; 0
    129a:	22 16       	cp	r2, r18
    129c:	33 06       	cpc	r3, r19
    129e:	08 f4       	brcc	.+2      	; 0x12a2 <diff+0x10e>
    12a0:	a2 cf       	rjmp	.-188    	; 0x11e6 <diff+0x52>
    12a2:	03 c0       	rjmp	.+6      	; 0x12aa <diff+0x116>
    12a4:	41 2c       	mov	r4, r1
    12a6:	51 2c       	mov	r5, r1
    12a8:	32 01       	movw	r6, r4
    12aa:	68 2f       	mov	r22, r24
    12ac:	70 e0       	ldi	r23, 0x00	; 0
    12ae:	80 e0       	ldi	r24, 0x00	; 0
    12b0:	90 e0       	ldi	r25, 0x00	; 0
    12b2:	0e 94 52 19 	call	0x32a4	; 0x32a4 <__floatsisf>
    12b6:	9b 01       	movw	r18, r22
    12b8:	ac 01       	movw	r20, r24
    12ba:	c3 01       	movw	r24, r6
    12bc:	b2 01       	movw	r22, r4
    12be:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__divsf3>
    12c2:	20 e0       	ldi	r18, 0x00	; 0
    12c4:	30 e0       	ldi	r19, 0x00	; 0
    12c6:	48 ec       	ldi	r20, 0xC8	; 200
    12c8:	52 e4       	ldi	r21, 0x42	; 66
    12ca:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__divsf3>
    12ce:	26 96       	adiw	r28, 0x06	; 6
    12d0:	cd bf       	out	0x3d, r28	; 61
    12d2:	de bf       	out	0x3e, r29	; 62
    12d4:	df 91       	pop	r29
    12d6:	cf 91       	pop	r28
    12d8:	1f 91       	pop	r17
    12da:	0f 91       	pop	r16
    12dc:	ff 90       	pop	r15
    12de:	ef 90       	pop	r14
    12e0:	df 90       	pop	r13
    12e2:	cf 90       	pop	r12
    12e4:	bf 90       	pop	r11
    12e6:	af 90       	pop	r10
    12e8:	9f 90       	pop	r9
    12ea:	8f 90       	pop	r8
    12ec:	7f 90       	pop	r7
    12ee:	6f 90       	pop	r6
    12f0:	5f 90       	pop	r5
    12f2:	4f 90       	pop	r4
    12f4:	3f 90       	pop	r3
    12f6:	2f 90       	pop	r2
    12f8:	08 95       	ret

000012fa <data_check>:
    12fa:	3f 92       	push	r3
    12fc:	4f 92       	push	r4
    12fe:	5f 92       	push	r5
    1300:	6f 92       	push	r6
    1302:	7f 92       	push	r7
    1304:	8f 92       	push	r8
    1306:	9f 92       	push	r9
    1308:	af 92       	push	r10
    130a:	bf 92       	push	r11
    130c:	cf 92       	push	r12
    130e:	df 92       	push	r13
    1310:	ef 92       	push	r14
    1312:	ff 92       	push	r15
    1314:	0f 93       	push	r16
    1316:	1f 93       	push	r17
    1318:	cf 93       	push	r28
    131a:	df 93       	push	r29
    131c:	00 d0       	rcall	.+0      	; 0x131e <data_check+0x24>
    131e:	00 d0       	rcall	.+0      	; 0x1320 <data_check+0x26>
    1320:	cd b7       	in	r28, 0x3d	; 61
    1322:	de b7       	in	r29, 0x3e	; 62
    1324:	8c 01       	movw	r16, r24
    1326:	19 82       	std	Y+1, r1	; 0x01
    1328:	1a 82       	std	Y+2, r1	; 0x02
    132a:	c1 2c       	mov	r12, r1
    132c:	d1 2c       	mov	r13, r1
    132e:	76 01       	movw	r14, r12
    1330:	69 81       	ldd	r22, Y+1	; 0x01
    1332:	7a 81       	ldd	r23, Y+2	; 0x02
    1334:	c8 01       	movw	r24, r16
    1336:	18 de       	rcall	.-976    	; 0xf68 <rb32_get_nth>
    1338:	4b 01       	movw	r8, r22
    133a:	5c 01       	movw	r10, r24
    133c:	21 ea       	ldi	r18, 0xA1	; 161
    133e:	82 1a       	sub	r8, r18
    1340:	26 e8       	ldi	r18, 0x86	; 134
    1342:	92 0a       	sbc	r9, r18
    1344:	21 e0       	ldi	r18, 0x01	; 1
    1346:	a2 0a       	sbc	r10, r18
    1348:	b1 08       	sbc	r11, r1
    134a:	2f ed       	ldi	r18, 0xDF	; 223
    134c:	82 16       	cp	r8, r18
    134e:	2f e0       	ldi	r18, 0x0F	; 15
    1350:	92 06       	cpc	r9, r18
    1352:	27 e9       	ldi	r18, 0x97	; 151
    1354:	a2 06       	cpc	r10, r18
    1356:	b1 04       	cpc	r11, r1
    1358:	80 f4       	brcc	.+32     	; 0x137a <data_check+0x80>
    135a:	0e 94 52 19 	call	0x32a4	; 0x32a4 <__floatsisf>
    135e:	20 e0       	ldi	r18, 0x00	; 0
    1360:	30 e0       	ldi	r19, 0x00	; 0
    1362:	40 ea       	ldi	r20, 0xA0	; 160
    1364:	50 e4       	ldi	r21, 0x40	; 64
    1366:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__divsf3>
    136a:	9b 01       	movw	r18, r22
    136c:	ac 01       	movw	r20, r24
    136e:	c7 01       	movw	r24, r14
    1370:	b6 01       	movw	r22, r12
    1372:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__addsf3>
    1376:	6b 01       	movw	r12, r22
    1378:	7c 01       	movw	r14, r24
    137a:	89 81       	ldd	r24, Y+1	; 0x01
    137c:	9a 81       	ldd	r25, Y+2	; 0x02
    137e:	01 96       	adiw	r24, 0x01	; 1
    1380:	89 83       	std	Y+1, r24	; 0x01
    1382:	9a 83       	std	Y+2, r25	; 0x02
    1384:	05 97       	sbiw	r24, 0x05	; 5
    1386:	a1 f6       	brne	.-88     	; 0x1330 <data_check+0x36>
    1388:	19 82       	std	Y+1, r1	; 0x01
    138a:	1a 82       	std	Y+2, r1	; 0x02
    138c:	81 2c       	mov	r8, r1
    138e:	91 2c       	mov	r9, r1
    1390:	54 01       	movw	r10, r8
    1392:	69 81       	ldd	r22, Y+1	; 0x01
    1394:	7a 81       	ldd	r23, Y+2	; 0x02
    1396:	c8 01       	movw	r24, r16
    1398:	e7 dd       	rcall	.-1074   	; 0xf68 <rb32_get_nth>
    139a:	2b 01       	movw	r4, r22
    139c:	3c 01       	movw	r6, r24
    139e:	21 ea       	ldi	r18, 0xA1	; 161
    13a0:	42 1a       	sub	r4, r18
    13a2:	26 e8       	ldi	r18, 0x86	; 134
    13a4:	52 0a       	sbc	r5, r18
    13a6:	21 e0       	ldi	r18, 0x01	; 1
    13a8:	62 0a       	sbc	r6, r18
    13aa:	71 08       	sbc	r7, r1
    13ac:	2f ed       	ldi	r18, 0xDF	; 223
    13ae:	42 16       	cp	r4, r18
    13b0:	2f e0       	ldi	r18, 0x0F	; 15
    13b2:	52 06       	cpc	r5, r18
    13b4:	27 e9       	ldi	r18, 0x97	; 151
    13b6:	62 06       	cpc	r6, r18
    13b8:	71 04       	cpc	r7, r1
    13ba:	90 f4       	brcc	.+36     	; 0x13e0 <data_check+0xe6>
    13bc:	0e 94 52 19 	call	0x32a4	; 0x32a4 <__floatsisf>
    13c0:	a7 01       	movw	r20, r14
    13c2:	96 01       	movw	r18, r12
    13c4:	0e 94 9b 17 	call	0x2f36	; 0x2f36 <__subsf3>
    13c8:	9b 01       	movw	r18, r22
    13ca:	ac 01       	movw	r20, r24
    13cc:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    13d0:	9b 01       	movw	r18, r22
    13d2:	ac 01       	movw	r20, r24
    13d4:	c5 01       	movw	r24, r10
    13d6:	b4 01       	movw	r22, r8
    13d8:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__addsf3>
    13dc:	4b 01       	movw	r8, r22
    13de:	5c 01       	movw	r10, r24
    13e0:	89 81       	ldd	r24, Y+1	; 0x01
    13e2:	9a 81       	ldd	r25, Y+2	; 0x02
    13e4:	01 96       	adiw	r24, 0x01	; 1
    13e6:	89 83       	std	Y+1, r24	; 0x01
    13e8:	9a 83       	std	Y+2, r25	; 0x02
    13ea:	05 97       	sbiw	r24, 0x05	; 5
    13ec:	91 f6       	brne	.-92     	; 0x1392 <data_check+0x98>
    13ee:	20 e0       	ldi	r18, 0x00	; 0
    13f0:	30 e0       	ldi	r19, 0x00	; 0
    13f2:	40 e8       	ldi	r20, 0x80	; 128
    13f4:	5e e3       	ldi	r21, 0x3E	; 62
    13f6:	c5 01       	movw	r24, r10
    13f8:	b4 01       	movw	r22, r8
    13fa:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    13fe:	69 83       	std	Y+1, r22	; 0x01
    1400:	7a 83       	std	Y+2, r23	; 0x02
    1402:	8b 83       	std	Y+3, r24	; 0x03
    1404:	9c 83       	std	Y+4, r25	; 0x04
    1406:	1d 82       	std	Y+5, r1	; 0x05
    1408:	1e 82       	std	Y+6, r1	; 0x06
    140a:	31 2c       	mov	r3, r1
    140c:	41 2c       	mov	r4, r1
    140e:	51 2c       	mov	r5, r1
    1410:	32 01       	movw	r6, r4
    1412:	6d 81       	ldd	r22, Y+5	; 0x05
    1414:	7e 81       	ldd	r23, Y+6	; 0x06
    1416:	c8 01       	movw	r24, r16
    1418:	a7 dd       	rcall	.-1202   	; 0xf68 <rb32_get_nth>
    141a:	4b 01       	movw	r8, r22
    141c:	5c 01       	movw	r10, r24
    141e:	21 ea       	ldi	r18, 0xA1	; 161
    1420:	82 1a       	sub	r8, r18
    1422:	26 e8       	ldi	r18, 0x86	; 134
    1424:	92 0a       	sbc	r9, r18
    1426:	21 e0       	ldi	r18, 0x01	; 1
    1428:	a2 0a       	sbc	r10, r18
    142a:	b1 08       	sbc	r11, r1
    142c:	2f ed       	ldi	r18, 0xDF	; 223
    142e:	82 16       	cp	r8, r18
    1430:	2f e0       	ldi	r18, 0x0F	; 15
    1432:	92 06       	cpc	r9, r18
    1434:	27 e9       	ldi	r18, 0x97	; 151
    1436:	a2 06       	cpc	r10, r18
    1438:	b1 04       	cpc	r11, r1
    143a:	50 f5       	brcc	.+84     	; 0x1490 <data_check+0x196>
    143c:	0e 94 52 19 	call	0x32a4	; 0x32a4 <__floatsisf>
    1440:	4b 01       	movw	r8, r22
    1442:	5c 01       	movw	r10, r24
    1444:	a7 01       	movw	r20, r14
    1446:	96 01       	movw	r18, r12
    1448:	0e 94 9b 17 	call	0x2f36	; 0x2f36 <__subsf3>
    144c:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1450:	9b 01       	movw	r18, r22
    1452:	77 23       	and	r23, r23
    1454:	24 f4       	brge	.+8      	; 0x145e <data_check+0x164>
    1456:	22 27       	eor	r18, r18
    1458:	33 27       	eor	r19, r19
    145a:	26 1b       	sub	r18, r22
    145c:	37 0b       	sbc	r19, r23
    145e:	b9 01       	movw	r22, r18
    1460:	33 0f       	add	r19, r19
    1462:	88 0b       	sbc	r24, r24
    1464:	99 0b       	sbc	r25, r25
    1466:	0e 94 52 19 	call	0x32a4	; 0x32a4 <__floatsisf>
    146a:	9b 01       	movw	r18, r22
    146c:	ac 01       	movw	r20, r24
    146e:	69 81       	ldd	r22, Y+1	; 0x01
    1470:	7a 81       	ldd	r23, Y+2	; 0x02
    1472:	8b 81       	ldd	r24, Y+3	; 0x03
    1474:	9c 81       	ldd	r25, Y+4	; 0x04
    1476:	0e 94 63 1a 	call	0x34c6	; 0x34c6 <__gesf2>
    147a:	88 23       	and	r24, r24
    147c:	4c f0       	brlt	.+18     	; 0x1490 <data_check+0x196>
    147e:	a5 01       	movw	r20, r10
    1480:	94 01       	movw	r18, r8
    1482:	c3 01       	movw	r24, r6
    1484:	b2 01       	movw	r22, r4
    1486:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__addsf3>
    148a:	2b 01       	movw	r4, r22
    148c:	3c 01       	movw	r6, r24
    148e:	33 94       	inc	r3
    1490:	8d 81       	ldd	r24, Y+5	; 0x05
    1492:	9e 81       	ldd	r25, Y+6	; 0x06
    1494:	01 96       	adiw	r24, 0x01	; 1
    1496:	8d 83       	std	Y+5, r24	; 0x05
    1498:	9e 83       	std	Y+6, r25	; 0x06
    149a:	05 97       	sbiw	r24, 0x05	; 5
    149c:	09 f0       	breq	.+2      	; 0x14a0 <data_check+0x1a6>
    149e:	b9 cf       	rjmp	.-142    	; 0x1412 <data_check+0x118>
    14a0:	33 20       	and	r3, r3
    14a2:	69 f0       	breq	.+26     	; 0x14be <data_check+0x1c4>
    14a4:	63 2d       	mov	r22, r3
    14a6:	70 e0       	ldi	r23, 0x00	; 0
    14a8:	80 e0       	ldi	r24, 0x00	; 0
    14aa:	90 e0       	ldi	r25, 0x00	; 0
    14ac:	0e 94 50 19 	call	0x32a0	; 0x32a0 <__floatunsisf>
    14b0:	9b 01       	movw	r18, r22
    14b2:	ac 01       	movw	r20, r24
    14b4:	c3 01       	movw	r24, r6
    14b6:	b2 01       	movw	r22, r4
    14b8:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__divsf3>
    14bc:	04 c0       	rjmp	.+8      	; 0x14c6 <data_check+0x1cc>
    14be:	60 e0       	ldi	r22, 0x00	; 0
    14c0:	70 e0       	ldi	r23, 0x00	; 0
    14c2:	80 e8       	ldi	r24, 0x80	; 128
    14c4:	9f eb       	ldi	r25, 0xBF	; 191
    14c6:	26 96       	adiw	r28, 0x06	; 6
    14c8:	cd bf       	out	0x3d, r28	; 61
    14ca:	de bf       	out	0x3e, r29	; 62
    14cc:	df 91       	pop	r29
    14ce:	cf 91       	pop	r28
    14d0:	1f 91       	pop	r17
    14d2:	0f 91       	pop	r16
    14d4:	ff 90       	pop	r15
    14d6:	ef 90       	pop	r14
    14d8:	df 90       	pop	r13
    14da:	cf 90       	pop	r12
    14dc:	bf 90       	pop	r11
    14de:	af 90       	pop	r10
    14e0:	9f 90       	pop	r9
    14e2:	8f 90       	pop	r8
    14e4:	7f 90       	pop	r7
    14e6:	6f 90       	pop	r6
    14e8:	5f 90       	pop	r5
    14ea:	4f 90       	pop	r4
    14ec:	3f 90       	pop	r3
    14ee:	08 95       	ret

000014f0 <data_collect>:
    14f0:	af 92       	push	r10
    14f2:	bf 92       	push	r11
    14f4:	cf 92       	push	r12
    14f6:	df 92       	push	r13
    14f8:	ef 92       	push	r14
    14fa:	ff 92       	push	r15
    14fc:	0f 93       	push	r16
    14fe:	1f 93       	push	r17
    1500:	cf 93       	push	r28
    1502:	df 93       	push	r29
    1504:	00 d0       	rcall	.+0      	; 0x1506 <data_collect+0x16>
    1506:	00 d0       	rcall	.+0      	; 0x1508 <data_collect+0x18>
    1508:	cd b7       	in	r28, 0x3d	; 61
    150a:	de b7       	in	r29, 0x3e	; 62
    150c:	5c 01       	movw	r10, r24
    150e:	8b 01       	movw	r16, r22
    1510:	82 e0       	ldi	r24, 0x02	; 2
    1512:	96 e7       	ldi	r25, 0x76	; 118
    1514:	af e0       	ldi	r26, 0x0F	; 15
    1516:	b0 e0       	ldi	r27, 0x00	; 0
    1518:	89 83       	std	Y+1, r24	; 0x01
    151a:	9a 83       	std	Y+2, r25	; 0x02
    151c:	ab 83       	std	Y+3, r26	; 0x03
    151e:	bc 83       	std	Y+4, r27	; 0x04
    1520:	41 e0       	ldi	r20, 0x01	; 1
    1522:	50 e0       	ldi	r21, 0x00	; 0
    1524:	be 01       	movw	r22, r28
    1526:	6f 5f       	subi	r22, 0xFF	; 255
    1528:	7f 4f       	sbci	r23, 0xFF	; 255
    152a:	c8 01       	movw	r24, r16
    152c:	c2 dc       	rcall	.-1660   	; 0xeb2 <rb32_write>
    152e:	c8 01       	movw	r24, r16
    1530:	e4 de       	rcall	.-568    	; 0x12fa <data_check>
    1532:	20 e0       	ldi	r18, 0x00	; 0
    1534:	30 e0       	ldi	r19, 0x00	; 0
    1536:	40 e2       	ldi	r20, 0x20	; 32
    1538:	51 e4       	ldi	r21, 0x41	; 65
    153a:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__divsf3>
    153e:	6b 01       	movw	r12, r22
    1540:	7c 01       	movw	r14, r24
    1542:	20 e0       	ldi	r18, 0x00	; 0
    1544:	30 e0       	ldi	r19, 0x00	; 0
    1546:	40 e8       	ldi	r20, 0x80	; 128
    1548:	5f eb       	ldi	r21, 0xBF	; 191
    154a:	0e 94 79 18 	call	0x30f2	; 0x30f2 <__cmpsf2>
    154e:	88 23       	and	r24, r24
    1550:	81 f1       	breq	.+96     	; 0x15b2 <data_collect+0xc2>
    1552:	c0 92 f6 20 	sts	0x20F6, r12	; 0x8020f6 <press>
    1556:	d0 92 f7 20 	sts	0x20F7, r13	; 0x8020f7 <press+0x1>
    155a:	e0 92 f8 20 	sts	0x20F8, r14	; 0x8020f8 <press+0x2>
    155e:	f0 92 f9 20 	sts	0x20F9, r15	; 0x8020f9 <press+0x3>
    1562:	c7 01       	movw	r24, r14
    1564:	b6 01       	movw	r22, r12
    1566:	ad dd       	rcall	.-1190   	; 0x10c2 <get_altitude>
    1568:	60 93 ee 20 	sts	0x20EE, r22	; 0x8020ee <alt>
    156c:	70 93 ef 20 	sts	0x20EF, r23	; 0x8020ef <alt+0x1>
    1570:	80 93 f0 20 	sts	0x20F0, r24	; 0x8020f0 <alt+0x2>
    1574:	90 93 f1 20 	sts	0x20F1, r25	; 0x8020f1 <alt+0x3>
    1578:	20 e0       	ldi	r18, 0x00	; 0
    157a:	30 e0       	ldi	r19, 0x00	; 0
    157c:	48 ec       	ldi	r20, 0xC8	; 200
    157e:	52 e4       	ldi	r21, 0x42	; 66
    1580:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    1584:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1588:	6d 83       	std	Y+5, r22	; 0x05
    158a:	7e 83       	std	Y+6, r23	; 0x06
    158c:	41 e0       	ldi	r20, 0x01	; 1
    158e:	50 e0       	ldi	r21, 0x00	; 0
    1590:	be 01       	movw	r22, r28
    1592:	6b 5f       	subi	r22, 0xFB	; 251
    1594:	7f 4f       	sbci	r23, 0xFF	; 255
    1596:	c5 01       	movw	r24, r10
    1598:	16 dc       	rcall	.-2004   	; 0xdc6 <rb16_write>
    159a:	60 91 19 20 	lds	r22, 0x2019	; 0x802019 <rate>
    159e:	c5 01       	movw	r24, r10
    15a0:	f9 dd       	rcall	.-1038   	; 0x1194 <diff>
    15a2:	60 93 e6 20 	sts	0x20E6, r22	; 0x8020e6 <velocity>
    15a6:	70 93 e7 20 	sts	0x20E7, r23	; 0x8020e7 <velocity+0x1>
    15aa:	80 93 e8 20 	sts	0x20E8, r24	; 0x8020e8 <velocity+0x2>
    15ae:	90 93 e9 20 	sts	0x20E9, r25	; 0x8020e9 <velocity+0x3>
    15b2:	83 e3       	ldi	r24, 0x33	; 51
    15b4:	93 e1       	ldi	r25, 0x13	; 19
    15b6:	a0 e9       	ldi	r26, 0x90	; 144
    15b8:	b3 e4       	ldi	r27, 0x43	; 67
    15ba:	80 93 f2 20 	sts	0x20F2, r24	; 0x8020f2 <temp>
    15be:	90 93 f3 20 	sts	0x20F3, r25	; 0x8020f3 <temp+0x1>
    15c2:	a0 93 f4 20 	sts	0x20F4, r26	; 0x8020f4 <temp+0x2>
    15c6:	b0 93 f5 20 	sts	0x20F5, r27	; 0x8020f5 <temp+0x3>
    15ca:	26 96       	adiw	r28, 0x06	; 6
    15cc:	cd bf       	out	0x3d, r28	; 61
    15ce:	de bf       	out	0x3e, r29	; 62
    15d0:	df 91       	pop	r29
    15d2:	cf 91       	pop	r28
    15d4:	1f 91       	pop	r17
    15d6:	0f 91       	pop	r16
    15d8:	ff 90       	pop	r15
    15da:	ef 90       	pop	r14
    15dc:	df 90       	pop	r13
    15de:	cf 90       	pop	r12
    15e0:	bf 90       	pop	r11
    15e2:	af 90       	pop	r10
    15e4:	08 95       	ret

000015e6 <quaternion2euler>:
    15e6:	4f 92       	push	r4
    15e8:	5f 92       	push	r5
    15ea:	6f 92       	push	r6
    15ec:	7f 92       	push	r7
    15ee:	8f 92       	push	r8
    15f0:	9f 92       	push	r9
    15f2:	af 92       	push	r10
    15f4:	bf 92       	push	r11
    15f6:	cf 92       	push	r12
    15f8:	df 92       	push	r13
    15fa:	ef 92       	push	r14
    15fc:	ff 92       	push	r15
    15fe:	0f 93       	push	r16
    1600:	1f 93       	push	r17
    1602:	cf 93       	push	r28
    1604:	df 93       	push	r29
    1606:	cd b7       	in	r28, 0x3d	; 61
    1608:	de b7       	in	r29, 0x3e	; 62
    160a:	68 97       	sbiw	r28, 0x18	; 24
    160c:	cd bf       	out	0x3d, r28	; 61
    160e:	de bf       	out	0x3e, r29	; 62
    1610:	6d 8b       	std	Y+21, r22	; 0x15
    1612:	7e 8b       	std	Y+22, r23	; 0x16
    1614:	8f 8b       	std	Y+23, r24	; 0x17
    1616:	98 8f       	std	Y+24, r25	; 0x18
    1618:	2d 83       	std	Y+5, r18	; 0x05
    161a:	3e 83       	std	Y+6, r19	; 0x06
    161c:	4f 83       	std	Y+7, r20	; 0x07
    161e:	58 87       	std	Y+8, r21	; 0x08
    1620:	e9 86       	std	Y+9, r14	; 0x09
    1622:	fa 86       	std	Y+10, r15	; 0x0a
    1624:	0b 87       	std	Y+11, r16	; 0x0b
    1626:	1c 87       	std	Y+12, r17	; 0x0c
    1628:	a8 01       	movw	r20, r16
    162a:	97 01       	movw	r18, r14
    162c:	c8 01       	movw	r24, r16
    162e:	b7 01       	movw	r22, r14
    1630:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    1634:	69 8b       	std	Y+17, r22	; 0x11
    1636:	7a 8b       	std	Y+18, r23	; 0x12
    1638:	8b 8b       	std	Y+19, r24	; 0x13
    163a:	9c 8b       	std	Y+20, r25	; 0x14
    163c:	2d 81       	ldd	r18, Y+5	; 0x05
    163e:	3e 81       	ldd	r19, Y+6	; 0x06
    1640:	4f 81       	ldd	r20, Y+7	; 0x07
    1642:	58 85       	ldd	r21, Y+8	; 0x08
    1644:	ca 01       	movw	r24, r20
    1646:	b9 01       	movw	r22, r18
    1648:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    164c:	29 89       	ldd	r18, Y+17	; 0x11
    164e:	3a 89       	ldd	r19, Y+18	; 0x12
    1650:	4b 89       	ldd	r20, Y+19	; 0x13
    1652:	5c 89       	ldd	r21, Y+20	; 0x14
    1654:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__addsf3>
    1658:	9b 01       	movw	r18, r22
    165a:	ac 01       	movw	r20, r24
    165c:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__addsf3>
    1660:	9b 01       	movw	r18, r22
    1662:	ac 01       	movw	r20, r24
    1664:	60 e0       	ldi	r22, 0x00	; 0
    1666:	70 e0       	ldi	r23, 0x00	; 0
    1668:	80 e8       	ldi	r24, 0x80	; 128
    166a:	9f e3       	ldi	r25, 0x3F	; 63
    166c:	0e 94 9b 17 	call	0x2f36	; 0x2f36 <__subsf3>
    1670:	2b 01       	movw	r4, r22
    1672:	3c 01       	movw	r6, r24
    1674:	2d 81       	ldd	r18, Y+5	; 0x05
    1676:	3e 81       	ldd	r19, Y+6	; 0x06
    1678:	4f 81       	ldd	r20, Y+7	; 0x07
    167a:	58 85       	ldd	r21, Y+8	; 0x08
    167c:	6d 89       	ldd	r22, Y+21	; 0x15
    167e:	7e 89       	ldd	r23, Y+22	; 0x16
    1680:	8f 89       	ldd	r24, Y+23	; 0x17
    1682:	98 8d       	ldd	r25, Y+24	; 0x18
    1684:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    1688:	69 83       	std	Y+1, r22	; 0x01
    168a:	7a 83       	std	Y+2, r23	; 0x02
    168c:	8b 83       	std	Y+3, r24	; 0x03
    168e:	9c 83       	std	Y+4, r25	; 0x04
    1690:	a6 01       	movw	r20, r12
    1692:	95 01       	movw	r18, r10
    1694:	c8 01       	movw	r24, r16
    1696:	b7 01       	movw	r22, r14
    1698:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    169c:	9b 01       	movw	r18, r22
    169e:	ac 01       	movw	r20, r24
    16a0:	69 81       	ldd	r22, Y+1	; 0x01
    16a2:	7a 81       	ldd	r23, Y+2	; 0x02
    16a4:	8b 81       	ldd	r24, Y+3	; 0x03
    16a6:	9c 81       	ldd	r25, Y+4	; 0x04
    16a8:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__addsf3>
    16ac:	9b 01       	movw	r18, r22
    16ae:	ac 01       	movw	r20, r24
    16b0:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__addsf3>
    16b4:	a3 01       	movw	r20, r6
    16b6:	92 01       	movw	r18, r4
    16b8:	0e 94 26 18 	call	0x304c	; 0x304c <atan2>
    16bc:	6d 87       	std	Y+13, r22	; 0x0d
    16be:	7e 87       	std	Y+14, r23	; 0x0e
    16c0:	8f 87       	std	Y+15, r24	; 0x0f
    16c2:	98 8b       	std	Y+16, r25	; 0x10
    16c4:	a8 01       	movw	r20, r16
    16c6:	97 01       	movw	r18, r14
    16c8:	6d 89       	ldd	r22, Y+21	; 0x15
    16ca:	7e 89       	ldd	r23, Y+22	; 0x16
    16cc:	8f 89       	ldd	r24, Y+23	; 0x17
    16ce:	98 8d       	ldd	r25, Y+24	; 0x18
    16d0:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    16d4:	2b 01       	movw	r4, r22
    16d6:	3c 01       	movw	r6, r24
    16d8:	a6 01       	movw	r20, r12
    16da:	95 01       	movw	r18, r10
    16dc:	6d 81       	ldd	r22, Y+5	; 0x05
    16de:	7e 81       	ldd	r23, Y+6	; 0x06
    16e0:	8f 81       	ldd	r24, Y+7	; 0x07
    16e2:	98 85       	ldd	r25, Y+8	; 0x08
    16e4:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    16e8:	9b 01       	movw	r18, r22
    16ea:	ac 01       	movw	r20, r24
    16ec:	c3 01       	movw	r24, r6
    16ee:	b2 01       	movw	r22, r4
    16f0:	0e 94 9b 17 	call	0x2f36	; 0x2f36 <__subsf3>
    16f4:	9b 01       	movw	r18, r22
    16f6:	ac 01       	movw	r20, r24
    16f8:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__addsf3>
    16fc:	2b 01       	movw	r4, r22
    16fe:	3c 01       	movw	r6, r24
    1700:	9f 77       	andi	r25, 0x7F	; 127
    1702:	20 e0       	ldi	r18, 0x00	; 0
    1704:	30 e0       	ldi	r19, 0x00	; 0
    1706:	40 e8       	ldi	r20, 0x80	; 128
    1708:	5f e3       	ldi	r21, 0x3F	; 63
    170a:	0e 94 63 1a 	call	0x34c6	; 0x34c6 <__gesf2>
    170e:	88 23       	and	r24, r24
    1710:	5c f0       	brlt	.+22     	; 0x1728 <quaternion2euler+0x142>
    1712:	8b ed       	ldi	r24, 0xDB	; 219
    1714:	9f e0       	ldi	r25, 0x0F	; 15
    1716:	a9 ec       	ldi	r26, 0xC9	; 201
    1718:	bf e3       	ldi	r27, 0x3F	; 63
    171a:	77 fa       	bst	r7, 7
    171c:	b7 f9       	bld	r27, 7
    171e:	89 83       	std	Y+1, r24	; 0x01
    1720:	9a 83       	std	Y+2, r25	; 0x02
    1722:	ab 83       	std	Y+3, r26	; 0x03
    1724:	bc 83       	std	Y+4, r27	; 0x04
    1726:	08 c0       	rjmp	.+16     	; 0x1738 <quaternion2euler+0x152>
    1728:	c3 01       	movw	r24, r6
    172a:	b2 01       	movw	r22, r4
    172c:	0e 94 00 18 	call	0x3000	; 0x3000 <asin>
    1730:	69 83       	std	Y+1, r22	; 0x01
    1732:	7a 83       	std	Y+2, r23	; 0x02
    1734:	8b 83       	std	Y+3, r24	; 0x03
    1736:	9c 83       	std	Y+4, r25	; 0x04
    1738:	a6 01       	movw	r20, r12
    173a:	95 01       	movw	r18, r10
    173c:	c6 01       	movw	r24, r12
    173e:	b5 01       	movw	r22, r10
    1740:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    1744:	29 89       	ldd	r18, Y+17	; 0x11
    1746:	3a 89       	ldd	r19, Y+18	; 0x12
    1748:	4b 89       	ldd	r20, Y+19	; 0x13
    174a:	5c 89       	ldd	r21, Y+20	; 0x14
    174c:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__addsf3>
    1750:	9b 01       	movw	r18, r22
    1752:	ac 01       	movw	r20, r24
    1754:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__addsf3>
    1758:	9b 01       	movw	r18, r22
    175a:	ac 01       	movw	r20, r24
    175c:	60 e0       	ldi	r22, 0x00	; 0
    175e:	70 e0       	ldi	r23, 0x00	; 0
    1760:	80 e8       	ldi	r24, 0x80	; 128
    1762:	9f e3       	ldi	r25, 0x3F	; 63
    1764:	0e 94 9b 17 	call	0x2f36	; 0x2f36 <__subsf3>
    1768:	69 8b       	std	Y+17, r22	; 0x11
    176a:	7a 8b       	std	Y+18, r23	; 0x12
    176c:	8b 8b       	std	Y+19, r24	; 0x13
    176e:	9c 8b       	std	Y+20, r25	; 0x14
    1770:	a6 01       	movw	r20, r12
    1772:	95 01       	movw	r18, r10
    1774:	6d 89       	ldd	r22, Y+21	; 0x15
    1776:	7e 89       	ldd	r23, Y+22	; 0x16
    1778:	8f 89       	ldd	r24, Y+23	; 0x17
    177a:	98 8d       	ldd	r25, Y+24	; 0x18
    177c:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    1780:	2b 01       	movw	r4, r22
    1782:	3c 01       	movw	r6, r24
    1784:	29 85       	ldd	r18, Y+9	; 0x09
    1786:	3a 85       	ldd	r19, Y+10	; 0x0a
    1788:	4b 85       	ldd	r20, Y+11	; 0x0b
    178a:	5c 85       	ldd	r21, Y+12	; 0x0c
    178c:	6d 81       	ldd	r22, Y+5	; 0x05
    178e:	7e 81       	ldd	r23, Y+6	; 0x06
    1790:	8f 81       	ldd	r24, Y+7	; 0x07
    1792:	98 85       	ldd	r25, Y+8	; 0x08
    1794:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    1798:	9b 01       	movw	r18, r22
    179a:	ac 01       	movw	r20, r24
    179c:	c3 01       	movw	r24, r6
    179e:	b2 01       	movw	r22, r4
    17a0:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__addsf3>
    17a4:	9b 01       	movw	r18, r22
    17a6:	ac 01       	movw	r20, r24
    17a8:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__addsf3>
    17ac:	29 89       	ldd	r18, Y+17	; 0x11
    17ae:	3a 89       	ldd	r19, Y+18	; 0x12
    17b0:	4b 89       	ldd	r20, Y+19	; 0x13
    17b2:	5c 89       	ldd	r21, Y+20	; 0x14
    17b4:	0e 94 26 18 	call	0x304c	; 0x304c <atan2>
    17b8:	60 93 cc 20 	sts	0x20CC, r22	; 0x8020cc <roll>
    17bc:	70 93 cd 20 	sts	0x20CD, r23	; 0x8020cd <roll+0x1>
    17c0:	80 93 ce 20 	sts	0x20CE, r24	; 0x8020ce <roll+0x2>
    17c4:	90 93 cf 20 	sts	0x20CF, r25	; 0x8020cf <roll+0x3>
    17c8:	2d 85       	ldd	r18, Y+13	; 0x0d
    17ca:	3e 85       	ldd	r19, Y+14	; 0x0e
    17cc:	4f 85       	ldd	r20, Y+15	; 0x0f
    17ce:	58 89       	ldd	r21, Y+16	; 0x10
    17d0:	ca 01       	movw	r24, r20
    17d2:	b9 01       	movw	r22, r18
    17d4:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    17d8:	4b 01       	movw	r8, r22
    17da:	5c 01       	movw	r10, r24
    17dc:	29 81       	ldd	r18, Y+1	; 0x01
    17de:	3a 81       	ldd	r19, Y+2	; 0x02
    17e0:	4b 81       	ldd	r20, Y+3	; 0x03
    17e2:	5c 81       	ldd	r21, Y+4	; 0x04
    17e4:	ca 01       	movw	r24, r20
    17e6:	b9 01       	movw	r22, r18
    17e8:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    17ec:	9b 01       	movw	r18, r22
    17ee:	ac 01       	movw	r20, r24
    17f0:	c5 01       	movw	r24, r10
    17f2:	b4 01       	movw	r22, r8
    17f4:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__addsf3>
    17f8:	0e 94 21 1b 	call	0x3642	; 0x3642 <sqrt>
    17fc:	60 93 d0 20 	sts	0x20D0, r22	; 0x8020d0 <pitch>
    1800:	70 93 d1 20 	sts	0x20D1, r23	; 0x8020d1 <pitch+0x1>
    1804:	80 93 d2 20 	sts	0x20D2, r24	; 0x8020d2 <pitch+0x2>
    1808:	90 93 d3 20 	sts	0x20D3, r25	; 0x8020d3 <pitch+0x3>
    180c:	68 96       	adiw	r28, 0x18	; 24
    180e:	cd bf       	out	0x3d, r28	; 61
    1810:	de bf       	out	0x3e, r29	; 62
    1812:	df 91       	pop	r29
    1814:	cf 91       	pop	r28
    1816:	1f 91       	pop	r17
    1818:	0f 91       	pop	r16
    181a:	ff 90       	pop	r15
    181c:	ef 90       	pop	r14
    181e:	df 90       	pop	r13
    1820:	cf 90       	pop	r12
    1822:	bf 90       	pop	r11
    1824:	af 90       	pop	r10
    1826:	9f 90       	pop	r9
    1828:	8f 90       	pop	r8
    182a:	7f 90       	pop	r7
    182c:	6f 90       	pop	r6
    182e:	5f 90       	pop	r5
    1830:	4f 90       	pop	r4
    1832:	08 95       	ret

00001834 <state_check>:
    1834:	cf 92       	push	r12
    1836:	df 92       	push	r13
    1838:	ef 92       	push	r14
    183a:	ff 92       	push	r15
    183c:	c0 90 e6 20 	lds	r12, 0x20E6	; 0x8020e6 <velocity>
    1840:	d0 90 e7 20 	lds	r13, 0x20E7	; 0x8020e7 <velocity+0x1>
    1844:	e0 90 e8 20 	lds	r14, 0x20E8	; 0x8020e8 <velocity+0x2>
    1848:	f0 90 e9 20 	lds	r15, 0x20E9	; 0x8020e9 <velocity+0x3>
    184c:	c7 01       	movw	r24, r14
    184e:	b6 01       	movw	r22, r12
    1850:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1854:	9b 01       	movw	r18, r22
    1856:	77 23       	and	r23, r23
    1858:	24 f4       	brge	.+8      	; 0x1862 <state_check+0x2e>
    185a:	22 27       	eor	r18, r18
    185c:	33 27       	eor	r19, r19
    185e:	26 1b       	sub	r18, r22
    1860:	37 0b       	sbc	r19, r23
    1862:	26 30       	cpi	r18, 0x06	; 6
    1864:	31 05       	cpc	r19, r1
    1866:	8c f0       	brlt	.+34     	; 0x188a <state_check+0x56>
    1868:	20 e0       	ldi	r18, 0x00	; 0
    186a:	30 e0       	ldi	r19, 0x00	; 0
    186c:	a9 01       	movw	r20, r18
    186e:	c7 01       	movw	r24, r14
    1870:	b6 01       	movw	r22, r12
    1872:	0e 94 79 18 	call	0x30f2	; 0x30f2 <__cmpsf2>
    1876:	88 23       	and	r24, r24
    1878:	24 f0       	brlt	.+8      	; 0x1882 <state_check+0x4e>
    187a:	81 e0       	ldi	r24, 0x01	; 1
    187c:	80 93 0b 21 	sts	0x210B, r24	; 0x80210b <state>
    1880:	24 c0       	rjmp	.+72     	; 0x18ca <state_check+0x96>
    1882:	82 e0       	ldi	r24, 0x02	; 2
    1884:	80 93 0b 21 	sts	0x210B, r24	; 0x80210b <state>
    1888:	20 c0       	rjmp	.+64     	; 0x18ca <state_check+0x96>
    188a:	10 92 0b 21 	sts	0x210B, r1	; 0x80210b <state>
    188e:	20 e0       	ldi	r18, 0x00	; 0
    1890:	30 e0       	ldi	r19, 0x00	; 0
    1892:	48 e4       	ldi	r20, 0x48	; 72
    1894:	52 e4       	ldi	r21, 0x42	; 66
    1896:	60 91 ee 20 	lds	r22, 0x20EE	; 0x8020ee <alt>
    189a:	70 91 ef 20 	lds	r23, 0x20EF	; 0x8020ef <alt+0x1>
    189e:	80 91 f0 20 	lds	r24, 0x20F0	; 0x8020f0 <alt+0x2>
    18a2:	90 91 f1 20 	lds	r25, 0x20F1	; 0x8020f1 <alt+0x3>
    18a6:	0e 94 63 1a 	call	0x34c6	; 0x34c6 <__gesf2>
    18aa:	18 16       	cp	r1, r24
    18ac:	24 f0       	brlt	.+8      	; 0x18b6 <state_check+0x82>
    18ae:	80 91 09 21 	lds	r24, 0x2109	; 0x802109 <reset_received>
    18b2:	88 23       	and	r24, r24
    18b4:	19 f0       	breq	.+6      	; 0x18bc <state_check+0x88>
    18b6:	81 e0       	ldi	r24, 0x01	; 1
    18b8:	80 93 0b 21 	sts	0x210B, r24	; 0x80210b <state>
    18bc:	80 91 0a 21 	lds	r24, 0x210A	; 0x80210a <released>
    18c0:	88 23       	and	r24, r24
    18c2:	19 f0       	breq	.+6      	; 0x18ca <state_check+0x96>
    18c4:	83 e0       	ldi	r24, 0x03	; 3
    18c6:	80 93 0b 21 	sts	0x210B, r24	; 0x80210b <state>
    18ca:	ff 90       	pop	r15
    18cc:	ef 90       	pop	r14
    18ce:	df 90       	pop	r13
    18d0:	cf 90       	pop	r12
    18d2:	08 95       	ret

000018d4 <release_servo_init>:
    18d4:	61 e0       	ldi	r22, 0x01	; 1
    18d6:	84 e0       	ldi	r24, 0x04	; 4
    18d8:	b1 db       	rcall	.-2206   	; 0x103c <sysclk_enable_module>
    18da:	64 e0       	ldi	r22, 0x04	; 4
    18dc:	84 e0       	ldi	r24, 0x04	; 4
    18de:	ae db       	rcall	.-2212   	; 0x103c <sysclk_enable_module>
    18e0:	81 e0       	ldi	r24, 0x01	; 1
    18e2:	80 93 60 06 	sts	0x0660, r24	; 0x800660 <__TEXT_REGION_LENGTH__+0x700660>
    18e6:	e0 e0       	ldi	r30, 0x00	; 0
    18e8:	f9 e0       	ldi	r31, 0x09	; 9
    18ea:	85 e0       	ldi	r24, 0x05	; 5
    18ec:	80 83       	st	Z, r24
    18ee:	83 e1       	ldi	r24, 0x13	; 19
    18f0:	81 83       	std	Z+1, r24	; 0x01
    18f2:	80 e1       	ldi	r24, 0x10	; 16
    18f4:	97 e2       	ldi	r25, 0x27	; 39
    18f6:	86 a3       	std	Z+38, r24	; 0x26
    18f8:	97 a3       	std	Z+39, r25	; 0x27
    18fa:	8e ee       	ldi	r24, 0xEE	; 238
    18fc:	92 e0       	ldi	r25, 0x02	; 2
    18fe:	80 a7       	std	Z+40, r24	; 0x28
    1900:	91 a7       	std	Z+41, r25	; 0x29
    1902:	08 95       	ret

00001904 <servo_pid>:
    1904:	8f 92       	push	r8
    1906:	9f 92       	push	r9
    1908:	af 92       	push	r10
    190a:	bf 92       	push	r11
    190c:	cf 92       	push	r12
    190e:	df 92       	push	r13
    1910:	ef 92       	push	r14
    1912:	ff 92       	push	r15
    1914:	0f 93       	push	r16
    1916:	1f 93       	push	r17
    1918:	cf 93       	push	r28
    191a:	df 93       	push	r29
    191c:	7c 01       	movw	r14, r24
    191e:	c0 e0       	ldi	r28, 0x00	; 0
    1920:	d0 e0       	ldi	r29, 0x00	; 0
    1922:	00 e0       	ldi	r16, 0x00	; 0
    1924:	10 e0       	ldi	r17, 0x00	; 0
    1926:	be 01       	movw	r22, r28
    1928:	c7 01       	movw	r24, r14
    192a:	96 da       	rcall	.-2772   	; 0xe58 <rb16_get_nth>
    192c:	08 0f       	add	r16, r24
    192e:	19 1f       	adc	r17, r25
    1930:	21 96       	adiw	r28, 0x01	; 1
    1932:	ca 30       	cpi	r28, 0x0A	; 10
    1934:	d1 05       	cpc	r29, r1
    1936:	b9 f7       	brne	.-18     	; 0x1926 <servo_pid+0x22>
    1938:	60 e0       	ldi	r22, 0x00	; 0
    193a:	70 e0       	ldi	r23, 0x00	; 0
    193c:	c7 01       	movw	r24, r14
    193e:	8c da       	rcall	.-2792   	; 0xe58 <rb16_get_nth>
    1940:	ec 01       	movw	r28, r24
    1942:	60 91 19 20 	lds	r22, 0x2019	; 0x802019 <rate>
    1946:	c7 01       	movw	r24, r14
    1948:	25 dc       	rcall	.-1974   	; 0x1194 <diff>
    194a:	6b 01       	movw	r12, r22
    194c:	7c 01       	movw	r14, r24
    194e:	be 01       	movw	r22, r28
    1950:	dd 0f       	add	r29, r29
    1952:	88 0b       	sbc	r24, r24
    1954:	99 0b       	sbc	r25, r25
    1956:	0e 94 52 19 	call	0x32a4	; 0x32a4 <__floatsisf>
    195a:	20 e0       	ldi	r18, 0x00	; 0
    195c:	30 e0       	ldi	r19, 0x00	; 0
    195e:	a9 01       	movw	r20, r18
    1960:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    1964:	20 e0       	ldi	r18, 0x00	; 0
    1966:	30 e0       	ldi	r19, 0x00	; 0
    1968:	48 ec       	ldi	r20, 0xC8	; 200
    196a:	52 e4       	ldi	r21, 0x42	; 66
    196c:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__divsf3>
    1970:	4b 01       	movw	r8, r22
    1972:	5c 01       	movw	r10, r24
    1974:	b8 01       	movw	r22, r16
    1976:	11 0f       	add	r17, r17
    1978:	88 0b       	sbc	r24, r24
    197a:	99 0b       	sbc	r25, r25
    197c:	0e 94 52 19 	call	0x32a4	; 0x32a4 <__floatsisf>
    1980:	20 e0       	ldi	r18, 0x00	; 0
    1982:	30 e0       	ldi	r19, 0x00	; 0
    1984:	a9 01       	movw	r20, r18
    1986:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    198a:	20 e0       	ldi	r18, 0x00	; 0
    198c:	30 e0       	ldi	r19, 0x00	; 0
    198e:	48 ec       	ldi	r20, 0xC8	; 200
    1990:	52 e4       	ldi	r21, 0x42	; 66
    1992:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__divsf3>
    1996:	9b 01       	movw	r18, r22
    1998:	ac 01       	movw	r20, r24
    199a:	c5 01       	movw	r24, r10
    199c:	b4 01       	movw	r22, r8
    199e:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__addsf3>
    19a2:	4b 01       	movw	r8, r22
    19a4:	5c 01       	movw	r10, r24
    19a6:	20 e0       	ldi	r18, 0x00	; 0
    19a8:	30 e0       	ldi	r19, 0x00	; 0
    19aa:	a9 01       	movw	r20, r18
    19ac:	c7 01       	movw	r24, r14
    19ae:	b6 01       	movw	r22, r12
    19b0:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    19b4:	9b 01       	movw	r18, r22
    19b6:	ac 01       	movw	r20, r24
    19b8:	c5 01       	movw	r24, r10
    19ba:	b4 01       	movw	r22, r8
    19bc:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__addsf3>
    19c0:	20 e0       	ldi	r18, 0x00	; 0
    19c2:	30 e8       	ldi	r19, 0x80	; 128
    19c4:	4b eb       	ldi	r20, 0xBB	; 187
    19c6:	54 e4       	ldi	r21, 0x44	; 68
    19c8:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__addsf3>
    19cc:	0e 94 24 19 	call	0x3248	; 0x3248 <__fixunssfsi>
    19d0:	60 93 1b 20 	sts	0x201B, r22	; 0x80201b <servo_pulse>
    19d4:	70 93 1c 20 	sts	0x201C, r23	; 0x80201c <servo_pulse+0x1>
    19d8:	80 e0       	ldi	r24, 0x00	; 0
    19da:	90 e0       	ldi	r25, 0x00	; 0
    19dc:	0e 94 50 19 	call	0x32a0	; 0x32a0 <__floatunsisf>
    19e0:	20 e0       	ldi	r18, 0x00	; 0
    19e2:	30 e0       	ldi	r19, 0x00	; 0
    19e4:	4a e7       	ldi	r20, 0x7A	; 122
    19e6:	54 e4       	ldi	r21, 0x44	; 68
    19e8:	0e 94 7d 18 	call	0x30fa	; 0x30fa <__divsf3>
    19ec:	20 e0       	ldi	r18, 0x00	; 0
    19ee:	30 e0       	ldi	r19, 0x00	; 0
    19f0:	4a ef       	ldi	r20, 0xFA	; 250
    19f2:	53 e4       	ldi	r21, 0x43	; 67
    19f4:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    19f8:	0e 94 24 19 	call	0x3248	; 0x3248 <__fixunssfsi>
    19fc:	60 93 28 09 	sts	0x0928, r22	; 0x800928 <__TEXT_REGION_LENGTH__+0x700928>
    1a00:	70 93 29 09 	sts	0x0929, r23	; 0x800929 <__TEXT_REGION_LENGTH__+0x700929>
    1a04:	df 91       	pop	r29
    1a06:	cf 91       	pop	r28
    1a08:	1f 91       	pop	r17
    1a0a:	0f 91       	pop	r16
    1a0c:	ff 90       	pop	r15
    1a0e:	ef 90       	pop	r14
    1a10:	df 90       	pop	r13
    1a12:	cf 90       	pop	r12
    1a14:	bf 90       	pop	r11
    1a16:	af 90       	pop	r10
    1a18:	9f 90       	pop	r9
    1a1a:	8f 90       	pop	r8
    1a1c:	08 95       	ret

00001a1e <clock_init>:
    1a1e:	61 e0       	ldi	r22, 0x01	; 1
    1a20:	85 e0       	ldi	r24, 0x05	; 5
    1a22:	0c db       	rcall	.-2536   	; 0x103c <sysclk_enable_module>
    1a24:	e0 e0       	ldi	r30, 0x00	; 0
    1a26:	fa e0       	ldi	r31, 0x0A	; 10
    1a28:	87 e0       	ldi	r24, 0x07	; 7
    1a2a:	80 83       	st	Z, r24
    1a2c:	81 e1       	ldi	r24, 0x11	; 17
    1a2e:	9a e7       	ldi	r25, 0x7A	; 122
    1a30:	86 a3       	std	Z+38, r24	; 0x26
    1a32:	97 a3       	std	Z+39, r25	; 0x27
    1a34:	81 e0       	ldi	r24, 0x01	; 1
    1a36:	86 83       	std	Z+6, r24	; 0x06
    1a38:	08 95       	ret

00001a3a <cali_alt>:
    1a3a:	80 91 f6 20 	lds	r24, 0x20F6	; 0x8020f6 <press>
    1a3e:	90 91 f7 20 	lds	r25, 0x20F7	; 0x8020f7 <press+0x1>
    1a42:	a0 91 f8 20 	lds	r26, 0x20F8	; 0x8020f8 <press+0x2>
    1a46:	b0 91 f9 20 	lds	r27, 0x20F9	; 0x8020f9 <press+0x3>
    1a4a:	80 93 2d 20 	sts	0x202D, r24	; 0x80202d <ground_p>
    1a4e:	90 93 2e 20 	sts	0x202E, r25	; 0x80202e <ground_p+0x1>
    1a52:	a0 93 2f 20 	sts	0x202F, r26	; 0x80202f <ground_p+0x2>
    1a56:	b0 93 30 20 	sts	0x2030, r27	; 0x802030 <ground_p+0x3>
    1a5a:	80 91 ee 20 	lds	r24, 0x20EE	; 0x8020ee <alt>
    1a5e:	90 91 ef 20 	lds	r25, 0x20EF	; 0x8020ef <alt+0x1>
    1a62:	a0 91 f0 20 	lds	r26, 0x20F0	; 0x8020f0 <alt+0x2>
    1a66:	b0 91 f1 20 	lds	r27, 0x20F1	; 0x8020f1 <alt+0x3>
    1a6a:	80 93 05 21 	sts	0x2105, r24	; 0x802105 <ground_a>
    1a6e:	90 93 06 21 	sts	0x2106, r25	; 0x802106 <ground_a+0x1>
    1a72:	a0 93 07 21 	sts	0x2107, r26	; 0x802107 <ground_a+0x2>
    1a76:	b0 93 08 21 	sts	0x2108, r27	; 0x802108 <ground_a+0x3>
    1a7a:	83 e3       	ldi	r24, 0x33	; 51
    1a7c:	93 e1       	ldi	r25, 0x13	; 19
    1a7e:	a0 e9       	ldi	r26, 0x90	; 144
    1a80:	b3 e4       	ldi	r27, 0x43	; 67
    1a82:	80 93 29 20 	sts	0x2029, r24	; 0x802029 <ground_t>
    1a86:	90 93 2a 20 	sts	0x202A, r25	; 0x80202a <ground_t+0x1>
    1a8a:	a0 93 2b 20 	sts	0x202B, r26	; 0x80202b <ground_t+0x2>
    1a8e:	b0 93 2c 20 	sts	0x202C, r27	; 0x80202c <ground_t+0x3>
    1a92:	08 95       	ret

00001a94 <send_gps>:
    1a94:	8f 92       	push	r8
    1a96:	9f 92       	push	r9
    1a98:	af 92       	push	r10
    1a9a:	bf 92       	push	r11
    1a9c:	cf 92       	push	r12
    1a9e:	df 92       	push	r13
    1aa0:	ef 92       	push	r14
    1aa2:	ff 92       	push	r15
    1aa4:	0f 93       	push	r16
    1aa6:	1f 93       	push	r17
    1aa8:	cf 93       	push	r28
    1aaa:	df 93       	push	r29
    1aac:	cd b7       	in	r28, 0x3d	; 61
    1aae:	de b7       	in	r29, 0x3e	; 62
    1ab0:	c6 54       	subi	r28, 0x46	; 70
    1ab2:	d1 09       	sbc	r29, r1
    1ab4:	cd bf       	out	0x3d, r28	; 61
    1ab6:	de bf       	out	0x3e, r29	; 62
    1ab8:	60 91 da 20 	lds	r22, 0x20DA	; 0x8020da <gps_long>
    1abc:	70 91 db 20 	lds	r23, 0x20DB	; 0x8020db <gps_long+0x1>
    1ac0:	80 91 dc 20 	lds	r24, 0x20DC	; 0x8020dc <gps_long+0x2>
    1ac4:	90 91 dd 20 	lds	r25, 0x20DD	; 0x8020dd <gps_long+0x3>
    1ac8:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1acc:	16 2f       	mov	r17, r22
    1ace:	07 2f       	mov	r16, r23
    1ad0:	c0 90 de 20 	lds	r12, 0x20DE	; 0x8020de <gps_lat>
    1ad4:	d0 90 df 20 	lds	r13, 0x20DF	; 0x8020df <gps_lat+0x1>
    1ad8:	e0 90 e0 20 	lds	r14, 0x20E0	; 0x8020e0 <gps_lat+0x2>
    1adc:	f0 90 e1 20 	lds	r15, 0x20E1	; 0x8020e1 <gps_lat+0x3>
    1ae0:	a6 2f       	mov	r26, r22
    1ae2:	b7 2f       	mov	r27, r23
    1ae4:	bb 23       	and	r27, r27
    1ae6:	1c f4       	brge	.+6      	; 0x1aee <send_gps+0x5a>
    1ae8:	b1 95       	neg	r27
    1aea:	a1 95       	neg	r26
    1aec:	b1 09       	sbc	r27, r1
    1aee:	20 e4       	ldi	r18, 0x40	; 64
    1af0:	32 e4       	ldi	r19, 0x42	; 66
    1af2:	4f e0       	ldi	r20, 0x0F	; 15
    1af4:	50 e0       	ldi	r21, 0x00	; 0
    1af6:	0e 94 d4 1c 	call	0x39a8	; 0x39a8 <__mulshisi3>
    1afa:	0f 2e       	mov	r0, r31
    1afc:	f0 e4       	ldi	r31, 0x40	; 64
    1afe:	8f 2e       	mov	r8, r31
    1b00:	f2 e4       	ldi	r31, 0x42	; 66
    1b02:	9f 2e       	mov	r9, r31
    1b04:	ff e0       	ldi	r31, 0x0F	; 15
    1b06:	af 2e       	mov	r10, r31
    1b08:	b1 2c       	mov	r11, r1
    1b0a:	f0 2d       	mov	r31, r0
    1b0c:	0e 94 ae 1c 	call	0x395c	; 0x395c <__divmodsi4>
    1b10:	9f 93       	push	r25
    1b12:	8f 93       	push	r24
    1b14:	7f 93       	push	r23
    1b16:	6f 93       	push	r22
    1b18:	0f 93       	push	r16
    1b1a:	1f 93       	push	r17
    1b1c:	20 e0       	ldi	r18, 0x00	; 0
    1b1e:	34 e2       	ldi	r19, 0x24	; 36
    1b20:	44 e7       	ldi	r20, 0x74	; 116
    1b22:	59 e4       	ldi	r21, 0x49	; 73
    1b24:	c7 01       	movw	r24, r14
    1b26:	b6 01       	movw	r22, r12
    1b28:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    1b2c:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1b30:	a5 01       	movw	r20, r10
    1b32:	94 01       	movw	r18, r8
    1b34:	0e 94 ae 1c 	call	0x395c	; 0x395c <__divmodsi4>
    1b38:	9f 93       	push	r25
    1b3a:	8f 93       	push	r24
    1b3c:	7f 93       	push	r23
    1b3e:	6f 93       	push	r22
    1b40:	c7 01       	movw	r24, r14
    1b42:	b6 01       	movw	r22, r12
    1b44:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1b48:	7f 93       	push	r23
    1b4a:	6f 93       	push	r22
    1b4c:	80 91 15 20 	lds	r24, 0x2015	; 0x802015 <gps_msg+0x1>
    1b50:	8f 93       	push	r24
    1b52:	80 91 14 20 	lds	r24, 0x2014	; 0x802014 <gps_msg>
    1b56:	8f 93       	push	r24
    1b58:	8e 01       	movw	r16, r28
    1b5a:	0f 5f       	subi	r16, 0xFF	; 255
    1b5c:	1f 4f       	sbci	r17, 0xFF	; 255
    1b5e:	1f 93       	push	r17
    1b60:	0f 93       	push	r16
    1b62:	0e 94 94 1d 	call	0x3b28	; 0x3b28 <sprintf>
    1b66:	1f 93       	push	r17
    1b68:	0f 93       	push	r16
    1b6a:	0e 94 51 1d 	call	0x3aa2	; 0x3aa2 <printf>
    1b6e:	cd bf       	out	0x3d, r28	; 61
    1b70:	de bf       	out	0x3e, r29	; 62
    1b72:	ca 5b       	subi	r28, 0xBA	; 186
    1b74:	df 4f       	sbci	r29, 0xFF	; 255
    1b76:	cd bf       	out	0x3d, r28	; 61
    1b78:	de bf       	out	0x3e, r29	; 62
    1b7a:	df 91       	pop	r29
    1b7c:	cf 91       	pop	r28
    1b7e:	1f 91       	pop	r17
    1b80:	0f 91       	pop	r16
    1b82:	ff 90       	pop	r15
    1b84:	ef 90       	pop	r14
    1b86:	df 90       	pop	r13
    1b88:	cf 90       	pop	r12
    1b8a:	bf 90       	pop	r11
    1b8c:	af 90       	pop	r10
    1b8e:	9f 90       	pop	r9
    1b90:	8f 90       	pop	r8
    1b92:	08 95       	ret

00001b94 <packet>:
    1b94:	4f 92       	push	r4
    1b96:	5f 92       	push	r5
    1b98:	6f 92       	push	r6
    1b9a:	7f 92       	push	r7
    1b9c:	8f 92       	push	r8
    1b9e:	9f 92       	push	r9
    1ba0:	af 92       	push	r10
    1ba2:	bf 92       	push	r11
    1ba4:	cf 92       	push	r12
    1ba6:	df 92       	push	r13
    1ba8:	ef 92       	push	r14
    1baa:	ff 92       	push	r15
    1bac:	0f 93       	push	r16
    1bae:	1f 93       	push	r17
    1bb0:	cf 93       	push	r28
    1bb2:	df 93       	push	r29
    1bb4:	c0 91 fa 20 	lds	r28, 0x20FA	; 0x8020fa <packets>
    1bb8:	d0 91 fb 20 	lds	r29, 0x20FB	; 0x8020fb <packets+0x1>
    1bbc:	21 96       	adiw	r28, 0x01	; 1
    1bbe:	c0 93 fa 20 	sts	0x20FA, r28	; 0x8020fa <packets>
    1bc2:	d0 93 fb 20 	sts	0x20FB, r29	; 0x8020fb <packets+0x1>
    1bc6:	60 91 d6 20 	lds	r22, 0x20D6	; 0x8020d6 <gps_alt>
    1bca:	70 91 d7 20 	lds	r23, 0x20D7	; 0x8020d7 <gps_alt+0x1>
    1bce:	80 91 d8 20 	lds	r24, 0x20D8	; 0x8020d8 <gps_alt+0x2>
    1bd2:	90 91 d9 20 	lds	r25, 0x20D9	; 0x8020d9 <gps_alt+0x3>
    1bd6:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1bda:	16 2f       	mov	r17, r22
    1bdc:	07 2f       	mov	r16, r23
    1bde:	40 90 da 20 	lds	r4, 0x20DA	; 0x8020da <gps_long>
    1be2:	50 90 db 20 	lds	r5, 0x20DB	; 0x8020db <gps_long+0x1>
    1be6:	60 90 dc 20 	lds	r6, 0x20DC	; 0x8020dc <gps_long+0x2>
    1bea:	70 90 dd 20 	lds	r7, 0x20DD	; 0x8020dd <gps_long+0x3>
    1bee:	80 90 de 20 	lds	r8, 0x20DE	; 0x8020de <gps_lat>
    1bf2:	90 90 df 20 	lds	r9, 0x20DF	; 0x8020df <gps_lat+0x1>
    1bf6:	a0 90 e0 20 	lds	r10, 0x20E0	; 0x8020e0 <gps_lat+0x2>
    1bfa:	b0 90 e1 20 	lds	r11, 0x20E1	; 0x8020e1 <gps_lat+0x3>
    1bfe:	60 91 e2 20 	lds	r22, 0x20E2	; 0x8020e2 <gps_t>
    1c02:	70 91 e3 20 	lds	r23, 0x20E3	; 0x8020e3 <gps_t+0x1>
    1c06:	80 91 e4 20 	lds	r24, 0x20E4	; 0x8020e4 <gps_t+0x2>
    1c0a:	90 91 e5 20 	lds	r25, 0x20E5	; 0x8020e5 <gps_t+0x3>
    1c0e:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1c12:	6b 01       	movw	r12, r22
    1c14:	7c 01       	movw	r14, r24
    1c16:	60 91 c4 20 	lds	r22, 0x20C4	; 0x8020c4 <__data_end>
    1c1a:	70 91 c5 20 	lds	r23, 0x20C5	; 0x8020c5 <__data_end+0x1>
    1c1e:	80 91 c6 20 	lds	r24, 0x20C6	; 0x8020c6 <__data_end+0x2>
    1c22:	90 91 c7 20 	lds	r25, 0x20C7	; 0x8020c7 <__data_end+0x3>
    1c26:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1c2a:	7f 93       	push	r23
    1c2c:	6f 93       	push	r22
    1c2e:	80 91 0b 21 	lds	r24, 0x210B	; 0x80210b <state>
    1c32:	1f 92       	push	r1
    1c34:	8f 93       	push	r24
    1c36:	60 91 c8 20 	lds	r22, 0x20C8	; 0x8020c8 <rpm>
    1c3a:	70 91 c9 20 	lds	r23, 0x20C9	; 0x8020c9 <rpm+0x1>
    1c3e:	80 91 ca 20 	lds	r24, 0x20CA	; 0x8020ca <rpm+0x2>
    1c42:	90 91 cb 20 	lds	r25, 0x20CB	; 0x8020cb <rpm+0x3>
    1c46:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1c4a:	7f 93       	push	r23
    1c4c:	6f 93       	push	r22
    1c4e:	60 91 cc 20 	lds	r22, 0x20CC	; 0x8020cc <roll>
    1c52:	70 91 cd 20 	lds	r23, 0x20CD	; 0x8020cd <roll+0x1>
    1c56:	80 91 ce 20 	lds	r24, 0x20CE	; 0x8020ce <roll+0x2>
    1c5a:	90 91 cf 20 	lds	r25, 0x20CF	; 0x8020cf <roll+0x3>
    1c5e:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1c62:	7f 93       	push	r23
    1c64:	6f 93       	push	r22
    1c66:	60 91 d0 20 	lds	r22, 0x20D0	; 0x8020d0 <pitch>
    1c6a:	70 91 d1 20 	lds	r23, 0x20D1	; 0x8020d1 <pitch+0x1>
    1c6e:	80 91 d2 20 	lds	r24, 0x20D2	; 0x8020d2 <pitch+0x2>
    1c72:	90 91 d3 20 	lds	r25, 0x20D3	; 0x8020d3 <pitch+0x3>
    1c76:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1c7a:	7f 93       	push	r23
    1c7c:	6f 93       	push	r22
    1c7e:	80 91 d5 20 	lds	r24, 0x20D5	; 0x8020d5 <gps_sats+0x1>
    1c82:	8f 93       	push	r24
    1c84:	80 91 d4 20 	lds	r24, 0x20D4	; 0x8020d4 <gps_sats>
    1c88:	8f 93       	push	r24
    1c8a:	81 2f       	mov	r24, r17
    1c8c:	90 2f       	mov	r25, r16
    1c8e:	88 0f       	add	r24, r24
    1c90:	99 1f       	adc	r25, r25
    1c92:	9c 01       	movw	r18, r24
    1c94:	22 0f       	add	r18, r18
    1c96:	33 1f       	adc	r19, r19
    1c98:	22 0f       	add	r18, r18
    1c9a:	33 1f       	adc	r19, r19
    1c9c:	82 0f       	add	r24, r18
    1c9e:	93 1f       	adc	r25, r19
    1ca0:	6a e0       	ldi	r22, 0x0A	; 10
    1ca2:	70 e0       	ldi	r23, 0x00	; 0
    1ca4:	0e 94 79 1c 	call	0x38f2	; 0x38f2 <__divmodhi4>
    1ca8:	9f 93       	push	r25
    1caa:	8f 93       	push	r24
    1cac:	0f 93       	push	r16
    1cae:	1f 93       	push	r17
    1cb0:	20 e0       	ldi	r18, 0x00	; 0
    1cb2:	34 e2       	ldi	r19, 0x24	; 36
    1cb4:	44 e7       	ldi	r20, 0x74	; 116
    1cb6:	59 e4       	ldi	r21, 0x49	; 73
    1cb8:	c3 01       	movw	r24, r6
    1cba:	b2 01       	movw	r22, r4
    1cbc:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    1cc0:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1cc4:	20 e4       	ldi	r18, 0x40	; 64
    1cc6:	32 e4       	ldi	r19, 0x42	; 66
    1cc8:	4f e0       	ldi	r20, 0x0F	; 15
    1cca:	50 e0       	ldi	r21, 0x00	; 0
    1ccc:	0e 94 ae 1c 	call	0x395c	; 0x395c <__divmodsi4>
    1cd0:	9b 01       	movw	r18, r22
    1cd2:	77 23       	and	r23, r23
    1cd4:	24 f4       	brge	.+8      	; 0x1cde <packet+0x14a>
    1cd6:	22 27       	eor	r18, r18
    1cd8:	33 27       	eor	r19, r19
    1cda:	26 1b       	sub	r18, r22
    1cdc:	37 0b       	sbc	r19, r23
    1cde:	c9 01       	movw	r24, r18
    1ce0:	33 0f       	add	r19, r19
    1ce2:	aa 0b       	sbc	r26, r26
    1ce4:	bb 0b       	sbc	r27, r27
    1ce6:	bf 93       	push	r27
    1ce8:	af 93       	push	r26
    1cea:	9f 93       	push	r25
    1cec:	8f 93       	push	r24
    1cee:	c3 01       	movw	r24, r6
    1cf0:	b2 01       	movw	r22, r4
    1cf2:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1cf6:	7f 93       	push	r23
    1cf8:	6f 93       	push	r22
    1cfa:	20 e0       	ldi	r18, 0x00	; 0
    1cfc:	34 e2       	ldi	r19, 0x24	; 36
    1cfe:	44 e7       	ldi	r20, 0x74	; 116
    1d00:	59 e4       	ldi	r21, 0x49	; 73
    1d02:	c5 01       	movw	r24, r10
    1d04:	b4 01       	movw	r22, r8
    1d06:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    1d0a:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1d0e:	20 e4       	ldi	r18, 0x40	; 64
    1d10:	32 e4       	ldi	r19, 0x42	; 66
    1d12:	4f e0       	ldi	r20, 0x0F	; 15
    1d14:	50 e0       	ldi	r21, 0x00	; 0
    1d16:	0e 94 ae 1c 	call	0x395c	; 0x395c <__divmodsi4>
    1d1a:	9f 93       	push	r25
    1d1c:	8f 93       	push	r24
    1d1e:	7f 93       	push	r23
    1d20:	6f 93       	push	r22
    1d22:	c5 01       	movw	r24, r10
    1d24:	b4 01       	movw	r22, r8
    1d26:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1d2a:	7f 93       	push	r23
    1d2c:	6f 93       	push	r22
    1d2e:	0f 2e       	mov	r0, r31
    1d30:	f4 e6       	ldi	r31, 0x64	; 100
    1d32:	8f 2e       	mov	r8, r31
    1d34:	91 2c       	mov	r9, r1
    1d36:	a1 2c       	mov	r10, r1
    1d38:	b1 2c       	mov	r11, r1
    1d3a:	f0 2d       	mov	r31, r0
    1d3c:	c7 01       	movw	r24, r14
    1d3e:	b6 01       	movw	r22, r12
    1d40:	a5 01       	movw	r20, r10
    1d42:	94 01       	movw	r18, r8
    1d44:	0e 94 ae 1c 	call	0x395c	; 0x395c <__divmodsi4>
    1d48:	7f 93       	push	r23
    1d4a:	6f 93       	push	r22
    1d4c:	c7 01       	movw	r24, r14
    1d4e:	b6 01       	movw	r22, r12
    1d50:	20 e1       	ldi	r18, 0x10	; 16
    1d52:	37 e2       	ldi	r19, 0x27	; 39
    1d54:	40 e0       	ldi	r20, 0x00	; 0
    1d56:	50 e0       	ldi	r21, 0x00	; 0
    1d58:	0e 94 ae 1c 	call	0x395c	; 0x395c <__divmodsi4>
    1d5c:	12 2f       	mov	r17, r18
    1d5e:	03 2f       	mov	r16, r19
    1d60:	a5 01       	movw	r20, r10
    1d62:	94 01       	movw	r18, r8
    1d64:	0e 94 ae 1c 	call	0x395c	; 0x395c <__divmodsi4>
    1d68:	3f 93       	push	r19
    1d6a:	2f 93       	push	r18
    1d6c:	0f 93       	push	r16
    1d6e:	1f 93       	push	r17
    1d70:	60 91 ea 20 	lds	r22, 0x20EA	; 0x8020ea <volt>
    1d74:	70 91 eb 20 	lds	r23, 0x20EB	; 0x8020eb <volt+0x1>
    1d78:	80 91 ec 20 	lds	r24, 0x20EC	; 0x8020ec <volt+0x2>
    1d7c:	90 91 ed 20 	lds	r25, 0x20ED	; 0x8020ed <volt+0x3>
    1d80:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1d84:	7f 93       	push	r23
    1d86:	6f 93       	push	r22
    1d88:	23 e3       	ldi	r18, 0x33	; 51
    1d8a:	33 e9       	ldi	r19, 0x93	; 147
    1d8c:	48 e8       	ldi	r20, 0x88	; 136
    1d8e:	53 e4       	ldi	r21, 0x43	; 67
    1d90:	60 91 f2 20 	lds	r22, 0x20F2	; 0x8020f2 <temp>
    1d94:	70 91 f3 20 	lds	r23, 0x20F3	; 0x8020f3 <temp+0x1>
    1d98:	80 91 f4 20 	lds	r24, 0x20F4	; 0x8020f4 <temp+0x2>
    1d9c:	90 91 f5 20 	lds	r25, 0x20F5	; 0x8020f5 <temp+0x3>
    1da0:	0e 94 9b 17 	call	0x2f36	; 0x2f36 <__subsf3>
    1da4:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1da8:	7f 93       	push	r23
    1daa:	6f 93       	push	r22
    1dac:	60 91 f6 20 	lds	r22, 0x20F6	; 0x8020f6 <press>
    1db0:	70 91 f7 20 	lds	r23, 0x20F7	; 0x8020f7 <press+0x1>
    1db4:	80 91 f8 20 	lds	r24, 0x20F8	; 0x8020f8 <press+0x2>
    1db8:	90 91 f9 20 	lds	r25, 0x20F9	; 0x8020f9 <press+0x3>
    1dbc:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1dc0:	9f 93       	push	r25
    1dc2:	8f 93       	push	r24
    1dc4:	7f 93       	push	r23
    1dc6:	6f 93       	push	r22
    1dc8:	60 91 ee 20 	lds	r22, 0x20EE	; 0x8020ee <alt>
    1dcc:	70 91 ef 20 	lds	r23, 0x20EF	; 0x8020ef <alt+0x1>
    1dd0:	80 91 f0 20 	lds	r24, 0x20F0	; 0x8020f0 <alt+0x2>
    1dd4:	90 91 f1 20 	lds	r25, 0x20F1	; 0x8020f1 <alt+0x3>
    1dd8:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    1ddc:	7f 93       	push	r23
    1dde:	6f 93       	push	r22
    1de0:	df 93       	push	r29
    1de2:	cf 93       	push	r28
    1de4:	80 91 ff 20 	lds	r24, 0x20FF	; 0x8020ff <timer+0x1>
    1de8:	8f 93       	push	r24
    1dea:	80 91 fe 20 	lds	r24, 0x20FE	; 0x8020fe <timer>
    1dee:	8f 93       	push	r24
    1df0:	80 91 18 20 	lds	r24, 0x2018	; 0x802018 <format+0x1>
    1df4:	8f 93       	push	r24
    1df6:	80 91 17 20 	lds	r24, 0x2017	; 0x802017 <format>
    1dfa:	8f 93       	push	r24
    1dfc:	ca e2       	ldi	r28, 0x2A	; 42
    1dfe:	d1 e2       	ldi	r29, 0x21	; 33
    1e00:	df 93       	push	r29
    1e02:	cf 93       	push	r28
    1e04:	0e 94 94 1d 	call	0x3b28	; 0x3b28 <sprintf>
    1e08:	8d b7       	in	r24, 0x3d	; 61
    1e0a:	9e b7       	in	r25, 0x3e	; 62
    1e0c:	c4 96       	adiw	r24, 0x34	; 52
    1e0e:	8d bf       	out	0x3d, r24	; 61
    1e10:	9e bf       	out	0x3e, r25	; 62
    1e12:	df 93       	push	r29
    1e14:	cf 93       	push	r28
    1e16:	0e 94 51 1d 	call	0x3aa2	; 0x3aa2 <printf>
    1e1a:	0f 90       	pop	r0
    1e1c:	0f 90       	pop	r0
    1e1e:	df 91       	pop	r29
    1e20:	cf 91       	pop	r28
    1e22:	1f 91       	pop	r17
    1e24:	0f 91       	pop	r16
    1e26:	ff 90       	pop	r15
    1e28:	ef 90       	pop	r14
    1e2a:	df 90       	pop	r13
    1e2c:	cf 90       	pop	r12
    1e2e:	bf 90       	pop	r11
    1e30:	af 90       	pop	r10
    1e32:	9f 90       	pop	r9
    1e34:	8f 90       	pop	r8
    1e36:	7f 90       	pop	r7
    1e38:	6f 90       	pop	r6
    1e3a:	5f 90       	pop	r5
    1e3c:	4f 90       	pop	r4
    1e3e:	08 95       	ret

00001e40 <eeprom_write_const>:
    1e40:	5f 92       	push	r5
    1e42:	6f 92       	push	r6
    1e44:	7f 92       	push	r7
    1e46:	8f 92       	push	r8
    1e48:	9f 92       	push	r9
    1e4a:	af 92       	push	r10
    1e4c:	bf 92       	push	r11
    1e4e:	cf 92       	push	r12
    1e50:	df 92       	push	r13
    1e52:	ef 92       	push	r14
    1e54:	ff 92       	push	r15
    1e56:	0f 93       	push	r16
    1e58:	1f 93       	push	r17
    1e5a:	cf 93       	push	r28
    1e5c:	df 93       	push	r29
    1e5e:	cd b7       	in	r28, 0x3d	; 61
    1e60:	de b7       	in	r29, 0x3e	; 62
    1e62:	a0 97       	sbiw	r28, 0x20	; 32
    1e64:	cd bf       	out	0x3d, r28	; 61
    1e66:	de bf       	out	0x3e, r29	; 62
    1e68:	60 91 2d 20 	lds	r22, 0x202D	; 0x80202d <ground_p>
    1e6c:	70 91 2e 20 	lds	r23, 0x202E	; 0x80202e <ground_p+0x1>
    1e70:	80 91 2f 20 	lds	r24, 0x202F	; 0x80202f <ground_p+0x2>
    1e74:	90 91 30 20 	lds	r25, 0x2030	; 0x802030 <ground_p+0x3>
    1e78:	0e 94 ea 18 	call	0x31d4	; 0x31d4 <__fixunssfdi>
    1e7c:	12 2f       	mov	r17, r18
    1e7e:	63 2e       	mov	r6, r19
    1e80:	74 2e       	mov	r7, r20
    1e82:	85 2e       	mov	r8, r21
    1e84:	96 2e       	mov	r9, r22
    1e86:	a7 2e       	mov	r10, r23
    1e88:	b8 2e       	mov	r11, r24
    1e8a:	c9 2e       	mov	r12, r25
    1e8c:	60 91 29 20 	lds	r22, 0x2029	; 0x802029 <ground_t>
    1e90:	70 91 2a 20 	lds	r23, 0x202A	; 0x80202a <ground_t+0x1>
    1e94:	80 91 2b 20 	lds	r24, 0x202B	; 0x80202b <ground_t+0x2>
    1e98:	90 91 2c 20 	lds	r25, 0x202C	; 0x80202c <ground_t+0x3>
    1e9c:	0e 94 ea 18 	call	0x31d4	; 0x31d4 <__fixunssfdi>
    1ea0:	e2 2f       	mov	r30, r18
    1ea2:	53 2e       	mov	r5, r19
    1ea4:	d4 2e       	mov	r13, r20
    1ea6:	e5 2e       	mov	r14, r21
    1ea8:	f6 2e       	mov	r15, r22
    1eaa:	b7 2f       	mov	r27, r23
    1eac:	a8 2f       	mov	r26, r24
    1eae:	f9 2f       	mov	r31, r25
    1eb0:	19 83       	std	Y+1, r17	; 0x01
    1eb2:	21 2f       	mov	r18, r17
    1eb4:	36 2d       	mov	r19, r6
    1eb6:	47 2d       	mov	r20, r7
    1eb8:	58 2d       	mov	r21, r8
    1eba:	69 2d       	mov	r22, r9
    1ebc:	7a 2d       	mov	r23, r10
    1ebe:	8b 2d       	mov	r24, r11
    1ec0:	9c 2d       	mov	r25, r12
    1ec2:	08 e0       	ldi	r16, 0x08	; 8
    1ec4:	0e 94 dc 1c 	call	0x39b8	; 0x39b8 <__lshrdi3>
    1ec8:	2a 83       	std	Y+2, r18	; 0x02
    1eca:	21 2f       	mov	r18, r17
    1ecc:	36 2d       	mov	r19, r6
    1ece:	47 2d       	mov	r20, r7
    1ed0:	58 2d       	mov	r21, r8
    1ed2:	69 2d       	mov	r22, r9
    1ed4:	7a 2d       	mov	r23, r10
    1ed6:	8b 2d       	mov	r24, r11
    1ed8:	9c 2d       	mov	r25, r12
    1eda:	00 e1       	ldi	r16, 0x10	; 16
    1edc:	0e 94 dc 1c 	call	0x39b8	; 0x39b8 <__lshrdi3>
    1ee0:	2b 83       	std	Y+3, r18	; 0x03
    1ee2:	21 2f       	mov	r18, r17
    1ee4:	36 2d       	mov	r19, r6
    1ee6:	47 2d       	mov	r20, r7
    1ee8:	58 2d       	mov	r21, r8
    1eea:	69 2d       	mov	r22, r9
    1eec:	7a 2d       	mov	r23, r10
    1eee:	8b 2d       	mov	r24, r11
    1ef0:	9c 2d       	mov	r25, r12
    1ef2:	08 e1       	ldi	r16, 0x18	; 24
    1ef4:	0e 94 dc 1c 	call	0x39b8	; 0x39b8 <__lshrdi3>
    1ef8:	2c 83       	std	Y+4, r18	; 0x04
    1efa:	21 2f       	mov	r18, r17
    1efc:	36 2d       	mov	r19, r6
    1efe:	47 2d       	mov	r20, r7
    1f00:	58 2d       	mov	r21, r8
    1f02:	69 2d       	mov	r22, r9
    1f04:	7a 2d       	mov	r23, r10
    1f06:	8b 2d       	mov	r24, r11
    1f08:	9c 2d       	mov	r25, r12
    1f0a:	00 e2       	ldi	r16, 0x20	; 32
    1f0c:	0e 94 dc 1c 	call	0x39b8	; 0x39b8 <__lshrdi3>
    1f10:	2d 83       	std	Y+5, r18	; 0x05
    1f12:	21 2f       	mov	r18, r17
    1f14:	36 2d       	mov	r19, r6
    1f16:	47 2d       	mov	r20, r7
    1f18:	58 2d       	mov	r21, r8
    1f1a:	69 2d       	mov	r22, r9
    1f1c:	7a 2d       	mov	r23, r10
    1f1e:	8b 2d       	mov	r24, r11
    1f20:	9c 2d       	mov	r25, r12
    1f22:	08 e2       	ldi	r16, 0x28	; 40
    1f24:	0e 94 dc 1c 	call	0x39b8	; 0x39b8 <__lshrdi3>
    1f28:	2e 83       	std	Y+6, r18	; 0x06
    1f2a:	21 2f       	mov	r18, r17
    1f2c:	36 2d       	mov	r19, r6
    1f2e:	47 2d       	mov	r20, r7
    1f30:	58 2d       	mov	r21, r8
    1f32:	69 2d       	mov	r22, r9
    1f34:	7a 2d       	mov	r23, r10
    1f36:	8b 2d       	mov	r24, r11
    1f38:	9c 2d       	mov	r25, r12
    1f3a:	00 e3       	ldi	r16, 0x30	; 48
    1f3c:	0e 94 dc 1c 	call	0x39b8	; 0x39b8 <__lshrdi3>
    1f40:	2f 83       	std	Y+7, r18	; 0x07
    1f42:	21 2f       	mov	r18, r17
    1f44:	36 2d       	mov	r19, r6
    1f46:	47 2d       	mov	r20, r7
    1f48:	58 2d       	mov	r21, r8
    1f4a:	69 2d       	mov	r22, r9
    1f4c:	7a 2d       	mov	r23, r10
    1f4e:	8b 2d       	mov	r24, r11
    1f50:	9c 2d       	mov	r25, r12
    1f52:	08 e3       	ldi	r16, 0x38	; 56
    1f54:	0e 94 dc 1c 	call	0x39b8	; 0x39b8 <__lshrdi3>
    1f58:	28 87       	std	Y+8, r18	; 0x08
    1f5a:	e9 87       	std	Y+9, r30	; 0x09
    1f5c:	2e 2f       	mov	r18, r30
    1f5e:	35 2d       	mov	r19, r5
    1f60:	4d 2d       	mov	r20, r13
    1f62:	5e 2d       	mov	r21, r14
    1f64:	6f 2d       	mov	r22, r15
    1f66:	7b 2f       	mov	r23, r27
    1f68:	8a 2f       	mov	r24, r26
    1f6a:	9f 2f       	mov	r25, r31
    1f6c:	08 e0       	ldi	r16, 0x08	; 8
    1f6e:	0e 94 dc 1c 	call	0x39b8	; 0x39b8 <__lshrdi3>
    1f72:	2a 87       	std	Y+10, r18	; 0x0a
    1f74:	2e 2f       	mov	r18, r30
    1f76:	35 2d       	mov	r19, r5
    1f78:	4d 2d       	mov	r20, r13
    1f7a:	5e 2d       	mov	r21, r14
    1f7c:	6f 2d       	mov	r22, r15
    1f7e:	7b 2f       	mov	r23, r27
    1f80:	8a 2f       	mov	r24, r26
    1f82:	9f 2f       	mov	r25, r31
    1f84:	00 e1       	ldi	r16, 0x10	; 16
    1f86:	0e 94 dc 1c 	call	0x39b8	; 0x39b8 <__lshrdi3>
    1f8a:	2b 87       	std	Y+11, r18	; 0x0b
    1f8c:	2e 2f       	mov	r18, r30
    1f8e:	35 2d       	mov	r19, r5
    1f90:	4d 2d       	mov	r20, r13
    1f92:	5e 2d       	mov	r21, r14
    1f94:	6f 2d       	mov	r22, r15
    1f96:	7b 2f       	mov	r23, r27
    1f98:	8a 2f       	mov	r24, r26
    1f9a:	9f 2f       	mov	r25, r31
    1f9c:	08 e1       	ldi	r16, 0x18	; 24
    1f9e:	0e 94 dc 1c 	call	0x39b8	; 0x39b8 <__lshrdi3>
    1fa2:	2c 87       	std	Y+12, r18	; 0x0c
    1fa4:	2e 2f       	mov	r18, r30
    1fa6:	35 2d       	mov	r19, r5
    1fa8:	4d 2d       	mov	r20, r13
    1faa:	5e 2d       	mov	r21, r14
    1fac:	6f 2d       	mov	r22, r15
    1fae:	7b 2f       	mov	r23, r27
    1fb0:	8a 2f       	mov	r24, r26
    1fb2:	9f 2f       	mov	r25, r31
    1fb4:	00 e2       	ldi	r16, 0x20	; 32
    1fb6:	0e 94 dc 1c 	call	0x39b8	; 0x39b8 <__lshrdi3>
    1fba:	2d 87       	std	Y+13, r18	; 0x0d
    1fbc:	2e 2f       	mov	r18, r30
    1fbe:	35 2d       	mov	r19, r5
    1fc0:	4d 2d       	mov	r20, r13
    1fc2:	5e 2d       	mov	r21, r14
    1fc4:	6f 2d       	mov	r22, r15
    1fc6:	7b 2f       	mov	r23, r27
    1fc8:	8a 2f       	mov	r24, r26
    1fca:	9f 2f       	mov	r25, r31
    1fcc:	08 e2       	ldi	r16, 0x28	; 40
    1fce:	0e 94 dc 1c 	call	0x39b8	; 0x39b8 <__lshrdi3>
    1fd2:	2e 87       	std	Y+14, r18	; 0x0e
    1fd4:	2e 2f       	mov	r18, r30
    1fd6:	35 2d       	mov	r19, r5
    1fd8:	4d 2d       	mov	r20, r13
    1fda:	5e 2d       	mov	r21, r14
    1fdc:	6f 2d       	mov	r22, r15
    1fde:	7b 2f       	mov	r23, r27
    1fe0:	8a 2f       	mov	r24, r26
    1fe2:	9f 2f       	mov	r25, r31
    1fe4:	00 e3       	ldi	r16, 0x30	; 48
    1fe6:	0e 94 dc 1c 	call	0x39b8	; 0x39b8 <__lshrdi3>
    1fea:	2f 87       	std	Y+15, r18	; 0x0f
    1fec:	2e 2f       	mov	r18, r30
    1fee:	35 2d       	mov	r19, r5
    1ff0:	4d 2d       	mov	r20, r13
    1ff2:	5e 2d       	mov	r21, r14
    1ff4:	6f 2d       	mov	r22, r15
    1ff6:	7b 2f       	mov	r23, r27
    1ff8:	8a 2f       	mov	r24, r26
    1ffa:	9f 2f       	mov	r25, r31
    1ffc:	08 e3       	ldi	r16, 0x38	; 56
    1ffe:	0e 94 dc 1c 	call	0x39b8	; 0x39b8 <__lshrdi3>
    2002:	28 8b       	std	Y+16, r18	; 0x10
    2004:	80 e1       	ldi	r24, 0x10	; 16
    2006:	e1 e3       	ldi	r30, 0x31	; 49
    2008:	f0 e2       	ldi	r31, 0x20	; 32
    200a:	de 01       	movw	r26, r28
    200c:	51 96       	adiw	r26, 0x11	; 17
    200e:	01 90       	ld	r0, Z+
    2010:	0d 92       	st	X+, r0
    2012:	8a 95       	dec	r24
    2014:	e1 f7       	brne	.-8      	; 0x200e <eeprom_write_const+0x1ce>
    2016:	83 e3       	ldi	r24, 0x33	; 51
    2018:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <__TEXT_REGION_LENGTH__+0x7001ca>
    201c:	fe 01       	movw	r30, r28
    201e:	71 96       	adiw	r30, 0x11	; 17
    2020:	ce 01       	movw	r24, r28
    2022:	01 96       	adiw	r24, 0x01	; 1
    2024:	ae 01       	movw	r20, r28
    2026:	4f 5d       	subi	r20, 0xDF	; 223
    2028:	5f 4f       	sbci	r21, 0xFF	; 255
    202a:	60 ec       	ldi	r22, 0xC0	; 192
    202c:	71 e0       	ldi	r23, 0x01	; 1
    202e:	21 91       	ld	r18, Z+
    2030:	db 01       	movw	r26, r22
    2032:	2c 93       	st	X, r18
    2034:	dc 01       	movw	r26, r24
    2036:	2d 91       	ld	r18, X+
    2038:	cd 01       	movw	r24, r26
    203a:	db 01       	movw	r26, r22
    203c:	14 96       	adiw	r26, 0x04	; 4
    203e:	2c 93       	st	X, r18
    2040:	e4 17       	cp	r30, r20
    2042:	f5 07       	cpc	r31, r21
    2044:	a1 f7       	brne	.-24     	; 0x202e <eeprom_write_const+0x1ee>
    2046:	e0 ec       	ldi	r30, 0xC0	; 192
    2048:	f1 e0       	ldi	r31, 0x01	; 1
    204a:	85 e3       	ldi	r24, 0x35	; 53
    204c:	82 87       	std	Z+10, r24	; 0x0a
    204e:	10 82       	st	Z, r1
    2050:	80 e1       	ldi	r24, 0x10	; 16
    2052:	81 83       	std	Z+1, r24	; 0x01
    2054:	88 ed       	ldi	r24, 0xD8	; 216
    2056:	84 bf       	out	0x34, r24	; 52
    2058:	81 e0       	ldi	r24, 0x01	; 1
    205a:	83 87       	std	Z+11, r24	; 0x0b
    205c:	87 85       	ldd	r24, Z+15	; 0x0f
    205e:	88 23       	and	r24, r24
    2060:	ec f3       	brlt	.-6      	; 0x205c <eeprom_write_const+0x21c>
    2062:	a0 96       	adiw	r28, 0x20	; 32
    2064:	cd bf       	out	0x3d, r28	; 61
    2066:	de bf       	out	0x3e, r29	; 62
    2068:	df 91       	pop	r29
    206a:	cf 91       	pop	r28
    206c:	1f 91       	pop	r17
    206e:	0f 91       	pop	r16
    2070:	ff 90       	pop	r15
    2072:	ef 90       	pop	r14
    2074:	df 90       	pop	r13
    2076:	cf 90       	pop	r12
    2078:	bf 90       	pop	r11
    207a:	af 90       	pop	r10
    207c:	9f 90       	pop	r9
    207e:	8f 90       	pop	r8
    2080:	7f 90       	pop	r7
    2082:	6f 90       	pop	r6
    2084:	5f 90       	pop	r5
    2086:	08 95       	ret

00002088 <eeprom_write>:
    2088:	cf 93       	push	r28
    208a:	df 93       	push	r29
    208c:	cd b7       	in	r28, 0x3d	; 61
    208e:	de b7       	in	r29, 0x3e	; 62
    2090:	2c 97       	sbiw	r28, 0x0c	; 12
    2092:	cd bf       	out	0x3d, r28	; 61
    2094:	de bf       	out	0x3e, r29	; 62
    2096:	60 91 ee 20 	lds	r22, 0x20EE	; 0x8020ee <alt>
    209a:	70 91 ef 20 	lds	r23, 0x20EF	; 0x8020ef <alt+0x1>
    209e:	80 91 f0 20 	lds	r24, 0x20F0	; 0x8020f0 <alt+0x2>
    20a2:	90 91 f1 20 	lds	r25, 0x20F1	; 0x8020f1 <alt+0x3>
    20a6:	0e 94 1f 19 	call	0x323e	; 0x323e <__fixsfsi>
    20aa:	79 83       	std	Y+1, r23	; 0x01
    20ac:	6a 83       	std	Y+2, r22	; 0x02
    20ae:	80 91 fa 20 	lds	r24, 0x20FA	; 0x8020fa <packets>
    20b2:	90 91 fb 20 	lds	r25, 0x20FB	; 0x8020fb <packets+0x1>
    20b6:	9b 83       	std	Y+3, r25	; 0x03
    20b8:	8c 83       	std	Y+4, r24	; 0x04
    20ba:	80 91 fe 20 	lds	r24, 0x20FE	; 0x8020fe <timer>
    20be:	90 91 ff 20 	lds	r25, 0x20FF	; 0x8020ff <timer+0x1>
    20c2:	9d 83       	std	Y+5, r25	; 0x05
    20c4:	8e 83       	std	Y+6, r24	; 0x06
    20c6:	86 e0       	ldi	r24, 0x06	; 6
    20c8:	e1 e4       	ldi	r30, 0x41	; 65
    20ca:	f0 e2       	ldi	r31, 0x20	; 32
    20cc:	de 01       	movw	r26, r28
    20ce:	17 96       	adiw	r26, 0x07	; 7
    20d0:	01 90       	ld	r0, Z+
    20d2:	0d 92       	st	X+, r0
    20d4:	8a 95       	dec	r24
    20d6:	e1 f7       	brne	.-8      	; 0x20d0 <eeprom_write+0x48>
    20d8:	83 e3       	ldi	r24, 0x33	; 51
    20da:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <__TEXT_REGION_LENGTH__+0x7001ca>
    20de:	fe 01       	movw	r30, r28
    20e0:	37 96       	adiw	r30, 0x07	; 7
    20e2:	ce 01       	movw	r24, r28
    20e4:	01 96       	adiw	r24, 0x01	; 1
    20e6:	ae 01       	movw	r20, r28
    20e8:	43 5f       	subi	r20, 0xF3	; 243
    20ea:	5f 4f       	sbci	r21, 0xFF	; 255
    20ec:	60 ec       	ldi	r22, 0xC0	; 192
    20ee:	71 e0       	ldi	r23, 0x01	; 1
    20f0:	21 91       	ld	r18, Z+
    20f2:	db 01       	movw	r26, r22
    20f4:	2c 93       	st	X, r18
    20f6:	dc 01       	movw	r26, r24
    20f8:	2d 91       	ld	r18, X+
    20fa:	cd 01       	movw	r24, r26
    20fc:	db 01       	movw	r26, r22
    20fe:	14 96       	adiw	r26, 0x04	; 4
    2100:	2c 93       	st	X, r18
    2102:	e4 17       	cp	r30, r20
    2104:	f5 07       	cpc	r31, r21
    2106:	a1 f7       	brne	.-24     	; 0x20f0 <eeprom_write+0x68>
    2108:	e0 ec       	ldi	r30, 0xC0	; 192
    210a:	f1 e0       	ldi	r31, 0x01	; 1
    210c:	85 e3       	ldi	r24, 0x35	; 53
    210e:	82 87       	std	Z+10, r24	; 0x0a
    2110:	10 82       	st	Z, r1
    2112:	80 e1       	ldi	r24, 0x10	; 16
    2114:	81 83       	std	Z+1, r24	; 0x01
    2116:	88 ed       	ldi	r24, 0xD8	; 216
    2118:	84 bf       	out	0x34, r24	; 52
    211a:	81 e0       	ldi	r24, 0x01	; 1
    211c:	83 87       	std	Z+11, r24	; 0x0b
    211e:	87 85       	ldd	r24, Z+15	; 0x0f
    2120:	88 23       	and	r24, r24
    2122:	ec f3       	brlt	.-6      	; 0x211e <eeprom_write+0x96>
    2124:	2c 96       	adiw	r28, 0x0c	; 12
    2126:	cd bf       	out	0x3d, r28	; 61
    2128:	de bf       	out	0x3e, r29	; 62
    212a:	df 91       	pop	r29
    212c:	cf 91       	pop	r28
    212e:	08 95       	ret

00002130 <eeprom_read>:
    2130:	cf 93       	push	r28
    2132:	df 93       	push	r29
    2134:	c0 ec       	ldi	r28, 0xC0	; 192
    2136:	d1 e0       	ldi	r29, 0x01	; 1
    2138:	26 e0       	ldi	r18, 0x06	; 6
    213a:	2a 87       	std	Y+10, r18	; 0x0a
    213c:	88 83       	st	Y, r24
    213e:	99 83       	std	Y+1, r25	; 0x01
    2140:	88 ed       	ldi	r24, 0xD8	; 216
    2142:	84 bf       	out	0x34, r24	; 52
    2144:	81 e0       	ldi	r24, 0x01	; 1
    2146:	8b 87       	std	Y+11, r24	; 0x0b
    2148:	66 ed       	ldi	r22, 0xD6	; 214
    214a:	74 e1       	ldi	r23, 0x14	; 20
    214c:	80 e0       	ldi	r24, 0x00	; 0
    214e:	90 e0       	ldi	r25, 0x00	; 0
    2150:	0e 94 3a 08 	call	0x1074	; 0x1074 <__portable_avr_delay_cycles>
    2154:	8c 81       	ldd	r24, Y+4	; 0x04
    2156:	df 91       	pop	r29
    2158:	cf 91       	pop	r28
    215a:	08 95       	ret

0000215c <system_init>:
    215c:	0e 94 e9 07 	call	0xfd2	; 0xfd2 <sysclk_init>
    2160:	6b ea       	ldi	r22, 0xAB	; 171
    2162:	79 e2       	ldi	r23, 0x29	; 41
    2164:	80 e0       	ldi	r24, 0x00	; 0
    2166:	90 e0       	ldi	r25, 0x00	; 0
    2168:	0e 94 3a 08 	call	0x1074	; 0x1074 <__portable_avr_delay_cycles>
    216c:	78 94       	sei
    216e:	8c eb       	ldi	r24, 0xBC	; 188
    2170:	80 93 40 06 	sts	0x0640, r24	; 0x800640 <__TEXT_REGION_LENGTH__+0x700640>
    2174:	87 e0       	ldi	r24, 0x07	; 7
    2176:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7000a2>
    217a:	87 e0       	ldi	r24, 0x07	; 7
    217c:	90 e1       	ldi	r25, 0x10	; 16
    217e:	d8 df       	rcall	.-80     	; 0x2130 <eeprom_read>
    2180:	0e 94 9d 06 	call	0xd3a	; 0xd3a <data_terminal_init>
    2184:	6b ea       	ldi	r22, 0xAB	; 171
    2186:	70 eb       	ldi	r23, 0xB0	; 176
    2188:	88 e2       	ldi	r24, 0x28	; 40
    218a:	90 e0       	ldi	r25, 0x00	; 0
    218c:	0e 94 3a 08 	call	0x1074	; 0x1074 <__portable_avr_delay_cycles>
    2190:	0e 94 4f 08 	call	0x109e	; 0x109e <xbee_init>
    2194:	0e 94 45 08 	call	0x108a	; 0x108a <gps_init>
    2198:	9d db       	rcall	.-2246   	; 0x18d4 <release_servo_init>
    219a:	41 dc       	rcall	.-1918   	; 0x1a1e <clock_init>
    219c:	4b db       	rcall	.-2410   	; 0x1834 <state_check>
    219e:	80 e8       	ldi	r24, 0x80	; 128
    21a0:	96 ee       	ldi	r25, 0xE6	; 230
    21a2:	a5 ec       	ldi	r26, 0xC5	; 197
    21a4:	b7 e4       	ldi	r27, 0x47	; 71
    21a6:	80 93 2d 20 	sts	0x202D, r24	; 0x80202d <ground_p>
    21aa:	90 93 2e 20 	sts	0x202E, r25	; 0x80202e <ground_p+0x1>
    21ae:	a0 93 2f 20 	sts	0x202F, r26	; 0x80202f <ground_p+0x2>
    21b2:	b0 93 30 20 	sts	0x2030, r27	; 0x802030 <ground_p+0x3>
    21b6:	83 e3       	ldi	r24, 0x33	; 51
    21b8:	93 e1       	ldi	r25, 0x13	; 19
    21ba:	a0 e9       	ldi	r26, 0x90	; 144
    21bc:	b3 e4       	ldi	r27, 0x43	; 67
    21be:	80 93 29 20 	sts	0x2029, r24	; 0x802029 <ground_t>
    21c2:	90 93 2a 20 	sts	0x202A, r25	; 0x80202a <ground_t+0x1>
    21c6:	a0 93 2b 20 	sts	0x202B, r26	; 0x80202b <ground_t+0x2>
    21ca:	b0 93 2c 20 	sts	0x202C, r27	; 0x80202c <ground_t+0x3>
    21ce:	60 e8       	ldi	r22, 0x80	; 128
    21d0:	76 ee       	ldi	r23, 0xE6	; 230
    21d2:	85 ec       	ldi	r24, 0xC5	; 197
    21d4:	97 e4       	ldi	r25, 0x47	; 71
    21d6:	0e 94 61 08 	call	0x10c2	; 0x10c2 <get_altitude>
    21da:	60 93 05 21 	sts	0x2105, r22	; 0x802105 <ground_a>
    21de:	70 93 06 21 	sts	0x2106, r23	; 0x802106 <ground_a+0x1>
    21e2:	80 93 07 21 	sts	0x2107, r24	; 0x802107 <ground_a+0x2>
    21e6:	90 93 08 21 	sts	0x2108, r25	; 0x802108 <ground_a+0x3>
    21ea:	2a ce       	rjmp	.-940    	; 0x1e40 <eeprom_write_const>
    21ec:	08 95       	ret

000021ee <main>:
    21ee:	cf 93       	push	r28
    21f0:	df 93       	push	r29
    21f2:	cd b7       	in	r28, 0x3d	; 61
    21f4:	de b7       	in	r29, 0x3e	; 62
    21f6:	c8 56       	subi	r28, 0x68	; 104
    21f8:	d1 09       	sbc	r29, r1
    21fa:	cd bf       	out	0x3d, r28	; 61
    21fc:	de bf       	out	0x3e, r29	; 62
    21fe:	ae df       	rcall	.-164    	; 0x215c <system_init>
    2200:	14 e1       	ldi	r17, 0x14	; 20
    2202:	be 01       	movw	r22, r28
    2204:	6f 5f       	subi	r22, 0xFF	; 255
    2206:	7f 4f       	sbci	r23, 0xFF	; 255
    2208:	fb 01       	movw	r30, r22
    220a:	81 2f       	mov	r24, r17
    220c:	11 92       	st	Z+, r1
    220e:	8a 95       	dec	r24
    2210:	e9 f7       	brne	.-6      	; 0x220c <main+0x1e>
    2212:	4a e0       	ldi	r20, 0x0A	; 10
    2214:	50 e0       	ldi	r21, 0x00	; 0
    2216:	ce 01       	movw	r24, r28
    2218:	45 96       	adiw	r24, 0x15	; 21
    221a:	0e 94 22 07 	call	0xe44	; 0xe44 <rb16_init>
    221e:	be 01       	movw	r22, r28
    2220:	63 5e       	subi	r22, 0xE3	; 227
    2222:	7f 4f       	sbci	r23, 0xFF	; 255
    2224:	88 e2       	ldi	r24, 0x28	; 40
    2226:	fb 01       	movw	r30, r22
    2228:	11 92       	st	Z+, r1
    222a:	8a 95       	dec	r24
    222c:	e9 f7       	brne	.-6      	; 0x2228 <main+0x3a>
    222e:	4a e0       	ldi	r20, 0x0A	; 10
    2230:	50 e0       	ldi	r21, 0x00	; 0
    2232:	ce 01       	movw	r24, r28
    2234:	8b 5b       	subi	r24, 0xBB	; 187
    2236:	9f 4f       	sbci	r25, 0xFF	; 255
    2238:	0e 94 aa 07 	call	0xf54	; 0xf54 <rb32_init>
    223c:	be 01       	movw	r22, r28
    223e:	63 5b       	subi	r22, 0xB3	; 179
    2240:	7f 4f       	sbci	r23, 0xFF	; 255
    2242:	fb 01       	movw	r30, r22
    2244:	11 92       	st	Z+, r1
    2246:	1a 95       	dec	r17
    2248:	e9 f7       	brne	.-6      	; 0x2244 <main+0x56>
    224a:	4a e0       	ldi	r20, 0x0A	; 10
    224c:	50 e0       	ldi	r21, 0x00	; 0
    224e:	ce 01       	movw	r24, r28
    2250:	8f 59       	subi	r24, 0x9F	; 159
    2252:	9f 4f       	sbci	r25, 0xFF	; 255
    2254:	0e 94 22 07 	call	0xe44	; 0xe44 <rb16_init>
    2258:	00 e0       	ldi	r16, 0x00	; 0
    225a:	10 e0       	ldi	r17, 0x00	; 0
    225c:	be 01       	movw	r22, r28
    225e:	6b 5b       	subi	r22, 0xBB	; 187
    2260:	7f 4f       	sbci	r23, 0xFF	; 255
    2262:	ce 01       	movw	r24, r28
    2264:	45 96       	adiw	r24, 0x15	; 21
    2266:	44 d9       	rcall	.-3448   	; 0x14f0 <data_collect>
    2268:	e5 da       	rcall	.-2614   	; 0x1834 <state_check>
    226a:	80 91 0b 21 	lds	r24, 0x210B	; 0x80210b <state>
    226e:	81 30       	cpi	r24, 0x01	; 1
    2270:	41 f0       	breq	.+16     	; 0x2282 <main+0x94>
    2272:	08 f4       	brcc	.+2      	; 0x2276 <main+0x88>
    2274:	48 c0       	rjmp	.+144    	; 0x2306 <main+0x118>
    2276:	82 30       	cpi	r24, 0x02	; 2
    2278:	d1 f0       	breq	.+52     	; 0x22ae <main+0xc0>
    227a:	83 30       	cpi	r24, 0x03	; 3
    227c:	09 f4       	brne	.+2      	; 0x2280 <main+0x92>
    227e:	3d c0       	rjmp	.+122    	; 0x22fa <main+0x10c>
    2280:	40 c0       	rjmp	.+128    	; 0x2302 <main+0x114>
    2282:	20 e0       	ldi	r18, 0x00	; 0
    2284:	30 e0       	ldi	r19, 0x00	; 0
    2286:	46 e1       	ldi	r20, 0x16	; 22
    2288:	54 e4       	ldi	r21, 0x44	; 68
    228a:	60 91 ee 20 	lds	r22, 0x20EE	; 0x8020ee <alt>
    228e:	70 91 ef 20 	lds	r23, 0x20EF	; 0x8020ef <alt+0x1>
    2292:	80 91 f0 20 	lds	r24, 0x20F0	; 0x8020f0 <alt+0x2>
    2296:	90 91 f1 20 	lds	r25, 0x20F1	; 0x8020f1 <alt+0x3>
    229a:	0e 94 63 1a 	call	0x34c6	; 0x34c6 <__gesf2>
    229e:	18 16       	cp	r1, r24
    22a0:	94 f5       	brge	.+100    	; 0x2306 <main+0x118>
    22a2:	11 11       	cpse	r17, r1
    22a4:	30 c0       	rjmp	.+96     	; 0x2306 <main+0x118>
    22a6:	0e 94 4d 06 	call	0xc9a	; 0xc9a <cam_switch>
    22aa:	11 e0       	ldi	r17, 0x01	; 1
    22ac:	2c c0       	rjmp	.+88     	; 0x2306 <main+0x118>
    22ae:	11 11       	cpse	r17, r1
    22b0:	03 c0       	rjmp	.+6      	; 0x22b8 <main+0xca>
    22b2:	0e 94 4d 06 	call	0xc9a	; 0xc9a <cam_switch>
    22b6:	11 e0       	ldi	r17, 0x01	; 1
    22b8:	20 e0       	ldi	r18, 0x00	; 0
    22ba:	30 e0       	ldi	r19, 0x00	; 0
    22bc:	41 ee       	ldi	r20, 0xE1	; 225
    22be:	53 e4       	ldi	r21, 0x43	; 67
    22c0:	60 91 ee 20 	lds	r22, 0x20EE	; 0x8020ee <alt>
    22c4:	70 91 ef 20 	lds	r23, 0x20EF	; 0x8020ef <alt+0x1>
    22c8:	80 91 f0 20 	lds	r24, 0x20F0	; 0x8020f0 <alt+0x2>
    22cc:	90 91 f1 20 	lds	r25, 0x20F1	; 0x8020f1 <alt+0x3>
    22d0:	32 d6       	rcall	.+3172   	; 0x2f36 <__subsf3>
    22d2:	b5 d7       	rcall	.+3946   	; 0x323e <__fixsfsi>
    22d4:	67 5f       	subi	r22, 0xF7	; 247
    22d6:	7f 4f       	sbci	r23, 0xFF	; 255
    22d8:	63 31       	cpi	r22, 0x13	; 19
    22da:	71 05       	cpc	r23, r1
    22dc:	28 f4       	brcc	.+10     	; 0x22e8 <main+0xfa>
    22de:	0e 94 57 08 	call	0x10ae	; 0x10ae <release>
    22e2:	0e 94 4c 06 	call	0xc98	; 0xc98 <hall_sensor_init>
    22e6:	0f c0       	rjmp	.+30     	; 0x2306 <main+0x118>
    22e8:	80 91 0a 21 	lds	r24, 0x210A	; 0x80210a <released>
    22ec:	88 23       	and	r24, r24
    22ee:	59 f0       	breq	.+22     	; 0x2306 <main+0x118>
    22f0:	ce 01       	movw	r24, r28
    22f2:	8f 59       	subi	r24, 0x9F	; 159
    22f4:	9f 4f       	sbci	r25, 0xFF	; 255
    22f6:	06 db       	rcall	.-2548   	; 0x1904 <servo_pid>
    22f8:	06 c0       	rjmp	.+12     	; 0x2306 <main+0x118>
    22fa:	01 11       	cpse	r16, r1
    22fc:	04 c0       	rjmp	.+8      	; 0x2306 <main+0x118>
    22fe:	01 e0       	ldi	r16, 0x01	; 1
    2300:	02 c0       	rjmp	.+4      	; 0x2306 <main+0x118>
    2302:	10 92 0b 21 	sts	0x210B, r1	; 0x80210b <state>
    2306:	80 91 fc 20 	lds	r24, 0x20FC	; 0x8020fc <data_packets>
    230a:	90 91 fd 20 	lds	r25, 0x20FD	; 0x8020fd <data_packets+0x1>
    230e:	01 96       	adiw	r24, 0x01	; 1
    2310:	80 93 fc 20 	sts	0x20FC, r24	; 0x8020fc <data_packets>
    2314:	90 93 fd 20 	sts	0x20FD, r25	; 0x8020fd <data_packets+0x1>
    2318:	60 91 fe 20 	lds	r22, 0x20FE	; 0x8020fe <timer>
    231c:	70 91 ff 20 	lds	r23, 0x20FF	; 0x8020ff <timer+0x1>
    2320:	61 15       	cp	r22, r1
    2322:	71 05       	cpc	r23, r1
    2324:	09 f4       	brne	.+2      	; 0x2328 <main+0x13a>
    2326:	9a cf       	rjmp	.-204    	; 0x225c <main+0x6e>
    2328:	0e 94 65 1c 	call	0x38ca	; 0x38ca <__udivmodhi4>
    232c:	60 93 19 20 	sts	0x2019, r22	; 0x802019 <rate>
    2330:	70 93 1a 20 	sts	0x201A, r23	; 0x80201a <rate+0x1>
    2334:	93 cf       	rjmp	.-218    	; 0x225c <main+0x6e>

00002336 <reset>:
    2336:	10 92 f6 20 	sts	0x20F6, r1	; 0x8020f6 <press>
    233a:	10 92 f7 20 	sts	0x20F7, r1	; 0x8020f7 <press+0x1>
    233e:	10 92 f8 20 	sts	0x20F8, r1	; 0x8020f8 <press+0x2>
    2342:	10 92 f9 20 	sts	0x20F9, r1	; 0x8020f9 <press+0x3>
    2346:	10 92 f2 20 	sts	0x20F2, r1	; 0x8020f2 <temp>
    234a:	10 92 f3 20 	sts	0x20F3, r1	; 0x8020f3 <temp+0x1>
    234e:	10 92 f4 20 	sts	0x20F4, r1	; 0x8020f4 <temp+0x2>
    2352:	10 92 f5 20 	sts	0x20F5, r1	; 0x8020f5 <temp+0x3>
    2356:	10 92 ee 20 	sts	0x20EE, r1	; 0x8020ee <alt>
    235a:	10 92 ef 20 	sts	0x20EF, r1	; 0x8020ef <alt+0x1>
    235e:	10 92 f0 20 	sts	0x20F0, r1	; 0x8020f0 <alt+0x2>
    2362:	10 92 f1 20 	sts	0x20F1, r1	; 0x8020f1 <alt+0x3>
    2366:	10 92 ea 20 	sts	0x20EA, r1	; 0x8020ea <volt>
    236a:	10 92 eb 20 	sts	0x20EB, r1	; 0x8020eb <volt+0x1>
    236e:	10 92 ec 20 	sts	0x20EC, r1	; 0x8020ec <volt+0x2>
    2372:	10 92 ed 20 	sts	0x20ED, r1	; 0x8020ed <volt+0x3>
    2376:	10 92 e6 20 	sts	0x20E6, r1	; 0x8020e6 <velocity>
    237a:	10 92 e7 20 	sts	0x20E7, r1	; 0x8020e7 <velocity+0x1>
    237e:	10 92 e8 20 	sts	0x20E8, r1	; 0x8020e8 <velocity+0x2>
    2382:	10 92 e9 20 	sts	0x20E9, r1	; 0x8020e9 <velocity+0x3>
    2386:	10 92 e2 20 	sts	0x20E2, r1	; 0x8020e2 <gps_t>
    238a:	10 92 e3 20 	sts	0x20E3, r1	; 0x8020e3 <gps_t+0x1>
    238e:	10 92 e4 20 	sts	0x20E4, r1	; 0x8020e4 <gps_t+0x2>
    2392:	10 92 e5 20 	sts	0x20E5, r1	; 0x8020e5 <gps_t+0x3>
    2396:	10 92 de 20 	sts	0x20DE, r1	; 0x8020de <gps_lat>
    239a:	10 92 df 20 	sts	0x20DF, r1	; 0x8020df <gps_lat+0x1>
    239e:	10 92 e0 20 	sts	0x20E0, r1	; 0x8020e0 <gps_lat+0x2>
    23a2:	10 92 e1 20 	sts	0x20E1, r1	; 0x8020e1 <gps_lat+0x3>
    23a6:	10 92 da 20 	sts	0x20DA, r1	; 0x8020da <gps_long>
    23aa:	10 92 db 20 	sts	0x20DB, r1	; 0x8020db <gps_long+0x1>
    23ae:	10 92 dc 20 	sts	0x20DC, r1	; 0x8020dc <gps_long+0x2>
    23b2:	10 92 dd 20 	sts	0x20DD, r1	; 0x8020dd <gps_long+0x3>
    23b6:	10 92 d6 20 	sts	0x20D6, r1	; 0x8020d6 <gps_alt>
    23ba:	10 92 d7 20 	sts	0x20D7, r1	; 0x8020d7 <gps_alt+0x1>
    23be:	10 92 d8 20 	sts	0x20D8, r1	; 0x8020d8 <gps_alt+0x2>
    23c2:	10 92 d9 20 	sts	0x20D9, r1	; 0x8020d9 <gps_alt+0x3>
    23c6:	10 92 d4 20 	sts	0x20D4, r1	; 0x8020d4 <gps_sats>
    23ca:	10 92 d5 20 	sts	0x20D5, r1	; 0x8020d5 <gps_sats+0x1>
    23ce:	10 92 d0 20 	sts	0x20D0, r1	; 0x8020d0 <pitch>
    23d2:	10 92 d1 20 	sts	0x20D1, r1	; 0x8020d1 <pitch+0x1>
    23d6:	10 92 d2 20 	sts	0x20D2, r1	; 0x8020d2 <pitch+0x2>
    23da:	10 92 d3 20 	sts	0x20D3, r1	; 0x8020d3 <pitch+0x3>
    23de:	10 92 cc 20 	sts	0x20CC, r1	; 0x8020cc <roll>
    23e2:	10 92 cd 20 	sts	0x20CD, r1	; 0x8020cd <roll+0x1>
    23e6:	10 92 ce 20 	sts	0x20CE, r1	; 0x8020ce <roll+0x2>
    23ea:	10 92 cf 20 	sts	0x20CF, r1	; 0x8020cf <roll+0x3>
    23ee:	10 92 c8 20 	sts	0x20C8, r1	; 0x8020c8 <rpm>
    23f2:	10 92 c9 20 	sts	0x20C9, r1	; 0x8020c9 <rpm+0x1>
    23f6:	10 92 ca 20 	sts	0x20CA, r1	; 0x8020ca <rpm+0x2>
    23fa:	10 92 cb 20 	sts	0x20CB, r1	; 0x8020cb <rpm+0x3>
    23fe:	10 92 c4 20 	sts	0x20C4, r1	; 0x8020c4 <__data_end>
    2402:	10 92 c5 20 	sts	0x20C5, r1	; 0x8020c5 <__data_end+0x1>
    2406:	10 92 c6 20 	sts	0x20C6, r1	; 0x8020c6 <__data_end+0x2>
    240a:	10 92 c7 20 	sts	0x20C7, r1	; 0x8020c7 <__data_end+0x3>
    240e:	10 92 0b 21 	sts	0x210B, r1	; 0x80210b <state>
    2412:	10 92 0a 21 	sts	0x210A, r1	; 0x80210a <released>
    2416:	a2 de       	rcall	.-700    	; 0x215c <system_init>
    2418:	81 e0       	ldi	r24, 0x01	; 1
    241a:	80 93 09 21 	sts	0x2109, r24	; 0x802109 <reset_received>
    241e:	08 95       	ret

00002420 <__vector_14>:

ISR(TCC0_OVF_vect){
    2420:	1f 92       	push	r1
    2422:	0f 92       	push	r0
    2424:	0f b6       	in	r0, 0x3f	; 63
    2426:	0f 92       	push	r0
    2428:	11 24       	eor	r1, r1
    242a:	08 b6       	in	r0, 0x38	; 56
    242c:	0f 92       	push	r0
    242e:	18 be       	out	0x38, r1	; 56
    2430:	09 b6       	in	r0, 0x39	; 57
    2432:	0f 92       	push	r0
    2434:	19 be       	out	0x39, r1	; 57
    2436:	0a b6       	in	r0, 0x3a	; 58
    2438:	0f 92       	push	r0
    243a:	1a be       	out	0x3a, r1	; 58
    243c:	0b b6       	in	r0, 0x3b	; 59
    243e:	0f 92       	push	r0
    2440:	1b be       	out	0x3b, r1	; 59
    2442:	4f 92       	push	r4
    2444:	5f 92       	push	r5
    2446:	6f 92       	push	r6
    2448:	7f 92       	push	r7
    244a:	af 92       	push	r10
    244c:	bf 92       	push	r11
    244e:	cf 92       	push	r12
    2450:	df 92       	push	r13
    2452:	ef 92       	push	r14
    2454:	ff 92       	push	r15
    2456:	0f 93       	push	r16
    2458:	1f 93       	push	r17
    245a:	2f 93       	push	r18
    245c:	3f 93       	push	r19
    245e:	4f 93       	push	r20
    2460:	5f 93       	push	r21
    2462:	6f 93       	push	r22
    2464:	7f 93       	push	r23
    2466:	8f 93       	push	r24
    2468:	9f 93       	push	r25
    246a:	af 93       	push	r26
    246c:	bf 93       	push	r27
    246e:	ef 93       	push	r30
    2470:	ff 93       	push	r31
    2472:	cf 93       	push	r28
    2474:	df 93       	push	r29
    2476:	cd b7       	in	r28, 0x3d	; 61
    2478:	de b7       	in	r29, 0x3e	; 62
    247a:	62 97       	sbiw	r28, 0x12	; 18
    247c:	cd bf       	out	0x3d, r28	; 61
    247e:	de bf       	out	0x3e, r29	; 62
	uint8_t data[14];
	bno085_read(data);
    2480:	ce 01       	movw	r24, r28
    2482:	01 96       	adiw	r24, 0x01	; 1
    2484:	0e 94 36 06 	call	0xc6c	; 0xc6c <bno085_read>
	double x = ((data[5]<<8) | data[4]) * QSCALE;
	double y = ((data[7]<<8) | data[6]) * QSCALE;
	double z = ((data[9]<<8) | data[8]) * QSCALE;
	double w = ((data[11]<<8) | data[10]) * QSCALE;
	
	quaternion2euler(w, x, y, z);
    2488:	6a 85       	ldd	r22, Y+10	; 0x0a
    248a:	70 e0       	ldi	r23, 0x00	; 0
    248c:	76 2f       	mov	r23, r22
    248e:	66 27       	eor	r22, r22
    2490:	89 85       	ldd	r24, Y+9	; 0x09
    2492:	68 2b       	or	r22, r24
    2494:	07 2e       	mov	r0, r23
    2496:	00 0c       	add	r0, r0
    2498:	88 0b       	sbc	r24, r24
    249a:	99 0b       	sbc	r25, r25
    249c:	03 d7       	rcall	.+3590   	; 0x32a4 <__floatsisf>
    249e:	20 e0       	ldi	r18, 0x00	; 0
    24a0:	30 e0       	ldi	r19, 0x00	; 0
    24a2:	40 e8       	ldi	r20, 0x80	; 128
    24a4:	58 e3       	ldi	r21, 0x38	; 56
    24a6:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    24aa:	5b 01       	movw	r10, r22
    24ac:	6c 01       	movw	r12, r24
    24ae:	68 85       	ldd	r22, Y+8	; 0x08
    24b0:	70 e0       	ldi	r23, 0x00	; 0
    24b2:	76 2f       	mov	r23, r22
    24b4:	66 27       	eor	r22, r22
    24b6:	8f 81       	ldd	r24, Y+7	; 0x07
    24b8:	68 2b       	or	r22, r24
    24ba:	07 2e       	mov	r0, r23
    24bc:	00 0c       	add	r0, r0
    24be:	88 0b       	sbc	r24, r24
    24c0:	99 0b       	sbc	r25, r25
    24c2:	f0 d6       	rcall	.+3552   	; 0x32a4 <__floatsisf>
    24c4:	20 e0       	ldi	r18, 0x00	; 0
    24c6:	30 e0       	ldi	r19, 0x00	; 0
    24c8:	40 e8       	ldi	r20, 0x80	; 128
    24ca:	58 e3       	ldi	r21, 0x38	; 56
    24cc:	0e 94 6e 1a 	call	0x34dc	; 0x34dc <__mulsf3>
    24d0:	2b 01       	movw	r4, r22
    24d2:	3c 01       	movw	r6, r24
    24d4:	6e 81       	ldd	r22, Y+6	; 0x06
    24d6:	70 e0       	ldi	r23, 0x00	; 0
    24d8:	76 2f       	mov	r23, r22
    24da:	66 27       	eor	r22, r22
    24dc:	8d 81       	ldd	r24, Y+5	; 0x05
    24de:	68 2b       	or	r22, r24
    24e0:	07 2e       	mov	r0, r23
    24e2:	00 0c       	add	r0, r0
    24e4:	88 0b       	sbc	r24, r24
    24e6:	99 0b       	sbc	r25, r25
    24e8:	dd d6       	rcall	.+3514   	; 0x32a4 <__floatsisf>
    24ea:	20 e0       	ldi	r18, 0x00	; 0
    24ec:	30 e0       	ldi	r19, 0x00	; 0
    24ee:	40 e8       	ldi	r20, 0x80	; 128
    24f0:	58 e3       	ldi	r21, 0x38	; 56
    24f2:	f4 d7       	rcall	.+4072   	; 0x34dc <__mulsf3>
    24f4:	6f 87       	std	Y+15, r22	; 0x0f
    24f6:	78 8b       	std	Y+16, r23	; 0x10
    24f8:	89 8b       	std	Y+17, r24	; 0x11
    24fa:	9a 8b       	std	Y+18, r25	; 0x12
    24fc:	6c 85       	ldd	r22, Y+12	; 0x0c
    24fe:	70 e0       	ldi	r23, 0x00	; 0
    2500:	76 2f       	mov	r23, r22
    2502:	66 27       	eor	r22, r22
    2504:	8b 85       	ldd	r24, Y+11	; 0x0b
    2506:	68 2b       	or	r22, r24
    2508:	07 2e       	mov	r0, r23
    250a:	00 0c       	add	r0, r0
    250c:	88 0b       	sbc	r24, r24
    250e:	99 0b       	sbc	r25, r25
    2510:	c9 d6       	rcall	.+3474   	; 0x32a4 <__floatsisf>
    2512:	20 e0       	ldi	r18, 0x00	; 0
    2514:	30 e0       	ldi	r19, 0x00	; 0
    2516:	40 e8       	ldi	r20, 0x80	; 128
    2518:	58 e3       	ldi	r21, 0x38	; 56
    251a:	e0 d7       	rcall	.+4032   	; 0x34dc <__mulsf3>
    251c:	83 01       	movw	r16, r6
    251e:	72 01       	movw	r14, r4
    2520:	2f 85       	ldd	r18, Y+15	; 0x0f
    2522:	38 89       	ldd	r19, Y+16	; 0x10
    2524:	49 89       	ldd	r20, Y+17	; 0x11
    2526:	5a 89       	ldd	r21, Y+18	; 0x12
    2528:	5e d8       	rcall	.-3908   	; 0x15e6 <quaternion2euler>
}
    252a:	62 96       	adiw	r28, 0x12	; 18
    252c:	cd bf       	out	0x3d, r28	; 61
    252e:	de bf       	out	0x3e, r29	; 62
    2530:	df 91       	pop	r29
    2532:	cf 91       	pop	r28
    2534:	ff 91       	pop	r31
    2536:	ef 91       	pop	r30
    2538:	bf 91       	pop	r27
    253a:	af 91       	pop	r26
    253c:	9f 91       	pop	r25
    253e:	8f 91       	pop	r24
    2540:	7f 91       	pop	r23
    2542:	6f 91       	pop	r22
    2544:	5f 91       	pop	r21
    2546:	4f 91       	pop	r20
    2548:	3f 91       	pop	r19
    254a:	2f 91       	pop	r18
    254c:	1f 91       	pop	r17
    254e:	0f 91       	pop	r16
    2550:	ff 90       	pop	r15
    2552:	ef 90       	pop	r14
    2554:	df 90       	pop	r13
    2556:	cf 90       	pop	r12
    2558:	bf 90       	pop	r11
    255a:	af 90       	pop	r10
    255c:	7f 90       	pop	r7
    255e:	6f 90       	pop	r6
    2560:	5f 90       	pop	r5
    2562:	4f 90       	pop	r4
    2564:	0f 90       	pop	r0
    2566:	0b be       	out	0x3b, r0	; 59
    2568:	0f 90       	pop	r0
    256a:	0a be       	out	0x3a, r0	; 58
    256c:	0f 90       	pop	r0
    256e:	09 be       	out	0x39, r0	; 57
    2570:	0f 90       	pop	r0
    2572:	08 be       	out	0x38, r0	; 56
    2574:	0f 90       	pop	r0
    2576:	0f be       	out	0x3f, r0	; 63
    2578:	0f 90       	pop	r0
    257a:	1f 90       	pop	r1
    257c:	18 95       	reti

0000257e <__vector_47>:

ISR(TCE0_OVF_vect){
    257e:	1f 92       	push	r1
    2580:	0f 92       	push	r0
    2582:	0f b6       	in	r0, 0x3f	; 63
    2584:	0f 92       	push	r0
    2586:	11 24       	eor	r1, r1
    2588:	08 b6       	in	r0, 0x38	; 56
    258a:	0f 92       	push	r0
    258c:	18 be       	out	0x38, r1	; 56
    258e:	09 b6       	in	r0, 0x39	; 57
    2590:	0f 92       	push	r0
    2592:	19 be       	out	0x39, r1	; 57
    2594:	0a b6       	in	r0, 0x3a	; 58
    2596:	0f 92       	push	r0
    2598:	1a be       	out	0x3a, r1	; 58
    259a:	0b b6       	in	r0, 0x3b	; 59
    259c:	0f 92       	push	r0
    259e:	1b be       	out	0x3b, r1	; 59
    25a0:	2f 92       	push	r2
    25a2:	3f 92       	push	r3
    25a4:	4f 92       	push	r4
    25a6:	5f 92       	push	r5
    25a8:	6f 92       	push	r6
    25aa:	7f 92       	push	r7
    25ac:	8f 92       	push	r8
    25ae:	9f 92       	push	r9
    25b0:	af 92       	push	r10
    25b2:	bf 92       	push	r11
    25b4:	cf 92       	push	r12
    25b6:	df 92       	push	r13
    25b8:	ef 92       	push	r14
    25ba:	ff 92       	push	r15
    25bc:	0f 93       	push	r16
    25be:	1f 93       	push	r17
    25c0:	2f 93       	push	r18
    25c2:	3f 93       	push	r19
    25c4:	4f 93       	push	r20
    25c6:	5f 93       	push	r21
    25c8:	6f 93       	push	r22
    25ca:	7f 93       	push	r23
    25cc:	8f 93       	push	r24
    25ce:	9f 93       	push	r25
    25d0:	af 93       	push	r26
    25d2:	bf 93       	push	r27
    25d4:	cf 93       	push	r28
    25d6:	df 93       	push	r29
    25d8:	ef 93       	push	r30
    25da:	ff 93       	push	r31
	timer++;
    25dc:	00 91 fe 20 	lds	r16, 0x20FE	; 0x8020fe <timer>
    25e0:	10 91 ff 20 	lds	r17, 0x20FF	; 0x8020ff <timer+0x1>
    25e4:	0f 5f       	subi	r16, 0xFF	; 255
    25e6:	1f 4f       	sbci	r17, 0xFF	; 255
    25e8:	00 93 fe 20 	sts	0x20FE, r16	; 0x8020fe <timer>
    25ec:	10 93 ff 20 	sts	0x20FF, r17	; 0x8020ff <timer+0x1>
	packets++;
    25f0:	c0 91 fa 20 	lds	r28, 0x20FA	; 0x8020fa <packets>
    25f4:	d0 91 fb 20 	lds	r29, 0x20FB	; 0x8020fb <packets+0x1>
    25f8:	21 96       	adiw	r28, 0x01	; 1
    25fa:	c0 93 fa 20 	sts	0x20FA, r28	; 0x8020fa <packets>
    25fe:	d0 93 fb 20 	sts	0x20FB, r29	; 0x8020fb <packets+0x1>
	sprintf(str,format,timer,packets,
	(int16_t) (alt),						(int32_t) press,							(int16_t) (temp-273.15),				(int16_t)volt,
	(int16_t) (((int32_t)gps_t)/10000),		(int16_t) ((((int32_t)gps_t)%10000)/100),	(int16_t) (((int32_t)gps_t)%100),
	(int16_t) gps_lat,						((int32_t) (gps_lat*1000000))%1000000,		(int16_t) gps_long,						(int32_t)(abs(((int32_t)(gps_long*1000000))%1000000)),
	(int16_t) gps_alt,						((int16_t) (gps_alt)*10)%10,				gps_sats,
    2602:	60 91 d6 20 	lds	r22, 0x20D6	; 0x8020d6 <gps_alt>
    2606:	70 91 d7 20 	lds	r23, 0x20D7	; 0x8020d7 <gps_alt+0x1>
    260a:	80 91 d8 20 	lds	r24, 0x20D8	; 0x8020d8 <gps_alt+0x2>
    260e:	90 91 d9 20 	lds	r25, 0x20D9	; 0x8020d9 <gps_alt+0x3>
    2612:	15 d6       	rcall	.+3114   	; 0x323e <__fixsfsi>
    2614:	36 2e       	mov	r3, r22
    2616:	27 2e       	mov	r2, r23
	timer++;
	packets++;
	sprintf(str,format,timer,packets,
	(int16_t) (alt),						(int32_t) press,							(int16_t) (temp-273.15),				(int16_t)volt,
	(int16_t) (((int32_t)gps_t)/10000),		(int16_t) ((((int32_t)gps_t)%10000)/100),	(int16_t) (((int32_t)gps_t)%100),
	(int16_t) gps_lat,						((int32_t) (gps_lat*1000000))%1000000,		(int16_t) gps_long,						(int32_t)(abs(((int32_t)(gps_long*1000000))%1000000)),
    2618:	40 90 da 20 	lds	r4, 0x20DA	; 0x8020da <gps_long>
    261c:	50 90 db 20 	lds	r5, 0x20DB	; 0x8020db <gps_long+0x1>
    2620:	60 90 dc 20 	lds	r6, 0x20DC	; 0x8020dc <gps_long+0x2>
    2624:	70 90 dd 20 	lds	r7, 0x20DD	; 0x8020dd <gps_long+0x3>
    2628:	80 90 de 20 	lds	r8, 0x20DE	; 0x8020de <gps_lat>
    262c:	90 90 df 20 	lds	r9, 0x20DF	; 0x8020df <gps_lat+0x1>
    2630:	a0 90 e0 20 	lds	r10, 0x20E0	; 0x8020e0 <gps_lat+0x2>
    2634:	b0 90 e1 20 	lds	r11, 0x20E1	; 0x8020e1 <gps_lat+0x3>
ISR(TCE0_OVF_vect){
	timer++;
	packets++;
	sprintf(str,format,timer,packets,
	(int16_t) (alt),						(int32_t) press,							(int16_t) (temp-273.15),				(int16_t)volt,
	(int16_t) (((int32_t)gps_t)/10000),		(int16_t) ((((int32_t)gps_t)%10000)/100),	(int16_t) (((int32_t)gps_t)%100),
    2638:	60 91 e2 20 	lds	r22, 0x20E2	; 0x8020e2 <gps_t>
    263c:	70 91 e3 20 	lds	r23, 0x20E3	; 0x8020e3 <gps_t+0x1>
    2640:	80 91 e4 20 	lds	r24, 0x20E4	; 0x8020e4 <gps_t+0x2>
    2644:	90 91 e5 20 	lds	r25, 0x20E5	; 0x8020e5 <gps_t+0x3>
    2648:	fa d5       	rcall	.+3060   	; 0x323e <__fixsfsi>
    264a:	6b 01       	movw	r12, r22
    264c:	7c 01       	movw	r14, r24
}

ISR(TCE0_OVF_vect){
	timer++;
	packets++;
	sprintf(str,format,timer,packets,
    264e:	60 91 c4 20 	lds	r22, 0x20C4	; 0x8020c4 <__data_end>
    2652:	70 91 c5 20 	lds	r23, 0x20C5	; 0x8020c5 <__data_end+0x1>
    2656:	80 91 c6 20 	lds	r24, 0x20C6	; 0x8020c6 <__data_end+0x2>
    265a:	90 91 c7 20 	lds	r25, 0x20C7	; 0x8020c7 <__data_end+0x3>
    265e:	ef d5       	rcall	.+3038   	; 0x323e <__fixsfsi>
    2660:	7f 93       	push	r23
    2662:	6f 93       	push	r22
    2664:	80 91 0b 21 	lds	r24, 0x210B	; 0x80210b <state>
    2668:	1f 92       	push	r1
    266a:	8f 93       	push	r24
    266c:	60 91 c8 20 	lds	r22, 0x20C8	; 0x8020c8 <rpm>
    2670:	70 91 c9 20 	lds	r23, 0x20C9	; 0x8020c9 <rpm+0x1>
    2674:	80 91 ca 20 	lds	r24, 0x20CA	; 0x8020ca <rpm+0x2>
    2678:	90 91 cb 20 	lds	r25, 0x20CB	; 0x8020cb <rpm+0x3>
    267c:	e0 d5       	rcall	.+3008   	; 0x323e <__fixsfsi>
    267e:	7f 93       	push	r23
    2680:	6f 93       	push	r22
    2682:	60 91 cc 20 	lds	r22, 0x20CC	; 0x8020cc <roll>
    2686:	70 91 cd 20 	lds	r23, 0x20CD	; 0x8020cd <roll+0x1>
    268a:	80 91 ce 20 	lds	r24, 0x20CE	; 0x8020ce <roll+0x2>
    268e:	90 91 cf 20 	lds	r25, 0x20CF	; 0x8020cf <roll+0x3>
    2692:	d5 d5       	rcall	.+2986   	; 0x323e <__fixsfsi>
    2694:	7f 93       	push	r23
    2696:	6f 93       	push	r22
    2698:	60 91 d0 20 	lds	r22, 0x20D0	; 0x8020d0 <pitch>
    269c:	70 91 d1 20 	lds	r23, 0x20D1	; 0x8020d1 <pitch+0x1>
    26a0:	80 91 d2 20 	lds	r24, 0x20D2	; 0x8020d2 <pitch+0x2>
    26a4:	90 91 d3 20 	lds	r25, 0x20D3	; 0x8020d3 <pitch+0x3>
    26a8:	ca d5       	rcall	.+2964   	; 0x323e <__fixsfsi>
    26aa:	7f 93       	push	r23
    26ac:	6f 93       	push	r22
    26ae:	80 91 d5 20 	lds	r24, 0x20D5	; 0x8020d5 <gps_sats+0x1>
    26b2:	8f 93       	push	r24
    26b4:	80 91 d4 20 	lds	r24, 0x20D4	; 0x8020d4 <gps_sats>
    26b8:	8f 93       	push	r24
    26ba:	83 2d       	mov	r24, r3
    26bc:	92 2d       	mov	r25, r2
    26be:	88 0f       	add	r24, r24
    26c0:	99 1f       	adc	r25, r25
    26c2:	9c 01       	movw	r18, r24
    26c4:	22 0f       	add	r18, r18
    26c6:	33 1f       	adc	r19, r19
    26c8:	22 0f       	add	r18, r18
    26ca:	33 1f       	adc	r19, r19
    26cc:	82 0f       	add	r24, r18
    26ce:	93 1f       	adc	r25, r19
    26d0:	6a e0       	ldi	r22, 0x0A	; 10
    26d2:	70 e0       	ldi	r23, 0x00	; 0
    26d4:	0e 94 79 1c 	call	0x38f2	; 0x38f2 <__divmodhi4>
    26d8:	9f 93       	push	r25
    26da:	8f 93       	push	r24
    26dc:	2f 92       	push	r2
    26de:	3f 92       	push	r3
    26e0:	20 e0       	ldi	r18, 0x00	; 0
    26e2:	34 e2       	ldi	r19, 0x24	; 36
    26e4:	44 e7       	ldi	r20, 0x74	; 116
    26e6:	59 e4       	ldi	r21, 0x49	; 73
    26e8:	c3 01       	movw	r24, r6
    26ea:	b2 01       	movw	r22, r4
    26ec:	f7 d6       	rcall	.+3566   	; 0x34dc <__mulsf3>
    26ee:	a7 d5       	rcall	.+2894   	; 0x323e <__fixsfsi>
    26f0:	20 e4       	ldi	r18, 0x40	; 64
    26f2:	32 e4       	ldi	r19, 0x42	; 66
    26f4:	4f e0       	ldi	r20, 0x0F	; 15
    26f6:	50 e0       	ldi	r21, 0x00	; 0
    26f8:	0e 94 ae 1c 	call	0x395c	; 0x395c <__divmodsi4>
    26fc:	9b 01       	movw	r18, r22
    26fe:	77 23       	and	r23, r23
    2700:	24 f4       	brge	.+8      	; 0x270a <__vector_47+0x18c>
    2702:	22 27       	eor	r18, r18
    2704:	33 27       	eor	r19, r19
    2706:	26 1b       	sub	r18, r22
    2708:	37 0b       	sbc	r19, r23
    270a:	c9 01       	movw	r24, r18
    270c:	33 0f       	add	r19, r19
    270e:	aa 0b       	sbc	r26, r26
    2710:	bb 0b       	sbc	r27, r27
    2712:	bf 93       	push	r27
    2714:	af 93       	push	r26
    2716:	9f 93       	push	r25
    2718:	8f 93       	push	r24
    271a:	c3 01       	movw	r24, r6
    271c:	b2 01       	movw	r22, r4
    271e:	8f d5       	rcall	.+2846   	; 0x323e <__fixsfsi>
    2720:	7f 93       	push	r23
    2722:	6f 93       	push	r22
    2724:	20 e0       	ldi	r18, 0x00	; 0
    2726:	34 e2       	ldi	r19, 0x24	; 36
    2728:	44 e7       	ldi	r20, 0x74	; 116
    272a:	59 e4       	ldi	r21, 0x49	; 73
    272c:	c5 01       	movw	r24, r10
    272e:	b4 01       	movw	r22, r8
    2730:	d5 d6       	rcall	.+3498   	; 0x34dc <__mulsf3>
    2732:	85 d5       	rcall	.+2826   	; 0x323e <__fixsfsi>
    2734:	20 e4       	ldi	r18, 0x40	; 64
    2736:	32 e4       	ldi	r19, 0x42	; 66
    2738:	4f e0       	ldi	r20, 0x0F	; 15
    273a:	50 e0       	ldi	r21, 0x00	; 0
    273c:	0e 94 ae 1c 	call	0x395c	; 0x395c <__divmodsi4>
    2740:	9f 93       	push	r25
    2742:	8f 93       	push	r24
    2744:	7f 93       	push	r23
    2746:	6f 93       	push	r22
    2748:	c5 01       	movw	r24, r10
    274a:	b4 01       	movw	r22, r8
    274c:	78 d5       	rcall	.+2800   	; 0x323e <__fixsfsi>
    274e:	7f 93       	push	r23
    2750:	6f 93       	push	r22
    2752:	0f 2e       	mov	r0, r31
    2754:	f4 e6       	ldi	r31, 0x64	; 100
    2756:	8f 2e       	mov	r8, r31
    2758:	91 2c       	mov	r9, r1
    275a:	a1 2c       	mov	r10, r1
    275c:	b1 2c       	mov	r11, r1
    275e:	f0 2d       	mov	r31, r0
    2760:	c7 01       	movw	r24, r14
    2762:	b6 01       	movw	r22, r12
    2764:	a5 01       	movw	r20, r10
    2766:	94 01       	movw	r18, r8
    2768:	0e 94 ae 1c 	call	0x395c	; 0x395c <__divmodsi4>
    276c:	7f 93       	push	r23
    276e:	6f 93       	push	r22
    2770:	c7 01       	movw	r24, r14
    2772:	b6 01       	movw	r22, r12
    2774:	20 e1       	ldi	r18, 0x10	; 16
    2776:	37 e2       	ldi	r19, 0x27	; 39
    2778:	40 e0       	ldi	r20, 0x00	; 0
    277a:	50 e0       	ldi	r21, 0x00	; 0
    277c:	0e 94 ae 1c 	call	0x395c	; 0x395c <__divmodsi4>
    2780:	f2 2e       	mov	r15, r18
    2782:	e3 2e       	mov	r14, r19
    2784:	a5 01       	movw	r20, r10
    2786:	94 01       	movw	r18, r8
    2788:	0e 94 ae 1c 	call	0x395c	; 0x395c <__divmodsi4>
    278c:	3f 93       	push	r19
    278e:	2f 93       	push	r18
    2790:	ef 92       	push	r14
    2792:	ff 92       	push	r15
    2794:	60 91 ea 20 	lds	r22, 0x20EA	; 0x8020ea <volt>
    2798:	70 91 eb 20 	lds	r23, 0x20EB	; 0x8020eb <volt+0x1>
    279c:	80 91 ec 20 	lds	r24, 0x20EC	; 0x8020ec <volt+0x2>
    27a0:	90 91 ed 20 	lds	r25, 0x20ED	; 0x8020ed <volt+0x3>
    27a4:	4c d5       	rcall	.+2712   	; 0x323e <__fixsfsi>
    27a6:	7f 93       	push	r23
    27a8:	6f 93       	push	r22
    27aa:	23 e3       	ldi	r18, 0x33	; 51
    27ac:	33 e9       	ldi	r19, 0x93	; 147
    27ae:	48 e8       	ldi	r20, 0x88	; 136
    27b0:	53 e4       	ldi	r21, 0x43	; 67
    27b2:	60 91 f2 20 	lds	r22, 0x20F2	; 0x8020f2 <temp>
    27b6:	70 91 f3 20 	lds	r23, 0x20F3	; 0x8020f3 <temp+0x1>
    27ba:	80 91 f4 20 	lds	r24, 0x20F4	; 0x8020f4 <temp+0x2>
    27be:	90 91 f5 20 	lds	r25, 0x20F5	; 0x8020f5 <temp+0x3>
    27c2:	b9 d3       	rcall	.+1906   	; 0x2f36 <__subsf3>
    27c4:	3c d5       	rcall	.+2680   	; 0x323e <__fixsfsi>
    27c6:	7f 93       	push	r23
    27c8:	6f 93       	push	r22
    27ca:	60 91 f6 20 	lds	r22, 0x20F6	; 0x8020f6 <press>
    27ce:	70 91 f7 20 	lds	r23, 0x20F7	; 0x8020f7 <press+0x1>
    27d2:	80 91 f8 20 	lds	r24, 0x20F8	; 0x8020f8 <press+0x2>
    27d6:	90 91 f9 20 	lds	r25, 0x20F9	; 0x8020f9 <press+0x3>
    27da:	31 d5       	rcall	.+2658   	; 0x323e <__fixsfsi>
    27dc:	9f 93       	push	r25
    27de:	8f 93       	push	r24
    27e0:	7f 93       	push	r23
    27e2:	6f 93       	push	r22
    27e4:	60 91 ee 20 	lds	r22, 0x20EE	; 0x8020ee <alt>
    27e8:	70 91 ef 20 	lds	r23, 0x20EF	; 0x8020ef <alt+0x1>
    27ec:	80 91 f0 20 	lds	r24, 0x20F0	; 0x8020f0 <alt+0x2>
    27f0:	90 91 f1 20 	lds	r25, 0x20F1	; 0x8020f1 <alt+0x3>
    27f4:	24 d5       	rcall	.+2632   	; 0x323e <__fixsfsi>
    27f6:	7f 93       	push	r23
    27f8:	6f 93       	push	r22
    27fa:	df 93       	push	r29
    27fc:	cf 93       	push	r28
    27fe:	1f 93       	push	r17
    2800:	0f 93       	push	r16
    2802:	80 91 18 20 	lds	r24, 0x2018	; 0x802018 <format+0x1>
    2806:	8f 93       	push	r24
    2808:	80 91 17 20 	lds	r24, 0x2017	; 0x802017 <format>
    280c:	8f 93       	push	r24
    280e:	ca e2       	ldi	r28, 0x2A	; 42
    2810:	d1 e2       	ldi	r29, 0x21	; 33
    2812:	df 93       	push	r29
    2814:	cf 93       	push	r28
    2816:	0e 94 94 1d 	call	0x3b28	; 0x3b28 <sprintf>
	(int16_t) (((int32_t)gps_t)/10000),		(int16_t) ((((int32_t)gps_t)%10000)/100),	(int16_t) (((int32_t)gps_t)%100),
	(int16_t) gps_lat,						((int32_t) (gps_lat*1000000))%1000000,		(int16_t) gps_long,						(int32_t)(abs(((int32_t)(gps_long*1000000))%1000000)),
	(int16_t) gps_alt,						((int16_t) (gps_alt)*10)%10,				gps_sats,
	(int16_t) pitch,						(int16_t) roll,								(int16_t) rpm,
	state,									(int16_t) angle); // Data Logging Test
	printf(str);
    281a:	8d b7       	in	r24, 0x3d	; 61
    281c:	9e b7       	in	r25, 0x3e	; 62
    281e:	c4 96       	adiw	r24, 0x34	; 52
    2820:	8d bf       	out	0x3d, r24	; 61
    2822:	9e bf       	out	0x3e, r25	; 62
    2824:	df 93       	push	r29
    2826:	cf 93       	push	r28
    2828:	0e 94 51 1d 	call	0x3aa2	; 0x3aa2 <printf>
	
	// Updates EEPROM
	eeprom_write();
    282c:	2d dc       	rcall	.-1958   	; 0x2088 <eeprom_write>
    282e:	0f 90       	pop	r0
	uint8_t byte0 = eeprom_read(EEPROM_PAGE | PACKET_ADDR_BYTE0);
	uint8_t byte1 = eeprom_read(EEPROM_PAGE | PACKET_ADDR_BYTE1);
	uint16_t a = (uint16_t) ((byte1<<8) | byte0);
	printf("%u\n", a);
	*/
}
    2830:	0f 90       	pop	r0
    2832:	ff 91       	pop	r31
    2834:	ef 91       	pop	r30
    2836:	df 91       	pop	r29
    2838:	cf 91       	pop	r28
    283a:	bf 91       	pop	r27
    283c:	af 91       	pop	r26
    283e:	9f 91       	pop	r25
    2840:	8f 91       	pop	r24
    2842:	7f 91       	pop	r23
    2844:	6f 91       	pop	r22
    2846:	5f 91       	pop	r21
    2848:	4f 91       	pop	r20
    284a:	3f 91       	pop	r19
    284c:	2f 91       	pop	r18
    284e:	1f 91       	pop	r17
    2850:	0f 91       	pop	r16
    2852:	ff 90       	pop	r15
    2854:	ef 90       	pop	r14
    2856:	df 90       	pop	r13
    2858:	cf 90       	pop	r12
    285a:	bf 90       	pop	r11
    285c:	af 90       	pop	r10
    285e:	9f 90       	pop	r9
    2860:	8f 90       	pop	r8
    2862:	7f 90       	pop	r7
    2864:	6f 90       	pop	r6
    2866:	5f 90       	pop	r5
    2868:	4f 90       	pop	r4
    286a:	3f 90       	pop	r3
    286c:	2f 90       	pop	r2
    286e:	0f 90       	pop	r0
    2870:	0b be       	out	0x3b, r0	; 59
    2872:	0f 90       	pop	r0
    2874:	0a be       	out	0x3a, r0	; 58
    2876:	0f 90       	pop	r0
    2878:	09 be       	out	0x39, r0	; 57
    287a:	0f 90       	pop	r0
    287c:	08 be       	out	0x38, r0	; 56
    287e:	0f 90       	pop	r0
    2880:	0f be       	out	0x3f, r0	; 63
    2882:	0f 90       	pop	r0
    2884:	1f 90       	pop	r1
    2886:	18 95       	reti

00002888 <__vector_58>:
    2888:	1f 92       	push	r1

ISR(USARTE0_RXC_vect){
    288a:	0f 92       	push	r0
    288c:	0f b6       	in	r0, 0x3f	; 63
    288e:	0f 92       	push	r0
    2890:	11 24       	eor	r1, r1
    2892:	08 b6       	in	r0, 0x38	; 56
    2894:	0f 92       	push	r0
    2896:	18 be       	out	0x38, r1	; 56
    2898:	09 b6       	in	r0, 0x39	; 57
    289a:	0f 92       	push	r0
    289c:	19 be       	out	0x39, r1	; 57
    289e:	0b b6       	in	r0, 0x3b	; 59
    28a0:	0f 92       	push	r0
    28a2:	1b be       	out	0x3b, r1	; 59
    28a4:	2f 93       	push	r18
    28a6:	3f 93       	push	r19
    28a8:	4f 93       	push	r20
    28aa:	5f 93       	push	r21
    28ac:	6f 93       	push	r22
    28ae:	7f 93       	push	r23
    28b0:	8f 93       	push	r24
    28b2:	9f 93       	push	r25
    28b4:	af 93       	push	r26
    28b6:	bf 93       	push	r27
    28b8:	cf 93       	push	r28
    28ba:	ef 93       	push	r30
    28bc:	ff 93       	push	r31
	uint8_t c = usart_getchar(UART_TERMINAL_SERIAL);
    28be:	80 ea       	ldi	r24, 0xA0	; 160
    28c0:	98 e0       	ldi	r25, 0x08	; 8
    28c2:	0e 94 bc 03 	call	0x778	; 0x778 <usart_getchar>
    28c6:	c8 2f       	mov	r28, r24
	printf("%c\n", c);
    28c8:	1f 92       	push	r1
    28ca:	8f 93       	push	r24
    28cc:	89 eb       	ldi	r24, 0xB9	; 185
    28ce:	90 e2       	ldi	r25, 0x20	; 32
    28d0:	9f 93       	push	r25
    28d2:	8f 93       	push	r24
    28d4:	0e 94 51 1d 	call	0x3aa2	; 0x3aa2 <printf>
	
	switch(c){
    28d8:	0f 90       	pop	r0
    28da:	0f 90       	pop	r0
    28dc:	0f 90       	pop	r0
    28de:	0f 90       	pop	r0
    28e0:	c4 36       	cpi	r28, 0x64	; 100
    28e2:	91 f0       	breq	.+36     	; 0x2908 <__vector_58+0x80>
    28e4:	28 f4       	brcc	.+10     	; 0x28f0 <__vector_58+0x68>
    28e6:	c1 36       	cpi	r28, 0x61	; 97
    28e8:	69 f0       	breq	.+26     	; 0x2904 <__vector_58+0x7c>
    28ea:	c3 36       	cpi	r28, 0x63	; 99
    28ec:	49 f0       	breq	.+18     	; 0x2900 <__vector_58+0x78>
    28ee:	0d c0       	rjmp	.+26     	; 0x290a <__vector_58+0x82>
    28f0:	c5 36       	cpi	r28, 0x65	; 101
    28f2:	21 f0       	breq	.+8      	; 0x28fc <__vector_58+0x74>
    28f4:	c6 36       	cpi	r28, 0x66	; 102
    28f6:	49 f4       	brne	.+18     	; 0x290a <__vector_58+0x82>
		case RESET:
		//printf("RESET\n");
		reset();
    28f8:	1e dd       	rcall	.-1476   	; 0x2336 <reset>
	
	reset_received = 1;
}

void calibrate(void){
	cali_alt();
    28fa:	07 c0       	rjmp	.+14     	; 0x290a <__vector_58+0x82>
    28fc:	9e d8       	rcall	.-3780   	; 0x1a3a <cali_alt>
		case CALIBRATE:
		calibrate();
		//printf("CALIBRATE\n");
		break;
		case CALIBRATE_ALTITUDE:
		cali_alt();
    28fe:	05 c0       	rjmp	.+10     	; 0x290a <__vector_58+0x82>
		case CALIBRATE_ANGLE:
		cali_ang();
		//printf("CALIBRATE_ANGLE\n");
		break;
		case SEND_GPS_LOCATION:
		send_gps();
    2900:	9c d8       	rcall	.-3784   	; 0x1a3a <cali_alt>
    2902:	03 c0       	rjmp	.+6      	; 0x290a <__vector_58+0x82>
		//printf("SEND_GPS_LOCATION\n");
		break;
    2904:	c7 d8       	rcall	.-3698   	; 0x1a94 <send_gps>
		case PACKET:
		packet();
    2906:	01 c0       	rjmp	.+2      	; 0x290a <__vector_58+0x82>
    2908:	45 d9       	rcall	.-3446   	; 0x1b94 <packet>
		//printf("PACKET\n");
		break;
	}
}
    290a:	ff 91       	pop	r31
    290c:	ef 91       	pop	r30
    290e:	cf 91       	pop	r28
    2910:	bf 91       	pop	r27
    2912:	af 91       	pop	r26
    2914:	9f 91       	pop	r25
    2916:	8f 91       	pop	r24
    2918:	7f 91       	pop	r23
    291a:	6f 91       	pop	r22
    291c:	5f 91       	pop	r21
    291e:	4f 91       	pop	r20
    2920:	3f 91       	pop	r19
    2922:	2f 91       	pop	r18
    2924:	0f 90       	pop	r0
    2926:	0b be       	out	0x3b, r0	; 59
    2928:	0f 90       	pop	r0
    292a:	09 be       	out	0x39, r0	; 57
    292c:	0f 90       	pop	r0
    292e:	08 be       	out	0x38, r0	; 56
    2930:	0f 90       	pop	r0
    2932:	0f be       	out	0x3f, r0	; 63
    2934:	0f 90       	pop	r0
    2936:	1f 90       	pop	r1
    2938:	18 95       	reti

0000293a <__vector_91>:


// GPS recording
ISR(USARTD1_RXC_vect){
    293a:	1f 92       	push	r1
    293c:	0f 92       	push	r0
    293e:	0f b6       	in	r0, 0x3f	; 63
    2940:	0f 92       	push	r0
    2942:	11 24       	eor	r1, r1
    2944:	08 b6       	in	r0, 0x38	; 56
    2946:	0f 92       	push	r0
    2948:	18 be       	out	0x38, r1	; 56
    294a:	09 b6       	in	r0, 0x39	; 57
    294c:	0f 92       	push	r0
    294e:	19 be       	out	0x39, r1	; 57
    2950:	0a b6       	in	r0, 0x3a	; 58
    2952:	0f 92       	push	r0
    2954:	1a be       	out	0x3a, r1	; 58
    2956:	0b b6       	in	r0, 0x3b	; 59
    2958:	0f 92       	push	r0
    295a:	1b be       	out	0x3b, r1	; 59
    295c:	8f 92       	push	r8
    295e:	9f 92       	push	r9
    2960:	af 92       	push	r10
    2962:	bf 92       	push	r11
    2964:	cf 92       	push	r12
    2966:	df 92       	push	r13
    2968:	ef 92       	push	r14
    296a:	ff 92       	push	r15
    296c:	1f 93       	push	r17
    296e:	2f 93       	push	r18
    2970:	3f 93       	push	r19
    2972:	4f 93       	push	r20
    2974:	5f 93       	push	r21
    2976:	6f 93       	push	r22
    2978:	7f 93       	push	r23
    297a:	8f 93       	push	r24
    297c:	9f 93       	push	r25
    297e:	af 93       	push	r26
    2980:	bf 93       	push	r27
    2982:	ef 93       	push	r30
    2984:	ff 93       	push	r31
    2986:	cf 93       	push	r28
    2988:	df 93       	push	r29
    298a:	00 d0       	rcall	.+0      	; 0x298c <__vector_91+0x52>
    298c:	00 d0       	rcall	.+0      	; 0x298e <__vector_91+0x54>
    298e:	cd b7       	in	r28, 0x3d	; 61
    2990:	de b7       	in	r29, 0x3e	; 62
	uint8_t c = usart_getchar(GPS_TERMINAL_SERIAL);
    2992:	80 eb       	ldi	r24, 0xB0	; 176
    2994:	99 e0       	ldi	r25, 0x09	; 9
    2996:	0e 94 bc 03 	call	0x778	; 0x778 <usart_getchar>
    299a:	18 2f       	mov	r17, r24
	//printf("%c",c);
	
	if(c == (uint8_t) '$'){
    299c:	84 32       	cpi	r24, 0x24	; 36
    299e:	49 f4       	brne	.+18     	; 0x29b2 <__vector_91+0x78>
		writing = 1;
    29a0:	81 e0       	ldi	r24, 0x01	; 1
    29a2:	80 93 04 21 	sts	0x2104, r24	; 0x802104 <writing>
		pos = 0;
		word_pos = 0;
    29a6:	10 92 02 21 	sts	0x2102, r1	; 0x802102 <word_pos>
		commas = 0;
    29aa:	10 92 01 21 	sts	0x2101, r1	; 0x802101 <commas>
			}
		}
	}
		
	if(writing){
		switch(pos){
    29ae:	90 e0       	ldi	r25, 0x00	; 0
    29b0:	6b c2       	rjmp	.+1238   	; 0x2e88 <__vector_91+0x54e>
		writing = 1;
		pos = 0;
		word_pos = 0;
		commas = 0;
	}
	else if(c == (uint8_t) '*'){
    29b2:	8a 32       	cpi	r24, 0x2A	; 42
    29b4:	29 f4       	brne	.+10     	; 0x29c0 <__vector_91+0x86>
		commas = 0;
    29b6:	10 92 01 21 	sts	0x2101, r1	; 0x802101 <commas>
		writing = 0;
    29ba:	10 92 04 21 	sts	0x2104, r1	; 0x802104 <writing>
    29be:	94 c2       	rjmp	.+1320   	; 0x2ee8 <__vector_91+0x5ae>
	}
	else if(c == (uint8_t) ','){
    29c0:	8c 32       	cpi	r24, 0x2C	; 44
    29c2:	09 f0       	breq	.+2      	; 0x29c6 <__vector_91+0x8c>
    29c4:	4c c2       	rjmp	.+1176   	; 0x2e5e <__vector_91+0x524>
		gps[0] = 32;
    29c6:	e6 e1       	ldi	r30, 0x16	; 22
    29c8:	f1 e2       	ldi	r31, 0x21	; 33
    29ca:	80 e2       	ldi	r24, 0x20	; 32
    29cc:	80 83       	st	Z, r24
		if(gps[1] == 32){
    29ce:	81 81       	ldd	r24, Z+1	; 0x01
    29d0:	80 32       	cpi	r24, 0x20	; 32
    29d2:	09 f0       	breq	.+2      	; 0x29d6 <__vector_91+0x9c>
    29d4:	70 c2       	rjmp	.+1248   	; 0x2eb6 <__vector_91+0x57c>
			gps[0] = '0';
    29d6:	80 e3       	ldi	r24, 0x30	; 48
    29d8:	80 93 16 21 	sts	0x2116, r24	; 0x802116 <gps>
    29dc:	6c c2       	rjmp	.+1240   	; 0x2eb6 <__vector_91+0x57c>
			case 7:			//Sats
				sscanf(gps,"%d",&gps_sats);
				break;
			case 9:			//Altitude
				for(uint8_t i = 0; i < 15; i++){
					if(gps[i] == (uint8_t) '.'){
    29de:	80 91 16 21 	lds	r24, 0x2116	; 0x802116 <gps>
    29e2:	8e 32       	cpi	r24, 0x2E	; 46
    29e4:	09 f0       	breq	.+2      	; 0x29e8 <__vector_91+0xae>
    29e6:	a1 c1       	rjmp	.+834    	; 0x2d2a <__vector_91+0x3f0>
    29e8:	a7 c1       	rjmp	.+846    	; 0x2d38 <__vector_91+0x3fe>
				sscanf(dec,"%d",&val2);
				gps_lat = val/100 + ((double)(val%100) + ((double)(val2))/10000) / 60.0;
				break;
			case 4:			//Longitude
				for(uint8_t i = 0; i < 15; i++){
					if(gps[i] == (uint8_t) '.'){
    29ea:	80 91 16 21 	lds	r24, 0x2116	; 0x802116 <gps>
    29ee:	8e 32       	cpi	r24, 0x2E	; 46
    29f0:	09 f0       	breq	.+2      	; 0x29f4 <__vector_91+0xba>
    29f2:	ef c0       	rjmp	.+478    	; 0x2bd2 <__vector_91+0x298>
    29f4:	f5 c0       	rjmp	.+490    	; 0x2be0 <__vector_91+0x2a6>
				sscanf(gps,"%ld",&val);
				gps_t = (double) val;
				break;
			case 2:			//Latitude
				for(uint8_t i = 0; i < 15; i++){
					if(gps[i] == (uint8_t) '.'){
    29f6:	80 91 16 21 	lds	r24, 0x2116	; 0x802116 <gps>
    29fa:	8e 32       	cpi	r24, 0x2E	; 46
    29fc:	09 f0       	breq	.+2      	; 0x2a00 <__vector_91+0xc6>
    29fe:	52 c0       	rjmp	.+164    	; 0x2aa4 <__vector_91+0x16a>
    2a00:	58 c0       	rjmp	.+176    	; 0x2ab2 <__vector_91+0x178>
		int32_t val = 0;
		int16_t val2 = 0;
		switch(commas){
			case 1:			//Time
				for(uint8_t i = 0; i < 15; i++){
					if(gps[i] == (uint8_t) '.'){
    2a02:	91 91       	ld	r25, Z+
    2a04:	9e 32       	cpi	r25, 0x2E	; 46
    2a06:	29 f4       	brne	.+10     	; 0x2a12 <__vector_91+0xd8>
    2a08:	01 c0       	rjmp	.+2      	; 0x2a0c <__vector_91+0xd2>
    2a0a:	80 e0       	ldi	r24, 0x00	; 0
						idx = i;
    2a0c:	80 93 00 21 	sts	0x2100, r24	; 0x802100 <idx>
						break;
    2a10:	03 c0       	rjmp	.+6      	; 0x2a18 <__vector_91+0xde>
		}
		int32_t val = 0;
		int16_t val2 = 0;
		switch(commas){
			case 1:			//Time
				for(uint8_t i = 0; i < 15; i++){
    2a12:	8f 5f       	subi	r24, 0xFF	; 255
    2a14:	8f 30       	cpi	r24, 0x0F	; 15
    2a16:	a9 f7       	brne	.-22     	; 0x2a02 <__vector_91+0xc8>
					if(gps[i] == (uint8_t) '.'){
						idx = i;
						break;
					}
				}
				gps[idx] = 32;
    2a18:	20 91 00 21 	lds	r18, 0x2100	; 0x802100 <idx>
    2a1c:	e2 2f       	mov	r30, r18
    2a1e:	f0 e0       	ldi	r31, 0x00	; 0
    2a20:	ea 5e       	subi	r30, 0xEA	; 234
    2a22:	fe 4d       	sbci	r31, 0xDE	; 222
    2a24:	80 e2       	ldi	r24, 0x20	; 32
    2a26:	80 83       	st	Z, r24
				for(uint8_t i = idx+1; i < 15; i++){
    2a28:	2f 5f       	subi	r18, 0xFF	; 255
    2a2a:	2f 30       	cpi	r18, 0x0F	; 15
    2a2c:	c8 f4       	brcc	.+50     	; 0x2a60 <__vector_91+0x126>
					if(gps[i] == 32){
    2a2e:	82 2f       	mov	r24, r18
    2a30:	90 e0       	ldi	r25, 0x00	; 0
    2a32:	fc 01       	movw	r30, r24
    2a34:	ea 5e       	subi	r30, 0xEA	; 234
    2a36:	fe 4d       	sbci	r31, 0xDE	; 222
    2a38:	30 81       	ld	r19, Z
    2a3a:	30 32       	cpi	r19, 0x20	; 32
    2a3c:	89 f0       	breq	.+34     	; 0x2a60 <__vector_91+0x126>
						break;
					}
					gps[i] = 32;
    2a3e:	40 e2       	ldi	r20, 0x20	; 32
    2a40:	08 c0       	rjmp	.+16     	; 0x2a52 <__vector_91+0x118>
						break;
					}
				}
				gps[idx] = 32;
				for(uint8_t i = idx+1; i < 15; i++){
					if(gps[i] == 32){
    2a42:	82 2f       	mov	r24, r18
    2a44:	90 e0       	ldi	r25, 0x00	; 0
    2a46:	fc 01       	movw	r30, r24
    2a48:	ea 5e       	subi	r30, 0xEA	; 234
    2a4a:	fe 4d       	sbci	r31, 0xDE	; 222
    2a4c:	30 81       	ld	r19, Z
    2a4e:	30 32       	cpi	r19, 0x20	; 32
    2a50:	39 f0       	breq	.+14     	; 0x2a60 <__vector_91+0x126>
						break;
					}
					gps[i] = 32;
    2a52:	fc 01       	movw	r30, r24
    2a54:	ea 5e       	subi	r30, 0xEA	; 234
    2a56:	fe 4d       	sbci	r31, 0xDE	; 222
    2a58:	40 83       	st	Z, r20
						idx = i;
						break;
					}
				}
				gps[idx] = 32;
				for(uint8_t i = idx+1; i < 15; i++){
    2a5a:	2f 5f       	subi	r18, 0xFF	; 255
    2a5c:	2f 30       	cpi	r18, 0x0F	; 15
    2a5e:	89 f7       	brne	.-30     	; 0x2a42 <__vector_91+0x108>
					if(gps[i] == 32){
						break;
					}
					gps[i] = 32;
				}
				sscanf(gps,"%ld",&val);
    2a60:	ce 01       	movw	r24, r28
    2a62:	01 96       	adiw	r24, 0x01	; 1
    2a64:	9f 93       	push	r25
    2a66:	8f 93       	push	r24
    2a68:	8d eb       	ldi	r24, 0xBD	; 189
    2a6a:	90 e2       	ldi	r25, 0x20	; 32
    2a6c:	9f 93       	push	r25
    2a6e:	8f 93       	push	r24
    2a70:	86 e1       	ldi	r24, 0x16	; 22
    2a72:	91 e2       	ldi	r25, 0x21	; 33
    2a74:	9f 93       	push	r25
    2a76:	8f 93       	push	r24
    2a78:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <sscanf>
				gps_t = (double) val;
    2a7c:	69 81       	ldd	r22, Y+1	; 0x01
    2a7e:	7a 81       	ldd	r23, Y+2	; 0x02
    2a80:	8b 81       	ldd	r24, Y+3	; 0x03
    2a82:	9c 81       	ldd	r25, Y+4	; 0x04
    2a84:	0f d4       	rcall	.+2078   	; 0x32a4 <__floatsisf>
    2a86:	60 93 e2 20 	sts	0x20E2, r22	; 0x8020e2 <gps_t>
    2a8a:	70 93 e3 20 	sts	0x20E3, r23	; 0x8020e3 <gps_t+0x1>
    2a8e:	80 93 e4 20 	sts	0x20E4, r24	; 0x8020e4 <gps_t+0x2>
    2a92:	90 93 e5 20 	sts	0x20E5, r25	; 0x8020e5 <gps_t+0x3>
				break;
    2a96:	0f 90       	pop	r0
    2a98:	0f 90       	pop	r0
    2a9a:	0f 90       	pop	r0
    2a9c:	0f 90       	pop	r0
    2a9e:	0f 90       	pop	r0
    2aa0:	0f 90       	pop	r0
    2aa2:	bf c1       	rjmp	.+894    	; 0x2e22 <__vector_91+0x4e8>
    2aa4:	e7 e1       	ldi	r30, 0x17	; 23
    2aa6:	f1 e2       	ldi	r31, 0x21	; 33
			case 2:			//Latitude
				for(uint8_t i = 0; i < 15; i++){
    2aa8:	81 e0       	ldi	r24, 0x01	; 1
					if(gps[i] == (uint8_t) '.'){
    2aaa:	91 91       	ld	r25, Z+
    2aac:	9e 32       	cpi	r25, 0x2E	; 46
    2aae:	29 f4       	brne	.+10     	; 0x2aba <__vector_91+0x180>
    2ab0:	01 c0       	rjmp	.+2      	; 0x2ab4 <__vector_91+0x17a>
    2ab2:	80 e0       	ldi	r24, 0x00	; 0
						idx = i;
    2ab4:	80 93 00 21 	sts	0x2100, r24	; 0x802100 <idx>
						break;
    2ab8:	03 c0       	rjmp	.+6      	; 0x2ac0 <__vector_91+0x186>
				}
				sscanf(gps,"%ld",&val);
				gps_t = (double) val;
				break;
			case 2:			//Latitude
				for(uint8_t i = 0; i < 15; i++){
    2aba:	8f 5f       	subi	r24, 0xFF	; 255
    2abc:	8f 30       	cpi	r24, 0x0F	; 15
    2abe:	a9 f7       	brne	.-22     	; 0x2aaa <__vector_91+0x170>
					if(gps[i] == (uint8_t) '.'){
						idx = i;
						break;
					}
				}
				gps[idx] = 32;
    2ac0:	20 91 00 21 	lds	r18, 0x2100	; 0x802100 <idx>
    2ac4:	42 2f       	mov	r20, r18
    2ac6:	50 e0       	ldi	r21, 0x00	; 0
    2ac8:	fa 01       	movw	r30, r20
    2aca:	ea 5e       	subi	r30, 0xEA	; 234
    2acc:	fe 4d       	sbci	r31, 0xDE	; 222
    2ace:	80 e2       	ldi	r24, 0x20	; 32
    2ad0:	80 83       	st	Z, r24
				for(uint8_t i = idx+1; i < 15; i++){
    2ad2:	2f 5f       	subi	r18, 0xFF	; 255
    2ad4:	2f 30       	cpi	r18, 0x0F	; 15
    2ad6:	f8 f4       	brcc	.+62     	; 0x2b16 <__vector_91+0x1dc>
					if(gps[i] == 32){
    2ad8:	82 2f       	mov	r24, r18
    2ada:	90 e0       	ldi	r25, 0x00	; 0
    2adc:	fc 01       	movw	r30, r24
    2ade:	ea 5e       	subi	r30, 0xEA	; 234
    2ae0:	fe 4d       	sbci	r31, 0xDE	; 222
    2ae2:	30 81       	ld	r19, Z
    2ae4:	30 32       	cpi	r19, 0x20	; 32
    2ae6:	b9 f0       	breq	.+46     	; 0x2b16 <__vector_91+0x1dc>
						break;
					}
					dec[i-idx-1] = gps[i];
					gps[i] = 32;
    2ae8:	60 e2       	ldi	r22, 0x20	; 32
    2aea:	08 c0       	rjmp	.+16     	; 0x2afc <__vector_91+0x1c2>
						break;
					}
				}
				gps[idx] = 32;
				for(uint8_t i = idx+1; i < 15; i++){
					if(gps[i] == 32){
    2aec:	82 2f       	mov	r24, r18
    2aee:	90 e0       	ldi	r25, 0x00	; 0
    2af0:	fc 01       	movw	r30, r24
    2af2:	ea 5e       	subi	r30, 0xEA	; 234
    2af4:	fe 4d       	sbci	r31, 0xDE	; 222
    2af6:	30 81       	ld	r19, Z
    2af8:	30 32       	cpi	r19, 0x20	; 32
    2afa:	69 f0       	breq	.+26     	; 0x2b16 <__vector_91+0x1dc>
						break;
					}
					dec[i-idx-1] = gps[i];
    2afc:	fc 01       	movw	r30, r24
    2afe:	e4 1b       	sub	r30, r20
    2b00:	f5 0b       	sbc	r31, r21
    2b02:	ec 5d       	subi	r30, 0xDC	; 220
    2b04:	fe 4d       	sbci	r31, 0xDE	; 222
    2b06:	30 83       	st	Z, r19
					gps[i] = 32;
    2b08:	fc 01       	movw	r30, r24
    2b0a:	ea 5e       	subi	r30, 0xEA	; 234
    2b0c:	fe 4d       	sbci	r31, 0xDE	; 222
    2b0e:	60 83       	st	Z, r22
						idx = i;
						break;
					}
				}
				gps[idx] = 32;
				for(uint8_t i = idx+1; i < 15; i++){
    2b10:	2f 5f       	subi	r18, 0xFF	; 255
    2b12:	2f 30       	cpi	r18, 0x0F	; 15
    2b14:	59 f7       	brne	.-42     	; 0x2aec <__vector_91+0x1b2>
						break;
					}
					dec[i-idx-1] = gps[i];
					gps[i] = 32;
				}
				if(dec[0] == 32){
    2b16:	80 91 25 21 	lds	r24, 0x2125	; 0x802125 <dec>
    2b1a:	80 32       	cpi	r24, 0x20	; 32
    2b1c:	19 f4       	brne	.+6      	; 0x2b24 <__vector_91+0x1ea>
					dec[0] = '0';
    2b1e:	80 e3       	ldi	r24, 0x30	; 48
    2b20:	80 93 25 21 	sts	0x2125, r24	; 0x802125 <dec>
				}
				sscanf(gps,"%ld",&val);
    2b24:	ce 01       	movw	r24, r28
    2b26:	01 96       	adiw	r24, 0x01	; 1
    2b28:	9f 93       	push	r25
    2b2a:	8f 93       	push	r24
    2b2c:	8d eb       	ldi	r24, 0xBD	; 189
    2b2e:	90 e2       	ldi	r25, 0x20	; 32
    2b30:	9f 93       	push	r25
    2b32:	8f 93       	push	r24
    2b34:	86 e1       	ldi	r24, 0x16	; 22
    2b36:	91 e2       	ldi	r25, 0x21	; 33
    2b38:	9f 93       	push	r25
    2b3a:	8f 93       	push	r24
    2b3c:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <sscanf>
				sscanf(dec,"%d",&val2);
    2b40:	ce 01       	movw	r24, r28
    2b42:	05 96       	adiw	r24, 0x05	; 5
    2b44:	9f 93       	push	r25
    2b46:	8f 93       	push	r24
    2b48:	81 ec       	ldi	r24, 0xC1	; 193
    2b4a:	90 e2       	ldi	r25, 0x20	; 32
    2b4c:	9f 93       	push	r25
    2b4e:	8f 93       	push	r24
    2b50:	85 e2       	ldi	r24, 0x25	; 37
    2b52:	91 e2       	ldi	r25, 0x21	; 33
    2b54:	9f 93       	push	r25
    2b56:	8f 93       	push	r24
    2b58:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <sscanf>
				gps_lat = val/100 + ((double)(val%100) + ((double)(val2))/10000) / 60.0;
    2b5c:	89 80       	ldd	r8, Y+1	; 0x01
    2b5e:	9a 80       	ldd	r9, Y+2	; 0x02
    2b60:	ab 80       	ldd	r10, Y+3	; 0x03
    2b62:	bc 80       	ldd	r11, Y+4	; 0x04
    2b64:	6d 81       	ldd	r22, Y+5	; 0x05
    2b66:	7e 81       	ldd	r23, Y+6	; 0x06
    2b68:	07 2e       	mov	r0, r23
    2b6a:	00 0c       	add	r0, r0
    2b6c:	88 0b       	sbc	r24, r24
    2b6e:	99 0b       	sbc	r25, r25
    2b70:	99 d3       	rcall	.+1842   	; 0x32a4 <__floatsisf>
    2b72:	20 e0       	ldi	r18, 0x00	; 0
    2b74:	30 e4       	ldi	r19, 0x40	; 64
    2b76:	4c e1       	ldi	r20, 0x1C	; 28
    2b78:	56 e4       	ldi	r21, 0x46	; 70
    2b7a:	bf d2       	rcall	.+1406   	; 0x30fa <__divsf3>
    2b7c:	6b 01       	movw	r12, r22
    2b7e:	7c 01       	movw	r14, r24
    2b80:	c5 01       	movw	r24, r10
    2b82:	b4 01       	movw	r22, r8
    2b84:	24 e6       	ldi	r18, 0x64	; 100
    2b86:	30 e0       	ldi	r19, 0x00	; 0
    2b88:	40 e0       	ldi	r20, 0x00	; 0
    2b8a:	50 e0       	ldi	r21, 0x00	; 0
    2b8c:	e7 d6       	rcall	.+3534   	; 0x395c <__divmodsi4>
    2b8e:	49 01       	movw	r8, r18
    2b90:	5a 01       	movw	r10, r20
    2b92:	88 d3       	rcall	.+1808   	; 0x32a4 <__floatsisf>
    2b94:	9b 01       	movw	r18, r22
    2b96:	ac 01       	movw	r20, r24
    2b98:	c7 01       	movw	r24, r14
    2b9a:	b6 01       	movw	r22, r12
    2b9c:	cd d1       	rcall	.+922    	; 0x2f38 <__addsf3>
    2b9e:	20 e0       	ldi	r18, 0x00	; 0
    2ba0:	30 e0       	ldi	r19, 0x00	; 0
    2ba2:	40 e7       	ldi	r20, 0x70	; 112
    2ba4:	52 e4       	ldi	r21, 0x42	; 66
    2ba6:	a9 d2       	rcall	.+1362   	; 0x30fa <__divsf3>
    2ba8:	6b 01       	movw	r12, r22
    2baa:	7c 01       	movw	r14, r24
    2bac:	c5 01       	movw	r24, r10
    2bae:	b4 01       	movw	r22, r8
    2bb0:	79 d3       	rcall	.+1778   	; 0x32a4 <__floatsisf>
    2bb2:	9b 01       	movw	r18, r22
    2bb4:	ac 01       	movw	r20, r24
    2bb6:	c7 01       	movw	r24, r14
    2bb8:	b6 01       	movw	r22, r12
    2bba:	be d1       	rcall	.+892    	; 0x2f38 <__addsf3>
    2bbc:	60 93 de 20 	sts	0x20DE, r22	; 0x8020de <gps_lat>
    2bc0:	70 93 df 20 	sts	0x20DF, r23	; 0x8020df <gps_lat+0x1>
    2bc4:	80 93 e0 20 	sts	0x20E0, r24	; 0x8020e0 <gps_lat+0x2>
    2bc8:	90 93 e1 20 	sts	0x20E1, r25	; 0x8020e1 <gps_lat+0x3>
				break;
    2bcc:	cd bf       	out	0x3d, r28	; 61
    2bce:	de bf       	out	0x3e, r29	; 62
    2bd0:	28 c1       	rjmp	.+592    	; 0x2e22 <__vector_91+0x4e8>
    2bd2:	e7 e1       	ldi	r30, 0x17	; 23
    2bd4:	f1 e2       	ldi	r31, 0x21	; 33
			case 4:			//Longitude
				for(uint8_t i = 0; i < 15; i++){
    2bd6:	81 e0       	ldi	r24, 0x01	; 1
					if(gps[i] == (uint8_t) '.'){
    2bd8:	91 91       	ld	r25, Z+
    2bda:	9e 32       	cpi	r25, 0x2E	; 46
    2bdc:	29 f4       	brne	.+10     	; 0x2be8 <__vector_91+0x2ae>
    2bde:	01 c0       	rjmp	.+2      	; 0x2be2 <__vector_91+0x2a8>
    2be0:	80 e0       	ldi	r24, 0x00	; 0
						idx = i;
    2be2:	80 93 00 21 	sts	0x2100, r24	; 0x802100 <idx>
						break;
    2be6:	03 c0       	rjmp	.+6      	; 0x2bee <__vector_91+0x2b4>
				sscanf(gps,"%ld",&val);
				sscanf(dec,"%d",&val2);
				gps_lat = val/100 + ((double)(val%100) + ((double)(val2))/10000) / 60.0;
				break;
			case 4:			//Longitude
				for(uint8_t i = 0; i < 15; i++){
    2be8:	8f 5f       	subi	r24, 0xFF	; 255
    2bea:	8f 30       	cpi	r24, 0x0F	; 15
    2bec:	a9 f7       	brne	.-22     	; 0x2bd8 <__vector_91+0x29e>
					if(gps[i] == (uint8_t) '.'){
						idx = i;
						break;
					}
				}
				gps[idx] = 32;
    2bee:	20 91 00 21 	lds	r18, 0x2100	; 0x802100 <idx>
    2bf2:	42 2f       	mov	r20, r18
    2bf4:	50 e0       	ldi	r21, 0x00	; 0
    2bf6:	fa 01       	movw	r30, r20
    2bf8:	ea 5e       	subi	r30, 0xEA	; 234
    2bfa:	fe 4d       	sbci	r31, 0xDE	; 222
    2bfc:	80 e2       	ldi	r24, 0x20	; 32
    2bfe:	80 83       	st	Z, r24
				for(uint8_t i = idx+1; i < 15; i++){
    2c00:	2f 5f       	subi	r18, 0xFF	; 255
    2c02:	2f 30       	cpi	r18, 0x0F	; 15
    2c04:	f8 f4       	brcc	.+62     	; 0x2c44 <__vector_91+0x30a>
					if(gps[i] == 32){
    2c06:	82 2f       	mov	r24, r18
    2c08:	90 e0       	ldi	r25, 0x00	; 0
    2c0a:	fc 01       	movw	r30, r24
    2c0c:	ea 5e       	subi	r30, 0xEA	; 234
    2c0e:	fe 4d       	sbci	r31, 0xDE	; 222
    2c10:	30 81       	ld	r19, Z
    2c12:	30 32       	cpi	r19, 0x20	; 32
    2c14:	b9 f0       	breq	.+46     	; 0x2c44 <__vector_91+0x30a>
						break;
					}
					dec[i-idx-1] = gps[i];
					gps[i] = 32;
    2c16:	60 e2       	ldi	r22, 0x20	; 32
    2c18:	08 c0       	rjmp	.+16     	; 0x2c2a <__vector_91+0x2f0>
						break;
					}
				}
				gps[idx] = 32;
				for(uint8_t i = idx+1; i < 15; i++){
					if(gps[i] == 32){
    2c1a:	82 2f       	mov	r24, r18
    2c1c:	90 e0       	ldi	r25, 0x00	; 0
    2c1e:	fc 01       	movw	r30, r24
    2c20:	ea 5e       	subi	r30, 0xEA	; 234
    2c22:	fe 4d       	sbci	r31, 0xDE	; 222
    2c24:	30 81       	ld	r19, Z
    2c26:	30 32       	cpi	r19, 0x20	; 32
    2c28:	69 f0       	breq	.+26     	; 0x2c44 <__vector_91+0x30a>
						break;
					}
					dec[i-idx-1] = gps[i];
    2c2a:	fc 01       	movw	r30, r24
    2c2c:	e4 1b       	sub	r30, r20
    2c2e:	f5 0b       	sbc	r31, r21
    2c30:	ec 5d       	subi	r30, 0xDC	; 220
    2c32:	fe 4d       	sbci	r31, 0xDE	; 222
    2c34:	30 83       	st	Z, r19
					gps[i] = 32;
    2c36:	fc 01       	movw	r30, r24
    2c38:	ea 5e       	subi	r30, 0xEA	; 234
    2c3a:	fe 4d       	sbci	r31, 0xDE	; 222
    2c3c:	60 83       	st	Z, r22
						idx = i;
						break;
					}
				}
				gps[idx] = 32;
				for(uint8_t i = idx+1; i < 15; i++){
    2c3e:	2f 5f       	subi	r18, 0xFF	; 255
    2c40:	2f 30       	cpi	r18, 0x0F	; 15
    2c42:	59 f7       	brne	.-42     	; 0x2c1a <__vector_91+0x2e0>
						break;
					}
					dec[i-idx-1] = gps[i];
					gps[i] = 32;
				}
				if(dec[0] == 32){
    2c44:	80 91 25 21 	lds	r24, 0x2125	; 0x802125 <dec>
    2c48:	80 32       	cpi	r24, 0x20	; 32
    2c4a:	19 f4       	brne	.+6      	; 0x2c52 <__vector_91+0x318>
					dec[0] = '0';
    2c4c:	80 e3       	ldi	r24, 0x30	; 48
    2c4e:	80 93 25 21 	sts	0x2125, r24	; 0x802125 <dec>
				}
				sscanf(gps,"%ld",&val);
    2c52:	ce 01       	movw	r24, r28
    2c54:	01 96       	adiw	r24, 0x01	; 1
    2c56:	9f 93       	push	r25
    2c58:	8f 93       	push	r24
    2c5a:	8d eb       	ldi	r24, 0xBD	; 189
    2c5c:	90 e2       	ldi	r25, 0x20	; 32
    2c5e:	9f 93       	push	r25
    2c60:	8f 93       	push	r24
    2c62:	86 e1       	ldi	r24, 0x16	; 22
    2c64:	91 e2       	ldi	r25, 0x21	; 33
    2c66:	9f 93       	push	r25
    2c68:	8f 93       	push	r24
    2c6a:	86 d7       	rcall	.+3852   	; 0x3b78 <sscanf>
				sscanf(dec,"%d",&val2);
    2c6c:	ce 01       	movw	r24, r28
    2c6e:	05 96       	adiw	r24, 0x05	; 5
    2c70:	9f 93       	push	r25
    2c72:	8f 93       	push	r24
    2c74:	81 ec       	ldi	r24, 0xC1	; 193
    2c76:	90 e2       	ldi	r25, 0x20	; 32
    2c78:	9f 93       	push	r25
    2c7a:	8f 93       	push	r24
    2c7c:	85 e2       	ldi	r24, 0x25	; 37
    2c7e:	91 e2       	ldi	r25, 0x21	; 33
    2c80:	9f 93       	push	r25
    2c82:	8f 93       	push	r24
    2c84:	79 d7       	rcall	.+3826   	; 0x3b78 <sscanf>
				gps_long = -(val/100 + ((double)(val%100) + ((double)(val2))/10000) / 60.0);
    2c86:	89 80       	ldd	r8, Y+1	; 0x01
    2c88:	9a 80       	ldd	r9, Y+2	; 0x02
    2c8a:	ab 80       	ldd	r10, Y+3	; 0x03
    2c8c:	bc 80       	ldd	r11, Y+4	; 0x04
    2c8e:	6d 81       	ldd	r22, Y+5	; 0x05
    2c90:	7e 81       	ldd	r23, Y+6	; 0x06
    2c92:	07 2e       	mov	r0, r23
    2c94:	00 0c       	add	r0, r0
    2c96:	88 0b       	sbc	r24, r24
    2c98:	99 0b       	sbc	r25, r25
    2c9a:	04 d3       	rcall	.+1544   	; 0x32a4 <__floatsisf>
    2c9c:	20 e0       	ldi	r18, 0x00	; 0
    2c9e:	30 e4       	ldi	r19, 0x40	; 64
    2ca0:	4c e1       	ldi	r20, 0x1C	; 28
    2ca2:	56 e4       	ldi	r21, 0x46	; 70
    2ca4:	2a d2       	rcall	.+1108   	; 0x30fa <__divsf3>
    2ca6:	6b 01       	movw	r12, r22
    2ca8:	7c 01       	movw	r14, r24
    2caa:	c5 01       	movw	r24, r10
    2cac:	b4 01       	movw	r22, r8
    2cae:	24 e6       	ldi	r18, 0x64	; 100
    2cb0:	30 e0       	ldi	r19, 0x00	; 0
    2cb2:	40 e0       	ldi	r20, 0x00	; 0
    2cb4:	50 e0       	ldi	r21, 0x00	; 0
    2cb6:	52 d6       	rcall	.+3236   	; 0x395c <__divmodsi4>
    2cb8:	49 01       	movw	r8, r18
    2cba:	5a 01       	movw	r10, r20
    2cbc:	f3 d2       	rcall	.+1510   	; 0x32a4 <__floatsisf>
    2cbe:	9b 01       	movw	r18, r22
    2cc0:	ac 01       	movw	r20, r24
    2cc2:	c7 01       	movw	r24, r14
    2cc4:	b6 01       	movw	r22, r12
    2cc6:	38 d1       	rcall	.+624    	; 0x2f38 <__addsf3>
    2cc8:	20 e0       	ldi	r18, 0x00	; 0
    2cca:	30 e0       	ldi	r19, 0x00	; 0
    2ccc:	40 e7       	ldi	r20, 0x70	; 112
    2cce:	52 e4       	ldi	r21, 0x42	; 66
    2cd0:	14 d2       	rcall	.+1064   	; 0x30fa <__divsf3>
    2cd2:	6b 01       	movw	r12, r22
    2cd4:	7c 01       	movw	r14, r24
    2cd6:	c5 01       	movw	r24, r10
    2cd8:	b4 01       	movw	r22, r8
    2cda:	e4 d2       	rcall	.+1480   	; 0x32a4 <__floatsisf>
    2cdc:	9b 01       	movw	r18, r22
    2cde:	ac 01       	movw	r20, r24
    2ce0:	c7 01       	movw	r24, r14
    2ce2:	b6 01       	movw	r22, r12
    2ce4:	29 d1       	rcall	.+594    	; 0x2f38 <__addsf3>
    2ce6:	dc 01       	movw	r26, r24
    2ce8:	cb 01       	movw	r24, r22
    2cea:	b0 58       	subi	r27, 0x80	; 128
    2cec:	80 93 da 20 	sts	0x20DA, r24	; 0x8020da <gps_long>
    2cf0:	90 93 db 20 	sts	0x20DB, r25	; 0x8020db <gps_long+0x1>
    2cf4:	a0 93 dc 20 	sts	0x20DC, r26	; 0x8020dc <gps_long+0x2>
    2cf8:	b0 93 dd 20 	sts	0x20DD, r27	; 0x8020dd <gps_long+0x3>
				break;
    2cfc:	cd bf       	out	0x3d, r28	; 61
    2cfe:	de bf       	out	0x3e, r29	; 62
    2d00:	90 c0       	rjmp	.+288    	; 0x2e22 <__vector_91+0x4e8>
			case 7:			//Sats
				sscanf(gps,"%d",&gps_sats);
    2d02:	84 ed       	ldi	r24, 0xD4	; 212
    2d04:	90 e2       	ldi	r25, 0x20	; 32
    2d06:	9f 93       	push	r25
    2d08:	8f 93       	push	r24
    2d0a:	81 ec       	ldi	r24, 0xC1	; 193
    2d0c:	90 e2       	ldi	r25, 0x20	; 32
    2d0e:	9f 93       	push	r25
    2d10:	8f 93       	push	r24
    2d12:	86 e1       	ldi	r24, 0x16	; 22
    2d14:	91 e2       	ldi	r25, 0x21	; 33
    2d16:	9f 93       	push	r25
    2d18:	8f 93       	push	r24
    2d1a:	2e d7       	rcall	.+3676   	; 0x3b78 <sscanf>
    2d1c:	0f 90       	pop	r0
				break;
    2d1e:	0f 90       	pop	r0
    2d20:	0f 90       	pop	r0
    2d22:	0f 90       	pop	r0
    2d24:	0f 90       	pop	r0
    2d26:	0f 90       	pop	r0
    2d28:	7c c0       	rjmp	.+248    	; 0x2e22 <__vector_91+0x4e8>
    2d2a:	e7 e1       	ldi	r30, 0x17	; 23
    2d2c:	f1 e2       	ldi	r31, 0x21	; 33
    2d2e:	81 e0       	ldi	r24, 0x01	; 1
			case 9:			//Altitude
				for(uint8_t i = 0; i < 15; i++){
    2d30:	91 91       	ld	r25, Z+
					if(gps[i] == (uint8_t) '.'){
    2d32:	9e 32       	cpi	r25, 0x2E	; 46
    2d34:	29 f4       	brne	.+10     	; 0x2d40 <__vector_91+0x406>
    2d36:	01 c0       	rjmp	.+2      	; 0x2d3a <__vector_91+0x400>
    2d38:	80 e0       	ldi	r24, 0x00	; 0
    2d3a:	80 93 00 21 	sts	0x2100, r24	; 0x802100 <idx>
						idx = i;
    2d3e:	03 c0       	rjmp	.+6      	; 0x2d46 <__vector_91+0x40c>
						break;
    2d40:	8f 5f       	subi	r24, 0xFF	; 255
				break;
			case 7:			//Sats
				sscanf(gps,"%d",&gps_sats);
				break;
			case 9:			//Altitude
				for(uint8_t i = 0; i < 15; i++){
    2d42:	8f 30       	cpi	r24, 0x0F	; 15
    2d44:	a9 f7       	brne	.-22     	; 0x2d30 <__vector_91+0x3f6>
    2d46:	20 91 00 21 	lds	r18, 0x2100	; 0x802100 <idx>
					if(gps[i] == (uint8_t) '.'){
						idx = i;
						break;
					}
				}
				gps[idx] = 32;
    2d4a:	42 2f       	mov	r20, r18
    2d4c:	50 e0       	ldi	r21, 0x00	; 0
    2d4e:	fa 01       	movw	r30, r20
    2d50:	ea 5e       	subi	r30, 0xEA	; 234
    2d52:	fe 4d       	sbci	r31, 0xDE	; 222
    2d54:	80 e2       	ldi	r24, 0x20	; 32
    2d56:	80 83       	st	Z, r24
    2d58:	2f 5f       	subi	r18, 0xFF	; 255
				for(uint8_t i = idx+1; i < 15; i++){
    2d5a:	2f 30       	cpi	r18, 0x0F	; 15
    2d5c:	f8 f4       	brcc	.+62     	; 0x2d9c <__vector_91+0x462>
    2d5e:	82 2f       	mov	r24, r18
					if(gps[i] == 32){
    2d60:	90 e0       	ldi	r25, 0x00	; 0
    2d62:	fc 01       	movw	r30, r24
    2d64:	ea 5e       	subi	r30, 0xEA	; 234
    2d66:	fe 4d       	sbci	r31, 0xDE	; 222
    2d68:	30 81       	ld	r19, Z
    2d6a:	30 32       	cpi	r19, 0x20	; 32
    2d6c:	b9 f0       	breq	.+46     	; 0x2d9c <__vector_91+0x462>
    2d6e:	60 e2       	ldi	r22, 0x20	; 32
						break;
					}
					dec[i-idx-1] = gps[i];
					gps[i] = 32;
    2d70:	08 c0       	rjmp	.+16     	; 0x2d82 <__vector_91+0x448>
    2d72:	82 2f       	mov	r24, r18
						break;
					}
				}
				gps[idx] = 32;
				for(uint8_t i = idx+1; i < 15; i++){
					if(gps[i] == 32){
    2d74:	90 e0       	ldi	r25, 0x00	; 0
    2d76:	fc 01       	movw	r30, r24
    2d78:	ea 5e       	subi	r30, 0xEA	; 234
    2d7a:	fe 4d       	sbci	r31, 0xDE	; 222
    2d7c:	30 81       	ld	r19, Z
    2d7e:	30 32       	cpi	r19, 0x20	; 32
    2d80:	69 f0       	breq	.+26     	; 0x2d9c <__vector_91+0x462>
    2d82:	fc 01       	movw	r30, r24
						break;
					}
					dec[i-idx-1] = gps[i];
    2d84:	e4 1b       	sub	r30, r20
    2d86:	f5 0b       	sbc	r31, r21
    2d88:	ec 5d       	subi	r30, 0xDC	; 220
    2d8a:	fe 4d       	sbci	r31, 0xDE	; 222
    2d8c:	30 83       	st	Z, r19
    2d8e:	fc 01       	movw	r30, r24
					gps[i] = 32;
    2d90:	ea 5e       	subi	r30, 0xEA	; 234
    2d92:	fe 4d       	sbci	r31, 0xDE	; 222
    2d94:	60 83       	st	Z, r22
    2d96:	2f 5f       	subi	r18, 0xFF	; 255
						idx = i;
						break;
					}
				}
				gps[idx] = 32;
				for(uint8_t i = idx+1; i < 15; i++){
    2d98:	2f 30       	cpi	r18, 0x0F	; 15
    2d9a:	59 f7       	brne	.-42     	; 0x2d72 <__vector_91+0x438>
    2d9c:	80 91 25 21 	lds	r24, 0x2125	; 0x802125 <dec>
						break;
					}
					dec[i-idx-1] = gps[i];
					gps[i] = 32;
				}
				if(dec[0] == 32){
    2da0:	80 32       	cpi	r24, 0x20	; 32
    2da2:	19 f4       	brne	.+6      	; 0x2daa <__vector_91+0x470>
					dec[0] = '0';
    2da4:	80 e3       	ldi	r24, 0x30	; 48
    2da6:	80 93 25 21 	sts	0x2125, r24	; 0x802125 <dec>
				}
				sscanf(gps,"%ld",&val);
    2daa:	ce 01       	movw	r24, r28
    2dac:	01 96       	adiw	r24, 0x01	; 1
    2dae:	9f 93       	push	r25
    2db0:	8f 93       	push	r24
    2db2:	8d eb       	ldi	r24, 0xBD	; 189
    2db4:	90 e2       	ldi	r25, 0x20	; 32
    2db6:	9f 93       	push	r25
    2db8:	8f 93       	push	r24
    2dba:	86 e1       	ldi	r24, 0x16	; 22
    2dbc:	91 e2       	ldi	r25, 0x21	; 33
    2dbe:	9f 93       	push	r25
    2dc0:	8f 93       	push	r24
				sscanf(dec,"%d",&val2);
    2dc2:	da d6       	rcall	.+3508   	; 0x3b78 <sscanf>
    2dc4:	ce 01       	movw	r24, r28
    2dc6:	05 96       	adiw	r24, 0x05	; 5
    2dc8:	9f 93       	push	r25
    2dca:	8f 93       	push	r24
    2dcc:	81 ec       	ldi	r24, 0xC1	; 193
    2dce:	90 e2       	ldi	r25, 0x20	; 32
    2dd0:	9f 93       	push	r25
    2dd2:	8f 93       	push	r24
    2dd4:	85 e2       	ldi	r24, 0x25	; 37
    2dd6:	91 e2       	ldi	r25, 0x21	; 33
    2dd8:	9f 93       	push	r25
				gps_alt = (double) val + ((double) val2/10.0);
    2dda:	8f 93       	push	r24
    2ddc:	cd d6       	rcall	.+3482   	; 0x3b78 <sscanf>
    2dde:	69 81       	ldd	r22, Y+1	; 0x01
    2de0:	7a 81       	ldd	r23, Y+2	; 0x02
    2de2:	8b 81       	ldd	r24, Y+3	; 0x03
    2de4:	9c 81       	ldd	r25, Y+4	; 0x04
    2de6:	5e d2       	rcall	.+1212   	; 0x32a4 <__floatsisf>
    2de8:	6b 01       	movw	r12, r22
    2dea:	7c 01       	movw	r14, r24
    2dec:	6d 81       	ldd	r22, Y+5	; 0x05
    2dee:	7e 81       	ldd	r23, Y+6	; 0x06
    2df0:	07 2e       	mov	r0, r23
    2df2:	00 0c       	add	r0, r0
    2df4:	88 0b       	sbc	r24, r24
    2df6:	99 0b       	sbc	r25, r25
    2df8:	55 d2       	rcall	.+1194   	; 0x32a4 <__floatsisf>
    2dfa:	20 e0       	ldi	r18, 0x00	; 0
    2dfc:	30 e0       	ldi	r19, 0x00	; 0
    2dfe:	40 e2       	ldi	r20, 0x20	; 32
    2e00:	51 e4       	ldi	r21, 0x41	; 65
    2e02:	7b d1       	rcall	.+758    	; 0x30fa <__divsf3>
    2e04:	9b 01       	movw	r18, r22
    2e06:	ac 01       	movw	r20, r24
    2e08:	c7 01       	movw	r24, r14
    2e0a:	b6 01       	movw	r22, r12
    2e0c:	95 d0       	rcall	.+298    	; 0x2f38 <__addsf3>
    2e0e:	60 93 d6 20 	sts	0x20D6, r22	; 0x8020d6 <gps_alt>
    2e12:	70 93 d7 20 	sts	0x20D7, r23	; 0x8020d7 <gps_alt+0x1>
    2e16:	80 93 d8 20 	sts	0x20D8, r24	; 0x8020d8 <gps_alt+0x2>
    2e1a:	90 93 d9 20 	sts	0x20D9, r25	; 0x8020d9 <gps_alt+0x3>
    2e1e:	cd bf       	out	0x3d, r28	; 61
				break;
    2e20:	de bf       	out	0x3e, r29	; 62
    2e22:	80 91 04 21 	lds	r24, 0x2104	; 0x802104 <writing>
		}
	
		if(writing){
    2e26:	88 23       	and	r24, r24
    2e28:	d1 f0       	breq	.+52     	; 0x2e5e <__vector_91+0x524>
    2e2a:	10 92 00 21 	sts	0x2100, r1	; 0x802100 <idx>
			idx = 0;
    2e2e:	80 91 01 21 	lds	r24, 0x2101	; 0x802101 <commas>
			commas++;
    2e32:	8f 5f       	subi	r24, 0xFF	; 255
    2e34:	80 93 01 21 	sts	0x2101, r24	; 0x802101 <commas>
    2e38:	10 92 02 21 	sts	0x2102, r1	; 0x802102 <word_pos>
			word_pos = 0;
    2e3c:	e6 e1       	ldi	r30, 0x16	; 22
    2e3e:	f1 e2       	ldi	r31, 0x21	; 33
    2e40:	25 e2       	ldi	r18, 0x25	; 37
    2e42:	31 e2       	ldi	r19, 0x21	; 33
    2e44:	80 e2       	ldi	r24, 0x20	; 32
			for(uint8_t i = 0; i < 15; i++){
				gps[i] = 32;
    2e46:	81 93       	st	Z+, r24
    2e48:	2e 17       	cp	r18, r30
	
		if(writing){
			idx = 0;
			commas++;
			word_pos = 0;
			for(uint8_t i = 0; i < 15; i++){
    2e4a:	3f 07       	cpc	r19, r31
    2e4c:	e1 f7       	brne	.-8      	; 0x2e46 <__vector_91+0x50c>
    2e4e:	e5 e2       	ldi	r30, 0x25	; 37
				gps[i] = 32;
			}
			for(uint8_t i = 0; i < 5; i++){
				dec[i] = 32;
    2e50:	f1 e2       	ldi	r31, 0x21	; 33
    2e52:	80 e2       	ldi	r24, 0x20	; 32
    2e54:	80 83       	st	Z, r24
    2e56:	81 83       	std	Z+1, r24	; 0x01
    2e58:	82 83       	std	Z+2, r24	; 0x02
    2e5a:	83 83       	std	Z+3, r24	; 0x03
    2e5c:	84 83       	std	Z+4, r24	; 0x04
    2e5e:	80 91 04 21 	lds	r24, 0x2104	; 0x802104 <writing>
			}
		}
	}
		
	if(writing){
    2e62:	88 23       	and	r24, r24
    2e64:	09 f4       	brne	.+2      	; 0x2e68 <__vector_91+0x52e>
    2e66:	40 c0       	rjmp	.+128    	; 0x2ee8 <__vector_91+0x5ae>
    2e68:	90 91 03 21 	lds	r25, 0x2103	; 0x802103 <pos>
		switch(pos){
    2e6c:	93 30       	cpi	r25, 0x03	; 3
    2e6e:	19 f0       	breq	.+6      	; 0x2e76 <__vector_91+0x53c>
    2e70:	94 30       	cpi	r25, 0x04	; 4
    2e72:	31 f0       	breq	.+12     	; 0x2e80 <__vector_91+0x546>
    2e74:	09 c0       	rjmp	.+18     	; 0x2e88 <__vector_91+0x54e>
    2e76:	17 34       	cpi	r17, 0x47	; 71
			case 3:
				if(c != 'G'){
    2e78:	39 f0       	breq	.+14     	; 0x2e88 <__vector_91+0x54e>
    2e7a:	10 92 04 21 	sts	0x2104, r1	; 0x802104 <writing>
					writing = 0;
    2e7e:	04 c0       	rjmp	.+8      	; 0x2e88 <__vector_91+0x54e>
    2e80:	17 34       	cpi	r17, 0x47	; 71
				}
				break;
				
			case 4:
				if(c != 'G'){
    2e82:	11 f0       	breq	.+4      	; 0x2e88 <__vector_91+0x54e>
    2e84:	10 92 04 21 	sts	0x2104, r1	; 0x802104 <writing>
					writing = 0;
    2e88:	80 91 02 21 	lds	r24, 0x2102	; 0x802102 <word_pos>
				}
				break;
		}
		gps[word_pos] = c;
    2e8c:	e8 2f       	mov	r30, r24
    2e8e:	f0 e0       	ldi	r31, 0x00	; 0
    2e90:	ea 5e       	subi	r30, 0xEA	; 234
    2e92:	fe 4d       	sbci	r31, 0xDE	; 222
    2e94:	10 83       	st	Z, r17
    2e96:	8f 5f       	subi	r24, 0xFF	; 255
		word_pos++;
    2e98:	80 93 02 21 	sts	0x2102, r24	; 0x802102 <word_pos>
    2e9c:	9f 5f       	subi	r25, 0xFF	; 255
		pos++;
    2e9e:	90 93 03 21 	sts	0x2103, r25	; 0x802103 <pos>
    2ea2:	22 c0       	rjmp	.+68     	; 0x2ee8 <__vector_91+0x5ae>
	}
    2ea4:	80 91 16 21 	lds	r24, 0x2116	; 0x802116 <gps>
		int32_t val = 0;
		int16_t val2 = 0;
		switch(commas){
			case 1:			//Time
				for(uint8_t i = 0; i < 15; i++){
					if(gps[i] == (uint8_t) '.'){
    2ea8:	8e 32       	cpi	r24, 0x2E	; 46
    2eaa:	09 f4       	brne	.+2      	; 0x2eae <__vector_91+0x574>
    2eac:	ae cd       	rjmp	.-1188   	; 0x2a0a <__vector_91+0xd0>
    2eae:	e7 e1       	ldi	r30, 0x17	; 23
    2eb0:	f1 e2       	ldi	r31, 0x21	; 33
    2eb2:	81 e0       	ldi	r24, 0x01	; 1
		}
		int32_t val = 0;
		int16_t val2 = 0;
		switch(commas){
			case 1:			//Time
				for(uint8_t i = 0; i < 15; i++){
    2eb4:	a6 cd       	rjmp	.-1204   	; 0x2a02 <__vector_91+0xc8>
    2eb6:	19 82       	std	Y+1, r1	; 0x01
	else if(c == (uint8_t) ','){
		gps[0] = 32;
		if(gps[1] == 32){
			gps[0] = '0';
		}
		int32_t val = 0;
    2eb8:	1a 82       	std	Y+2, r1	; 0x02
    2eba:	1b 82       	std	Y+3, r1	; 0x03
    2ebc:	1c 82       	std	Y+4, r1	; 0x04
    2ebe:	1d 82       	std	Y+5, r1	; 0x05
		int16_t val2 = 0;
    2ec0:	1e 82       	std	Y+6, r1	; 0x06
    2ec2:	80 91 01 21 	lds	r24, 0x2101	; 0x802101 <commas>
		switch(commas){
    2ec6:	84 30       	cpi	r24, 0x04	; 4
    2ec8:	09 f4       	brne	.+2      	; 0x2ecc <__vector_91+0x592>
    2eca:	8f cd       	rjmp	.-1250   	; 0x29ea <__vector_91+0xb0>
    2ecc:	30 f4       	brcc	.+12     	; 0x2eda <__vector_91+0x5a0>
    2ece:	81 30       	cpi	r24, 0x01	; 1
    2ed0:	49 f3       	breq	.-46     	; 0x2ea4 <__vector_91+0x56a>
    2ed2:	82 30       	cpi	r24, 0x02	; 2
    2ed4:	09 f4       	brne	.+2      	; 0x2ed8 <__vector_91+0x59e>
    2ed6:	8f cd       	rjmp	.-1250   	; 0x29f6 <__vector_91+0xbc>
    2ed8:	a4 cf       	rjmp	.-184    	; 0x2e22 <__vector_91+0x4e8>
    2eda:	87 30       	cpi	r24, 0x07	; 7
    2edc:	09 f4       	brne	.+2      	; 0x2ee0 <__vector_91+0x5a6>
    2ede:	11 cf       	rjmp	.-478    	; 0x2d02 <__vector_91+0x3c8>
    2ee0:	89 30       	cpi	r24, 0x09	; 9
    2ee2:	09 f4       	brne	.+2      	; 0x2ee6 <__vector_91+0x5ac>
    2ee4:	7c cd       	rjmp	.-1288   	; 0x29de <__vector_91+0xa4>
    2ee6:	9d cf       	rjmp	.-198    	; 0x2e22 <__vector_91+0x4e8>
    2ee8:	26 96       	adiw	r28, 0x06	; 6
		}
		gps[word_pos] = c;
		word_pos++;
		pos++;
	}
    2eea:	cd bf       	out	0x3d, r28	; 61
    2eec:	de bf       	out	0x3e, r29	; 62
    2eee:	df 91       	pop	r29
    2ef0:	cf 91       	pop	r28
    2ef2:	ff 91       	pop	r31
    2ef4:	ef 91       	pop	r30
    2ef6:	bf 91       	pop	r27
    2ef8:	af 91       	pop	r26
    2efa:	9f 91       	pop	r25
    2efc:	8f 91       	pop	r24
    2efe:	7f 91       	pop	r23
    2f00:	6f 91       	pop	r22
    2f02:	5f 91       	pop	r21
    2f04:	4f 91       	pop	r20
    2f06:	3f 91       	pop	r19
    2f08:	2f 91       	pop	r18
    2f0a:	1f 91       	pop	r17
    2f0c:	ff 90       	pop	r15
    2f0e:	ef 90       	pop	r14
    2f10:	df 90       	pop	r13
    2f12:	cf 90       	pop	r12
    2f14:	bf 90       	pop	r11
    2f16:	af 90       	pop	r10
    2f18:	9f 90       	pop	r9
    2f1a:	8f 90       	pop	r8
    2f1c:	0f 90       	pop	r0
    2f1e:	0b be       	out	0x3b, r0	; 59
    2f20:	0f 90       	pop	r0
    2f22:	0a be       	out	0x3a, r0	; 58
    2f24:	0f 90       	pop	r0
    2f26:	09 be       	out	0x39, r0	; 57
    2f28:	0f 90       	pop	r0
    2f2a:	08 be       	out	0x38, r0	; 56
    2f2c:	0f 90       	pop	r0
    2f2e:	0f be       	out	0x3f, r0	; 63
    2f30:	0f 90       	pop	r0
    2f32:	1f 90       	pop	r1
    2f34:	18 95       	reti

00002f36 <__subsf3>:
    2f36:	50 58       	subi	r21, 0x80	; 128

00002f38 <__addsf3>:
    2f38:	bb 27       	eor	r27, r27
    2f3a:	aa 27       	eor	r26, r26
    2f3c:	0e d0       	rcall	.+28     	; 0x2f5a <__addsf3x>
    2f3e:	89 c2       	rjmp	.+1298   	; 0x3452 <__fp_round>
    2f40:	7a d2       	rcall	.+1268   	; 0x3436 <__fp_pscA>
    2f42:	30 f0       	brcs	.+12     	; 0x2f50 <__addsf3+0x18>
    2f44:	7f d2       	rcall	.+1278   	; 0x3444 <__fp_pscB>
    2f46:	20 f0       	brcs	.+8      	; 0x2f50 <__addsf3+0x18>
    2f48:	31 f4       	brne	.+12     	; 0x2f56 <__addsf3+0x1e>
    2f4a:	9f 3f       	cpi	r25, 0xFF	; 255
    2f4c:	11 f4       	brne	.+4      	; 0x2f52 <__addsf3+0x1a>
    2f4e:	1e f4       	brtc	.+6      	; 0x2f56 <__addsf3+0x1e>
    2f50:	29 c2       	rjmp	.+1106   	; 0x33a4 <__fp_nan>
    2f52:	0e f4       	brtc	.+2      	; 0x2f56 <__addsf3+0x1e>
    2f54:	e0 95       	com	r30
    2f56:	e7 fb       	bst	r30, 7
    2f58:	1f c2       	rjmp	.+1086   	; 0x3398 <__fp_inf>

00002f5a <__addsf3x>:
    2f5a:	e9 2f       	mov	r30, r25
    2f5c:	8b d2       	rcall	.+1302   	; 0x3474 <__fp_split3>
    2f5e:	80 f3       	brcs	.-32     	; 0x2f40 <__addsf3+0x8>
    2f60:	ba 17       	cp	r27, r26
    2f62:	62 07       	cpc	r22, r18
    2f64:	73 07       	cpc	r23, r19
    2f66:	84 07       	cpc	r24, r20
    2f68:	95 07       	cpc	r25, r21
    2f6a:	18 f0       	brcs	.+6      	; 0x2f72 <__addsf3x+0x18>
    2f6c:	71 f4       	brne	.+28     	; 0x2f8a <__addsf3x+0x30>
    2f6e:	9e f5       	brtc	.+102    	; 0x2fd6 <__addsf3x+0x7c>
    2f70:	a3 c2       	rjmp	.+1350   	; 0x34b8 <__fp_zero>
    2f72:	0e f4       	brtc	.+2      	; 0x2f76 <__addsf3x+0x1c>
    2f74:	e0 95       	com	r30
    2f76:	0b 2e       	mov	r0, r27
    2f78:	ba 2f       	mov	r27, r26
    2f7a:	a0 2d       	mov	r26, r0
    2f7c:	0b 01       	movw	r0, r22
    2f7e:	b9 01       	movw	r22, r18
    2f80:	90 01       	movw	r18, r0
    2f82:	0c 01       	movw	r0, r24
    2f84:	ca 01       	movw	r24, r20
    2f86:	a0 01       	movw	r20, r0
    2f88:	11 24       	eor	r1, r1
    2f8a:	ff 27       	eor	r31, r31
    2f8c:	59 1b       	sub	r21, r25
    2f8e:	99 f0       	breq	.+38     	; 0x2fb6 <__addsf3x+0x5c>
    2f90:	59 3f       	cpi	r21, 0xF9	; 249
    2f92:	50 f4       	brcc	.+20     	; 0x2fa8 <__addsf3x+0x4e>
    2f94:	50 3e       	cpi	r21, 0xE0	; 224
    2f96:	68 f1       	brcs	.+90     	; 0x2ff2 <__addsf3x+0x98>
    2f98:	1a 16       	cp	r1, r26
    2f9a:	f0 40       	sbci	r31, 0x00	; 0
    2f9c:	a2 2f       	mov	r26, r18
    2f9e:	23 2f       	mov	r18, r19
    2fa0:	34 2f       	mov	r19, r20
    2fa2:	44 27       	eor	r20, r20
    2fa4:	58 5f       	subi	r21, 0xF8	; 248
    2fa6:	f3 cf       	rjmp	.-26     	; 0x2f8e <__addsf3x+0x34>
    2fa8:	46 95       	lsr	r20
    2faa:	37 95       	ror	r19
    2fac:	27 95       	ror	r18
    2fae:	a7 95       	ror	r26
    2fb0:	f0 40       	sbci	r31, 0x00	; 0
    2fb2:	53 95       	inc	r21
    2fb4:	c9 f7       	brne	.-14     	; 0x2fa8 <__addsf3x+0x4e>
    2fb6:	7e f4       	brtc	.+30     	; 0x2fd6 <__addsf3x+0x7c>
    2fb8:	1f 16       	cp	r1, r31
    2fba:	ba 0b       	sbc	r27, r26
    2fbc:	62 0b       	sbc	r22, r18
    2fbe:	73 0b       	sbc	r23, r19
    2fc0:	84 0b       	sbc	r24, r20
    2fc2:	ba f0       	brmi	.+46     	; 0x2ff2 <__addsf3x+0x98>
    2fc4:	91 50       	subi	r25, 0x01	; 1
    2fc6:	a1 f0       	breq	.+40     	; 0x2ff0 <__addsf3x+0x96>
    2fc8:	ff 0f       	add	r31, r31
    2fca:	bb 1f       	adc	r27, r27
    2fcc:	66 1f       	adc	r22, r22
    2fce:	77 1f       	adc	r23, r23
    2fd0:	88 1f       	adc	r24, r24
    2fd2:	c2 f7       	brpl	.-16     	; 0x2fc4 <__addsf3x+0x6a>
    2fd4:	0e c0       	rjmp	.+28     	; 0x2ff2 <__addsf3x+0x98>
    2fd6:	ba 0f       	add	r27, r26
    2fd8:	62 1f       	adc	r22, r18
    2fda:	73 1f       	adc	r23, r19
    2fdc:	84 1f       	adc	r24, r20
    2fde:	48 f4       	brcc	.+18     	; 0x2ff2 <__addsf3x+0x98>
    2fe0:	87 95       	ror	r24
    2fe2:	77 95       	ror	r23
    2fe4:	67 95       	ror	r22
    2fe6:	b7 95       	ror	r27
    2fe8:	f7 95       	ror	r31
    2fea:	9e 3f       	cpi	r25, 0xFE	; 254
    2fec:	08 f0       	brcs	.+2      	; 0x2ff0 <__addsf3x+0x96>
    2fee:	b3 cf       	rjmp	.-154    	; 0x2f56 <__addsf3+0x1e>
    2ff0:	93 95       	inc	r25
    2ff2:	88 0f       	add	r24, r24
    2ff4:	08 f0       	brcs	.+2      	; 0x2ff8 <__addsf3x+0x9e>
    2ff6:	99 27       	eor	r25, r25
    2ff8:	ee 0f       	add	r30, r30
    2ffa:	97 95       	ror	r25
    2ffc:	87 95       	ror	r24
    2ffe:	08 95       	ret

00003000 <asin>:
    3000:	9f 93       	push	r25
    3002:	9f 77       	andi	r25, 0x7F	; 127
    3004:	ee e3       	ldi	r30, 0x3E	; 62
    3006:	89 37       	cpi	r24, 0x79	; 121
    3008:	9e 07       	cpc	r25, r30
    300a:	20 f4       	brcc	.+8      	; 0x3014 <asin+0x14>
    300c:	ec ef       	ldi	r30, 0xFC	; 252
    300e:	f1 e0       	ldi	r31, 0x01	; 1
    3010:	01 d2       	rcall	.+1026   	; 0x3414 <__fp_powsodd>
    3012:	09 c0       	rjmp	.+18     	; 0x3026 <asin+0x26>
    3014:	82 d1       	rcall	.+772    	; 0x331a <__fp_arccos>
    3016:	90 58       	subi	r25, 0x80	; 128
    3018:	a2 ea       	ldi	r26, 0xA2	; 162
    301a:	2a ed       	ldi	r18, 0xDA	; 218
    301c:	3f e0       	ldi	r19, 0x0F	; 15
    301e:	49 ec       	ldi	r20, 0xC9	; 201
    3020:	5f e3       	ldi	r21, 0x3F	; 63
    3022:	9b df       	rcall	.-202    	; 0x2f5a <__addsf3x>
    3024:	16 d2       	rcall	.+1068   	; 0x3452 <__fp_round>
    3026:	0f 90       	pop	r0
    3028:	07 fc       	sbrc	r0, 7
    302a:	90 58       	subi	r25, 0x80	; 128
    302c:	08 95       	ret
    302e:	03 d2       	rcall	.+1030   	; 0x3436 <__fp_pscA>
    3030:	58 f0       	brcs	.+22     	; 0x3048 <asin+0x48>
    3032:	80 e8       	ldi	r24, 0x80	; 128
    3034:	91 e0       	ldi	r25, 0x01	; 1
    3036:	09 f4       	brne	.+2      	; 0x303a <asin+0x3a>
    3038:	9e ef       	ldi	r25, 0xFE	; 254
    303a:	04 d2       	rcall	.+1032   	; 0x3444 <__fp_pscB>
    303c:	28 f0       	brcs	.+10     	; 0x3048 <asin+0x48>
    303e:	40 e8       	ldi	r20, 0x80	; 128
    3040:	51 e0       	ldi	r21, 0x01	; 1
    3042:	59 f4       	brne	.+22     	; 0x305a <atan2+0xe>
    3044:	5e ef       	ldi	r21, 0xFE	; 254
    3046:	09 c0       	rjmp	.+18     	; 0x305a <atan2+0xe>
    3048:	ad c1       	rjmp	.+858    	; 0x33a4 <__fp_nan>
    304a:	36 c2       	rjmp	.+1132   	; 0x34b8 <__fp_zero>

0000304c <atan2>:
    304c:	e9 2f       	mov	r30, r25
    304e:	e0 78       	andi	r30, 0x80	; 128
    3050:	11 d2       	rcall	.+1058   	; 0x3474 <__fp_split3>
    3052:	68 f3       	brcs	.-38     	; 0x302e <asin+0x2e>
    3054:	09 2e       	mov	r0, r25
    3056:	05 2a       	or	r0, r21
    3058:	c1 f3       	breq	.-16     	; 0x304a <asin+0x4a>
    305a:	26 17       	cp	r18, r22
    305c:	37 07       	cpc	r19, r23
    305e:	48 07       	cpc	r20, r24
    3060:	59 07       	cpc	r21, r25
    3062:	38 f0       	brcs	.+14     	; 0x3072 <atan2+0x26>
    3064:	0e 2e       	mov	r0, r30
    3066:	07 f8       	bld	r0, 7
    3068:	e0 25       	eor	r30, r0
    306a:	69 f0       	breq	.+26     	; 0x3086 <atan2+0x3a>
    306c:	e0 25       	eor	r30, r0
    306e:	e0 64       	ori	r30, 0x40	; 64
    3070:	0a c0       	rjmp	.+20     	; 0x3086 <atan2+0x3a>
    3072:	ef 63       	ori	r30, 0x3F	; 63
    3074:	07 f8       	bld	r0, 7
    3076:	00 94       	com	r0
    3078:	07 fa       	bst	r0, 7
    307a:	db 01       	movw	r26, r22
    307c:	b9 01       	movw	r22, r18
    307e:	9d 01       	movw	r18, r26
    3080:	dc 01       	movw	r26, r24
    3082:	ca 01       	movw	r24, r20
    3084:	ad 01       	movw	r20, r26
    3086:	ef 93       	push	r30
    3088:	47 d0       	rcall	.+142    	; 0x3118 <__divsf3_pse>
    308a:	e3 d1       	rcall	.+966    	; 0x3452 <__fp_round>
    308c:	0a d0       	rcall	.+20     	; 0x30a2 <atan>
    308e:	5f 91       	pop	r21
    3090:	55 23       	and	r21, r21
    3092:	31 f0       	breq	.+12     	; 0x30a0 <atan2+0x54>
    3094:	2b ed       	ldi	r18, 0xDB	; 219
    3096:	3f e0       	ldi	r19, 0x0F	; 15
    3098:	49 e4       	ldi	r20, 0x49	; 73
    309a:	50 fd       	sbrc	r21, 0
    309c:	49 ec       	ldi	r20, 0xC9	; 201
    309e:	4c cf       	rjmp	.-360    	; 0x2f38 <__addsf3>
    30a0:	08 95       	ret

000030a2 <atan>:
    30a2:	df 93       	push	r29
    30a4:	dd 27       	eor	r29, r29
    30a6:	b9 2f       	mov	r27, r25
    30a8:	bf 77       	andi	r27, 0x7F	; 127
    30aa:	40 e8       	ldi	r20, 0x80	; 128
    30ac:	5f e3       	ldi	r21, 0x3F	; 63
    30ae:	16 16       	cp	r1, r22
    30b0:	17 06       	cpc	r1, r23
    30b2:	48 07       	cpc	r20, r24
    30b4:	5b 07       	cpc	r21, r27
    30b6:	10 f4       	brcc	.+4      	; 0x30bc <atan+0x1a>
    30b8:	d9 2f       	mov	r29, r25
    30ba:	09 d2       	rcall	.+1042   	; 0x34ce <inverse>
    30bc:	9f 93       	push	r25
    30be:	8f 93       	push	r24
    30c0:	7f 93       	push	r23
    30c2:	6f 93       	push	r22
    30c4:	fc d2       	rcall	.+1528   	; 0x36be <square>
    30c6:	e0 e1       	ldi	r30, 0x10	; 16
    30c8:	f2 e0       	ldi	r31, 0x02	; 2
    30ca:	7f d1       	rcall	.+766    	; 0x33ca <__fp_powser>
    30cc:	c2 d1       	rcall	.+900    	; 0x3452 <__fp_round>
    30ce:	2f 91       	pop	r18
    30d0:	3f 91       	pop	r19
    30d2:	4f 91       	pop	r20
    30d4:	5f 91       	pop	r21
    30d6:	0e d2       	rcall	.+1052   	; 0x34f4 <__mulsf3x>
    30d8:	dd 23       	and	r29, r29
    30da:	49 f0       	breq	.+18     	; 0x30ee <atan+0x4c>
    30dc:	90 58       	subi	r25, 0x80	; 128
    30de:	a2 ea       	ldi	r26, 0xA2	; 162
    30e0:	2a ed       	ldi	r18, 0xDA	; 218
    30e2:	3f e0       	ldi	r19, 0x0F	; 15
    30e4:	49 ec       	ldi	r20, 0xC9	; 201
    30e6:	5f e3       	ldi	r21, 0x3F	; 63
    30e8:	d0 78       	andi	r29, 0x80	; 128
    30ea:	5d 27       	eor	r21, r29
    30ec:	36 df       	rcall	.-404    	; 0x2f5a <__addsf3x>
    30ee:	df 91       	pop	r29
    30f0:	b0 c1       	rjmp	.+864    	; 0x3452 <__fp_round>

000030f2 <__cmpsf2>:
    30f2:	2e d1       	rcall	.+604    	; 0x3350 <__fp_cmp>
    30f4:	08 f4       	brcc	.+2      	; 0x30f8 <__cmpsf2+0x6>
    30f6:	81 e0       	ldi	r24, 0x01	; 1
    30f8:	08 95       	ret

000030fa <__divsf3>:
    30fa:	0c d0       	rcall	.+24     	; 0x3114 <__divsf3x>
    30fc:	aa c1       	rjmp	.+852    	; 0x3452 <__fp_round>
    30fe:	a2 d1       	rcall	.+836    	; 0x3444 <__fp_pscB>
    3100:	40 f0       	brcs	.+16     	; 0x3112 <__divsf3+0x18>
    3102:	99 d1       	rcall	.+818    	; 0x3436 <__fp_pscA>
    3104:	30 f0       	brcs	.+12     	; 0x3112 <__divsf3+0x18>
    3106:	21 f4       	brne	.+8      	; 0x3110 <__divsf3+0x16>
    3108:	5f 3f       	cpi	r21, 0xFF	; 255
    310a:	19 f0       	breq	.+6      	; 0x3112 <__divsf3+0x18>
    310c:	45 c1       	rjmp	.+650    	; 0x3398 <__fp_inf>
    310e:	51 11       	cpse	r21, r1
    3110:	d4 c1       	rjmp	.+936    	; 0x34ba <__fp_szero>
    3112:	48 c1       	rjmp	.+656    	; 0x33a4 <__fp_nan>

00003114 <__divsf3x>:
    3114:	af d1       	rcall	.+862    	; 0x3474 <__fp_split3>
    3116:	98 f3       	brcs	.-26     	; 0x30fe <__divsf3+0x4>

00003118 <__divsf3_pse>:
    3118:	99 23       	and	r25, r25
    311a:	c9 f3       	breq	.-14     	; 0x310e <__divsf3+0x14>
    311c:	55 23       	and	r21, r21
    311e:	b1 f3       	breq	.-20     	; 0x310c <__divsf3+0x12>
    3120:	95 1b       	sub	r25, r21
    3122:	55 0b       	sbc	r21, r21
    3124:	bb 27       	eor	r27, r27
    3126:	aa 27       	eor	r26, r26
    3128:	62 17       	cp	r22, r18
    312a:	73 07       	cpc	r23, r19
    312c:	84 07       	cpc	r24, r20
    312e:	38 f0       	brcs	.+14     	; 0x313e <__divsf3_pse+0x26>
    3130:	9f 5f       	subi	r25, 0xFF	; 255
    3132:	5f 4f       	sbci	r21, 0xFF	; 255
    3134:	22 0f       	add	r18, r18
    3136:	33 1f       	adc	r19, r19
    3138:	44 1f       	adc	r20, r20
    313a:	aa 1f       	adc	r26, r26
    313c:	a9 f3       	breq	.-22     	; 0x3128 <__divsf3_pse+0x10>
    313e:	33 d0       	rcall	.+102    	; 0x31a6 <__divsf3_pse+0x8e>
    3140:	0e 2e       	mov	r0, r30
    3142:	3a f0       	brmi	.+14     	; 0x3152 <__divsf3_pse+0x3a>
    3144:	e0 e8       	ldi	r30, 0x80	; 128
    3146:	30 d0       	rcall	.+96     	; 0x31a8 <__divsf3_pse+0x90>
    3148:	91 50       	subi	r25, 0x01	; 1
    314a:	50 40       	sbci	r21, 0x00	; 0
    314c:	e6 95       	lsr	r30
    314e:	00 1c       	adc	r0, r0
    3150:	ca f7       	brpl	.-14     	; 0x3144 <__divsf3_pse+0x2c>
    3152:	29 d0       	rcall	.+82     	; 0x31a6 <__divsf3_pse+0x8e>
    3154:	fe 2f       	mov	r31, r30
    3156:	27 d0       	rcall	.+78     	; 0x31a6 <__divsf3_pse+0x8e>
    3158:	66 0f       	add	r22, r22
    315a:	77 1f       	adc	r23, r23
    315c:	88 1f       	adc	r24, r24
    315e:	bb 1f       	adc	r27, r27
    3160:	26 17       	cp	r18, r22
    3162:	37 07       	cpc	r19, r23
    3164:	48 07       	cpc	r20, r24
    3166:	ab 07       	cpc	r26, r27
    3168:	b0 e8       	ldi	r27, 0x80	; 128
    316a:	09 f0       	breq	.+2      	; 0x316e <__divsf3_pse+0x56>
    316c:	bb 0b       	sbc	r27, r27
    316e:	80 2d       	mov	r24, r0
    3170:	bf 01       	movw	r22, r30
    3172:	ff 27       	eor	r31, r31
    3174:	93 58       	subi	r25, 0x83	; 131
    3176:	5f 4f       	sbci	r21, 0xFF	; 255
    3178:	2a f0       	brmi	.+10     	; 0x3184 <__divsf3_pse+0x6c>
    317a:	9e 3f       	cpi	r25, 0xFE	; 254
    317c:	51 05       	cpc	r21, r1
    317e:	68 f0       	brcs	.+26     	; 0x319a <__divsf3_pse+0x82>
    3180:	0b c1       	rjmp	.+534    	; 0x3398 <__fp_inf>
    3182:	9b c1       	rjmp	.+822    	; 0x34ba <__fp_szero>
    3184:	5f 3f       	cpi	r21, 0xFF	; 255
    3186:	ec f3       	brlt	.-6      	; 0x3182 <__divsf3_pse+0x6a>
    3188:	98 3e       	cpi	r25, 0xE8	; 232
    318a:	dc f3       	brlt	.-10     	; 0x3182 <__divsf3_pse+0x6a>
    318c:	86 95       	lsr	r24
    318e:	77 95       	ror	r23
    3190:	67 95       	ror	r22
    3192:	b7 95       	ror	r27
    3194:	f7 95       	ror	r31
    3196:	9f 5f       	subi	r25, 0xFF	; 255
    3198:	c9 f7       	brne	.-14     	; 0x318c <__divsf3_pse+0x74>
    319a:	88 0f       	add	r24, r24
    319c:	91 1d       	adc	r25, r1
    319e:	96 95       	lsr	r25
    31a0:	87 95       	ror	r24
    31a2:	97 f9       	bld	r25, 7
    31a4:	08 95       	ret
    31a6:	e1 e0       	ldi	r30, 0x01	; 1
    31a8:	66 0f       	add	r22, r22
    31aa:	77 1f       	adc	r23, r23
    31ac:	88 1f       	adc	r24, r24
    31ae:	bb 1f       	adc	r27, r27
    31b0:	62 17       	cp	r22, r18
    31b2:	73 07       	cpc	r23, r19
    31b4:	84 07       	cpc	r24, r20
    31b6:	ba 07       	cpc	r27, r26
    31b8:	20 f0       	brcs	.+8      	; 0x31c2 <__divsf3_pse+0xaa>
    31ba:	62 1b       	sub	r22, r18
    31bc:	73 0b       	sbc	r23, r19
    31be:	84 0b       	sbc	r24, r20
    31c0:	ba 0b       	sbc	r27, r26
    31c2:	ee 1f       	adc	r30, r30
    31c4:	88 f7       	brcc	.-30     	; 0x31a8 <__divsf3_pse+0x90>
    31c6:	e0 95       	com	r30
    31c8:	08 95       	ret

000031ca <__fixsfdi>:
    31ca:	be e3       	ldi	r27, 0x3E	; 62
    31cc:	04 d0       	rcall	.+8      	; 0x31d6 <__fixunssfdi+0x2>
    31ce:	08 f4       	brcc	.+2      	; 0x31d2 <__fixsfdi+0x8>
    31d0:	90 e8       	ldi	r25, 0x80	; 128
    31d2:	08 95       	ret

000031d4 <__fixunssfdi>:
    31d4:	bf e3       	ldi	r27, 0x3F	; 63
    31d6:	22 27       	eor	r18, r18
    31d8:	33 27       	eor	r19, r19
    31da:	a9 01       	movw	r20, r18
    31dc:	53 d1       	rcall	.+678    	; 0x3484 <__fp_splitA>
    31de:	58 f1       	brcs	.+86     	; 0x3236 <__fixunssfdi+0x62>
    31e0:	9f 57       	subi	r25, 0x7F	; 127
    31e2:	40 f1       	brcs	.+80     	; 0x3234 <__fixunssfdi+0x60>
    31e4:	b9 17       	cp	r27, r25
    31e6:	38 f1       	brcs	.+78     	; 0x3236 <__fixunssfdi+0x62>
    31e8:	bf e3       	ldi	r27, 0x3F	; 63
    31ea:	b9 1b       	sub	r27, r25
    31ec:	99 27       	eor	r25, r25
    31ee:	b8 50       	subi	r27, 0x08	; 8
    31f0:	3a f4       	brpl	.+14     	; 0x3200 <__fixunssfdi+0x2c>
    31f2:	66 0f       	add	r22, r22
    31f4:	77 1f       	adc	r23, r23
    31f6:	88 1f       	adc	r24, r24
    31f8:	99 1f       	adc	r25, r25
    31fa:	b3 95       	inc	r27
    31fc:	d2 f3       	brmi	.-12     	; 0x31f2 <__fixunssfdi+0x1e>
    31fe:	16 c0       	rjmp	.+44     	; 0x322c <__fixunssfdi+0x58>
    3200:	b8 50       	subi	r27, 0x08	; 8
    3202:	4a f0       	brmi	.+18     	; 0x3216 <__fixunssfdi+0x42>
    3204:	23 2f       	mov	r18, r19
    3206:	34 2f       	mov	r19, r20
    3208:	45 2f       	mov	r20, r21
    320a:	56 2f       	mov	r21, r22
    320c:	67 2f       	mov	r22, r23
    320e:	78 2f       	mov	r23, r24
    3210:	88 27       	eor	r24, r24
    3212:	b8 50       	subi	r27, 0x08	; 8
    3214:	ba f7       	brpl	.-18     	; 0x3204 <__fixunssfdi+0x30>
    3216:	b8 5f       	subi	r27, 0xF8	; 248
    3218:	49 f0       	breq	.+18     	; 0x322c <__fixunssfdi+0x58>
    321a:	86 95       	lsr	r24
    321c:	77 95       	ror	r23
    321e:	67 95       	ror	r22
    3220:	57 95       	ror	r21
    3222:	47 95       	ror	r20
    3224:	37 95       	ror	r19
    3226:	27 95       	ror	r18
    3228:	ba 95       	dec	r27
    322a:	b9 f7       	brne	.-18     	; 0x321a <__fixunssfdi+0x46>
    322c:	0e f4       	brtc	.+2      	; 0x3230 <__fixunssfdi+0x5c>
    322e:	bd d0       	rcall	.+378    	; 0x33aa <__fp_negdi>
    3230:	88 94       	clc
    3232:	08 95       	ret
    3234:	88 94       	clc
    3236:	60 e0       	ldi	r22, 0x00	; 0
    3238:	70 e0       	ldi	r23, 0x00	; 0
    323a:	cb 01       	movw	r24, r22
    323c:	08 95       	ret

0000323e <__fixsfsi>:
    323e:	04 d0       	rcall	.+8      	; 0x3248 <__fixunssfsi>
    3240:	68 94       	set
    3242:	b1 11       	cpse	r27, r1
    3244:	3a c1       	rjmp	.+628    	; 0x34ba <__fp_szero>
    3246:	08 95       	ret

00003248 <__fixunssfsi>:
    3248:	1d d1       	rcall	.+570    	; 0x3484 <__fp_splitA>
    324a:	88 f0       	brcs	.+34     	; 0x326e <__fixunssfsi+0x26>
    324c:	9f 57       	subi	r25, 0x7F	; 127
    324e:	90 f0       	brcs	.+36     	; 0x3274 <__fixunssfsi+0x2c>
    3250:	b9 2f       	mov	r27, r25
    3252:	99 27       	eor	r25, r25
    3254:	b7 51       	subi	r27, 0x17	; 23
    3256:	a0 f0       	brcs	.+40     	; 0x3280 <__fixunssfsi+0x38>
    3258:	d1 f0       	breq	.+52     	; 0x328e <__fixunssfsi+0x46>
    325a:	66 0f       	add	r22, r22
    325c:	77 1f       	adc	r23, r23
    325e:	88 1f       	adc	r24, r24
    3260:	99 1f       	adc	r25, r25
    3262:	1a f0       	brmi	.+6      	; 0x326a <__fixunssfsi+0x22>
    3264:	ba 95       	dec	r27
    3266:	c9 f7       	brne	.-14     	; 0x325a <__fixunssfsi+0x12>
    3268:	12 c0       	rjmp	.+36     	; 0x328e <__fixunssfsi+0x46>
    326a:	b1 30       	cpi	r27, 0x01	; 1
    326c:	81 f0       	breq	.+32     	; 0x328e <__fixunssfsi+0x46>
    326e:	24 d1       	rcall	.+584    	; 0x34b8 <__fp_zero>
    3270:	b1 e0       	ldi	r27, 0x01	; 1
    3272:	08 95       	ret
    3274:	21 c1       	rjmp	.+578    	; 0x34b8 <__fp_zero>
    3276:	67 2f       	mov	r22, r23
    3278:	78 2f       	mov	r23, r24
    327a:	88 27       	eor	r24, r24
    327c:	b8 5f       	subi	r27, 0xF8	; 248
    327e:	39 f0       	breq	.+14     	; 0x328e <__fixunssfsi+0x46>
    3280:	b9 3f       	cpi	r27, 0xF9	; 249
    3282:	cc f3       	brlt	.-14     	; 0x3276 <__fixunssfsi+0x2e>
    3284:	86 95       	lsr	r24
    3286:	77 95       	ror	r23
    3288:	67 95       	ror	r22
    328a:	b3 95       	inc	r27
    328c:	d9 f7       	brne	.-10     	; 0x3284 <__fixunssfsi+0x3c>
    328e:	3e f4       	brtc	.+14     	; 0x329e <__fixunssfsi+0x56>
    3290:	90 95       	com	r25
    3292:	80 95       	com	r24
    3294:	70 95       	com	r23
    3296:	61 95       	neg	r22
    3298:	7f 4f       	sbci	r23, 0xFF	; 255
    329a:	8f 4f       	sbci	r24, 0xFF	; 255
    329c:	9f 4f       	sbci	r25, 0xFF	; 255
    329e:	08 95       	ret

000032a0 <__floatunsisf>:
    32a0:	e8 94       	clt
    32a2:	09 c0       	rjmp	.+18     	; 0x32b6 <__floatsisf+0x12>

000032a4 <__floatsisf>:
    32a4:	97 fb       	bst	r25, 7
    32a6:	3e f4       	brtc	.+14     	; 0x32b6 <__floatsisf+0x12>
    32a8:	90 95       	com	r25
    32aa:	80 95       	com	r24
    32ac:	70 95       	com	r23
    32ae:	61 95       	neg	r22
    32b0:	7f 4f       	sbci	r23, 0xFF	; 255
    32b2:	8f 4f       	sbci	r24, 0xFF	; 255
    32b4:	9f 4f       	sbci	r25, 0xFF	; 255
    32b6:	99 23       	and	r25, r25
    32b8:	a9 f0       	breq	.+42     	; 0x32e4 <__floatsisf+0x40>
    32ba:	f9 2f       	mov	r31, r25
    32bc:	96 e9       	ldi	r25, 0x96	; 150
    32be:	bb 27       	eor	r27, r27
    32c0:	93 95       	inc	r25
    32c2:	f6 95       	lsr	r31
    32c4:	87 95       	ror	r24
    32c6:	77 95       	ror	r23
    32c8:	67 95       	ror	r22
    32ca:	b7 95       	ror	r27
    32cc:	f1 11       	cpse	r31, r1
    32ce:	f8 cf       	rjmp	.-16     	; 0x32c0 <__floatsisf+0x1c>
    32d0:	fa f4       	brpl	.+62     	; 0x3310 <__floatsisf+0x6c>
    32d2:	bb 0f       	add	r27, r27
    32d4:	11 f4       	brne	.+4      	; 0x32da <__floatsisf+0x36>
    32d6:	60 ff       	sbrs	r22, 0
    32d8:	1b c0       	rjmp	.+54     	; 0x3310 <__floatsisf+0x6c>
    32da:	6f 5f       	subi	r22, 0xFF	; 255
    32dc:	7f 4f       	sbci	r23, 0xFF	; 255
    32de:	8f 4f       	sbci	r24, 0xFF	; 255
    32e0:	9f 4f       	sbci	r25, 0xFF	; 255
    32e2:	16 c0       	rjmp	.+44     	; 0x3310 <__floatsisf+0x6c>
    32e4:	88 23       	and	r24, r24
    32e6:	11 f0       	breq	.+4      	; 0x32ec <__floatsisf+0x48>
    32e8:	96 e9       	ldi	r25, 0x96	; 150
    32ea:	11 c0       	rjmp	.+34     	; 0x330e <__floatsisf+0x6a>
    32ec:	77 23       	and	r23, r23
    32ee:	21 f0       	breq	.+8      	; 0x32f8 <__floatsisf+0x54>
    32f0:	9e e8       	ldi	r25, 0x8E	; 142
    32f2:	87 2f       	mov	r24, r23
    32f4:	76 2f       	mov	r23, r22
    32f6:	05 c0       	rjmp	.+10     	; 0x3302 <__floatsisf+0x5e>
    32f8:	66 23       	and	r22, r22
    32fa:	71 f0       	breq	.+28     	; 0x3318 <__floatsisf+0x74>
    32fc:	96 e8       	ldi	r25, 0x86	; 134
    32fe:	86 2f       	mov	r24, r22
    3300:	70 e0       	ldi	r23, 0x00	; 0
    3302:	60 e0       	ldi	r22, 0x00	; 0
    3304:	2a f0       	brmi	.+10     	; 0x3310 <__floatsisf+0x6c>
    3306:	9a 95       	dec	r25
    3308:	66 0f       	add	r22, r22
    330a:	77 1f       	adc	r23, r23
    330c:	88 1f       	adc	r24, r24
    330e:	da f7       	brpl	.-10     	; 0x3306 <__floatsisf+0x62>
    3310:	88 0f       	add	r24, r24
    3312:	96 95       	lsr	r25
    3314:	87 95       	ror	r24
    3316:	97 f9       	bld	r25, 7
    3318:	08 95       	ret

0000331a <__fp_arccos>:
    331a:	df 93       	push	r29
    331c:	cf 93       	push	r28
    331e:	1f 93       	push	r17
    3320:	0f 93       	push	r16
    3322:	8b 01       	movw	r16, r22
    3324:	ec 01       	movw	r28, r24
    3326:	ed e3       	ldi	r30, 0x3D	; 61
    3328:	f2 e0       	ldi	r31, 0x02	; 2
    332a:	4f d0       	rcall	.+158    	; 0x33ca <__fp_powser>
    332c:	92 d0       	rcall	.+292    	; 0x3452 <__fp_round>
    332e:	98 01       	movw	r18, r16
    3330:	ae 01       	movw	r20, r28
    3332:	8b 01       	movw	r16, r22
    3334:	ec 01       	movw	r28, r24
    3336:	60 e0       	ldi	r22, 0x00	; 0
    3338:	70 e0       	ldi	r23, 0x00	; 0
    333a:	80 e8       	ldi	r24, 0x80	; 128
    333c:	9f e3       	ldi	r25, 0x3F	; 63
    333e:	fb dd       	rcall	.-1034   	; 0x2f36 <__subsf3>
    3340:	80 d1       	rcall	.+768    	; 0x3642 <sqrt>
    3342:	98 01       	movw	r18, r16
    3344:	ae 01       	movw	r20, r28
    3346:	0f 91       	pop	r16
    3348:	1f 91       	pop	r17
    334a:	cf 91       	pop	r28
    334c:	df 91       	pop	r29
    334e:	d2 c0       	rjmp	.+420    	; 0x34f4 <__mulsf3x>

00003350 <__fp_cmp>:
    3350:	99 0f       	add	r25, r25
    3352:	00 08       	sbc	r0, r0
    3354:	55 0f       	add	r21, r21
    3356:	aa 0b       	sbc	r26, r26
    3358:	e0 e8       	ldi	r30, 0x80	; 128
    335a:	fe ef       	ldi	r31, 0xFE	; 254
    335c:	16 16       	cp	r1, r22
    335e:	17 06       	cpc	r1, r23
    3360:	e8 07       	cpc	r30, r24
    3362:	f9 07       	cpc	r31, r25
    3364:	c0 f0       	brcs	.+48     	; 0x3396 <__fp_cmp+0x46>
    3366:	12 16       	cp	r1, r18
    3368:	13 06       	cpc	r1, r19
    336a:	e4 07       	cpc	r30, r20
    336c:	f5 07       	cpc	r31, r21
    336e:	98 f0       	brcs	.+38     	; 0x3396 <__fp_cmp+0x46>
    3370:	62 1b       	sub	r22, r18
    3372:	73 0b       	sbc	r23, r19
    3374:	84 0b       	sbc	r24, r20
    3376:	95 0b       	sbc	r25, r21
    3378:	39 f4       	brne	.+14     	; 0x3388 <__fp_cmp+0x38>
    337a:	0a 26       	eor	r0, r26
    337c:	61 f0       	breq	.+24     	; 0x3396 <__fp_cmp+0x46>
    337e:	23 2b       	or	r18, r19
    3380:	24 2b       	or	r18, r20
    3382:	25 2b       	or	r18, r21
    3384:	21 f4       	brne	.+8      	; 0x338e <__fp_cmp+0x3e>
    3386:	08 95       	ret
    3388:	0a 26       	eor	r0, r26
    338a:	09 f4       	brne	.+2      	; 0x338e <__fp_cmp+0x3e>
    338c:	a1 40       	sbci	r26, 0x01	; 1
    338e:	a6 95       	lsr	r26
    3390:	8f ef       	ldi	r24, 0xFF	; 255
    3392:	81 1d       	adc	r24, r1
    3394:	81 1d       	adc	r24, r1
    3396:	08 95       	ret

00003398 <__fp_inf>:
    3398:	97 f9       	bld	r25, 7
    339a:	9f 67       	ori	r25, 0x7F	; 127
    339c:	80 e8       	ldi	r24, 0x80	; 128
    339e:	70 e0       	ldi	r23, 0x00	; 0
    33a0:	60 e0       	ldi	r22, 0x00	; 0
    33a2:	08 95       	ret

000033a4 <__fp_nan>:
    33a4:	9f ef       	ldi	r25, 0xFF	; 255
    33a6:	80 ec       	ldi	r24, 0xC0	; 192
    33a8:	08 95       	ret

000033aa <__fp_negdi>:
    33aa:	90 95       	com	r25
    33ac:	80 95       	com	r24
    33ae:	70 95       	com	r23
    33b0:	60 95       	com	r22
    33b2:	50 95       	com	r21
    33b4:	40 95       	com	r20
    33b6:	30 95       	com	r19
    33b8:	21 95       	neg	r18
    33ba:	3f 4f       	sbci	r19, 0xFF	; 255
    33bc:	4f 4f       	sbci	r20, 0xFF	; 255
    33be:	5f 4f       	sbci	r21, 0xFF	; 255
    33c0:	6f 4f       	sbci	r22, 0xFF	; 255
    33c2:	7f 4f       	sbci	r23, 0xFF	; 255
    33c4:	8f 4f       	sbci	r24, 0xFF	; 255
    33c6:	9f 4f       	sbci	r25, 0xFF	; 255
    33c8:	08 95       	ret

000033ca <__fp_powser>:
    33ca:	df 93       	push	r29
    33cc:	cf 93       	push	r28
    33ce:	1f 93       	push	r17
    33d0:	0f 93       	push	r16
    33d2:	ff 92       	push	r15
    33d4:	ef 92       	push	r14
    33d6:	df 92       	push	r13
    33d8:	7b 01       	movw	r14, r22
    33da:	8c 01       	movw	r16, r24
    33dc:	68 94       	set
    33de:	05 c0       	rjmp	.+10     	; 0x33ea <__fp_powser+0x20>
    33e0:	da 2e       	mov	r13, r26
    33e2:	ef 01       	movw	r28, r30
    33e4:	87 d0       	rcall	.+270    	; 0x34f4 <__mulsf3x>
    33e6:	fe 01       	movw	r30, r28
    33e8:	e8 94       	clt
    33ea:	a5 91       	lpm	r26, Z+
    33ec:	25 91       	lpm	r18, Z+
    33ee:	35 91       	lpm	r19, Z+
    33f0:	45 91       	lpm	r20, Z+
    33f2:	55 91       	lpm	r21, Z+
    33f4:	ae f3       	brts	.-22     	; 0x33e0 <__fp_powser+0x16>
    33f6:	ef 01       	movw	r28, r30
    33f8:	b0 dd       	rcall	.-1184   	; 0x2f5a <__addsf3x>
    33fa:	fe 01       	movw	r30, r28
    33fc:	97 01       	movw	r18, r14
    33fe:	a8 01       	movw	r20, r16
    3400:	da 94       	dec	r13
    3402:	79 f7       	brne	.-34     	; 0x33e2 <__fp_powser+0x18>
    3404:	df 90       	pop	r13
    3406:	ef 90       	pop	r14
    3408:	ff 90       	pop	r15
    340a:	0f 91       	pop	r16
    340c:	1f 91       	pop	r17
    340e:	cf 91       	pop	r28
    3410:	df 91       	pop	r29
    3412:	08 95       	ret

00003414 <__fp_powsodd>:
    3414:	9f 93       	push	r25
    3416:	8f 93       	push	r24
    3418:	7f 93       	push	r23
    341a:	6f 93       	push	r22
    341c:	ff 93       	push	r31
    341e:	ef 93       	push	r30
    3420:	9b 01       	movw	r18, r22
    3422:	ac 01       	movw	r20, r24
    3424:	5b d0       	rcall	.+182    	; 0x34dc <__mulsf3>
    3426:	ef 91       	pop	r30
    3428:	ff 91       	pop	r31
    342a:	cf df       	rcall	.-98     	; 0x33ca <__fp_powser>
    342c:	2f 91       	pop	r18
    342e:	3f 91       	pop	r19
    3430:	4f 91       	pop	r20
    3432:	5f 91       	pop	r21
    3434:	53 c0       	rjmp	.+166    	; 0x34dc <__mulsf3>

00003436 <__fp_pscA>:
    3436:	00 24       	eor	r0, r0
    3438:	0a 94       	dec	r0
    343a:	16 16       	cp	r1, r22
    343c:	17 06       	cpc	r1, r23
    343e:	18 06       	cpc	r1, r24
    3440:	09 06       	cpc	r0, r25
    3442:	08 95       	ret

00003444 <__fp_pscB>:
    3444:	00 24       	eor	r0, r0
    3446:	0a 94       	dec	r0
    3448:	12 16       	cp	r1, r18
    344a:	13 06       	cpc	r1, r19
    344c:	14 06       	cpc	r1, r20
    344e:	05 06       	cpc	r0, r21
    3450:	08 95       	ret

00003452 <__fp_round>:
    3452:	09 2e       	mov	r0, r25
    3454:	03 94       	inc	r0
    3456:	00 0c       	add	r0, r0
    3458:	11 f4       	brne	.+4      	; 0x345e <__fp_round+0xc>
    345a:	88 23       	and	r24, r24
    345c:	52 f0       	brmi	.+20     	; 0x3472 <__fp_round+0x20>
    345e:	bb 0f       	add	r27, r27
    3460:	40 f4       	brcc	.+16     	; 0x3472 <__fp_round+0x20>
    3462:	bf 2b       	or	r27, r31
    3464:	11 f4       	brne	.+4      	; 0x346a <__fp_round+0x18>
    3466:	60 ff       	sbrs	r22, 0
    3468:	04 c0       	rjmp	.+8      	; 0x3472 <__fp_round+0x20>
    346a:	6f 5f       	subi	r22, 0xFF	; 255
    346c:	7f 4f       	sbci	r23, 0xFF	; 255
    346e:	8f 4f       	sbci	r24, 0xFF	; 255
    3470:	9f 4f       	sbci	r25, 0xFF	; 255
    3472:	08 95       	ret

00003474 <__fp_split3>:
    3474:	57 fd       	sbrc	r21, 7
    3476:	90 58       	subi	r25, 0x80	; 128
    3478:	44 0f       	add	r20, r20
    347a:	55 1f       	adc	r21, r21
    347c:	59 f0       	breq	.+22     	; 0x3494 <__fp_splitA+0x10>
    347e:	5f 3f       	cpi	r21, 0xFF	; 255
    3480:	71 f0       	breq	.+28     	; 0x349e <__fp_splitA+0x1a>
    3482:	47 95       	ror	r20

00003484 <__fp_splitA>:
    3484:	88 0f       	add	r24, r24
    3486:	97 fb       	bst	r25, 7
    3488:	99 1f       	adc	r25, r25
    348a:	61 f0       	breq	.+24     	; 0x34a4 <__fp_splitA+0x20>
    348c:	9f 3f       	cpi	r25, 0xFF	; 255
    348e:	79 f0       	breq	.+30     	; 0x34ae <__fp_splitA+0x2a>
    3490:	87 95       	ror	r24
    3492:	08 95       	ret
    3494:	12 16       	cp	r1, r18
    3496:	13 06       	cpc	r1, r19
    3498:	14 06       	cpc	r1, r20
    349a:	55 1f       	adc	r21, r21
    349c:	f2 cf       	rjmp	.-28     	; 0x3482 <__fp_split3+0xe>
    349e:	46 95       	lsr	r20
    34a0:	f1 df       	rcall	.-30     	; 0x3484 <__fp_splitA>
    34a2:	08 c0       	rjmp	.+16     	; 0x34b4 <__fp_splitA+0x30>
    34a4:	16 16       	cp	r1, r22
    34a6:	17 06       	cpc	r1, r23
    34a8:	18 06       	cpc	r1, r24
    34aa:	99 1f       	adc	r25, r25
    34ac:	f1 cf       	rjmp	.-30     	; 0x3490 <__fp_splitA+0xc>
    34ae:	86 95       	lsr	r24
    34b0:	71 05       	cpc	r23, r1
    34b2:	61 05       	cpc	r22, r1
    34b4:	08 94       	sec
    34b6:	08 95       	ret

000034b8 <__fp_zero>:
    34b8:	e8 94       	clt

000034ba <__fp_szero>:
    34ba:	bb 27       	eor	r27, r27
    34bc:	66 27       	eor	r22, r22
    34be:	77 27       	eor	r23, r23
    34c0:	cb 01       	movw	r24, r22
    34c2:	97 f9       	bld	r25, 7
    34c4:	08 95       	ret

000034c6 <__gesf2>:
    34c6:	44 df       	rcall	.-376    	; 0x3350 <__fp_cmp>
    34c8:	08 f4       	brcc	.+2      	; 0x34cc <__gesf2+0x6>
    34ca:	8f ef       	ldi	r24, 0xFF	; 255
    34cc:	08 95       	ret

000034ce <inverse>:
    34ce:	9b 01       	movw	r18, r22
    34d0:	ac 01       	movw	r20, r24
    34d2:	60 e0       	ldi	r22, 0x00	; 0
    34d4:	70 e0       	ldi	r23, 0x00	; 0
    34d6:	80 e8       	ldi	r24, 0x80	; 128
    34d8:	9f e3       	ldi	r25, 0x3F	; 63
    34da:	0f ce       	rjmp	.-994    	; 0x30fa <__divsf3>

000034dc <__mulsf3>:
    34dc:	0b d0       	rcall	.+22     	; 0x34f4 <__mulsf3x>
    34de:	b9 cf       	rjmp	.-142    	; 0x3452 <__fp_round>
    34e0:	aa df       	rcall	.-172    	; 0x3436 <__fp_pscA>
    34e2:	28 f0       	brcs	.+10     	; 0x34ee <__mulsf3+0x12>
    34e4:	af df       	rcall	.-162    	; 0x3444 <__fp_pscB>
    34e6:	18 f0       	brcs	.+6      	; 0x34ee <__mulsf3+0x12>
    34e8:	95 23       	and	r25, r21
    34ea:	09 f0       	breq	.+2      	; 0x34ee <__mulsf3+0x12>
    34ec:	55 cf       	rjmp	.-342    	; 0x3398 <__fp_inf>
    34ee:	5a cf       	rjmp	.-332    	; 0x33a4 <__fp_nan>
    34f0:	11 24       	eor	r1, r1
    34f2:	e3 cf       	rjmp	.-58     	; 0x34ba <__fp_szero>

000034f4 <__mulsf3x>:
    34f4:	bf df       	rcall	.-130    	; 0x3474 <__fp_split3>
    34f6:	a0 f3       	brcs	.-24     	; 0x34e0 <__mulsf3+0x4>

000034f8 <__mulsf3_pse>:
    34f8:	95 9f       	mul	r25, r21
    34fa:	d1 f3       	breq	.-12     	; 0x34f0 <__mulsf3+0x14>
    34fc:	95 0f       	add	r25, r21
    34fe:	50 e0       	ldi	r21, 0x00	; 0
    3500:	55 1f       	adc	r21, r21
    3502:	62 9f       	mul	r22, r18
    3504:	f0 01       	movw	r30, r0
    3506:	72 9f       	mul	r23, r18
    3508:	bb 27       	eor	r27, r27
    350a:	f0 0d       	add	r31, r0
    350c:	b1 1d       	adc	r27, r1
    350e:	63 9f       	mul	r22, r19
    3510:	aa 27       	eor	r26, r26
    3512:	f0 0d       	add	r31, r0
    3514:	b1 1d       	adc	r27, r1
    3516:	aa 1f       	adc	r26, r26
    3518:	64 9f       	mul	r22, r20
    351a:	66 27       	eor	r22, r22
    351c:	b0 0d       	add	r27, r0
    351e:	a1 1d       	adc	r26, r1
    3520:	66 1f       	adc	r22, r22
    3522:	82 9f       	mul	r24, r18
    3524:	22 27       	eor	r18, r18
    3526:	b0 0d       	add	r27, r0
    3528:	a1 1d       	adc	r26, r1
    352a:	62 1f       	adc	r22, r18
    352c:	73 9f       	mul	r23, r19
    352e:	b0 0d       	add	r27, r0
    3530:	a1 1d       	adc	r26, r1
    3532:	62 1f       	adc	r22, r18
    3534:	83 9f       	mul	r24, r19
    3536:	a0 0d       	add	r26, r0
    3538:	61 1d       	adc	r22, r1
    353a:	22 1f       	adc	r18, r18
    353c:	74 9f       	mul	r23, r20
    353e:	33 27       	eor	r19, r19
    3540:	a0 0d       	add	r26, r0
    3542:	61 1d       	adc	r22, r1
    3544:	23 1f       	adc	r18, r19
    3546:	84 9f       	mul	r24, r20
    3548:	60 0d       	add	r22, r0
    354a:	21 1d       	adc	r18, r1
    354c:	82 2f       	mov	r24, r18
    354e:	76 2f       	mov	r23, r22
    3550:	6a 2f       	mov	r22, r26
    3552:	11 24       	eor	r1, r1
    3554:	9f 57       	subi	r25, 0x7F	; 127
    3556:	50 40       	sbci	r21, 0x00	; 0
    3558:	8a f0       	brmi	.+34     	; 0x357c <__mulsf3_pse+0x84>
    355a:	e1 f0       	breq	.+56     	; 0x3594 <__mulsf3_pse+0x9c>
    355c:	88 23       	and	r24, r24
    355e:	4a f0       	brmi	.+18     	; 0x3572 <__mulsf3_pse+0x7a>
    3560:	ee 0f       	add	r30, r30
    3562:	ff 1f       	adc	r31, r31
    3564:	bb 1f       	adc	r27, r27
    3566:	66 1f       	adc	r22, r22
    3568:	77 1f       	adc	r23, r23
    356a:	88 1f       	adc	r24, r24
    356c:	91 50       	subi	r25, 0x01	; 1
    356e:	50 40       	sbci	r21, 0x00	; 0
    3570:	a9 f7       	brne	.-22     	; 0x355c <__mulsf3_pse+0x64>
    3572:	9e 3f       	cpi	r25, 0xFE	; 254
    3574:	51 05       	cpc	r21, r1
    3576:	70 f0       	brcs	.+28     	; 0x3594 <__mulsf3_pse+0x9c>
    3578:	0f cf       	rjmp	.-482    	; 0x3398 <__fp_inf>
    357a:	9f cf       	rjmp	.-194    	; 0x34ba <__fp_szero>
    357c:	5f 3f       	cpi	r21, 0xFF	; 255
    357e:	ec f3       	brlt	.-6      	; 0x357a <__mulsf3_pse+0x82>
    3580:	98 3e       	cpi	r25, 0xE8	; 232
    3582:	dc f3       	brlt	.-10     	; 0x357a <__mulsf3_pse+0x82>
    3584:	86 95       	lsr	r24
    3586:	77 95       	ror	r23
    3588:	67 95       	ror	r22
    358a:	b7 95       	ror	r27
    358c:	f7 95       	ror	r31
    358e:	e7 95       	ror	r30
    3590:	9f 5f       	subi	r25, 0xFF	; 255
    3592:	c1 f7       	brne	.-16     	; 0x3584 <__mulsf3_pse+0x8c>
    3594:	fe 2b       	or	r31, r30
    3596:	88 0f       	add	r24, r24
    3598:	91 1d       	adc	r25, r1
    359a:	96 95       	lsr	r25
    359c:	87 95       	ror	r24
    359e:	97 f9       	bld	r25, 7
    35a0:	08 95       	ret

000035a2 <pow>:
    35a2:	fa 01       	movw	r30, r20
    35a4:	ee 0f       	add	r30, r30
    35a6:	ff 1f       	adc	r31, r31
    35a8:	30 96       	adiw	r30, 0x00	; 0
    35aa:	21 05       	cpc	r18, r1
    35ac:	31 05       	cpc	r19, r1
    35ae:	99 f1       	breq	.+102    	; 0x3616 <pow+0x74>
    35b0:	61 15       	cp	r22, r1
    35b2:	71 05       	cpc	r23, r1
    35b4:	61 f4       	brne	.+24     	; 0x35ce <pow+0x2c>
    35b6:	80 38       	cpi	r24, 0x80	; 128
    35b8:	bf e3       	ldi	r27, 0x3F	; 63
    35ba:	9b 07       	cpc	r25, r27
    35bc:	49 f1       	breq	.+82     	; 0x3610 <pow+0x6e>
    35be:	68 94       	set
    35c0:	90 38       	cpi	r25, 0x80	; 128
    35c2:	81 05       	cpc	r24, r1
    35c4:	61 f0       	breq	.+24     	; 0x35de <pow+0x3c>
    35c6:	80 38       	cpi	r24, 0x80	; 128
    35c8:	bf ef       	ldi	r27, 0xFF	; 255
    35ca:	9b 07       	cpc	r25, r27
    35cc:	41 f0       	breq	.+16     	; 0x35de <pow+0x3c>
    35ce:	99 23       	and	r25, r25
    35d0:	42 f5       	brpl	.+80     	; 0x3622 <pow+0x80>
    35d2:	ff 3f       	cpi	r31, 0xFF	; 255
    35d4:	e1 05       	cpc	r30, r1
    35d6:	31 05       	cpc	r19, r1
    35d8:	21 05       	cpc	r18, r1
    35da:	11 f1       	breq	.+68     	; 0x3620 <pow+0x7e>
    35dc:	e8 94       	clt
    35de:	08 94       	sec
    35e0:	e7 95       	ror	r30
    35e2:	d9 01       	movw	r26, r18
    35e4:	aa 23       	and	r26, r26
    35e6:	29 f4       	brne	.+10     	; 0x35f2 <pow+0x50>
    35e8:	ab 2f       	mov	r26, r27
    35ea:	be 2f       	mov	r27, r30
    35ec:	f8 5f       	subi	r31, 0xF8	; 248
    35ee:	d0 f3       	brcs	.-12     	; 0x35e4 <pow+0x42>
    35f0:	10 c0       	rjmp	.+32     	; 0x3612 <pow+0x70>
    35f2:	ff 5f       	subi	r31, 0xFF	; 255
    35f4:	70 f4       	brcc	.+28     	; 0x3612 <pow+0x70>
    35f6:	a6 95       	lsr	r26
    35f8:	e0 f7       	brcc	.-8      	; 0x35f2 <pow+0x50>
    35fa:	f7 39       	cpi	r31, 0x97	; 151
    35fc:	50 f0       	brcs	.+20     	; 0x3612 <pow+0x70>
    35fe:	19 f0       	breq	.+6      	; 0x3606 <pow+0x64>
    3600:	ff 3a       	cpi	r31, 0xAF	; 175
    3602:	38 f4       	brcc	.+14     	; 0x3612 <pow+0x70>
    3604:	9f 77       	andi	r25, 0x7F	; 127
    3606:	9f 93       	push	r25
    3608:	0c d0       	rcall	.+24     	; 0x3622 <pow+0x80>
    360a:	0f 90       	pop	r0
    360c:	07 fc       	sbrc	r0, 7
    360e:	90 58       	subi	r25, 0x80	; 128
    3610:	08 95       	ret
    3612:	3e f0       	brts	.+14     	; 0x3622 <pow+0x80>
    3614:	c7 ce       	rjmp	.-626    	; 0x33a4 <__fp_nan>
    3616:	60 e0       	ldi	r22, 0x00	; 0
    3618:	70 e0       	ldi	r23, 0x00	; 0
    361a:	80 e8       	ldi	r24, 0x80	; 128
    361c:	9f e3       	ldi	r25, 0x3F	; 63
    361e:	08 95       	ret
    3620:	4f e7       	ldi	r20, 0x7F	; 127
    3622:	9f 77       	andi	r25, 0x7F	; 127
    3624:	5f 93       	push	r21
    3626:	4f 93       	push	r20
    3628:	3f 93       	push	r19
    362a:	2f 93       	push	r18
    362c:	cc d0       	rcall	.+408    	; 0x37c6 <log>
    362e:	2f 91       	pop	r18
    3630:	3f 91       	pop	r19
    3632:	4f 91       	pop	r20
    3634:	5f 91       	pop	r21
    3636:	52 df       	rcall	.-348    	; 0x34dc <__mulsf3>
    3638:	4a c0       	rjmp	.+148    	; 0x36ce <exp>
    363a:	11 f4       	brne	.+4      	; 0x3640 <pow+0x9e>
    363c:	0e f4       	brtc	.+2      	; 0x3640 <pow+0x9e>
    363e:	b2 ce       	rjmp	.-668    	; 0x33a4 <__fp_nan>
    3640:	72 c0       	rjmp	.+228    	; 0x3726 <__fp_mpack>

00003642 <sqrt>:
    3642:	20 df       	rcall	.-448    	; 0x3484 <__fp_splitA>
    3644:	d0 f3       	brcs	.-12     	; 0x363a <pow+0x98>
    3646:	99 23       	and	r25, r25
    3648:	d9 f3       	breq	.-10     	; 0x3640 <pow+0x9e>
    364a:	ce f3       	brts	.-14     	; 0x363e <pow+0x9c>
    364c:	9f 57       	subi	r25, 0x7F	; 127
    364e:	55 0b       	sbc	r21, r21
    3650:	87 ff       	sbrs	r24, 7
    3652:	77 d0       	rcall	.+238    	; 0x3742 <__fp_norm2>
    3654:	00 24       	eor	r0, r0
    3656:	a0 e6       	ldi	r26, 0x60	; 96
    3658:	40 ea       	ldi	r20, 0xA0	; 160
    365a:	90 01       	movw	r18, r0
    365c:	80 58       	subi	r24, 0x80	; 128
    365e:	56 95       	lsr	r21
    3660:	97 95       	ror	r25
    3662:	28 f4       	brcc	.+10     	; 0x366e <sqrt+0x2c>
    3664:	80 5c       	subi	r24, 0xC0	; 192
    3666:	66 0f       	add	r22, r22
    3668:	77 1f       	adc	r23, r23
    366a:	88 1f       	adc	r24, r24
    366c:	20 f0       	brcs	.+8      	; 0x3676 <sqrt+0x34>
    366e:	26 17       	cp	r18, r22
    3670:	37 07       	cpc	r19, r23
    3672:	48 07       	cpc	r20, r24
    3674:	30 f4       	brcc	.+12     	; 0x3682 <sqrt+0x40>
    3676:	62 1b       	sub	r22, r18
    3678:	73 0b       	sbc	r23, r19
    367a:	84 0b       	sbc	r24, r20
    367c:	20 29       	or	r18, r0
    367e:	31 29       	or	r19, r1
    3680:	4a 2b       	or	r20, r26
    3682:	a6 95       	lsr	r26
    3684:	17 94       	ror	r1
    3686:	07 94       	ror	r0
    3688:	20 25       	eor	r18, r0
    368a:	31 25       	eor	r19, r1
    368c:	4a 27       	eor	r20, r26
    368e:	58 f7       	brcc	.-42     	; 0x3666 <sqrt+0x24>
    3690:	66 0f       	add	r22, r22
    3692:	77 1f       	adc	r23, r23
    3694:	88 1f       	adc	r24, r24
    3696:	20 f0       	brcs	.+8      	; 0x36a0 <sqrt+0x5e>
    3698:	26 17       	cp	r18, r22
    369a:	37 07       	cpc	r19, r23
    369c:	48 07       	cpc	r20, r24
    369e:	30 f4       	brcc	.+12     	; 0x36ac <sqrt+0x6a>
    36a0:	62 0b       	sbc	r22, r18
    36a2:	73 0b       	sbc	r23, r19
    36a4:	84 0b       	sbc	r24, r20
    36a6:	20 0d       	add	r18, r0
    36a8:	31 1d       	adc	r19, r1
    36aa:	41 1d       	adc	r20, r1
    36ac:	a0 95       	com	r26
    36ae:	81 f7       	brne	.-32     	; 0x3690 <sqrt+0x4e>
    36b0:	b9 01       	movw	r22, r18
    36b2:	84 2f       	mov	r24, r20
    36b4:	91 58       	subi	r25, 0x81	; 129
    36b6:	88 0f       	add	r24, r24
    36b8:	96 95       	lsr	r25
    36ba:	87 95       	ror	r24
    36bc:	08 95       	ret

000036be <square>:
    36be:	9b 01       	movw	r18, r22
    36c0:	ac 01       	movw	r20, r24
    36c2:	0c cf       	rjmp	.-488    	; 0x34dc <__mulsf3>
    36c4:	19 f4       	brne	.+6      	; 0x36cc <square+0xe>
    36c6:	0e f0       	brts	.+2      	; 0x36ca <square+0xc>
    36c8:	67 ce       	rjmp	.-818    	; 0x3398 <__fp_inf>
    36ca:	f6 ce       	rjmp	.-532    	; 0x34b8 <__fp_zero>
    36cc:	6b ce       	rjmp	.-810    	; 0x33a4 <__fp_nan>

000036ce <exp>:
    36ce:	da de       	rcall	.-588    	; 0x3484 <__fp_splitA>
    36d0:	c8 f3       	brcs	.-14     	; 0x36c4 <square+0x6>
    36d2:	96 38       	cpi	r25, 0x86	; 134
    36d4:	c0 f7       	brcc	.-16     	; 0x36c6 <square+0x8>
    36d6:	07 f8       	bld	r0, 7
    36d8:	0f 92       	push	r0
    36da:	e8 94       	clt
    36dc:	2b e3       	ldi	r18, 0x3B	; 59
    36de:	3a ea       	ldi	r19, 0xAA	; 170
    36e0:	48 eb       	ldi	r20, 0xB8	; 184
    36e2:	5f e7       	ldi	r21, 0x7F	; 127
    36e4:	09 df       	rcall	.-494    	; 0x34f8 <__mulsf3_pse>
    36e6:	0f 92       	push	r0
    36e8:	0f 92       	push	r0
    36ea:	0f 92       	push	r0
    36ec:	4d b7       	in	r20, 0x3d	; 61
    36ee:	5e b7       	in	r21, 0x3e	; 62
    36f0:	0f 92       	push	r0
    36f2:	a9 d0       	rcall	.+338    	; 0x3846 <modf>
    36f4:	e5 e6       	ldi	r30, 0x65	; 101
    36f6:	f2 e0       	ldi	r31, 0x02	; 2
    36f8:	68 de       	rcall	.-816    	; 0x33ca <__fp_powser>
    36fa:	4f 91       	pop	r20
    36fc:	5f 91       	pop	r21
    36fe:	ef 91       	pop	r30
    3700:	ff 91       	pop	r31
    3702:	e5 95       	asr	r30
    3704:	ee 1f       	adc	r30, r30
    3706:	ff 1f       	adc	r31, r31
    3708:	49 f0       	breq	.+18     	; 0x371c <exp+0x4e>
    370a:	fe 57       	subi	r31, 0x7E	; 126
    370c:	e0 68       	ori	r30, 0x80	; 128
    370e:	44 27       	eor	r20, r20
    3710:	ee 0f       	add	r30, r30
    3712:	44 1f       	adc	r20, r20
    3714:	fa 95       	dec	r31
    3716:	e1 f7       	brne	.-8      	; 0x3710 <exp+0x42>
    3718:	41 95       	neg	r20
    371a:	55 0b       	sbc	r21, r21
    371c:	1b d0       	rcall	.+54     	; 0x3754 <ldexp>
    371e:	0f 90       	pop	r0
    3720:	07 fe       	sbrs	r0, 7
    3722:	d5 ce       	rjmp	.-598    	; 0x34ce <inverse>
    3724:	08 95       	ret

00003726 <__fp_mpack>:
    3726:	9f 3f       	cpi	r25, 0xFF	; 255
    3728:	31 f0       	breq	.+12     	; 0x3736 <__fp_mpack_finite+0xc>

0000372a <__fp_mpack_finite>:
    372a:	91 50       	subi	r25, 0x01	; 1
    372c:	20 f4       	brcc	.+8      	; 0x3736 <__fp_mpack_finite+0xc>
    372e:	87 95       	ror	r24
    3730:	77 95       	ror	r23
    3732:	67 95       	ror	r22
    3734:	b7 95       	ror	r27
    3736:	88 0f       	add	r24, r24
    3738:	91 1d       	adc	r25, r1
    373a:	96 95       	lsr	r25
    373c:	87 95       	ror	r24
    373e:	97 f9       	bld	r25, 7
    3740:	08 95       	ret

00003742 <__fp_norm2>:
    3742:	91 50       	subi	r25, 0x01	; 1
    3744:	50 40       	sbci	r21, 0x00	; 0
    3746:	66 0f       	add	r22, r22
    3748:	77 1f       	adc	r23, r23
    374a:	88 1f       	adc	r24, r24
    374c:	d2 f7       	brpl	.-12     	; 0x3742 <__fp_norm2>
    374e:	08 95       	ret
    3750:	23 ce       	rjmp	.-954    	; 0x3398 <__fp_inf>
    3752:	e9 cf       	rjmp	.-46     	; 0x3726 <__fp_mpack>

00003754 <ldexp>:
    3754:	97 de       	rcall	.-722    	; 0x3484 <__fp_splitA>
    3756:	e8 f3       	brcs	.-6      	; 0x3752 <__fp_norm2+0x10>
    3758:	99 23       	and	r25, r25
    375a:	d9 f3       	breq	.-10     	; 0x3752 <__fp_norm2+0x10>
    375c:	94 0f       	add	r25, r20
    375e:	51 1d       	adc	r21, r1
    3760:	bb f3       	brvs	.-18     	; 0x3750 <__fp_norm2+0xe>
    3762:	91 50       	subi	r25, 0x01	; 1
    3764:	50 40       	sbci	r21, 0x00	; 0
    3766:	94 f0       	brlt	.+36     	; 0x378c <ldexp+0x38>
    3768:	59 f0       	breq	.+22     	; 0x3780 <ldexp+0x2c>
    376a:	88 23       	and	r24, r24
    376c:	32 f0       	brmi	.+12     	; 0x377a <ldexp+0x26>
    376e:	66 0f       	add	r22, r22
    3770:	77 1f       	adc	r23, r23
    3772:	88 1f       	adc	r24, r24
    3774:	91 50       	subi	r25, 0x01	; 1
    3776:	50 40       	sbci	r21, 0x00	; 0
    3778:	c1 f7       	brne	.-16     	; 0x376a <ldexp+0x16>
    377a:	9e 3f       	cpi	r25, 0xFE	; 254
    377c:	51 05       	cpc	r21, r1
    377e:	44 f7       	brge	.-48     	; 0x3750 <__fp_norm2+0xe>
    3780:	88 0f       	add	r24, r24
    3782:	91 1d       	adc	r25, r1
    3784:	96 95       	lsr	r25
    3786:	87 95       	ror	r24
    3788:	97 f9       	bld	r25, 7
    378a:	08 95       	ret
    378c:	5f 3f       	cpi	r21, 0xFF	; 255
    378e:	ac f0       	brlt	.+42     	; 0x37ba <ldexp+0x66>
    3790:	98 3e       	cpi	r25, 0xE8	; 232
    3792:	9c f0       	brlt	.+38     	; 0x37ba <ldexp+0x66>
    3794:	bb 27       	eor	r27, r27
    3796:	86 95       	lsr	r24
    3798:	77 95       	ror	r23
    379a:	67 95       	ror	r22
    379c:	b7 95       	ror	r27
    379e:	08 f4       	brcc	.+2      	; 0x37a2 <ldexp+0x4e>
    37a0:	b1 60       	ori	r27, 0x01	; 1
    37a2:	93 95       	inc	r25
    37a4:	c1 f7       	brne	.-16     	; 0x3796 <ldexp+0x42>
    37a6:	bb 0f       	add	r27, r27
    37a8:	58 f7       	brcc	.-42     	; 0x3780 <ldexp+0x2c>
    37aa:	11 f4       	brne	.+4      	; 0x37b0 <ldexp+0x5c>
    37ac:	60 ff       	sbrs	r22, 0
    37ae:	e8 cf       	rjmp	.-48     	; 0x3780 <ldexp+0x2c>
    37b0:	6f 5f       	subi	r22, 0xFF	; 255
    37b2:	7f 4f       	sbci	r23, 0xFF	; 255
    37b4:	8f 4f       	sbci	r24, 0xFF	; 255
    37b6:	9f 4f       	sbci	r25, 0xFF	; 255
    37b8:	e3 cf       	rjmp	.-58     	; 0x3780 <ldexp+0x2c>
    37ba:	7f ce       	rjmp	.-770    	; 0x34ba <__fp_szero>
    37bc:	0e f0       	brts	.+2      	; 0x37c0 <ldexp+0x6c>
    37be:	b3 cf       	rjmp	.-154    	; 0x3726 <__fp_mpack>
    37c0:	f1 cd       	rjmp	.-1054   	; 0x33a4 <__fp_nan>
    37c2:	68 94       	set
    37c4:	e9 cd       	rjmp	.-1070   	; 0x3398 <__fp_inf>

000037c6 <log>:
    37c6:	5e de       	rcall	.-836    	; 0x3484 <__fp_splitA>
    37c8:	c8 f3       	brcs	.-14     	; 0x37bc <ldexp+0x68>
    37ca:	99 23       	and	r25, r25
    37cc:	d1 f3       	breq	.-12     	; 0x37c2 <ldexp+0x6e>
    37ce:	c6 f3       	brts	.-16     	; 0x37c0 <ldexp+0x6c>
    37d0:	df 93       	push	r29
    37d2:	cf 93       	push	r28
    37d4:	1f 93       	push	r17
    37d6:	0f 93       	push	r16
    37d8:	ff 92       	push	r15
    37da:	c9 2f       	mov	r28, r25
    37dc:	dd 27       	eor	r29, r29
    37de:	88 23       	and	r24, r24
    37e0:	2a f0       	brmi	.+10     	; 0x37ec <log+0x26>
    37e2:	21 97       	sbiw	r28, 0x01	; 1
    37e4:	66 0f       	add	r22, r22
    37e6:	77 1f       	adc	r23, r23
    37e8:	88 1f       	adc	r24, r24
    37ea:	da f7       	brpl	.-10     	; 0x37e2 <log+0x1c>
    37ec:	20 e0       	ldi	r18, 0x00	; 0
    37ee:	30 e0       	ldi	r19, 0x00	; 0
    37f0:	40 e8       	ldi	r20, 0x80	; 128
    37f2:	5f eb       	ldi	r21, 0xBF	; 191
    37f4:	9f e3       	ldi	r25, 0x3F	; 63
    37f6:	88 39       	cpi	r24, 0x98	; 152
    37f8:	20 f0       	brcs	.+8      	; 0x3802 <log+0x3c>
    37fa:	80 3e       	cpi	r24, 0xE0	; 224
    37fc:	30 f0       	brcs	.+12     	; 0x380a <log+0x44>
    37fe:	21 96       	adiw	r28, 0x01	; 1
    3800:	8f 77       	andi	r24, 0x7F	; 127
    3802:	9a db       	rcall	.-2252   	; 0x2f38 <__addsf3>
    3804:	ed e8       	ldi	r30, 0x8D	; 141
    3806:	f2 e0       	ldi	r31, 0x02	; 2
    3808:	03 c0       	rjmp	.+6      	; 0x3810 <log+0x4a>
    380a:	96 db       	rcall	.-2260   	; 0x2f38 <__addsf3>
    380c:	ea eb       	ldi	r30, 0xBA	; 186
    380e:	f2 e0       	ldi	r31, 0x02	; 2
    3810:	dc dd       	rcall	.-1096   	; 0x33ca <__fp_powser>
    3812:	8b 01       	movw	r16, r22
    3814:	be 01       	movw	r22, r28
    3816:	ec 01       	movw	r28, r24
    3818:	fb 2e       	mov	r15, r27
    381a:	6f 57       	subi	r22, 0x7F	; 127
    381c:	71 09       	sbc	r23, r1
    381e:	75 95       	asr	r23
    3820:	77 1f       	adc	r23, r23
    3822:	88 0b       	sbc	r24, r24
    3824:	99 0b       	sbc	r25, r25
    3826:	3e dd       	rcall	.-1412   	; 0x32a4 <__floatsisf>
    3828:	28 e1       	ldi	r18, 0x18	; 24
    382a:	32 e7       	ldi	r19, 0x72	; 114
    382c:	41 e3       	ldi	r20, 0x31	; 49
    382e:	5f e3       	ldi	r21, 0x3F	; 63
    3830:	61 de       	rcall	.-830    	; 0x34f4 <__mulsf3x>
    3832:	af 2d       	mov	r26, r15
    3834:	98 01       	movw	r18, r16
    3836:	ae 01       	movw	r20, r28
    3838:	ff 90       	pop	r15
    383a:	0f 91       	pop	r16
    383c:	1f 91       	pop	r17
    383e:	cf 91       	pop	r28
    3840:	df 91       	pop	r29
    3842:	8b db       	rcall	.-2282   	; 0x2f5a <__addsf3x>
    3844:	06 ce       	rjmp	.-1012   	; 0x3452 <__fp_round>

00003846 <modf>:
    3846:	fa 01       	movw	r30, r20
    3848:	dc 01       	movw	r26, r24
    384a:	aa 0f       	add	r26, r26
    384c:	bb 1f       	adc	r27, r27
    384e:	9b 01       	movw	r18, r22
    3850:	ac 01       	movw	r20, r24
    3852:	bf 57       	subi	r27, 0x7F	; 127
    3854:	28 f4       	brcc	.+10     	; 0x3860 <modf+0x1a>
    3856:	22 27       	eor	r18, r18
    3858:	33 27       	eor	r19, r19
    385a:	44 27       	eor	r20, r20
    385c:	50 78       	andi	r21, 0x80	; 128
    385e:	1f c0       	rjmp	.+62     	; 0x389e <modf+0x58>
    3860:	b7 51       	subi	r27, 0x17	; 23
    3862:	88 f4       	brcc	.+34     	; 0x3886 <modf+0x40>
    3864:	ab 2f       	mov	r26, r27
    3866:	00 24       	eor	r0, r0
    3868:	46 95       	lsr	r20
    386a:	37 95       	ror	r19
    386c:	27 95       	ror	r18
    386e:	01 1c       	adc	r0, r1
    3870:	a3 95       	inc	r26
    3872:	d2 f3       	brmi	.-12     	; 0x3868 <modf+0x22>
    3874:	00 20       	and	r0, r0
    3876:	69 f0       	breq	.+26     	; 0x3892 <modf+0x4c>
    3878:	22 0f       	add	r18, r18
    387a:	33 1f       	adc	r19, r19
    387c:	44 1f       	adc	r20, r20
    387e:	b3 95       	inc	r27
    3880:	da f3       	brmi	.-10     	; 0x3878 <modf+0x32>
    3882:	0d d0       	rcall	.+26     	; 0x389e <modf+0x58>
    3884:	58 cb       	rjmp	.-2384   	; 0x2f36 <__subsf3>
    3886:	61 30       	cpi	r22, 0x01	; 1
    3888:	71 05       	cpc	r23, r1
    388a:	a0 e8       	ldi	r26, 0x80	; 128
    388c:	8a 07       	cpc	r24, r26
    388e:	b9 46       	sbci	r27, 0x69	; 105
    3890:	30 f4       	brcc	.+12     	; 0x389e <modf+0x58>
    3892:	9b 01       	movw	r18, r22
    3894:	ac 01       	movw	r20, r24
    3896:	66 27       	eor	r22, r22
    3898:	77 27       	eor	r23, r23
    389a:	88 27       	eor	r24, r24
    389c:	90 78       	andi	r25, 0x80	; 128
    389e:	30 96       	adiw	r30, 0x00	; 0
    38a0:	21 f0       	breq	.+8      	; 0x38aa <modf+0x64>
    38a2:	20 83       	st	Z, r18
    38a4:	31 83       	std	Z+1, r19	; 0x01
    38a6:	42 83       	std	Z+2, r20	; 0x02
    38a8:	53 83       	std	Z+3, r21	; 0x03
    38aa:	08 95       	ret

000038ac <__mulsi3>:
    38ac:	db 01       	movw	r26, r22
    38ae:	8f 93       	push	r24
    38b0:	9f 93       	push	r25
    38b2:	70 d0       	rcall	.+224    	; 0x3994 <__muluhisi3>
    38b4:	bf 91       	pop	r27
    38b6:	af 91       	pop	r26
    38b8:	a2 9f       	mul	r26, r18
    38ba:	80 0d       	add	r24, r0
    38bc:	91 1d       	adc	r25, r1
    38be:	a3 9f       	mul	r26, r19
    38c0:	90 0d       	add	r25, r0
    38c2:	b2 9f       	mul	r27, r18
    38c4:	90 0d       	add	r25, r0
    38c6:	11 24       	eor	r1, r1
    38c8:	08 95       	ret

000038ca <__udivmodhi4>:
    38ca:	aa 1b       	sub	r26, r26
    38cc:	bb 1b       	sub	r27, r27
    38ce:	51 e1       	ldi	r21, 0x11	; 17
    38d0:	07 c0       	rjmp	.+14     	; 0x38e0 <__udivmodhi4_ep>

000038d2 <__udivmodhi4_loop>:
    38d2:	aa 1f       	adc	r26, r26
    38d4:	bb 1f       	adc	r27, r27
    38d6:	a6 17       	cp	r26, r22
    38d8:	b7 07       	cpc	r27, r23
    38da:	10 f0       	brcs	.+4      	; 0x38e0 <__udivmodhi4_ep>
    38dc:	a6 1b       	sub	r26, r22
    38de:	b7 0b       	sbc	r27, r23

000038e0 <__udivmodhi4_ep>:
    38e0:	88 1f       	adc	r24, r24
    38e2:	99 1f       	adc	r25, r25
    38e4:	5a 95       	dec	r21
    38e6:	a9 f7       	brne	.-22     	; 0x38d2 <__udivmodhi4_loop>
    38e8:	80 95       	com	r24
    38ea:	90 95       	com	r25
    38ec:	bc 01       	movw	r22, r24
    38ee:	cd 01       	movw	r24, r26
    38f0:	08 95       	ret

000038f2 <__divmodhi4>:
    38f2:	97 fb       	bst	r25, 7
    38f4:	07 2e       	mov	r0, r23
    38f6:	16 f4       	brtc	.+4      	; 0x38fc <__divmodhi4+0xa>
    38f8:	00 94       	com	r0
    38fa:	06 d0       	rcall	.+12     	; 0x3908 <__divmodhi4_neg1>
    38fc:	77 fd       	sbrc	r23, 7
    38fe:	08 d0       	rcall	.+16     	; 0x3910 <__divmodhi4_neg2>
    3900:	e4 df       	rcall	.-56     	; 0x38ca <__udivmodhi4>
    3902:	07 fc       	sbrc	r0, 7
    3904:	05 d0       	rcall	.+10     	; 0x3910 <__divmodhi4_neg2>
    3906:	3e f4       	brtc	.+14     	; 0x3916 <__divmodhi4_exit>

00003908 <__divmodhi4_neg1>:
    3908:	90 95       	com	r25
    390a:	81 95       	neg	r24
    390c:	9f 4f       	sbci	r25, 0xFF	; 255
    390e:	08 95       	ret

00003910 <__divmodhi4_neg2>:
    3910:	70 95       	com	r23
    3912:	61 95       	neg	r22
    3914:	7f 4f       	sbci	r23, 0xFF	; 255

00003916 <__divmodhi4_exit>:
    3916:	08 95       	ret

00003918 <__udivmodsi4>:
    3918:	a1 e2       	ldi	r26, 0x21	; 33
    391a:	1a 2e       	mov	r1, r26
    391c:	aa 1b       	sub	r26, r26
    391e:	bb 1b       	sub	r27, r27
    3920:	fd 01       	movw	r30, r26
    3922:	0d c0       	rjmp	.+26     	; 0x393e <__udivmodsi4_ep>

00003924 <__udivmodsi4_loop>:
    3924:	aa 1f       	adc	r26, r26
    3926:	bb 1f       	adc	r27, r27
    3928:	ee 1f       	adc	r30, r30
    392a:	ff 1f       	adc	r31, r31
    392c:	a2 17       	cp	r26, r18
    392e:	b3 07       	cpc	r27, r19
    3930:	e4 07       	cpc	r30, r20
    3932:	f5 07       	cpc	r31, r21
    3934:	20 f0       	brcs	.+8      	; 0x393e <__udivmodsi4_ep>
    3936:	a2 1b       	sub	r26, r18
    3938:	b3 0b       	sbc	r27, r19
    393a:	e4 0b       	sbc	r30, r20
    393c:	f5 0b       	sbc	r31, r21

0000393e <__udivmodsi4_ep>:
    393e:	66 1f       	adc	r22, r22
    3940:	77 1f       	adc	r23, r23
    3942:	88 1f       	adc	r24, r24
    3944:	99 1f       	adc	r25, r25
    3946:	1a 94       	dec	r1
    3948:	69 f7       	brne	.-38     	; 0x3924 <__udivmodsi4_loop>
    394a:	60 95       	com	r22
    394c:	70 95       	com	r23
    394e:	80 95       	com	r24
    3950:	90 95       	com	r25
    3952:	9b 01       	movw	r18, r22
    3954:	ac 01       	movw	r20, r24
    3956:	bd 01       	movw	r22, r26
    3958:	cf 01       	movw	r24, r30
    395a:	08 95       	ret

0000395c <__divmodsi4>:
    395c:	05 2e       	mov	r0, r21
    395e:	97 fb       	bst	r25, 7
    3960:	16 f4       	brtc	.+4      	; 0x3966 <__divmodsi4+0xa>
    3962:	00 94       	com	r0
    3964:	0f d0       	rcall	.+30     	; 0x3984 <__negsi2>
    3966:	57 fd       	sbrc	r21, 7
    3968:	05 d0       	rcall	.+10     	; 0x3974 <__divmodsi4_neg2>
    396a:	d6 df       	rcall	.-84     	; 0x3918 <__udivmodsi4>
    396c:	07 fc       	sbrc	r0, 7
    396e:	02 d0       	rcall	.+4      	; 0x3974 <__divmodsi4_neg2>
    3970:	46 f4       	brtc	.+16     	; 0x3982 <__divmodsi4_exit>
    3972:	08 c0       	rjmp	.+16     	; 0x3984 <__negsi2>

00003974 <__divmodsi4_neg2>:
    3974:	50 95       	com	r21
    3976:	40 95       	com	r20
    3978:	30 95       	com	r19
    397a:	21 95       	neg	r18
    397c:	3f 4f       	sbci	r19, 0xFF	; 255
    397e:	4f 4f       	sbci	r20, 0xFF	; 255
    3980:	5f 4f       	sbci	r21, 0xFF	; 255

00003982 <__divmodsi4_exit>:
    3982:	08 95       	ret

00003984 <__negsi2>:
    3984:	90 95       	com	r25
    3986:	80 95       	com	r24
    3988:	70 95       	com	r23
    398a:	61 95       	neg	r22
    398c:	7f 4f       	sbci	r23, 0xFF	; 255
    398e:	8f 4f       	sbci	r24, 0xFF	; 255
    3990:	9f 4f       	sbci	r25, 0xFF	; 255
    3992:	08 95       	ret

00003994 <__muluhisi3>:
    3994:	2d d0       	rcall	.+90     	; 0x39f0 <__umulhisi3>
    3996:	a5 9f       	mul	r26, r21
    3998:	90 0d       	add	r25, r0
    399a:	b4 9f       	mul	r27, r20
    399c:	90 0d       	add	r25, r0
    399e:	a4 9f       	mul	r26, r20
    39a0:	80 0d       	add	r24, r0
    39a2:	91 1d       	adc	r25, r1
    39a4:	11 24       	eor	r1, r1
    39a6:	08 95       	ret

000039a8 <__mulshisi3>:
    39a8:	b7 ff       	sbrs	r27, 7
    39aa:	f4 cf       	rjmp	.-24     	; 0x3994 <__muluhisi3>

000039ac <__mulohisi3>:
    39ac:	f3 df       	rcall	.-26     	; 0x3994 <__muluhisi3>
    39ae:	82 1b       	sub	r24, r18
    39b0:	93 0b       	sbc	r25, r19
    39b2:	08 95       	ret

000039b4 <__ashrdi3>:
    39b4:	97 fb       	bst	r25, 7
    39b6:	10 f8       	bld	r1, 0

000039b8 <__lshrdi3>:
    39b8:	16 94       	lsr	r1
    39ba:	00 08       	sbc	r0, r0
    39bc:	0f 93       	push	r16
    39be:	08 30       	cpi	r16, 0x08	; 8
    39c0:	98 f0       	brcs	.+38     	; 0x39e8 <__lshrdi3+0x30>
    39c2:	08 50       	subi	r16, 0x08	; 8
    39c4:	23 2f       	mov	r18, r19
    39c6:	34 2f       	mov	r19, r20
    39c8:	45 2f       	mov	r20, r21
    39ca:	56 2f       	mov	r21, r22
    39cc:	67 2f       	mov	r22, r23
    39ce:	78 2f       	mov	r23, r24
    39d0:	89 2f       	mov	r24, r25
    39d2:	90 2d       	mov	r25, r0
    39d4:	f4 cf       	rjmp	.-24     	; 0x39be <__lshrdi3+0x6>
    39d6:	05 94       	asr	r0
    39d8:	97 95       	ror	r25
    39da:	87 95       	ror	r24
    39dc:	77 95       	ror	r23
    39de:	67 95       	ror	r22
    39e0:	57 95       	ror	r21
    39e2:	47 95       	ror	r20
    39e4:	37 95       	ror	r19
    39e6:	27 95       	ror	r18
    39e8:	0a 95       	dec	r16
    39ea:	aa f7       	brpl	.-22     	; 0x39d6 <__lshrdi3+0x1e>
    39ec:	0f 91       	pop	r16
    39ee:	08 95       	ret

000039f0 <__umulhisi3>:
    39f0:	a2 9f       	mul	r26, r18
    39f2:	b0 01       	movw	r22, r0
    39f4:	b3 9f       	mul	r27, r19
    39f6:	c0 01       	movw	r24, r0
    39f8:	a3 9f       	mul	r26, r19
    39fa:	70 0d       	add	r23, r0
    39fc:	81 1d       	adc	r24, r1
    39fe:	11 24       	eor	r1, r1
    3a00:	91 1d       	adc	r25, r1
    3a02:	b2 9f       	mul	r27, r18
    3a04:	70 0d       	add	r23, r0
    3a06:	81 1d       	adc	r24, r1
    3a08:	11 24       	eor	r1, r1
    3a0a:	91 1d       	adc	r25, r1
    3a0c:	08 95       	ret

00003a0e <fdevopen>:
    3a0e:	0f 93       	push	r16
    3a10:	1f 93       	push	r17
    3a12:	cf 93       	push	r28
    3a14:	df 93       	push	r29
    3a16:	00 97       	sbiw	r24, 0x00	; 0
    3a18:	31 f4       	brne	.+12     	; 0x3a26 <fdevopen+0x18>
    3a1a:	61 15       	cp	r22, r1
    3a1c:	71 05       	cpc	r23, r1
    3a1e:	19 f4       	brne	.+6      	; 0x3a26 <fdevopen+0x18>
    3a20:	80 e0       	ldi	r24, 0x00	; 0
    3a22:	90 e0       	ldi	r25, 0x00	; 0
    3a24:	39 c0       	rjmp	.+114    	; 0x3a98 <fdevopen+0x8a>
    3a26:	8b 01       	movw	r16, r22
    3a28:	ec 01       	movw	r28, r24
    3a2a:	6e e0       	ldi	r22, 0x0E	; 14
    3a2c:	70 e0       	ldi	r23, 0x00	; 0
    3a2e:	81 e0       	ldi	r24, 0x01	; 1
    3a30:	90 e0       	ldi	r25, 0x00	; 0
    3a32:	77 d5       	rcall	.+2798   	; 0x4522 <calloc>
    3a34:	fc 01       	movw	r30, r24
    3a36:	89 2b       	or	r24, r25
    3a38:	99 f3       	breq	.-26     	; 0x3a20 <fdevopen+0x12>
    3a3a:	80 e8       	ldi	r24, 0x80	; 128
    3a3c:	83 83       	std	Z+3, r24	; 0x03
    3a3e:	01 15       	cp	r16, r1
    3a40:	11 05       	cpc	r17, r1
    3a42:	71 f0       	breq	.+28     	; 0x3a60 <fdevopen+0x52>
    3a44:	02 87       	std	Z+10, r16	; 0x0a
    3a46:	13 87       	std	Z+11, r17	; 0x0b
    3a48:	81 e8       	ldi	r24, 0x81	; 129
    3a4a:	83 83       	std	Z+3, r24	; 0x03
    3a4c:	80 91 8e 21 	lds	r24, 0x218E	; 0x80218e <__iob>
    3a50:	90 91 8f 21 	lds	r25, 0x218F	; 0x80218f <__iob+0x1>
    3a54:	89 2b       	or	r24, r25
    3a56:	21 f4       	brne	.+8      	; 0x3a60 <fdevopen+0x52>
    3a58:	e0 93 8e 21 	sts	0x218E, r30	; 0x80218e <__iob>
    3a5c:	f0 93 8f 21 	sts	0x218F, r31	; 0x80218f <__iob+0x1>
    3a60:	20 97       	sbiw	r28, 0x00	; 0
    3a62:	c9 f0       	breq	.+50     	; 0x3a96 <fdevopen+0x88>
    3a64:	c0 87       	std	Z+8, r28	; 0x08
    3a66:	d1 87       	std	Z+9, r29	; 0x09
    3a68:	83 81       	ldd	r24, Z+3	; 0x03
    3a6a:	82 60       	ori	r24, 0x02	; 2
    3a6c:	83 83       	std	Z+3, r24	; 0x03
    3a6e:	80 91 90 21 	lds	r24, 0x2190	; 0x802190 <__iob+0x2>
    3a72:	90 91 91 21 	lds	r25, 0x2191	; 0x802191 <__iob+0x3>
    3a76:	89 2b       	or	r24, r25
    3a78:	71 f4       	brne	.+28     	; 0x3a96 <fdevopen+0x88>
    3a7a:	e0 93 90 21 	sts	0x2190, r30	; 0x802190 <__iob+0x2>
    3a7e:	f0 93 91 21 	sts	0x2191, r31	; 0x802191 <__iob+0x3>
    3a82:	80 91 92 21 	lds	r24, 0x2192	; 0x802192 <__iob+0x4>
    3a86:	90 91 93 21 	lds	r25, 0x2193	; 0x802193 <__iob+0x5>
    3a8a:	89 2b       	or	r24, r25
    3a8c:	21 f4       	brne	.+8      	; 0x3a96 <fdevopen+0x88>
    3a8e:	e0 93 92 21 	sts	0x2192, r30	; 0x802192 <__iob+0x4>
    3a92:	f0 93 93 21 	sts	0x2193, r31	; 0x802193 <__iob+0x5>
    3a96:	cf 01       	movw	r24, r30
    3a98:	df 91       	pop	r29
    3a9a:	cf 91       	pop	r28
    3a9c:	1f 91       	pop	r17
    3a9e:	0f 91       	pop	r16
    3aa0:	08 95       	ret

00003aa2 <printf>:
    3aa2:	cf 93       	push	r28
    3aa4:	df 93       	push	r29
    3aa6:	cd b7       	in	r28, 0x3d	; 61
    3aa8:	de b7       	in	r29, 0x3e	; 62
    3aaa:	ae 01       	movw	r20, r28
    3aac:	4a 5f       	subi	r20, 0xFA	; 250
    3aae:	5f 4f       	sbci	r21, 0xFF	; 255
    3ab0:	fa 01       	movw	r30, r20
    3ab2:	61 91       	ld	r22, Z+
    3ab4:	71 91       	ld	r23, Z+
    3ab6:	af 01       	movw	r20, r30
    3ab8:	80 91 90 21 	lds	r24, 0x2190	; 0x802190 <__iob+0x2>
    3abc:	90 91 91 21 	lds	r25, 0x2191	; 0x802191 <__iob+0x3>
    3ac0:	76 d0       	rcall	.+236    	; 0x3bae <vfprintf>
    3ac2:	df 91       	pop	r29
    3ac4:	cf 91       	pop	r28
    3ac6:	08 95       	ret

00003ac8 <puts>:
    3ac8:	0f 93       	push	r16
    3aca:	1f 93       	push	r17
    3acc:	cf 93       	push	r28
    3ace:	df 93       	push	r29
    3ad0:	e0 91 90 21 	lds	r30, 0x2190	; 0x802190 <__iob+0x2>
    3ad4:	f0 91 91 21 	lds	r31, 0x2191	; 0x802191 <__iob+0x3>
    3ad8:	23 81       	ldd	r18, Z+3	; 0x03
    3ada:	21 ff       	sbrs	r18, 1
    3adc:	1b c0       	rjmp	.+54     	; 0x3b14 <puts+0x4c>
    3ade:	8c 01       	movw	r16, r24
    3ae0:	d0 e0       	ldi	r29, 0x00	; 0
    3ae2:	c0 e0       	ldi	r28, 0x00	; 0
    3ae4:	f8 01       	movw	r30, r16
    3ae6:	81 91       	ld	r24, Z+
    3ae8:	8f 01       	movw	r16, r30
    3aea:	60 91 90 21 	lds	r22, 0x2190	; 0x802190 <__iob+0x2>
    3aee:	70 91 91 21 	lds	r23, 0x2191	; 0x802191 <__iob+0x3>
    3af2:	db 01       	movw	r26, r22
    3af4:	18 96       	adiw	r26, 0x08	; 8
    3af6:	ed 91       	ld	r30, X+
    3af8:	fc 91       	ld	r31, X
    3afa:	19 97       	sbiw	r26, 0x09	; 9
    3afc:	88 23       	and	r24, r24
    3afe:	31 f0       	breq	.+12     	; 0x3b0c <puts+0x44>
    3b00:	19 95       	eicall
    3b02:	89 2b       	or	r24, r25
    3b04:	79 f3       	breq	.-34     	; 0x3ae4 <puts+0x1c>
    3b06:	df ef       	ldi	r29, 0xFF	; 255
    3b08:	cf ef       	ldi	r28, 0xFF	; 255
    3b0a:	ec cf       	rjmp	.-40     	; 0x3ae4 <puts+0x1c>
    3b0c:	8a e0       	ldi	r24, 0x0A	; 10
    3b0e:	19 95       	eicall
    3b10:	89 2b       	or	r24, r25
    3b12:	19 f0       	breq	.+6      	; 0x3b1a <puts+0x52>
    3b14:	8f ef       	ldi	r24, 0xFF	; 255
    3b16:	9f ef       	ldi	r25, 0xFF	; 255
    3b18:	02 c0       	rjmp	.+4      	; 0x3b1e <puts+0x56>
    3b1a:	8d 2f       	mov	r24, r29
    3b1c:	9c 2f       	mov	r25, r28
    3b1e:	df 91       	pop	r29
    3b20:	cf 91       	pop	r28
    3b22:	1f 91       	pop	r17
    3b24:	0f 91       	pop	r16
    3b26:	08 95       	ret

00003b28 <sprintf>:
    3b28:	0f 93       	push	r16
    3b2a:	1f 93       	push	r17
    3b2c:	cf 93       	push	r28
    3b2e:	df 93       	push	r29
    3b30:	cd b7       	in	r28, 0x3d	; 61
    3b32:	de b7       	in	r29, 0x3e	; 62
    3b34:	2e 97       	sbiw	r28, 0x0e	; 14
    3b36:	cd bf       	out	0x3d, r28	; 61
    3b38:	de bf       	out	0x3e, r29	; 62
    3b3a:	0e 89       	ldd	r16, Y+22	; 0x16
    3b3c:	1f 89       	ldd	r17, Y+23	; 0x17
    3b3e:	86 e0       	ldi	r24, 0x06	; 6
    3b40:	8c 83       	std	Y+4, r24	; 0x04
    3b42:	09 83       	std	Y+1, r16	; 0x01
    3b44:	1a 83       	std	Y+2, r17	; 0x02
    3b46:	8f ef       	ldi	r24, 0xFF	; 255
    3b48:	9f e7       	ldi	r25, 0x7F	; 127
    3b4a:	8d 83       	std	Y+5, r24	; 0x05
    3b4c:	9e 83       	std	Y+6, r25	; 0x06
    3b4e:	ae 01       	movw	r20, r28
    3b50:	46 5e       	subi	r20, 0xE6	; 230
    3b52:	5f 4f       	sbci	r21, 0xFF	; 255
    3b54:	68 8d       	ldd	r22, Y+24	; 0x18
    3b56:	79 8d       	ldd	r23, Y+25	; 0x19
    3b58:	ce 01       	movw	r24, r28
    3b5a:	01 96       	adiw	r24, 0x01	; 1
    3b5c:	28 d0       	rcall	.+80     	; 0x3bae <vfprintf>
    3b5e:	ef 81       	ldd	r30, Y+7	; 0x07
    3b60:	f8 85       	ldd	r31, Y+8	; 0x08
    3b62:	e0 0f       	add	r30, r16
    3b64:	f1 1f       	adc	r31, r17
    3b66:	10 82       	st	Z, r1
    3b68:	2e 96       	adiw	r28, 0x0e	; 14
    3b6a:	cd bf       	out	0x3d, r28	; 61
    3b6c:	de bf       	out	0x3e, r29	; 62
    3b6e:	df 91       	pop	r29
    3b70:	cf 91       	pop	r28
    3b72:	1f 91       	pop	r17
    3b74:	0f 91       	pop	r16
    3b76:	08 95       	ret

00003b78 <sscanf>:
    3b78:	cf 93       	push	r28
    3b7a:	df 93       	push	r29
    3b7c:	cd b7       	in	r28, 0x3d	; 61
    3b7e:	de b7       	in	r29, 0x3e	; 62
    3b80:	2e 97       	sbiw	r28, 0x0e	; 14
    3b82:	cd bf       	out	0x3d, r28	; 61
    3b84:	de bf       	out	0x3e, r29	; 62
    3b86:	85 e0       	ldi	r24, 0x05	; 5
    3b88:	8c 83       	std	Y+4, r24	; 0x04
    3b8a:	8c 89       	ldd	r24, Y+20	; 0x14
    3b8c:	9d 89       	ldd	r25, Y+21	; 0x15
    3b8e:	89 83       	std	Y+1, r24	; 0x01
    3b90:	9a 83       	std	Y+2, r25	; 0x02
    3b92:	ae 01       	movw	r20, r28
    3b94:	48 5e       	subi	r20, 0xE8	; 232
    3b96:	5f 4f       	sbci	r21, 0xFF	; 255
    3b98:	6e 89       	ldd	r22, Y+22	; 0x16
    3b9a:	7f 89       	ldd	r23, Y+23	; 0x17
    3b9c:	ce 01       	movw	r24, r28
    3b9e:	01 96       	adiw	r24, 0x01	; 1
    3ba0:	a9 d3       	rcall	.+1874   	; 0x42f4 <vfscanf>
    3ba2:	2e 96       	adiw	r28, 0x0e	; 14
    3ba4:	cd bf       	out	0x3d, r28	; 61
    3ba6:	de bf       	out	0x3e, r29	; 62
    3ba8:	df 91       	pop	r29
    3baa:	cf 91       	pop	r28
    3bac:	08 95       	ret

00003bae <vfprintf>:
    3bae:	2f 92       	push	r2
    3bb0:	3f 92       	push	r3
    3bb2:	4f 92       	push	r4
    3bb4:	5f 92       	push	r5
    3bb6:	6f 92       	push	r6
    3bb8:	7f 92       	push	r7
    3bba:	8f 92       	push	r8
    3bbc:	9f 92       	push	r9
    3bbe:	af 92       	push	r10
    3bc0:	bf 92       	push	r11
    3bc2:	cf 92       	push	r12
    3bc4:	df 92       	push	r13
    3bc6:	ef 92       	push	r14
    3bc8:	ff 92       	push	r15
    3bca:	0f 93       	push	r16
    3bcc:	1f 93       	push	r17
    3bce:	cf 93       	push	r28
    3bd0:	df 93       	push	r29
    3bd2:	cd b7       	in	r28, 0x3d	; 61
    3bd4:	de b7       	in	r29, 0x3e	; 62
    3bd6:	2b 97       	sbiw	r28, 0x0b	; 11
    3bd8:	cd bf       	out	0x3d, r28	; 61
    3bda:	de bf       	out	0x3e, r29	; 62
    3bdc:	6c 01       	movw	r12, r24
    3bde:	7b 01       	movw	r14, r22
    3be0:	8a 01       	movw	r16, r20
    3be2:	fc 01       	movw	r30, r24
    3be4:	16 82       	std	Z+6, r1	; 0x06
    3be6:	17 82       	std	Z+7, r1	; 0x07
    3be8:	83 81       	ldd	r24, Z+3	; 0x03
    3bea:	81 ff       	sbrs	r24, 1
    3bec:	bf c1       	rjmp	.+894    	; 0x3f6c <vfprintf+0x3be>
    3bee:	ce 01       	movw	r24, r28
    3bf0:	01 96       	adiw	r24, 0x01	; 1
    3bf2:	3c 01       	movw	r6, r24
    3bf4:	f6 01       	movw	r30, r12
    3bf6:	93 81       	ldd	r25, Z+3	; 0x03
    3bf8:	f7 01       	movw	r30, r14
    3bfa:	93 fd       	sbrc	r25, 3
    3bfc:	85 91       	lpm	r24, Z+
    3bfe:	93 ff       	sbrs	r25, 3
    3c00:	81 91       	ld	r24, Z+
    3c02:	7f 01       	movw	r14, r30
    3c04:	88 23       	and	r24, r24
    3c06:	09 f4       	brne	.+2      	; 0x3c0a <vfprintf+0x5c>
    3c08:	ad c1       	rjmp	.+858    	; 0x3f64 <vfprintf+0x3b6>
    3c0a:	85 32       	cpi	r24, 0x25	; 37
    3c0c:	39 f4       	brne	.+14     	; 0x3c1c <vfprintf+0x6e>
    3c0e:	93 fd       	sbrc	r25, 3
    3c10:	85 91       	lpm	r24, Z+
    3c12:	93 ff       	sbrs	r25, 3
    3c14:	81 91       	ld	r24, Z+
    3c16:	7f 01       	movw	r14, r30
    3c18:	85 32       	cpi	r24, 0x25	; 37
    3c1a:	21 f4       	brne	.+8      	; 0x3c24 <vfprintf+0x76>
    3c1c:	b6 01       	movw	r22, r12
    3c1e:	90 e0       	ldi	r25, 0x00	; 0
    3c20:	29 d6       	rcall	.+3154   	; 0x4874 <fputc>
    3c22:	e8 cf       	rjmp	.-48     	; 0x3bf4 <vfprintf+0x46>
    3c24:	91 2c       	mov	r9, r1
    3c26:	21 2c       	mov	r2, r1
    3c28:	31 2c       	mov	r3, r1
    3c2a:	ff e1       	ldi	r31, 0x1F	; 31
    3c2c:	f3 15       	cp	r31, r3
    3c2e:	d8 f0       	brcs	.+54     	; 0x3c66 <vfprintf+0xb8>
    3c30:	8b 32       	cpi	r24, 0x2B	; 43
    3c32:	79 f0       	breq	.+30     	; 0x3c52 <vfprintf+0xa4>
    3c34:	38 f4       	brcc	.+14     	; 0x3c44 <vfprintf+0x96>
    3c36:	80 32       	cpi	r24, 0x20	; 32
    3c38:	79 f0       	breq	.+30     	; 0x3c58 <vfprintf+0xaa>
    3c3a:	83 32       	cpi	r24, 0x23	; 35
    3c3c:	a1 f4       	brne	.+40     	; 0x3c66 <vfprintf+0xb8>
    3c3e:	23 2d       	mov	r18, r3
    3c40:	20 61       	ori	r18, 0x10	; 16
    3c42:	1d c0       	rjmp	.+58     	; 0x3c7e <vfprintf+0xd0>
    3c44:	8d 32       	cpi	r24, 0x2D	; 45
    3c46:	61 f0       	breq	.+24     	; 0x3c60 <vfprintf+0xb2>
    3c48:	80 33       	cpi	r24, 0x30	; 48
    3c4a:	69 f4       	brne	.+26     	; 0x3c66 <vfprintf+0xb8>
    3c4c:	23 2d       	mov	r18, r3
    3c4e:	21 60       	ori	r18, 0x01	; 1
    3c50:	16 c0       	rjmp	.+44     	; 0x3c7e <vfprintf+0xd0>
    3c52:	83 2d       	mov	r24, r3
    3c54:	82 60       	ori	r24, 0x02	; 2
    3c56:	38 2e       	mov	r3, r24
    3c58:	e3 2d       	mov	r30, r3
    3c5a:	e4 60       	ori	r30, 0x04	; 4
    3c5c:	3e 2e       	mov	r3, r30
    3c5e:	2a c0       	rjmp	.+84     	; 0x3cb4 <vfprintf+0x106>
    3c60:	f3 2d       	mov	r31, r3
    3c62:	f8 60       	ori	r31, 0x08	; 8
    3c64:	1d c0       	rjmp	.+58     	; 0x3ca0 <vfprintf+0xf2>
    3c66:	37 fc       	sbrc	r3, 7
    3c68:	2d c0       	rjmp	.+90     	; 0x3cc4 <vfprintf+0x116>
    3c6a:	20 ed       	ldi	r18, 0xD0	; 208
    3c6c:	28 0f       	add	r18, r24
    3c6e:	2a 30       	cpi	r18, 0x0A	; 10
    3c70:	40 f0       	brcs	.+16     	; 0x3c82 <vfprintf+0xd4>
    3c72:	8e 32       	cpi	r24, 0x2E	; 46
    3c74:	b9 f4       	brne	.+46     	; 0x3ca4 <vfprintf+0xf6>
    3c76:	36 fc       	sbrc	r3, 6
    3c78:	75 c1       	rjmp	.+746    	; 0x3f64 <vfprintf+0x3b6>
    3c7a:	23 2d       	mov	r18, r3
    3c7c:	20 64       	ori	r18, 0x40	; 64
    3c7e:	32 2e       	mov	r3, r18
    3c80:	19 c0       	rjmp	.+50     	; 0x3cb4 <vfprintf+0x106>
    3c82:	36 fe       	sbrs	r3, 6
    3c84:	06 c0       	rjmp	.+12     	; 0x3c92 <vfprintf+0xe4>
    3c86:	8a e0       	ldi	r24, 0x0A	; 10
    3c88:	98 9e       	mul	r9, r24
    3c8a:	20 0d       	add	r18, r0
    3c8c:	11 24       	eor	r1, r1
    3c8e:	92 2e       	mov	r9, r18
    3c90:	11 c0       	rjmp	.+34     	; 0x3cb4 <vfprintf+0x106>
    3c92:	ea e0       	ldi	r30, 0x0A	; 10
    3c94:	2e 9e       	mul	r2, r30
    3c96:	20 0d       	add	r18, r0
    3c98:	11 24       	eor	r1, r1
    3c9a:	22 2e       	mov	r2, r18
    3c9c:	f3 2d       	mov	r31, r3
    3c9e:	f0 62       	ori	r31, 0x20	; 32
    3ca0:	3f 2e       	mov	r3, r31
    3ca2:	08 c0       	rjmp	.+16     	; 0x3cb4 <vfprintf+0x106>
    3ca4:	8c 36       	cpi	r24, 0x6C	; 108
    3ca6:	21 f4       	brne	.+8      	; 0x3cb0 <vfprintf+0x102>
    3ca8:	83 2d       	mov	r24, r3
    3caa:	80 68       	ori	r24, 0x80	; 128
    3cac:	38 2e       	mov	r3, r24
    3cae:	02 c0       	rjmp	.+4      	; 0x3cb4 <vfprintf+0x106>
    3cb0:	88 36       	cpi	r24, 0x68	; 104
    3cb2:	41 f4       	brne	.+16     	; 0x3cc4 <vfprintf+0x116>
    3cb4:	f7 01       	movw	r30, r14
    3cb6:	93 fd       	sbrc	r25, 3
    3cb8:	85 91       	lpm	r24, Z+
    3cba:	93 ff       	sbrs	r25, 3
    3cbc:	81 91       	ld	r24, Z+
    3cbe:	7f 01       	movw	r14, r30
    3cc0:	81 11       	cpse	r24, r1
    3cc2:	b3 cf       	rjmp	.-154    	; 0x3c2a <vfprintf+0x7c>
    3cc4:	98 2f       	mov	r25, r24
    3cc6:	9f 7d       	andi	r25, 0xDF	; 223
    3cc8:	95 54       	subi	r25, 0x45	; 69
    3cca:	93 30       	cpi	r25, 0x03	; 3
    3ccc:	28 f4       	brcc	.+10     	; 0x3cd8 <vfprintf+0x12a>
    3cce:	0c 5f       	subi	r16, 0xFC	; 252
    3cd0:	1f 4f       	sbci	r17, 0xFF	; 255
    3cd2:	9f e3       	ldi	r25, 0x3F	; 63
    3cd4:	99 83       	std	Y+1, r25	; 0x01
    3cd6:	0d c0       	rjmp	.+26     	; 0x3cf2 <vfprintf+0x144>
    3cd8:	83 36       	cpi	r24, 0x63	; 99
    3cda:	31 f0       	breq	.+12     	; 0x3ce8 <vfprintf+0x13a>
    3cdc:	83 37       	cpi	r24, 0x73	; 115
    3cde:	71 f0       	breq	.+28     	; 0x3cfc <vfprintf+0x14e>
    3ce0:	83 35       	cpi	r24, 0x53	; 83
    3ce2:	09 f0       	breq	.+2      	; 0x3ce6 <vfprintf+0x138>
    3ce4:	55 c0       	rjmp	.+170    	; 0x3d90 <vfprintf+0x1e2>
    3ce6:	20 c0       	rjmp	.+64     	; 0x3d28 <vfprintf+0x17a>
    3ce8:	f8 01       	movw	r30, r16
    3cea:	80 81       	ld	r24, Z
    3cec:	89 83       	std	Y+1, r24	; 0x01
    3cee:	0e 5f       	subi	r16, 0xFE	; 254
    3cf0:	1f 4f       	sbci	r17, 0xFF	; 255
    3cf2:	88 24       	eor	r8, r8
    3cf4:	83 94       	inc	r8
    3cf6:	91 2c       	mov	r9, r1
    3cf8:	53 01       	movw	r10, r6
    3cfa:	12 c0       	rjmp	.+36     	; 0x3d20 <vfprintf+0x172>
    3cfc:	28 01       	movw	r4, r16
    3cfe:	f2 e0       	ldi	r31, 0x02	; 2
    3d00:	4f 0e       	add	r4, r31
    3d02:	51 1c       	adc	r5, r1
    3d04:	f8 01       	movw	r30, r16
    3d06:	a0 80       	ld	r10, Z
    3d08:	b1 80       	ldd	r11, Z+1	; 0x01
    3d0a:	36 fe       	sbrs	r3, 6
    3d0c:	03 c0       	rjmp	.+6      	; 0x3d14 <vfprintf+0x166>
    3d0e:	69 2d       	mov	r22, r9
    3d10:	70 e0       	ldi	r23, 0x00	; 0
    3d12:	02 c0       	rjmp	.+4      	; 0x3d18 <vfprintf+0x16a>
    3d14:	6f ef       	ldi	r22, 0xFF	; 255
    3d16:	7f ef       	ldi	r23, 0xFF	; 255
    3d18:	c5 01       	movw	r24, r10
    3d1a:	63 d5       	rcall	.+2758   	; 0x47e2 <strnlen>
    3d1c:	4c 01       	movw	r8, r24
    3d1e:	82 01       	movw	r16, r4
    3d20:	f3 2d       	mov	r31, r3
    3d22:	ff 77       	andi	r31, 0x7F	; 127
    3d24:	3f 2e       	mov	r3, r31
    3d26:	15 c0       	rjmp	.+42     	; 0x3d52 <vfprintf+0x1a4>
    3d28:	28 01       	movw	r4, r16
    3d2a:	22 e0       	ldi	r18, 0x02	; 2
    3d2c:	42 0e       	add	r4, r18
    3d2e:	51 1c       	adc	r5, r1
    3d30:	f8 01       	movw	r30, r16
    3d32:	a0 80       	ld	r10, Z
    3d34:	b1 80       	ldd	r11, Z+1	; 0x01
    3d36:	36 fe       	sbrs	r3, 6
    3d38:	03 c0       	rjmp	.+6      	; 0x3d40 <vfprintf+0x192>
    3d3a:	69 2d       	mov	r22, r9
    3d3c:	70 e0       	ldi	r23, 0x00	; 0
    3d3e:	02 c0       	rjmp	.+4      	; 0x3d44 <vfprintf+0x196>
    3d40:	6f ef       	ldi	r22, 0xFF	; 255
    3d42:	7f ef       	ldi	r23, 0xFF	; 255
    3d44:	c5 01       	movw	r24, r10
    3d46:	3b d5       	rcall	.+2678   	; 0x47be <strnlen_P>
    3d48:	4c 01       	movw	r8, r24
    3d4a:	f3 2d       	mov	r31, r3
    3d4c:	f0 68       	ori	r31, 0x80	; 128
    3d4e:	3f 2e       	mov	r3, r31
    3d50:	82 01       	movw	r16, r4
    3d52:	33 fc       	sbrc	r3, 3
    3d54:	19 c0       	rjmp	.+50     	; 0x3d88 <vfprintf+0x1da>
    3d56:	82 2d       	mov	r24, r2
    3d58:	90 e0       	ldi	r25, 0x00	; 0
    3d5a:	88 16       	cp	r8, r24
    3d5c:	99 06       	cpc	r9, r25
    3d5e:	a0 f4       	brcc	.+40     	; 0x3d88 <vfprintf+0x1da>
    3d60:	b6 01       	movw	r22, r12
    3d62:	80 e2       	ldi	r24, 0x20	; 32
    3d64:	90 e0       	ldi	r25, 0x00	; 0
    3d66:	86 d5       	rcall	.+2828   	; 0x4874 <fputc>
    3d68:	2a 94       	dec	r2
    3d6a:	f5 cf       	rjmp	.-22     	; 0x3d56 <vfprintf+0x1a8>
    3d6c:	f5 01       	movw	r30, r10
    3d6e:	37 fc       	sbrc	r3, 7
    3d70:	85 91       	lpm	r24, Z+
    3d72:	37 fe       	sbrs	r3, 7
    3d74:	81 91       	ld	r24, Z+
    3d76:	5f 01       	movw	r10, r30
    3d78:	b6 01       	movw	r22, r12
    3d7a:	90 e0       	ldi	r25, 0x00	; 0
    3d7c:	7b d5       	rcall	.+2806   	; 0x4874 <fputc>
    3d7e:	21 10       	cpse	r2, r1
    3d80:	2a 94       	dec	r2
    3d82:	21 e0       	ldi	r18, 0x01	; 1
    3d84:	82 1a       	sub	r8, r18
    3d86:	91 08       	sbc	r9, r1
    3d88:	81 14       	cp	r8, r1
    3d8a:	91 04       	cpc	r9, r1
    3d8c:	79 f7       	brne	.-34     	; 0x3d6c <vfprintf+0x1be>
    3d8e:	e1 c0       	rjmp	.+450    	; 0x3f52 <vfprintf+0x3a4>
    3d90:	84 36       	cpi	r24, 0x64	; 100
    3d92:	11 f0       	breq	.+4      	; 0x3d98 <vfprintf+0x1ea>
    3d94:	89 36       	cpi	r24, 0x69	; 105
    3d96:	39 f5       	brne	.+78     	; 0x3de6 <vfprintf+0x238>
    3d98:	f8 01       	movw	r30, r16
    3d9a:	37 fe       	sbrs	r3, 7
    3d9c:	07 c0       	rjmp	.+14     	; 0x3dac <vfprintf+0x1fe>
    3d9e:	60 81       	ld	r22, Z
    3da0:	71 81       	ldd	r23, Z+1	; 0x01
    3da2:	82 81       	ldd	r24, Z+2	; 0x02
    3da4:	93 81       	ldd	r25, Z+3	; 0x03
    3da6:	0c 5f       	subi	r16, 0xFC	; 252
    3da8:	1f 4f       	sbci	r17, 0xFF	; 255
    3daa:	08 c0       	rjmp	.+16     	; 0x3dbc <vfprintf+0x20e>
    3dac:	60 81       	ld	r22, Z
    3dae:	71 81       	ldd	r23, Z+1	; 0x01
    3db0:	07 2e       	mov	r0, r23
    3db2:	00 0c       	add	r0, r0
    3db4:	88 0b       	sbc	r24, r24
    3db6:	99 0b       	sbc	r25, r25
    3db8:	0e 5f       	subi	r16, 0xFE	; 254
    3dba:	1f 4f       	sbci	r17, 0xFF	; 255
    3dbc:	f3 2d       	mov	r31, r3
    3dbe:	ff 76       	andi	r31, 0x6F	; 111
    3dc0:	3f 2e       	mov	r3, r31
    3dc2:	97 ff       	sbrs	r25, 7
    3dc4:	09 c0       	rjmp	.+18     	; 0x3dd8 <vfprintf+0x22a>
    3dc6:	90 95       	com	r25
    3dc8:	80 95       	com	r24
    3dca:	70 95       	com	r23
    3dcc:	61 95       	neg	r22
    3dce:	7f 4f       	sbci	r23, 0xFF	; 255
    3dd0:	8f 4f       	sbci	r24, 0xFF	; 255
    3dd2:	9f 4f       	sbci	r25, 0xFF	; 255
    3dd4:	f0 68       	ori	r31, 0x80	; 128
    3dd6:	3f 2e       	mov	r3, r31
    3dd8:	2a e0       	ldi	r18, 0x0A	; 10
    3dda:	30 e0       	ldi	r19, 0x00	; 0
    3ddc:	a3 01       	movw	r20, r6
    3dde:	9f d5       	rcall	.+2878   	; 0x491e <__ultoa_invert>
    3de0:	88 2e       	mov	r8, r24
    3de2:	86 18       	sub	r8, r6
    3de4:	44 c0       	rjmp	.+136    	; 0x3e6e <vfprintf+0x2c0>
    3de6:	85 37       	cpi	r24, 0x75	; 117
    3de8:	31 f4       	brne	.+12     	; 0x3df6 <vfprintf+0x248>
    3dea:	23 2d       	mov	r18, r3
    3dec:	2f 7e       	andi	r18, 0xEF	; 239
    3dee:	b2 2e       	mov	r11, r18
    3df0:	2a e0       	ldi	r18, 0x0A	; 10
    3df2:	30 e0       	ldi	r19, 0x00	; 0
    3df4:	25 c0       	rjmp	.+74     	; 0x3e40 <vfprintf+0x292>
    3df6:	93 2d       	mov	r25, r3
    3df8:	99 7f       	andi	r25, 0xF9	; 249
    3dfa:	b9 2e       	mov	r11, r25
    3dfc:	8f 36       	cpi	r24, 0x6F	; 111
    3dfe:	c1 f0       	breq	.+48     	; 0x3e30 <vfprintf+0x282>
    3e00:	18 f4       	brcc	.+6      	; 0x3e08 <vfprintf+0x25a>
    3e02:	88 35       	cpi	r24, 0x58	; 88
    3e04:	79 f0       	breq	.+30     	; 0x3e24 <vfprintf+0x276>
    3e06:	ae c0       	rjmp	.+348    	; 0x3f64 <vfprintf+0x3b6>
    3e08:	80 37       	cpi	r24, 0x70	; 112
    3e0a:	19 f0       	breq	.+6      	; 0x3e12 <vfprintf+0x264>
    3e0c:	88 37       	cpi	r24, 0x78	; 120
    3e0e:	21 f0       	breq	.+8      	; 0x3e18 <vfprintf+0x26a>
    3e10:	a9 c0       	rjmp	.+338    	; 0x3f64 <vfprintf+0x3b6>
    3e12:	e9 2f       	mov	r30, r25
    3e14:	e0 61       	ori	r30, 0x10	; 16
    3e16:	be 2e       	mov	r11, r30
    3e18:	b4 fe       	sbrs	r11, 4
    3e1a:	0d c0       	rjmp	.+26     	; 0x3e36 <vfprintf+0x288>
    3e1c:	fb 2d       	mov	r31, r11
    3e1e:	f4 60       	ori	r31, 0x04	; 4
    3e20:	bf 2e       	mov	r11, r31
    3e22:	09 c0       	rjmp	.+18     	; 0x3e36 <vfprintf+0x288>
    3e24:	34 fe       	sbrs	r3, 4
    3e26:	0a c0       	rjmp	.+20     	; 0x3e3c <vfprintf+0x28e>
    3e28:	29 2f       	mov	r18, r25
    3e2a:	26 60       	ori	r18, 0x06	; 6
    3e2c:	b2 2e       	mov	r11, r18
    3e2e:	06 c0       	rjmp	.+12     	; 0x3e3c <vfprintf+0x28e>
    3e30:	28 e0       	ldi	r18, 0x08	; 8
    3e32:	30 e0       	ldi	r19, 0x00	; 0
    3e34:	05 c0       	rjmp	.+10     	; 0x3e40 <vfprintf+0x292>
    3e36:	20 e1       	ldi	r18, 0x10	; 16
    3e38:	30 e0       	ldi	r19, 0x00	; 0
    3e3a:	02 c0       	rjmp	.+4      	; 0x3e40 <vfprintf+0x292>
    3e3c:	20 e1       	ldi	r18, 0x10	; 16
    3e3e:	32 e0       	ldi	r19, 0x02	; 2
    3e40:	f8 01       	movw	r30, r16
    3e42:	b7 fe       	sbrs	r11, 7
    3e44:	07 c0       	rjmp	.+14     	; 0x3e54 <vfprintf+0x2a6>
    3e46:	60 81       	ld	r22, Z
    3e48:	71 81       	ldd	r23, Z+1	; 0x01
    3e4a:	82 81       	ldd	r24, Z+2	; 0x02
    3e4c:	93 81       	ldd	r25, Z+3	; 0x03
    3e4e:	0c 5f       	subi	r16, 0xFC	; 252
    3e50:	1f 4f       	sbci	r17, 0xFF	; 255
    3e52:	06 c0       	rjmp	.+12     	; 0x3e60 <vfprintf+0x2b2>
    3e54:	60 81       	ld	r22, Z
    3e56:	71 81       	ldd	r23, Z+1	; 0x01
    3e58:	80 e0       	ldi	r24, 0x00	; 0
    3e5a:	90 e0       	ldi	r25, 0x00	; 0
    3e5c:	0e 5f       	subi	r16, 0xFE	; 254
    3e5e:	1f 4f       	sbci	r17, 0xFF	; 255
    3e60:	a3 01       	movw	r20, r6
    3e62:	5d d5       	rcall	.+2746   	; 0x491e <__ultoa_invert>
    3e64:	88 2e       	mov	r8, r24
    3e66:	86 18       	sub	r8, r6
    3e68:	fb 2d       	mov	r31, r11
    3e6a:	ff 77       	andi	r31, 0x7F	; 127
    3e6c:	3f 2e       	mov	r3, r31
    3e6e:	36 fe       	sbrs	r3, 6
    3e70:	0d c0       	rjmp	.+26     	; 0x3e8c <vfprintf+0x2de>
    3e72:	23 2d       	mov	r18, r3
    3e74:	2e 7f       	andi	r18, 0xFE	; 254
    3e76:	a2 2e       	mov	r10, r18
    3e78:	89 14       	cp	r8, r9
    3e7a:	58 f4       	brcc	.+22     	; 0x3e92 <vfprintf+0x2e4>
    3e7c:	34 fe       	sbrs	r3, 4
    3e7e:	0b c0       	rjmp	.+22     	; 0x3e96 <vfprintf+0x2e8>
    3e80:	32 fc       	sbrc	r3, 2
    3e82:	09 c0       	rjmp	.+18     	; 0x3e96 <vfprintf+0x2e8>
    3e84:	83 2d       	mov	r24, r3
    3e86:	8e 7e       	andi	r24, 0xEE	; 238
    3e88:	a8 2e       	mov	r10, r24
    3e8a:	05 c0       	rjmp	.+10     	; 0x3e96 <vfprintf+0x2e8>
    3e8c:	b8 2c       	mov	r11, r8
    3e8e:	a3 2c       	mov	r10, r3
    3e90:	03 c0       	rjmp	.+6      	; 0x3e98 <vfprintf+0x2ea>
    3e92:	b8 2c       	mov	r11, r8
    3e94:	01 c0       	rjmp	.+2      	; 0x3e98 <vfprintf+0x2ea>
    3e96:	b9 2c       	mov	r11, r9
    3e98:	a4 fe       	sbrs	r10, 4
    3e9a:	0f c0       	rjmp	.+30     	; 0x3eba <vfprintf+0x30c>
    3e9c:	fe 01       	movw	r30, r28
    3e9e:	e8 0d       	add	r30, r8
    3ea0:	f1 1d       	adc	r31, r1
    3ea2:	80 81       	ld	r24, Z
    3ea4:	80 33       	cpi	r24, 0x30	; 48
    3ea6:	21 f4       	brne	.+8      	; 0x3eb0 <vfprintf+0x302>
    3ea8:	9a 2d       	mov	r25, r10
    3eaa:	99 7e       	andi	r25, 0xE9	; 233
    3eac:	a9 2e       	mov	r10, r25
    3eae:	09 c0       	rjmp	.+18     	; 0x3ec2 <vfprintf+0x314>
    3eb0:	a2 fe       	sbrs	r10, 2
    3eb2:	06 c0       	rjmp	.+12     	; 0x3ec0 <vfprintf+0x312>
    3eb4:	b3 94       	inc	r11
    3eb6:	b3 94       	inc	r11
    3eb8:	04 c0       	rjmp	.+8      	; 0x3ec2 <vfprintf+0x314>
    3eba:	8a 2d       	mov	r24, r10
    3ebc:	86 78       	andi	r24, 0x86	; 134
    3ebe:	09 f0       	breq	.+2      	; 0x3ec2 <vfprintf+0x314>
    3ec0:	b3 94       	inc	r11
    3ec2:	a3 fc       	sbrc	r10, 3
    3ec4:	10 c0       	rjmp	.+32     	; 0x3ee6 <vfprintf+0x338>
    3ec6:	a0 fe       	sbrs	r10, 0
    3ec8:	06 c0       	rjmp	.+12     	; 0x3ed6 <vfprintf+0x328>
    3eca:	b2 14       	cp	r11, r2
    3ecc:	80 f4       	brcc	.+32     	; 0x3eee <vfprintf+0x340>
    3ece:	28 0c       	add	r2, r8
    3ed0:	92 2c       	mov	r9, r2
    3ed2:	9b 18       	sub	r9, r11
    3ed4:	0d c0       	rjmp	.+26     	; 0x3ef0 <vfprintf+0x342>
    3ed6:	b2 14       	cp	r11, r2
    3ed8:	58 f4       	brcc	.+22     	; 0x3ef0 <vfprintf+0x342>
    3eda:	b6 01       	movw	r22, r12
    3edc:	80 e2       	ldi	r24, 0x20	; 32
    3ede:	90 e0       	ldi	r25, 0x00	; 0
    3ee0:	c9 d4       	rcall	.+2450   	; 0x4874 <fputc>
    3ee2:	b3 94       	inc	r11
    3ee4:	f8 cf       	rjmp	.-16     	; 0x3ed6 <vfprintf+0x328>
    3ee6:	b2 14       	cp	r11, r2
    3ee8:	18 f4       	brcc	.+6      	; 0x3ef0 <vfprintf+0x342>
    3eea:	2b 18       	sub	r2, r11
    3eec:	02 c0       	rjmp	.+4      	; 0x3ef2 <vfprintf+0x344>
    3eee:	98 2c       	mov	r9, r8
    3ef0:	21 2c       	mov	r2, r1
    3ef2:	a4 fe       	sbrs	r10, 4
    3ef4:	0f c0       	rjmp	.+30     	; 0x3f14 <vfprintf+0x366>
    3ef6:	b6 01       	movw	r22, r12
    3ef8:	80 e3       	ldi	r24, 0x30	; 48
    3efa:	90 e0       	ldi	r25, 0x00	; 0
    3efc:	bb d4       	rcall	.+2422   	; 0x4874 <fputc>
    3efe:	a2 fe       	sbrs	r10, 2
    3f00:	16 c0       	rjmp	.+44     	; 0x3f2e <vfprintf+0x380>
    3f02:	a1 fc       	sbrc	r10, 1
    3f04:	03 c0       	rjmp	.+6      	; 0x3f0c <vfprintf+0x35e>
    3f06:	88 e7       	ldi	r24, 0x78	; 120
    3f08:	90 e0       	ldi	r25, 0x00	; 0
    3f0a:	02 c0       	rjmp	.+4      	; 0x3f10 <vfprintf+0x362>
    3f0c:	88 e5       	ldi	r24, 0x58	; 88
    3f0e:	90 e0       	ldi	r25, 0x00	; 0
    3f10:	b6 01       	movw	r22, r12
    3f12:	0c c0       	rjmp	.+24     	; 0x3f2c <vfprintf+0x37e>
    3f14:	8a 2d       	mov	r24, r10
    3f16:	86 78       	andi	r24, 0x86	; 134
    3f18:	51 f0       	breq	.+20     	; 0x3f2e <vfprintf+0x380>
    3f1a:	a1 fe       	sbrs	r10, 1
    3f1c:	02 c0       	rjmp	.+4      	; 0x3f22 <vfprintf+0x374>
    3f1e:	8b e2       	ldi	r24, 0x2B	; 43
    3f20:	01 c0       	rjmp	.+2      	; 0x3f24 <vfprintf+0x376>
    3f22:	80 e2       	ldi	r24, 0x20	; 32
    3f24:	a7 fc       	sbrc	r10, 7
    3f26:	8d e2       	ldi	r24, 0x2D	; 45
    3f28:	b6 01       	movw	r22, r12
    3f2a:	90 e0       	ldi	r25, 0x00	; 0
    3f2c:	a3 d4       	rcall	.+2374   	; 0x4874 <fputc>
    3f2e:	89 14       	cp	r8, r9
    3f30:	30 f4       	brcc	.+12     	; 0x3f3e <vfprintf+0x390>
    3f32:	b6 01       	movw	r22, r12
    3f34:	80 e3       	ldi	r24, 0x30	; 48
    3f36:	90 e0       	ldi	r25, 0x00	; 0
    3f38:	9d d4       	rcall	.+2362   	; 0x4874 <fputc>
    3f3a:	9a 94       	dec	r9
    3f3c:	f8 cf       	rjmp	.-16     	; 0x3f2e <vfprintf+0x380>
    3f3e:	8a 94       	dec	r8
    3f40:	f3 01       	movw	r30, r6
    3f42:	e8 0d       	add	r30, r8
    3f44:	f1 1d       	adc	r31, r1
    3f46:	80 81       	ld	r24, Z
    3f48:	b6 01       	movw	r22, r12
    3f4a:	90 e0       	ldi	r25, 0x00	; 0
    3f4c:	93 d4       	rcall	.+2342   	; 0x4874 <fputc>
    3f4e:	81 10       	cpse	r8, r1
    3f50:	f6 cf       	rjmp	.-20     	; 0x3f3e <vfprintf+0x390>
    3f52:	22 20       	and	r2, r2
    3f54:	09 f4       	brne	.+2      	; 0x3f58 <vfprintf+0x3aa>
    3f56:	4e ce       	rjmp	.-868    	; 0x3bf4 <vfprintf+0x46>
    3f58:	b6 01       	movw	r22, r12
    3f5a:	80 e2       	ldi	r24, 0x20	; 32
    3f5c:	90 e0       	ldi	r25, 0x00	; 0
    3f5e:	8a d4       	rcall	.+2324   	; 0x4874 <fputc>
    3f60:	2a 94       	dec	r2
    3f62:	f7 cf       	rjmp	.-18     	; 0x3f52 <vfprintf+0x3a4>
    3f64:	f6 01       	movw	r30, r12
    3f66:	86 81       	ldd	r24, Z+6	; 0x06
    3f68:	97 81       	ldd	r25, Z+7	; 0x07
    3f6a:	02 c0       	rjmp	.+4      	; 0x3f70 <vfprintf+0x3c2>
    3f6c:	8f ef       	ldi	r24, 0xFF	; 255
    3f6e:	9f ef       	ldi	r25, 0xFF	; 255
    3f70:	2b 96       	adiw	r28, 0x0b	; 11
    3f72:	cd bf       	out	0x3d, r28	; 61
    3f74:	de bf       	out	0x3e, r29	; 62
    3f76:	df 91       	pop	r29
    3f78:	cf 91       	pop	r28
    3f7a:	1f 91       	pop	r17
    3f7c:	0f 91       	pop	r16
    3f7e:	ff 90       	pop	r15
    3f80:	ef 90       	pop	r14
    3f82:	df 90       	pop	r13
    3f84:	cf 90       	pop	r12
    3f86:	bf 90       	pop	r11
    3f88:	af 90       	pop	r10
    3f8a:	9f 90       	pop	r9
    3f8c:	8f 90       	pop	r8
    3f8e:	7f 90       	pop	r7
    3f90:	6f 90       	pop	r6
    3f92:	5f 90       	pop	r5
    3f94:	4f 90       	pop	r4
    3f96:	3f 90       	pop	r3
    3f98:	2f 90       	pop	r2
    3f9a:	08 95       	ret

00003f9c <putval>:
    3f9c:	20 fd       	sbrc	r18, 0
    3f9e:	09 c0       	rjmp	.+18     	; 0x3fb2 <putval+0x16>
    3fa0:	fc 01       	movw	r30, r24
    3fa2:	23 fd       	sbrc	r18, 3
    3fa4:	05 c0       	rjmp	.+10     	; 0x3fb0 <putval+0x14>
    3fa6:	22 ff       	sbrs	r18, 2
    3fa8:	02 c0       	rjmp	.+4      	; 0x3fae <putval+0x12>
    3faa:	73 83       	std	Z+3, r23	; 0x03
    3fac:	62 83       	std	Z+2, r22	; 0x02
    3fae:	51 83       	std	Z+1, r21	; 0x01
    3fb0:	40 83       	st	Z, r20
    3fb2:	08 95       	ret

00003fb4 <mulacc>:
    3fb4:	44 fd       	sbrc	r20, 4
    3fb6:	17 c0       	rjmp	.+46     	; 0x3fe6 <mulacc+0x32>
    3fb8:	46 fd       	sbrc	r20, 6
    3fba:	17 c0       	rjmp	.+46     	; 0x3fea <mulacc+0x36>
    3fbc:	ab 01       	movw	r20, r22
    3fbe:	bc 01       	movw	r22, r24
    3fc0:	da 01       	movw	r26, r20
    3fc2:	fb 01       	movw	r30, r22
    3fc4:	aa 0f       	add	r26, r26
    3fc6:	bb 1f       	adc	r27, r27
    3fc8:	ee 1f       	adc	r30, r30
    3fca:	ff 1f       	adc	r31, r31
    3fcc:	10 94       	com	r1
    3fce:	d1 f7       	brne	.-12     	; 0x3fc4 <mulacc+0x10>
    3fd0:	4a 0f       	add	r20, r26
    3fd2:	5b 1f       	adc	r21, r27
    3fd4:	6e 1f       	adc	r22, r30
    3fd6:	7f 1f       	adc	r23, r31
    3fd8:	cb 01       	movw	r24, r22
    3fda:	ba 01       	movw	r22, r20
    3fdc:	66 0f       	add	r22, r22
    3fde:	77 1f       	adc	r23, r23
    3fe0:	88 1f       	adc	r24, r24
    3fe2:	99 1f       	adc	r25, r25
    3fe4:	09 c0       	rjmp	.+18     	; 0x3ff8 <mulacc+0x44>
    3fe6:	33 e0       	ldi	r19, 0x03	; 3
    3fe8:	01 c0       	rjmp	.+2      	; 0x3fec <mulacc+0x38>
    3fea:	34 e0       	ldi	r19, 0x04	; 4
    3fec:	66 0f       	add	r22, r22
    3fee:	77 1f       	adc	r23, r23
    3ff0:	88 1f       	adc	r24, r24
    3ff2:	99 1f       	adc	r25, r25
    3ff4:	31 50       	subi	r19, 0x01	; 1
    3ff6:	d1 f7       	brne	.-12     	; 0x3fec <mulacc+0x38>
    3ff8:	62 0f       	add	r22, r18
    3ffa:	71 1d       	adc	r23, r1
    3ffc:	81 1d       	adc	r24, r1
    3ffe:	91 1d       	adc	r25, r1
    4000:	08 95       	ret

00004002 <skip_spaces>:
    4002:	0f 93       	push	r16
    4004:	1f 93       	push	r17
    4006:	cf 93       	push	r28
    4008:	df 93       	push	r29
    400a:	8c 01       	movw	r16, r24
    400c:	c8 01       	movw	r24, r16
    400e:	f4 d3       	rcall	.+2024   	; 0x47f8 <fgetc>
    4010:	ec 01       	movw	r28, r24
    4012:	97 fd       	sbrc	r25, 7
    4014:	06 c0       	rjmp	.+12     	; 0x4022 <skip_spaces+0x20>
    4016:	c0 d3       	rcall	.+1920   	; 0x4798 <isspace>
    4018:	89 2b       	or	r24, r25
    401a:	c1 f7       	brne	.-16     	; 0x400c <skip_spaces+0xa>
    401c:	b8 01       	movw	r22, r16
    401e:	ce 01       	movw	r24, r28
    4020:	65 d4       	rcall	.+2250   	; 0x48ec <ungetc>
    4022:	ce 01       	movw	r24, r28
    4024:	df 91       	pop	r29
    4026:	cf 91       	pop	r28
    4028:	1f 91       	pop	r17
    402a:	0f 91       	pop	r16
    402c:	08 95       	ret

0000402e <conv_int>:
    402e:	8f 92       	push	r8
    4030:	9f 92       	push	r9
    4032:	af 92       	push	r10
    4034:	bf 92       	push	r11
    4036:	ef 92       	push	r14
    4038:	ff 92       	push	r15
    403a:	0f 93       	push	r16
    403c:	1f 93       	push	r17
    403e:	cf 93       	push	r28
    4040:	df 93       	push	r29
    4042:	8c 01       	movw	r16, r24
    4044:	d6 2f       	mov	r29, r22
    4046:	7a 01       	movw	r14, r20
    4048:	b2 2e       	mov	r11, r18
    404a:	d6 d3       	rcall	.+1964   	; 0x47f8 <fgetc>
    404c:	9c 01       	movw	r18, r24
    404e:	33 27       	eor	r19, r19
    4050:	2b 32       	cpi	r18, 0x2B	; 43
    4052:	31 05       	cpc	r19, r1
    4054:	31 f0       	breq	.+12     	; 0x4062 <conv_int+0x34>
    4056:	2d 32       	cpi	r18, 0x2D	; 45
    4058:	31 05       	cpc	r19, r1
    405a:	59 f4       	brne	.+22     	; 0x4072 <conv_int+0x44>
    405c:	8b 2d       	mov	r24, r11
    405e:	80 68       	ori	r24, 0x80	; 128
    4060:	b8 2e       	mov	r11, r24
    4062:	d1 50       	subi	r29, 0x01	; 1
    4064:	11 f4       	brne	.+4      	; 0x406a <conv_int+0x3c>
    4066:	80 e0       	ldi	r24, 0x00	; 0
    4068:	61 c0       	rjmp	.+194    	; 0x412c <conv_int+0xfe>
    406a:	c8 01       	movw	r24, r16
    406c:	c5 d3       	rcall	.+1930   	; 0x47f8 <fgetc>
    406e:	97 fd       	sbrc	r25, 7
    4070:	fa cf       	rjmp	.-12     	; 0x4066 <conv_int+0x38>
    4072:	cb 2d       	mov	r28, r11
    4074:	cd 7f       	andi	r28, 0xFD	; 253
    4076:	2b 2d       	mov	r18, r11
    4078:	20 73       	andi	r18, 0x30	; 48
    407a:	f9 f4       	brne	.+62     	; 0x40ba <conv_int+0x8c>
    407c:	80 33       	cpi	r24, 0x30	; 48
    407e:	e9 f4       	brne	.+58     	; 0x40ba <conv_int+0x8c>
    4080:	aa 24       	eor	r10, r10
    4082:	aa 94       	dec	r10
    4084:	ad 0e       	add	r10, r29
    4086:	09 f4       	brne	.+2      	; 0x408a <conv_int+0x5c>
    4088:	3e c0       	rjmp	.+124    	; 0x4106 <conv_int+0xd8>
    408a:	c8 01       	movw	r24, r16
    408c:	b5 d3       	rcall	.+1898   	; 0x47f8 <fgetc>
    408e:	97 fd       	sbrc	r25, 7
    4090:	3a c0       	rjmp	.+116    	; 0x4106 <conv_int+0xd8>
    4092:	9c 01       	movw	r18, r24
    4094:	2f 7d       	andi	r18, 0xDF	; 223
    4096:	33 27       	eor	r19, r19
    4098:	28 35       	cpi	r18, 0x58	; 88
    409a:	31 05       	cpc	r19, r1
    409c:	41 f4       	brne	.+16     	; 0x40ae <conv_int+0x80>
    409e:	c2 64       	ori	r28, 0x42	; 66
    40a0:	d2 50       	subi	r29, 0x02	; 2
    40a2:	89 f1       	breq	.+98     	; 0x4106 <conv_int+0xd8>
    40a4:	c8 01       	movw	r24, r16
    40a6:	a8 d3       	rcall	.+1872   	; 0x47f8 <fgetc>
    40a8:	97 ff       	sbrs	r25, 7
    40aa:	07 c0       	rjmp	.+14     	; 0x40ba <conv_int+0x8c>
    40ac:	2c c0       	rjmp	.+88     	; 0x4106 <conv_int+0xd8>
    40ae:	b6 fe       	sbrs	r11, 6
    40b0:	02 c0       	rjmp	.+4      	; 0x40b6 <conv_int+0x88>
    40b2:	c2 60       	ori	r28, 0x02	; 2
    40b4:	01 c0       	rjmp	.+2      	; 0x40b8 <conv_int+0x8a>
    40b6:	c2 61       	ori	r28, 0x12	; 18
    40b8:	da 2d       	mov	r29, r10
    40ba:	81 2c       	mov	r8, r1
    40bc:	91 2c       	mov	r9, r1
    40be:	54 01       	movw	r10, r8
    40c0:	20 ed       	ldi	r18, 0xD0	; 208
    40c2:	28 0f       	add	r18, r24
    40c4:	28 30       	cpi	r18, 0x08	; 8
    40c6:	78 f0       	brcs	.+30     	; 0x40e6 <conv_int+0xb8>
    40c8:	c4 ff       	sbrs	r28, 4
    40ca:	03 c0       	rjmp	.+6      	; 0x40d2 <conv_int+0xa4>
    40cc:	b8 01       	movw	r22, r16
    40ce:	0e d4       	rcall	.+2076   	; 0x48ec <ungetc>
    40d0:	17 c0       	rjmp	.+46     	; 0x4100 <conv_int+0xd2>
    40d2:	2a 30       	cpi	r18, 0x0A	; 10
    40d4:	40 f0       	brcs	.+16     	; 0x40e6 <conv_int+0xb8>
    40d6:	c6 ff       	sbrs	r28, 6
    40d8:	f9 cf       	rjmp	.-14     	; 0x40cc <conv_int+0x9e>
    40da:	2f 7d       	andi	r18, 0xDF	; 223
    40dc:	3f ee       	ldi	r19, 0xEF	; 239
    40de:	32 0f       	add	r19, r18
    40e0:	36 30       	cpi	r19, 0x06	; 6
    40e2:	a0 f7       	brcc	.-24     	; 0x40cc <conv_int+0x9e>
    40e4:	27 50       	subi	r18, 0x07	; 7
    40e6:	4c 2f       	mov	r20, r28
    40e8:	c5 01       	movw	r24, r10
    40ea:	b4 01       	movw	r22, r8
    40ec:	63 df       	rcall	.-314    	; 0x3fb4 <mulacc>
    40ee:	4b 01       	movw	r8, r22
    40f0:	5c 01       	movw	r10, r24
    40f2:	c2 60       	ori	r28, 0x02	; 2
    40f4:	d1 50       	subi	r29, 0x01	; 1
    40f6:	51 f0       	breq	.+20     	; 0x410c <conv_int+0xde>
    40f8:	c8 01       	movw	r24, r16
    40fa:	7e d3       	rcall	.+1788   	; 0x47f8 <fgetc>
    40fc:	97 ff       	sbrs	r25, 7
    40fe:	e0 cf       	rjmp	.-64     	; 0x40c0 <conv_int+0x92>
    4100:	c1 fd       	sbrc	r28, 1
    4102:	04 c0       	rjmp	.+8      	; 0x410c <conv_int+0xde>
    4104:	b0 cf       	rjmp	.-160    	; 0x4066 <conv_int+0x38>
    4106:	81 2c       	mov	r8, r1
    4108:	91 2c       	mov	r9, r1
    410a:	54 01       	movw	r10, r8
    410c:	c7 ff       	sbrs	r28, 7
    410e:	08 c0       	rjmp	.+16     	; 0x4120 <conv_int+0xf2>
    4110:	b0 94       	com	r11
    4112:	a0 94       	com	r10
    4114:	90 94       	com	r9
    4116:	80 94       	com	r8
    4118:	81 1c       	adc	r8, r1
    411a:	91 1c       	adc	r9, r1
    411c:	a1 1c       	adc	r10, r1
    411e:	b1 1c       	adc	r11, r1
    4120:	2c 2f       	mov	r18, r28
    4122:	b5 01       	movw	r22, r10
    4124:	a4 01       	movw	r20, r8
    4126:	c7 01       	movw	r24, r14
    4128:	39 df       	rcall	.-398    	; 0x3f9c <putval>
    412a:	81 e0       	ldi	r24, 0x01	; 1
    412c:	df 91       	pop	r29
    412e:	cf 91       	pop	r28
    4130:	1f 91       	pop	r17
    4132:	0f 91       	pop	r16
    4134:	ff 90       	pop	r15
    4136:	ef 90       	pop	r14
    4138:	bf 90       	pop	r11
    413a:	af 90       	pop	r10
    413c:	9f 90       	pop	r9
    413e:	8f 90       	pop	r8
    4140:	08 95       	ret

00004142 <conv_brk>:
    4142:	5f 92       	push	r5
    4144:	6f 92       	push	r6
    4146:	7f 92       	push	r7
    4148:	8f 92       	push	r8
    414a:	9f 92       	push	r9
    414c:	af 92       	push	r10
    414e:	bf 92       	push	r11
    4150:	cf 92       	push	r12
    4152:	df 92       	push	r13
    4154:	ef 92       	push	r14
    4156:	ff 92       	push	r15
    4158:	0f 93       	push	r16
    415a:	1f 93       	push	r17
    415c:	cf 93       	push	r28
    415e:	df 93       	push	r29
    4160:	cd b7       	in	r28, 0x3d	; 61
    4162:	de b7       	in	r29, 0x3e	; 62
    4164:	a0 97       	sbiw	r28, 0x20	; 32
    4166:	cd bf       	out	0x3d, r28	; 61
    4168:	de bf       	out	0x3e, r29	; 62
    416a:	5c 01       	movw	r10, r24
    416c:	96 2e       	mov	r9, r22
    416e:	7a 01       	movw	r14, r20
    4170:	f9 01       	movw	r30, r18
    4172:	8e 01       	movw	r16, r28
    4174:	0f 5f       	subi	r16, 0xFF	; 255
    4176:	1f 4f       	sbci	r17, 0xFF	; 255
    4178:	68 01       	movw	r12, r16
    417a:	80 e2       	ldi	r24, 0x20	; 32
    417c:	d8 01       	movw	r26, r16
    417e:	1d 92       	st	X+, r1
    4180:	8a 95       	dec	r24
    4182:	e9 f7       	brne	.-6      	; 0x417e <conv_brk+0x3c>
    4184:	d5 01       	movw	r26, r10
    4186:	13 96       	adiw	r26, 0x03	; 3
    4188:	8c 90       	ld	r8, X
    418a:	80 e0       	ldi	r24, 0x00	; 0
    418c:	90 e0       	ldi	r25, 0x00	; 0
    418e:	61 2c       	mov	r6, r1
    4190:	71 2c       	mov	r7, r1
    4192:	30 e0       	ldi	r19, 0x00	; 0
    4194:	61 e0       	ldi	r22, 0x01	; 1
    4196:	70 e0       	ldi	r23, 0x00	; 0
    4198:	83 fc       	sbrc	r8, 3
    419a:	25 91       	lpm	r18, Z+
    419c:	83 fe       	sbrs	r8, 3
    419e:	21 91       	ld	r18, Z+
    41a0:	8f 01       	movw	r16, r30
    41a2:	52 2e       	mov	r5, r18
    41a4:	21 11       	cpse	r18, r1
    41a6:	03 c0       	rjmp	.+6      	; 0x41ae <conv_brk+0x6c>
    41a8:	80 e0       	ldi	r24, 0x00	; 0
    41aa:	90 e0       	ldi	r25, 0x00	; 0
    41ac:	90 c0       	rjmp	.+288    	; 0x42ce <conv_brk+0x18c>
    41ae:	2e 35       	cpi	r18, 0x5E	; 94
    41b0:	11 f4       	brne	.+4      	; 0x41b6 <conv_brk+0x74>
    41b2:	00 97       	sbiw	r24, 0x00	; 0
    41b4:	51 f1       	breq	.+84     	; 0x420a <conv_brk+0xc8>
    41b6:	43 2f       	mov	r20, r19
    41b8:	50 e0       	ldi	r21, 0x00	; 0
    41ba:	48 17       	cp	r20, r24
    41bc:	59 07       	cpc	r21, r25
    41be:	3c f4       	brge	.+14     	; 0x41ce <conv_brk+0x8c>
    41c0:	2d 35       	cpi	r18, 0x5D	; 93
    41c2:	59 f1       	breq	.+86     	; 0x421a <conv_brk+0xd8>
    41c4:	2d 32       	cpi	r18, 0x2D	; 45
    41c6:	19 f4       	brne	.+6      	; 0x41ce <conv_brk+0x8c>
    41c8:	77 20       	and	r7, r7
    41ca:	09 f1       	breq	.+66     	; 0x420e <conv_brk+0xcc>
    41cc:	03 c0       	rjmp	.+6      	; 0x41d4 <conv_brk+0x92>
    41ce:	77 20       	and	r7, r7
    41d0:	09 f4       	brne	.+2      	; 0x41d4 <conv_brk+0x92>
    41d2:	68 c0       	rjmp	.+208    	; 0x42a4 <conv_brk+0x162>
    41d4:	45 2d       	mov	r20, r5
    41d6:	46 95       	lsr	r20
    41d8:	46 95       	lsr	r20
    41da:	46 95       	lsr	r20
    41dc:	d6 01       	movw	r26, r12
    41de:	a4 0f       	add	r26, r20
    41e0:	b1 1d       	adc	r27, r1
    41e2:	45 2d       	mov	r20, r5
    41e4:	47 70       	andi	r20, 0x07	; 7
    41e6:	8b 01       	movw	r16, r22
    41e8:	02 c0       	rjmp	.+4      	; 0x41ee <conv_brk+0xac>
    41ea:	00 0f       	add	r16, r16
    41ec:	11 1f       	adc	r17, r17
    41ee:	4a 95       	dec	r20
    41f0:	e2 f7       	brpl	.-8      	; 0x41ea <conv_brk+0xa8>
    41f2:	a8 01       	movw	r20, r16
    41f4:	5c 91       	ld	r21, X
    41f6:	45 2b       	or	r20, r21
    41f8:	4c 93       	st	X, r20
    41fa:	65 14       	cp	r6, r5
    41fc:	59 f0       	breq	.+22     	; 0x4214 <conv_brk+0xd2>
    41fe:	56 14       	cp	r5, r6
    4200:	10 f4       	brcc	.+4      	; 0x4206 <conv_brk+0xc4>
    4202:	53 94       	inc	r5
    4204:	e7 cf       	rjmp	.-50     	; 0x41d4 <conv_brk+0x92>
    4206:	5a 94       	dec	r5
    4208:	e5 cf       	rjmp	.-54     	; 0x41d4 <conv_brk+0x92>
    420a:	31 e0       	ldi	r19, 0x01	; 1
    420c:	04 c0       	rjmp	.+8      	; 0x4216 <conv_brk+0xd4>
    420e:	77 24       	eor	r7, r7
    4210:	73 94       	inc	r7
    4212:	01 c0       	rjmp	.+2      	; 0x4216 <conv_brk+0xd4>
    4214:	71 2c       	mov	r7, r1
    4216:	01 96       	adiw	r24, 0x01	; 1
    4218:	bf cf       	rjmp	.-130    	; 0x4198 <conv_brk+0x56>
    421a:	77 20       	and	r7, r7
    421c:	19 f0       	breq	.+6      	; 0x4224 <conv_brk+0xe2>
    421e:	8e 81       	ldd	r24, Y+6	; 0x06
    4220:	80 62       	ori	r24, 0x20	; 32
    4222:	8e 83       	std	Y+6, r24	; 0x06
    4224:	31 11       	cpse	r19, r1
    4226:	03 c0       	rjmp	.+6      	; 0x422e <conv_brk+0xec>
    4228:	88 24       	eor	r8, r8
    422a:	83 94       	inc	r8
    422c:	17 c0       	rjmp	.+46     	; 0x425c <conv_brk+0x11a>
    422e:	f6 01       	movw	r30, r12
    4230:	9e 01       	movw	r18, r28
    4232:	2f 5d       	subi	r18, 0xDF	; 223
    4234:	3f 4f       	sbci	r19, 0xFF	; 255
    4236:	80 81       	ld	r24, Z
    4238:	80 95       	com	r24
    423a:	81 93       	st	Z+, r24
    423c:	2e 17       	cp	r18, r30
    423e:	3f 07       	cpc	r19, r31
    4240:	d1 f7       	brne	.-12     	; 0x4236 <conv_brk+0xf4>
    4242:	f2 cf       	rjmp	.-28     	; 0x4228 <conv_brk+0xe6>
    4244:	e1 14       	cp	r14, r1
    4246:	f1 04       	cpc	r15, r1
    4248:	29 f0       	breq	.+10     	; 0x4254 <conv_brk+0x112>
    424a:	d7 01       	movw	r26, r14
    424c:	8c 93       	st	X, r24
    424e:	f7 01       	movw	r30, r14
    4250:	31 96       	adiw	r30, 0x01	; 1
    4252:	7f 01       	movw	r14, r30
    4254:	9a 94       	dec	r9
    4256:	81 2c       	mov	r8, r1
    4258:	99 20       	and	r9, r9
    425a:	e9 f0       	breq	.+58     	; 0x4296 <conv_brk+0x154>
    425c:	c5 01       	movw	r24, r10
    425e:	cc d2       	rcall	.+1432   	; 0x47f8 <fgetc>
    4260:	97 fd       	sbrc	r25, 7
    4262:	17 c0       	rjmp	.+46     	; 0x4292 <conv_brk+0x150>
    4264:	fc 01       	movw	r30, r24
    4266:	ff 27       	eor	r31, r31
    4268:	23 e0       	ldi	r18, 0x03	; 3
    426a:	f5 95       	asr	r31
    426c:	e7 95       	ror	r30
    426e:	2a 95       	dec	r18
    4270:	e1 f7       	brne	.-8      	; 0x426a <conv_brk+0x128>
    4272:	ec 0d       	add	r30, r12
    4274:	fd 1d       	adc	r31, r13
    4276:	20 81       	ld	r18, Z
    4278:	30 e0       	ldi	r19, 0x00	; 0
    427a:	ac 01       	movw	r20, r24
    427c:	47 70       	andi	r20, 0x07	; 7
    427e:	55 27       	eor	r21, r21
    4280:	02 c0       	rjmp	.+4      	; 0x4286 <conv_brk+0x144>
    4282:	35 95       	asr	r19
    4284:	27 95       	ror	r18
    4286:	4a 95       	dec	r20
    4288:	e2 f7       	brpl	.-8      	; 0x4282 <conv_brk+0x140>
    428a:	20 fd       	sbrc	r18, 0
    428c:	db cf       	rjmp	.-74     	; 0x4244 <conv_brk+0x102>
    428e:	b5 01       	movw	r22, r10
    4290:	2d d3       	rcall	.+1626   	; 0x48ec <ungetc>
    4292:	81 10       	cpse	r8, r1
    4294:	89 cf       	rjmp	.-238    	; 0x41a8 <conv_brk+0x66>
    4296:	e1 14       	cp	r14, r1
    4298:	f1 04       	cpc	r15, r1
    429a:	11 f0       	breq	.+4      	; 0x42a0 <conv_brk+0x15e>
    429c:	d7 01       	movw	r26, r14
    429e:	1c 92       	st	X, r1
    42a0:	c8 01       	movw	r24, r16
    42a2:	15 c0       	rjmp	.+42     	; 0x42ce <conv_brk+0x18c>
    42a4:	42 2f       	mov	r20, r18
    42a6:	46 95       	lsr	r20
    42a8:	46 95       	lsr	r20
    42aa:	46 95       	lsr	r20
    42ac:	d6 01       	movw	r26, r12
    42ae:	a4 0f       	add	r26, r20
    42b0:	b1 1d       	adc	r27, r1
    42b2:	42 2f       	mov	r20, r18
    42b4:	47 70       	andi	r20, 0x07	; 7
    42b6:	8b 01       	movw	r16, r22
    42b8:	02 c0       	rjmp	.+4      	; 0x42be <conv_brk+0x17c>
    42ba:	00 0f       	add	r16, r16
    42bc:	11 1f       	adc	r17, r17
    42be:	4a 95       	dec	r20
    42c0:	e2 f7       	brpl	.-8      	; 0x42ba <conv_brk+0x178>
    42c2:	a8 01       	movw	r20, r16
    42c4:	5c 91       	ld	r21, X
    42c6:	45 2b       	or	r20, r21
    42c8:	4c 93       	st	X, r20
    42ca:	62 2e       	mov	r6, r18
    42cc:	a4 cf       	rjmp	.-184    	; 0x4216 <conv_brk+0xd4>
    42ce:	a0 96       	adiw	r28, 0x20	; 32
    42d0:	cd bf       	out	0x3d, r28	; 61
    42d2:	de bf       	out	0x3e, r29	; 62
    42d4:	df 91       	pop	r29
    42d6:	cf 91       	pop	r28
    42d8:	1f 91       	pop	r17
    42da:	0f 91       	pop	r16
    42dc:	ff 90       	pop	r15
    42de:	ef 90       	pop	r14
    42e0:	df 90       	pop	r13
    42e2:	cf 90       	pop	r12
    42e4:	bf 90       	pop	r11
    42e6:	af 90       	pop	r10
    42e8:	9f 90       	pop	r9
    42ea:	8f 90       	pop	r8
    42ec:	7f 90       	pop	r7
    42ee:	6f 90       	pop	r6
    42f0:	5f 90       	pop	r5
    42f2:	08 95       	ret

000042f4 <vfscanf>:
    42f4:	5f 92       	push	r5
    42f6:	6f 92       	push	r6
    42f8:	7f 92       	push	r7
    42fa:	8f 92       	push	r8
    42fc:	9f 92       	push	r9
    42fe:	af 92       	push	r10
    4300:	bf 92       	push	r11
    4302:	cf 92       	push	r12
    4304:	df 92       	push	r13
    4306:	ef 92       	push	r14
    4308:	ff 92       	push	r15
    430a:	0f 93       	push	r16
    430c:	1f 93       	push	r17
    430e:	cf 93       	push	r28
    4310:	df 93       	push	r29
    4312:	6c 01       	movw	r12, r24
    4314:	eb 01       	movw	r28, r22
    4316:	5a 01       	movw	r10, r20
    4318:	fc 01       	movw	r30, r24
    431a:	16 82       	std	Z+6, r1	; 0x06
    431c:	17 82       	std	Z+7, r1	; 0x07
    431e:	51 2c       	mov	r5, r1
    4320:	f6 01       	movw	r30, r12
    4322:	e3 80       	ldd	r14, Z+3	; 0x03
    4324:	fe 01       	movw	r30, r28
    4326:	e3 fc       	sbrc	r14, 3
    4328:	85 91       	lpm	r24, Z+
    432a:	e3 fe       	sbrs	r14, 3
    432c:	81 91       	ld	r24, Z+
    432e:	18 2f       	mov	r17, r24
    4330:	ef 01       	movw	r28, r30
    4332:	88 23       	and	r24, r24
    4334:	09 f4       	brne	.+2      	; 0x4338 <vfscanf+0x44>
    4336:	e0 c0       	rjmp	.+448    	; 0x44f8 <vfscanf+0x204>
    4338:	90 e0       	ldi	r25, 0x00	; 0
    433a:	2e d2       	rcall	.+1116   	; 0x4798 <isspace>
    433c:	89 2b       	or	r24, r25
    433e:	19 f0       	breq	.+6      	; 0x4346 <vfscanf+0x52>
    4340:	c6 01       	movw	r24, r12
    4342:	5f de       	rcall	.-834    	; 0x4002 <skip_spaces>
    4344:	ed cf       	rjmp	.-38     	; 0x4320 <vfscanf+0x2c>
    4346:	15 32       	cpi	r17, 0x25	; 37
    4348:	41 f4       	brne	.+16     	; 0x435a <vfscanf+0x66>
    434a:	fe 01       	movw	r30, r28
    434c:	e3 fc       	sbrc	r14, 3
    434e:	15 91       	lpm	r17, Z+
    4350:	e3 fe       	sbrs	r14, 3
    4352:	11 91       	ld	r17, Z+
    4354:	ef 01       	movw	r28, r30
    4356:	15 32       	cpi	r17, 0x25	; 37
    4358:	71 f4       	brne	.+28     	; 0x4376 <vfscanf+0x82>
    435a:	c6 01       	movw	r24, r12
    435c:	4d d2       	rcall	.+1178   	; 0x47f8 <fgetc>
    435e:	97 fd       	sbrc	r25, 7
    4360:	c9 c0       	rjmp	.+402    	; 0x44f4 <vfscanf+0x200>
    4362:	41 2f       	mov	r20, r17
    4364:	50 e0       	ldi	r21, 0x00	; 0
    4366:	9c 01       	movw	r18, r24
    4368:	33 27       	eor	r19, r19
    436a:	24 17       	cp	r18, r20
    436c:	35 07       	cpc	r19, r21
    436e:	c1 f2       	breq	.-80     	; 0x4320 <vfscanf+0x2c>
    4370:	b6 01       	movw	r22, r12
    4372:	bc d2       	rcall	.+1400   	; 0x48ec <ungetc>
    4374:	c1 c0       	rjmp	.+386    	; 0x44f8 <vfscanf+0x204>
    4376:	1a 32       	cpi	r17, 0x2A	; 42
    4378:	39 f4       	brne	.+14     	; 0x4388 <vfscanf+0x94>
    437a:	e3 fc       	sbrc	r14, 3
    437c:	15 91       	lpm	r17, Z+
    437e:	e3 fe       	sbrs	r14, 3
    4380:	11 91       	ld	r17, Z+
    4382:	ef 01       	movw	r28, r30
    4384:	01 e0       	ldi	r16, 0x01	; 1
    4386:	01 c0       	rjmp	.+2      	; 0x438a <vfscanf+0x96>
    4388:	00 e0       	ldi	r16, 0x00	; 0
    438a:	f1 2c       	mov	r15, r1
    438c:	20 ed       	ldi	r18, 0xD0	; 208
    438e:	21 0f       	add	r18, r17
    4390:	2a 30       	cpi	r18, 0x0A	; 10
    4392:	78 f4       	brcc	.+30     	; 0x43b2 <vfscanf+0xbe>
    4394:	02 60       	ori	r16, 0x02	; 2
    4396:	6f 2d       	mov	r22, r15
    4398:	70 e0       	ldi	r23, 0x00	; 0
    439a:	80 e0       	ldi	r24, 0x00	; 0
    439c:	90 e0       	ldi	r25, 0x00	; 0
    439e:	40 e2       	ldi	r20, 0x20	; 32
    43a0:	09 de       	rcall	.-1006   	; 0x3fb4 <mulacc>
    43a2:	f6 2e       	mov	r15, r22
    43a4:	fe 01       	movw	r30, r28
    43a6:	e3 fc       	sbrc	r14, 3
    43a8:	15 91       	lpm	r17, Z+
    43aa:	e3 fe       	sbrs	r14, 3
    43ac:	11 91       	ld	r17, Z+
    43ae:	ef 01       	movw	r28, r30
    43b0:	ed cf       	rjmp	.-38     	; 0x438c <vfscanf+0x98>
    43b2:	01 ff       	sbrs	r16, 1
    43b4:	03 c0       	rjmp	.+6      	; 0x43bc <vfscanf+0xc8>
    43b6:	f1 10       	cpse	r15, r1
    43b8:	03 c0       	rjmp	.+6      	; 0x43c0 <vfscanf+0xcc>
    43ba:	9e c0       	rjmp	.+316    	; 0x44f8 <vfscanf+0x204>
    43bc:	ff 24       	eor	r15, r15
    43be:	fa 94       	dec	r15
    43c0:	18 36       	cpi	r17, 0x68	; 104
    43c2:	19 f0       	breq	.+6      	; 0x43ca <vfscanf+0xd6>
    43c4:	1c 36       	cpi	r17, 0x6C	; 108
    43c6:	51 f0       	breq	.+20     	; 0x43dc <vfscanf+0xe8>
    43c8:	10 c0       	rjmp	.+32     	; 0x43ea <vfscanf+0xf6>
    43ca:	fe 01       	movw	r30, r28
    43cc:	e3 fc       	sbrc	r14, 3
    43ce:	15 91       	lpm	r17, Z+
    43d0:	e3 fe       	sbrs	r14, 3
    43d2:	11 91       	ld	r17, Z+
    43d4:	ef 01       	movw	r28, r30
    43d6:	18 36       	cpi	r17, 0x68	; 104
    43d8:	41 f4       	brne	.+16     	; 0x43ea <vfscanf+0xf6>
    43da:	08 60       	ori	r16, 0x08	; 8
    43dc:	04 60       	ori	r16, 0x04	; 4
    43de:	fe 01       	movw	r30, r28
    43e0:	e3 fc       	sbrc	r14, 3
    43e2:	15 91       	lpm	r17, Z+
    43e4:	e3 fe       	sbrs	r14, 3
    43e6:	11 91       	ld	r17, Z+
    43e8:	ef 01       	movw	r28, r30
    43ea:	11 23       	and	r17, r17
    43ec:	09 f4       	brne	.+2      	; 0x43f0 <vfscanf+0xfc>
    43ee:	84 c0       	rjmp	.+264    	; 0x44f8 <vfscanf+0x204>
    43f0:	61 2f       	mov	r22, r17
    43f2:	70 e0       	ldi	r23, 0x00	; 0
    43f4:	88 ee       	ldi	r24, 0xE8	; 232
    43f6:	92 e0       	ldi	r25, 0x02	; 2
    43f8:	d7 d1       	rcall	.+942    	; 0x47a8 <strchr_P>
    43fa:	89 2b       	or	r24, r25
    43fc:	09 f4       	brne	.+2      	; 0x4400 <vfscanf+0x10c>
    43fe:	7c c0       	rjmp	.+248    	; 0x44f8 <vfscanf+0x204>
    4400:	00 fd       	sbrc	r16, 0
    4402:	07 c0       	rjmp	.+14     	; 0x4412 <vfscanf+0x11e>
    4404:	f5 01       	movw	r30, r10
    4406:	80 80       	ld	r8, Z
    4408:	91 80       	ldd	r9, Z+1	; 0x01
    440a:	c5 01       	movw	r24, r10
    440c:	02 96       	adiw	r24, 0x02	; 2
    440e:	5c 01       	movw	r10, r24
    4410:	02 c0       	rjmp	.+4      	; 0x4416 <vfscanf+0x122>
    4412:	81 2c       	mov	r8, r1
    4414:	91 2c       	mov	r9, r1
    4416:	1e 36       	cpi	r17, 0x6E	; 110
    4418:	49 f4       	brne	.+18     	; 0x442c <vfscanf+0x138>
    441a:	f6 01       	movw	r30, r12
    441c:	46 81       	ldd	r20, Z+6	; 0x06
    441e:	57 81       	ldd	r21, Z+7	; 0x07
    4420:	60 e0       	ldi	r22, 0x00	; 0
    4422:	70 e0       	ldi	r23, 0x00	; 0
    4424:	20 2f       	mov	r18, r16
    4426:	c4 01       	movw	r24, r8
    4428:	b9 dd       	rcall	.-1166   	; 0x3f9c <putval>
    442a:	7a cf       	rjmp	.-268    	; 0x4320 <vfscanf+0x2c>
    442c:	13 36       	cpi	r17, 0x63	; 99
    442e:	a1 f4       	brne	.+40     	; 0x4458 <vfscanf+0x164>
    4430:	01 fd       	sbrc	r16, 1
    4432:	02 c0       	rjmp	.+4      	; 0x4438 <vfscanf+0x144>
    4434:	ff 24       	eor	r15, r15
    4436:	f3 94       	inc	r15
    4438:	c6 01       	movw	r24, r12
    443a:	de d1       	rcall	.+956    	; 0x47f8 <fgetc>
    443c:	97 fd       	sbrc	r25, 7
    443e:	5a c0       	rjmp	.+180    	; 0x44f4 <vfscanf+0x200>
    4440:	81 14       	cp	r8, r1
    4442:	91 04       	cpc	r9, r1
    4444:	29 f0       	breq	.+10     	; 0x4450 <vfscanf+0x15c>
    4446:	f4 01       	movw	r30, r8
    4448:	80 83       	st	Z, r24
    444a:	c4 01       	movw	r24, r8
    444c:	01 96       	adiw	r24, 0x01	; 1
    444e:	4c 01       	movw	r8, r24
    4450:	fa 94       	dec	r15
    4452:	f1 10       	cpse	r15, r1
    4454:	f1 cf       	rjmp	.-30     	; 0x4438 <vfscanf+0x144>
    4456:	4a c0       	rjmp	.+148    	; 0x44ec <vfscanf+0x1f8>
    4458:	1b 35       	cpi	r17, 0x5B	; 91
    445a:	51 f4       	brne	.+20     	; 0x4470 <vfscanf+0x17c>
    445c:	9e 01       	movw	r18, r28
    445e:	a4 01       	movw	r20, r8
    4460:	6f 2d       	mov	r22, r15
    4462:	c6 01       	movw	r24, r12
    4464:	6e de       	rcall	.-804    	; 0x4142 <conv_brk>
    4466:	ec 01       	movw	r28, r24
    4468:	89 2b       	or	r24, r25
    446a:	09 f0       	breq	.+2      	; 0x446e <vfscanf+0x17a>
    446c:	3f c0       	rjmp	.+126    	; 0x44ec <vfscanf+0x1f8>
    446e:	39 c0       	rjmp	.+114    	; 0x44e2 <vfscanf+0x1ee>
    4470:	c6 01       	movw	r24, r12
    4472:	c7 dd       	rcall	.-1138   	; 0x4002 <skip_spaces>
    4474:	97 fd       	sbrc	r25, 7
    4476:	3e c0       	rjmp	.+124    	; 0x44f4 <vfscanf+0x200>
    4478:	1f 36       	cpi	r17, 0x6F	; 111
    447a:	49 f1       	breq	.+82     	; 0x44ce <vfscanf+0x1da>
    447c:	28 f4       	brcc	.+10     	; 0x4488 <vfscanf+0x194>
    447e:	14 36       	cpi	r17, 0x64	; 100
    4480:	21 f1       	breq	.+72     	; 0x44ca <vfscanf+0x1d6>
    4482:	19 36       	cpi	r17, 0x69	; 105
    4484:	39 f1       	breq	.+78     	; 0x44d4 <vfscanf+0x1e0>
    4486:	25 c0       	rjmp	.+74     	; 0x44d2 <vfscanf+0x1de>
    4488:	13 37       	cpi	r17, 0x73	; 115
    448a:	71 f0       	breq	.+28     	; 0x44a8 <vfscanf+0x1b4>
    448c:	15 37       	cpi	r17, 0x75	; 117
    448e:	e9 f0       	breq	.+58     	; 0x44ca <vfscanf+0x1d6>
    4490:	20 c0       	rjmp	.+64     	; 0x44d2 <vfscanf+0x1de>
    4492:	81 14       	cp	r8, r1
    4494:	91 04       	cpc	r9, r1
    4496:	29 f0       	breq	.+10     	; 0x44a2 <vfscanf+0x1ae>
    4498:	f4 01       	movw	r30, r8
    449a:	60 82       	st	Z, r6
    449c:	c4 01       	movw	r24, r8
    449e:	01 96       	adiw	r24, 0x01	; 1
    44a0:	4c 01       	movw	r8, r24
    44a2:	fa 94       	dec	r15
    44a4:	ff 20       	and	r15, r15
    44a6:	59 f0       	breq	.+22     	; 0x44be <vfscanf+0x1ca>
    44a8:	c6 01       	movw	r24, r12
    44aa:	a6 d1       	rcall	.+844    	; 0x47f8 <fgetc>
    44ac:	3c 01       	movw	r6, r24
    44ae:	97 fd       	sbrc	r25, 7
    44b0:	06 c0       	rjmp	.+12     	; 0x44be <vfscanf+0x1ca>
    44b2:	72 d1       	rcall	.+740    	; 0x4798 <isspace>
    44b4:	89 2b       	or	r24, r25
    44b6:	69 f3       	breq	.-38     	; 0x4492 <vfscanf+0x19e>
    44b8:	b6 01       	movw	r22, r12
    44ba:	c3 01       	movw	r24, r6
    44bc:	17 d2       	rcall	.+1070   	; 0x48ec <ungetc>
    44be:	81 14       	cp	r8, r1
    44c0:	91 04       	cpc	r9, r1
    44c2:	a1 f0       	breq	.+40     	; 0x44ec <vfscanf+0x1f8>
    44c4:	f4 01       	movw	r30, r8
    44c6:	10 82       	st	Z, r1
    44c8:	11 c0       	rjmp	.+34     	; 0x44ec <vfscanf+0x1f8>
    44ca:	00 62       	ori	r16, 0x20	; 32
    44cc:	03 c0       	rjmp	.+6      	; 0x44d4 <vfscanf+0x1e0>
    44ce:	00 61       	ori	r16, 0x10	; 16
    44d0:	01 c0       	rjmp	.+2      	; 0x44d4 <vfscanf+0x1e0>
    44d2:	00 64       	ori	r16, 0x40	; 64
    44d4:	20 2f       	mov	r18, r16
    44d6:	a4 01       	movw	r20, r8
    44d8:	6f 2d       	mov	r22, r15
    44da:	c6 01       	movw	r24, r12
    44dc:	a8 dd       	rcall	.-1200   	; 0x402e <conv_int>
    44de:	81 11       	cpse	r24, r1
    44e0:	05 c0       	rjmp	.+10     	; 0x44ec <vfscanf+0x1f8>
    44e2:	f6 01       	movw	r30, r12
    44e4:	83 81       	ldd	r24, Z+3	; 0x03
    44e6:	80 73       	andi	r24, 0x30	; 48
    44e8:	29 f4       	brne	.+10     	; 0x44f4 <vfscanf+0x200>
    44ea:	06 c0       	rjmp	.+12     	; 0x44f8 <vfscanf+0x204>
    44ec:	00 fd       	sbrc	r16, 0
    44ee:	18 cf       	rjmp	.-464    	; 0x4320 <vfscanf+0x2c>
    44f0:	53 94       	inc	r5
    44f2:	16 cf       	rjmp	.-468    	; 0x4320 <vfscanf+0x2c>
    44f4:	55 20       	and	r5, r5
    44f6:	19 f0       	breq	.+6      	; 0x44fe <vfscanf+0x20a>
    44f8:	85 2d       	mov	r24, r5
    44fa:	90 e0       	ldi	r25, 0x00	; 0
    44fc:	02 c0       	rjmp	.+4      	; 0x4502 <vfscanf+0x20e>
    44fe:	8f ef       	ldi	r24, 0xFF	; 255
    4500:	9f ef       	ldi	r25, 0xFF	; 255
    4502:	df 91       	pop	r29
    4504:	cf 91       	pop	r28
    4506:	1f 91       	pop	r17
    4508:	0f 91       	pop	r16
    450a:	ff 90       	pop	r15
    450c:	ef 90       	pop	r14
    450e:	df 90       	pop	r13
    4510:	cf 90       	pop	r12
    4512:	bf 90       	pop	r11
    4514:	af 90       	pop	r10
    4516:	9f 90       	pop	r9
    4518:	8f 90       	pop	r8
    451a:	7f 90       	pop	r7
    451c:	6f 90       	pop	r6
    451e:	5f 90       	pop	r5
    4520:	08 95       	ret

00004522 <calloc>:
    4522:	0f 93       	push	r16
    4524:	1f 93       	push	r17
    4526:	cf 93       	push	r28
    4528:	df 93       	push	r29
    452a:	86 9f       	mul	r24, r22
    452c:	80 01       	movw	r16, r0
    452e:	87 9f       	mul	r24, r23
    4530:	10 0d       	add	r17, r0
    4532:	96 9f       	mul	r25, r22
    4534:	10 0d       	add	r17, r0
    4536:	11 24       	eor	r1, r1
    4538:	c8 01       	movw	r24, r16
    453a:	0d d0       	rcall	.+26     	; 0x4556 <malloc>
    453c:	ec 01       	movw	r28, r24
    453e:	00 97       	sbiw	r24, 0x00	; 0
    4540:	21 f0       	breq	.+8      	; 0x454a <calloc+0x28>
    4542:	a8 01       	movw	r20, r16
    4544:	60 e0       	ldi	r22, 0x00	; 0
    4546:	70 e0       	ldi	r23, 0x00	; 0
    4548:	45 d1       	rcall	.+650    	; 0x47d4 <memset>
    454a:	ce 01       	movw	r24, r28
    454c:	df 91       	pop	r29
    454e:	cf 91       	pop	r28
    4550:	1f 91       	pop	r17
    4552:	0f 91       	pop	r16
    4554:	08 95       	ret

00004556 <malloc>:
    4556:	0f 93       	push	r16
    4558:	1f 93       	push	r17
    455a:	cf 93       	push	r28
    455c:	df 93       	push	r29
    455e:	82 30       	cpi	r24, 0x02	; 2
    4560:	91 05       	cpc	r25, r1
    4562:	10 f4       	brcc	.+4      	; 0x4568 <malloc+0x12>
    4564:	82 e0       	ldi	r24, 0x02	; 2
    4566:	90 e0       	ldi	r25, 0x00	; 0
    4568:	e0 91 96 21 	lds	r30, 0x2196	; 0x802196 <__flp>
    456c:	f0 91 97 21 	lds	r31, 0x2197	; 0x802197 <__flp+0x1>
    4570:	20 e0       	ldi	r18, 0x00	; 0
    4572:	30 e0       	ldi	r19, 0x00	; 0
    4574:	a0 e0       	ldi	r26, 0x00	; 0
    4576:	b0 e0       	ldi	r27, 0x00	; 0
    4578:	30 97       	sbiw	r30, 0x00	; 0
    457a:	19 f1       	breq	.+70     	; 0x45c2 <malloc+0x6c>
    457c:	40 81       	ld	r20, Z
    457e:	51 81       	ldd	r21, Z+1	; 0x01
    4580:	02 81       	ldd	r16, Z+2	; 0x02
    4582:	13 81       	ldd	r17, Z+3	; 0x03
    4584:	48 17       	cp	r20, r24
    4586:	59 07       	cpc	r21, r25
    4588:	c8 f0       	brcs	.+50     	; 0x45bc <malloc+0x66>
    458a:	84 17       	cp	r24, r20
    458c:	95 07       	cpc	r25, r21
    458e:	69 f4       	brne	.+26     	; 0x45aa <malloc+0x54>
    4590:	10 97       	sbiw	r26, 0x00	; 0
    4592:	31 f0       	breq	.+12     	; 0x45a0 <malloc+0x4a>
    4594:	12 96       	adiw	r26, 0x02	; 2
    4596:	0c 93       	st	X, r16
    4598:	12 97       	sbiw	r26, 0x02	; 2
    459a:	13 96       	adiw	r26, 0x03	; 3
    459c:	1c 93       	st	X, r17
    459e:	27 c0       	rjmp	.+78     	; 0x45ee <malloc+0x98>
    45a0:	00 93 96 21 	sts	0x2196, r16	; 0x802196 <__flp>
    45a4:	10 93 97 21 	sts	0x2197, r17	; 0x802197 <__flp+0x1>
    45a8:	22 c0       	rjmp	.+68     	; 0x45ee <malloc+0x98>
    45aa:	21 15       	cp	r18, r1
    45ac:	31 05       	cpc	r19, r1
    45ae:	19 f0       	breq	.+6      	; 0x45b6 <malloc+0x60>
    45b0:	42 17       	cp	r20, r18
    45b2:	53 07       	cpc	r21, r19
    45b4:	18 f4       	brcc	.+6      	; 0x45bc <malloc+0x66>
    45b6:	9a 01       	movw	r18, r20
    45b8:	bd 01       	movw	r22, r26
    45ba:	ef 01       	movw	r28, r30
    45bc:	df 01       	movw	r26, r30
    45be:	f8 01       	movw	r30, r16
    45c0:	db cf       	rjmp	.-74     	; 0x4578 <malloc+0x22>
    45c2:	21 15       	cp	r18, r1
    45c4:	31 05       	cpc	r19, r1
    45c6:	f9 f0       	breq	.+62     	; 0x4606 <malloc+0xb0>
    45c8:	28 1b       	sub	r18, r24
    45ca:	39 0b       	sbc	r19, r25
    45cc:	24 30       	cpi	r18, 0x04	; 4
    45ce:	31 05       	cpc	r19, r1
    45d0:	80 f4       	brcc	.+32     	; 0x45f2 <malloc+0x9c>
    45d2:	8a 81       	ldd	r24, Y+2	; 0x02
    45d4:	9b 81       	ldd	r25, Y+3	; 0x03
    45d6:	61 15       	cp	r22, r1
    45d8:	71 05       	cpc	r23, r1
    45da:	21 f0       	breq	.+8      	; 0x45e4 <malloc+0x8e>
    45dc:	fb 01       	movw	r30, r22
    45de:	82 83       	std	Z+2, r24	; 0x02
    45e0:	93 83       	std	Z+3, r25	; 0x03
    45e2:	04 c0       	rjmp	.+8      	; 0x45ec <malloc+0x96>
    45e4:	80 93 96 21 	sts	0x2196, r24	; 0x802196 <__flp>
    45e8:	90 93 97 21 	sts	0x2197, r25	; 0x802197 <__flp+0x1>
    45ec:	fe 01       	movw	r30, r28
    45ee:	32 96       	adiw	r30, 0x02	; 2
    45f0:	44 c0       	rjmp	.+136    	; 0x467a <malloc+0x124>
    45f2:	fe 01       	movw	r30, r28
    45f4:	e2 0f       	add	r30, r18
    45f6:	f3 1f       	adc	r31, r19
    45f8:	81 93       	st	Z+, r24
    45fa:	91 93       	st	Z+, r25
    45fc:	22 50       	subi	r18, 0x02	; 2
    45fe:	31 09       	sbc	r19, r1
    4600:	28 83       	st	Y, r18
    4602:	39 83       	std	Y+1, r19	; 0x01
    4604:	3a c0       	rjmp	.+116    	; 0x467a <malloc+0x124>
    4606:	20 91 94 21 	lds	r18, 0x2194	; 0x802194 <__brkval>
    460a:	30 91 95 21 	lds	r19, 0x2195	; 0x802195 <__brkval+0x1>
    460e:	23 2b       	or	r18, r19
    4610:	41 f4       	brne	.+16     	; 0x4622 <malloc+0xcc>
    4612:	20 91 02 20 	lds	r18, 0x2002	; 0x802002 <__malloc_heap_start>
    4616:	30 91 03 20 	lds	r19, 0x2003	; 0x802003 <__malloc_heap_start+0x1>
    461a:	20 93 94 21 	sts	0x2194, r18	; 0x802194 <__brkval>
    461e:	30 93 95 21 	sts	0x2195, r19	; 0x802195 <__brkval+0x1>
    4622:	20 91 00 20 	lds	r18, 0x2000	; 0x802000 <__data_start>
    4626:	30 91 01 20 	lds	r19, 0x2001	; 0x802001 <__data_start+0x1>
    462a:	21 15       	cp	r18, r1
    462c:	31 05       	cpc	r19, r1
    462e:	41 f4       	brne	.+16     	; 0x4640 <malloc+0xea>
    4630:	2d b7       	in	r18, 0x3d	; 61
    4632:	3e b7       	in	r19, 0x3e	; 62
    4634:	40 91 04 20 	lds	r20, 0x2004	; 0x802004 <__malloc_margin>
    4638:	50 91 05 20 	lds	r21, 0x2005	; 0x802005 <__malloc_margin+0x1>
    463c:	24 1b       	sub	r18, r20
    463e:	35 0b       	sbc	r19, r21
    4640:	e0 91 94 21 	lds	r30, 0x2194	; 0x802194 <__brkval>
    4644:	f0 91 95 21 	lds	r31, 0x2195	; 0x802195 <__brkval+0x1>
    4648:	e2 17       	cp	r30, r18
    464a:	f3 07       	cpc	r31, r19
    464c:	a0 f4       	brcc	.+40     	; 0x4676 <malloc+0x120>
    464e:	2e 1b       	sub	r18, r30
    4650:	3f 0b       	sbc	r19, r31
    4652:	28 17       	cp	r18, r24
    4654:	39 07       	cpc	r19, r25
    4656:	78 f0       	brcs	.+30     	; 0x4676 <malloc+0x120>
    4658:	ac 01       	movw	r20, r24
    465a:	4e 5f       	subi	r20, 0xFE	; 254
    465c:	5f 4f       	sbci	r21, 0xFF	; 255
    465e:	24 17       	cp	r18, r20
    4660:	35 07       	cpc	r19, r21
    4662:	48 f0       	brcs	.+18     	; 0x4676 <malloc+0x120>
    4664:	4e 0f       	add	r20, r30
    4666:	5f 1f       	adc	r21, r31
    4668:	40 93 94 21 	sts	0x2194, r20	; 0x802194 <__brkval>
    466c:	50 93 95 21 	sts	0x2195, r21	; 0x802195 <__brkval+0x1>
    4670:	81 93       	st	Z+, r24
    4672:	91 93       	st	Z+, r25
    4674:	02 c0       	rjmp	.+4      	; 0x467a <malloc+0x124>
    4676:	e0 e0       	ldi	r30, 0x00	; 0
    4678:	f0 e0       	ldi	r31, 0x00	; 0
    467a:	cf 01       	movw	r24, r30
    467c:	df 91       	pop	r29
    467e:	cf 91       	pop	r28
    4680:	1f 91       	pop	r17
    4682:	0f 91       	pop	r16
    4684:	08 95       	ret

00004686 <free>:
    4686:	cf 93       	push	r28
    4688:	df 93       	push	r29
    468a:	00 97       	sbiw	r24, 0x00	; 0
    468c:	09 f4       	brne	.+2      	; 0x4690 <free+0xa>
    468e:	81 c0       	rjmp	.+258    	; 0x4792 <free+0x10c>
    4690:	fc 01       	movw	r30, r24
    4692:	32 97       	sbiw	r30, 0x02	; 2
    4694:	12 82       	std	Z+2, r1	; 0x02
    4696:	13 82       	std	Z+3, r1	; 0x03
    4698:	a0 91 96 21 	lds	r26, 0x2196	; 0x802196 <__flp>
    469c:	b0 91 97 21 	lds	r27, 0x2197	; 0x802197 <__flp+0x1>
    46a0:	10 97       	sbiw	r26, 0x00	; 0
    46a2:	81 f4       	brne	.+32     	; 0x46c4 <free+0x3e>
    46a4:	20 81       	ld	r18, Z
    46a6:	31 81       	ldd	r19, Z+1	; 0x01
    46a8:	82 0f       	add	r24, r18
    46aa:	93 1f       	adc	r25, r19
    46ac:	20 91 94 21 	lds	r18, 0x2194	; 0x802194 <__brkval>
    46b0:	30 91 95 21 	lds	r19, 0x2195	; 0x802195 <__brkval+0x1>
    46b4:	28 17       	cp	r18, r24
    46b6:	39 07       	cpc	r19, r25
    46b8:	51 f5       	brne	.+84     	; 0x470e <free+0x88>
    46ba:	e0 93 94 21 	sts	0x2194, r30	; 0x802194 <__brkval>
    46be:	f0 93 95 21 	sts	0x2195, r31	; 0x802195 <__brkval+0x1>
    46c2:	67 c0       	rjmp	.+206    	; 0x4792 <free+0x10c>
    46c4:	ed 01       	movw	r28, r26
    46c6:	20 e0       	ldi	r18, 0x00	; 0
    46c8:	30 e0       	ldi	r19, 0x00	; 0
    46ca:	ce 17       	cp	r28, r30
    46cc:	df 07       	cpc	r29, r31
    46ce:	40 f4       	brcc	.+16     	; 0x46e0 <free+0x5a>
    46d0:	4a 81       	ldd	r20, Y+2	; 0x02
    46d2:	5b 81       	ldd	r21, Y+3	; 0x03
    46d4:	9e 01       	movw	r18, r28
    46d6:	41 15       	cp	r20, r1
    46d8:	51 05       	cpc	r21, r1
    46da:	f1 f0       	breq	.+60     	; 0x4718 <free+0x92>
    46dc:	ea 01       	movw	r28, r20
    46de:	f5 cf       	rjmp	.-22     	; 0x46ca <free+0x44>
    46e0:	c2 83       	std	Z+2, r28	; 0x02
    46e2:	d3 83       	std	Z+3, r29	; 0x03
    46e4:	40 81       	ld	r20, Z
    46e6:	51 81       	ldd	r21, Z+1	; 0x01
    46e8:	84 0f       	add	r24, r20
    46ea:	95 1f       	adc	r25, r21
    46ec:	c8 17       	cp	r28, r24
    46ee:	d9 07       	cpc	r29, r25
    46f0:	59 f4       	brne	.+22     	; 0x4708 <free+0x82>
    46f2:	88 81       	ld	r24, Y
    46f4:	99 81       	ldd	r25, Y+1	; 0x01
    46f6:	84 0f       	add	r24, r20
    46f8:	95 1f       	adc	r25, r21
    46fa:	02 96       	adiw	r24, 0x02	; 2
    46fc:	80 83       	st	Z, r24
    46fe:	91 83       	std	Z+1, r25	; 0x01
    4700:	8a 81       	ldd	r24, Y+2	; 0x02
    4702:	9b 81       	ldd	r25, Y+3	; 0x03
    4704:	82 83       	std	Z+2, r24	; 0x02
    4706:	93 83       	std	Z+3, r25	; 0x03
    4708:	21 15       	cp	r18, r1
    470a:	31 05       	cpc	r19, r1
    470c:	29 f4       	brne	.+10     	; 0x4718 <free+0x92>
    470e:	e0 93 96 21 	sts	0x2196, r30	; 0x802196 <__flp>
    4712:	f0 93 97 21 	sts	0x2197, r31	; 0x802197 <__flp+0x1>
    4716:	3d c0       	rjmp	.+122    	; 0x4792 <free+0x10c>
    4718:	e9 01       	movw	r28, r18
    471a:	ea 83       	std	Y+2, r30	; 0x02
    471c:	fb 83       	std	Y+3, r31	; 0x03
    471e:	49 91       	ld	r20, Y+
    4720:	59 91       	ld	r21, Y+
    4722:	c4 0f       	add	r28, r20
    4724:	d5 1f       	adc	r29, r21
    4726:	ec 17       	cp	r30, r28
    4728:	fd 07       	cpc	r31, r29
    472a:	61 f4       	brne	.+24     	; 0x4744 <free+0xbe>
    472c:	80 81       	ld	r24, Z
    472e:	91 81       	ldd	r25, Z+1	; 0x01
    4730:	84 0f       	add	r24, r20
    4732:	95 1f       	adc	r25, r21
    4734:	02 96       	adiw	r24, 0x02	; 2
    4736:	e9 01       	movw	r28, r18
    4738:	88 83       	st	Y, r24
    473a:	99 83       	std	Y+1, r25	; 0x01
    473c:	82 81       	ldd	r24, Z+2	; 0x02
    473e:	93 81       	ldd	r25, Z+3	; 0x03
    4740:	8a 83       	std	Y+2, r24	; 0x02
    4742:	9b 83       	std	Y+3, r25	; 0x03
    4744:	e0 e0       	ldi	r30, 0x00	; 0
    4746:	f0 e0       	ldi	r31, 0x00	; 0
    4748:	12 96       	adiw	r26, 0x02	; 2
    474a:	8d 91       	ld	r24, X+
    474c:	9c 91       	ld	r25, X
    474e:	13 97       	sbiw	r26, 0x03	; 3
    4750:	00 97       	sbiw	r24, 0x00	; 0
    4752:	19 f0       	breq	.+6      	; 0x475a <free+0xd4>
    4754:	fd 01       	movw	r30, r26
    4756:	dc 01       	movw	r26, r24
    4758:	f7 cf       	rjmp	.-18     	; 0x4748 <free+0xc2>
    475a:	8d 91       	ld	r24, X+
    475c:	9c 91       	ld	r25, X
    475e:	11 97       	sbiw	r26, 0x01	; 1
    4760:	9d 01       	movw	r18, r26
    4762:	2e 5f       	subi	r18, 0xFE	; 254
    4764:	3f 4f       	sbci	r19, 0xFF	; 255
    4766:	82 0f       	add	r24, r18
    4768:	93 1f       	adc	r25, r19
    476a:	20 91 94 21 	lds	r18, 0x2194	; 0x802194 <__brkval>
    476e:	30 91 95 21 	lds	r19, 0x2195	; 0x802195 <__brkval+0x1>
    4772:	28 17       	cp	r18, r24
    4774:	39 07       	cpc	r19, r25
    4776:	69 f4       	brne	.+26     	; 0x4792 <free+0x10c>
    4778:	30 97       	sbiw	r30, 0x00	; 0
    477a:	29 f4       	brne	.+10     	; 0x4786 <free+0x100>
    477c:	10 92 96 21 	sts	0x2196, r1	; 0x802196 <__flp>
    4780:	10 92 97 21 	sts	0x2197, r1	; 0x802197 <__flp+0x1>
    4784:	02 c0       	rjmp	.+4      	; 0x478a <free+0x104>
    4786:	12 82       	std	Z+2, r1	; 0x02
    4788:	13 82       	std	Z+3, r1	; 0x03
    478a:	a0 93 94 21 	sts	0x2194, r26	; 0x802194 <__brkval>
    478e:	b0 93 95 21 	sts	0x2195, r27	; 0x802195 <__brkval+0x1>
    4792:	df 91       	pop	r29
    4794:	cf 91       	pop	r28
    4796:	08 95       	ret

00004798 <isspace>:
    4798:	91 11       	cpse	r25, r1
    479a:	1f c1       	rjmp	.+574    	; 0x49da <__ctype_isfalse>
    479c:	80 32       	cpi	r24, 0x20	; 32
    479e:	19 f0       	breq	.+6      	; 0x47a6 <isspace+0xe>
    47a0:	89 50       	subi	r24, 0x09	; 9
    47a2:	85 50       	subi	r24, 0x05	; 5
    47a4:	d0 f7       	brcc	.-12     	; 0x479a <isspace+0x2>
    47a6:	08 95       	ret

000047a8 <strchr_P>:
    47a8:	fc 01       	movw	r30, r24
    47aa:	05 90       	lpm	r0, Z+
    47ac:	06 16       	cp	r0, r22
    47ae:	21 f0       	breq	.+8      	; 0x47b8 <strchr_P+0x10>
    47b0:	00 20       	and	r0, r0
    47b2:	d9 f7       	brne	.-10     	; 0x47aa <strchr_P+0x2>
    47b4:	c0 01       	movw	r24, r0
    47b6:	08 95       	ret
    47b8:	31 97       	sbiw	r30, 0x01	; 1
    47ba:	cf 01       	movw	r24, r30
    47bc:	08 95       	ret

000047be <strnlen_P>:
    47be:	fc 01       	movw	r30, r24
    47c0:	05 90       	lpm	r0, Z+
    47c2:	61 50       	subi	r22, 0x01	; 1
    47c4:	70 40       	sbci	r23, 0x00	; 0
    47c6:	01 10       	cpse	r0, r1
    47c8:	d8 f7       	brcc	.-10     	; 0x47c0 <strnlen_P+0x2>
    47ca:	80 95       	com	r24
    47cc:	90 95       	com	r25
    47ce:	8e 0f       	add	r24, r30
    47d0:	9f 1f       	adc	r25, r31
    47d2:	08 95       	ret

000047d4 <memset>:
    47d4:	dc 01       	movw	r26, r24
    47d6:	01 c0       	rjmp	.+2      	; 0x47da <memset+0x6>
    47d8:	6d 93       	st	X+, r22
    47da:	41 50       	subi	r20, 0x01	; 1
    47dc:	50 40       	sbci	r21, 0x00	; 0
    47de:	e0 f7       	brcc	.-8      	; 0x47d8 <memset+0x4>
    47e0:	08 95       	ret

000047e2 <strnlen>:
    47e2:	fc 01       	movw	r30, r24
    47e4:	61 50       	subi	r22, 0x01	; 1
    47e6:	70 40       	sbci	r23, 0x00	; 0
    47e8:	01 90       	ld	r0, Z+
    47ea:	01 10       	cpse	r0, r1
    47ec:	d8 f7       	brcc	.-10     	; 0x47e4 <strnlen+0x2>
    47ee:	80 95       	com	r24
    47f0:	90 95       	com	r25
    47f2:	8e 0f       	add	r24, r30
    47f4:	9f 1f       	adc	r25, r31
    47f6:	08 95       	ret

000047f8 <fgetc>:
    47f8:	cf 93       	push	r28
    47fa:	df 93       	push	r29
    47fc:	ec 01       	movw	r28, r24
    47fe:	2b 81       	ldd	r18, Y+3	; 0x03
    4800:	20 ff       	sbrs	r18, 0
    4802:	33 c0       	rjmp	.+102    	; 0x486a <fgetc+0x72>
    4804:	26 ff       	sbrs	r18, 6
    4806:	0a c0       	rjmp	.+20     	; 0x481c <fgetc+0x24>
    4808:	2f 7b       	andi	r18, 0xBF	; 191
    480a:	2b 83       	std	Y+3, r18	; 0x03
    480c:	8e 81       	ldd	r24, Y+6	; 0x06
    480e:	9f 81       	ldd	r25, Y+7	; 0x07
    4810:	01 96       	adiw	r24, 0x01	; 1
    4812:	8e 83       	std	Y+6, r24	; 0x06
    4814:	9f 83       	std	Y+7, r25	; 0x07
    4816:	8a 81       	ldd	r24, Y+2	; 0x02
    4818:	90 e0       	ldi	r25, 0x00	; 0
    481a:	29 c0       	rjmp	.+82     	; 0x486e <fgetc+0x76>
    481c:	22 ff       	sbrs	r18, 2
    481e:	0f c0       	rjmp	.+30     	; 0x483e <fgetc+0x46>
    4820:	e8 81       	ld	r30, Y
    4822:	f9 81       	ldd	r31, Y+1	; 0x01
    4824:	80 81       	ld	r24, Z
    4826:	08 2e       	mov	r0, r24
    4828:	00 0c       	add	r0, r0
    482a:	99 0b       	sbc	r25, r25
    482c:	00 97       	sbiw	r24, 0x00	; 0
    482e:	19 f4       	brne	.+6      	; 0x4836 <fgetc+0x3e>
    4830:	20 62       	ori	r18, 0x20	; 32
    4832:	2b 83       	std	Y+3, r18	; 0x03
    4834:	1a c0       	rjmp	.+52     	; 0x486a <fgetc+0x72>
    4836:	31 96       	adiw	r30, 0x01	; 1
    4838:	e8 83       	st	Y, r30
    483a:	f9 83       	std	Y+1, r31	; 0x01
    483c:	0e c0       	rjmp	.+28     	; 0x485a <fgetc+0x62>
    483e:	ea 85       	ldd	r30, Y+10	; 0x0a
    4840:	fb 85       	ldd	r31, Y+11	; 0x0b
    4842:	19 95       	eicall
    4844:	97 ff       	sbrs	r25, 7
    4846:	09 c0       	rjmp	.+18     	; 0x485a <fgetc+0x62>
    4848:	2b 81       	ldd	r18, Y+3	; 0x03
    484a:	01 96       	adiw	r24, 0x01	; 1
    484c:	11 f0       	breq	.+4      	; 0x4852 <fgetc+0x5a>
    484e:	80 e2       	ldi	r24, 0x20	; 32
    4850:	01 c0       	rjmp	.+2      	; 0x4854 <fgetc+0x5c>
    4852:	80 e1       	ldi	r24, 0x10	; 16
    4854:	82 2b       	or	r24, r18
    4856:	8b 83       	std	Y+3, r24	; 0x03
    4858:	08 c0       	rjmp	.+16     	; 0x486a <fgetc+0x72>
    485a:	2e 81       	ldd	r18, Y+6	; 0x06
    485c:	3f 81       	ldd	r19, Y+7	; 0x07
    485e:	2f 5f       	subi	r18, 0xFF	; 255
    4860:	3f 4f       	sbci	r19, 0xFF	; 255
    4862:	2e 83       	std	Y+6, r18	; 0x06
    4864:	3f 83       	std	Y+7, r19	; 0x07
    4866:	99 27       	eor	r25, r25
    4868:	02 c0       	rjmp	.+4      	; 0x486e <fgetc+0x76>
    486a:	8f ef       	ldi	r24, 0xFF	; 255
    486c:	9f ef       	ldi	r25, 0xFF	; 255
    486e:	df 91       	pop	r29
    4870:	cf 91       	pop	r28
    4872:	08 95       	ret

00004874 <fputc>:
    4874:	0f 93       	push	r16
    4876:	1f 93       	push	r17
    4878:	cf 93       	push	r28
    487a:	df 93       	push	r29
    487c:	fb 01       	movw	r30, r22
    487e:	23 81       	ldd	r18, Z+3	; 0x03
    4880:	21 fd       	sbrc	r18, 1
    4882:	03 c0       	rjmp	.+6      	; 0x488a <fputc+0x16>
    4884:	8f ef       	ldi	r24, 0xFF	; 255
    4886:	9f ef       	ldi	r25, 0xFF	; 255
    4888:	2c c0       	rjmp	.+88     	; 0x48e2 <fputc+0x6e>
    488a:	22 ff       	sbrs	r18, 2
    488c:	16 c0       	rjmp	.+44     	; 0x48ba <fputc+0x46>
    488e:	46 81       	ldd	r20, Z+6	; 0x06
    4890:	57 81       	ldd	r21, Z+7	; 0x07
    4892:	24 81       	ldd	r18, Z+4	; 0x04
    4894:	35 81       	ldd	r19, Z+5	; 0x05
    4896:	42 17       	cp	r20, r18
    4898:	53 07       	cpc	r21, r19
    489a:	44 f4       	brge	.+16     	; 0x48ac <fputc+0x38>
    489c:	a0 81       	ld	r26, Z
    489e:	b1 81       	ldd	r27, Z+1	; 0x01
    48a0:	9d 01       	movw	r18, r26
    48a2:	2f 5f       	subi	r18, 0xFF	; 255
    48a4:	3f 4f       	sbci	r19, 0xFF	; 255
    48a6:	20 83       	st	Z, r18
    48a8:	31 83       	std	Z+1, r19	; 0x01
    48aa:	8c 93       	st	X, r24
    48ac:	26 81       	ldd	r18, Z+6	; 0x06
    48ae:	37 81       	ldd	r19, Z+7	; 0x07
    48b0:	2f 5f       	subi	r18, 0xFF	; 255
    48b2:	3f 4f       	sbci	r19, 0xFF	; 255
    48b4:	26 83       	std	Z+6, r18	; 0x06
    48b6:	37 83       	std	Z+7, r19	; 0x07
    48b8:	14 c0       	rjmp	.+40     	; 0x48e2 <fputc+0x6e>
    48ba:	8b 01       	movw	r16, r22
    48bc:	ec 01       	movw	r28, r24
    48be:	fb 01       	movw	r30, r22
    48c0:	00 84       	ldd	r0, Z+8	; 0x08
    48c2:	f1 85       	ldd	r31, Z+9	; 0x09
    48c4:	e0 2d       	mov	r30, r0
    48c6:	19 95       	eicall
    48c8:	89 2b       	or	r24, r25
    48ca:	e1 f6       	brne	.-72     	; 0x4884 <fputc+0x10>
    48cc:	d8 01       	movw	r26, r16
    48ce:	16 96       	adiw	r26, 0x06	; 6
    48d0:	8d 91       	ld	r24, X+
    48d2:	9c 91       	ld	r25, X
    48d4:	17 97       	sbiw	r26, 0x07	; 7
    48d6:	01 96       	adiw	r24, 0x01	; 1
    48d8:	16 96       	adiw	r26, 0x06	; 6
    48da:	8d 93       	st	X+, r24
    48dc:	9c 93       	st	X, r25
    48de:	17 97       	sbiw	r26, 0x07	; 7
    48e0:	ce 01       	movw	r24, r28
    48e2:	df 91       	pop	r29
    48e4:	cf 91       	pop	r28
    48e6:	1f 91       	pop	r17
    48e8:	0f 91       	pop	r16
    48ea:	08 95       	ret

000048ec <ungetc>:
    48ec:	fb 01       	movw	r30, r22
    48ee:	23 81       	ldd	r18, Z+3	; 0x03
    48f0:	20 ff       	sbrs	r18, 0
    48f2:	12 c0       	rjmp	.+36     	; 0x4918 <ungetc+0x2c>
    48f4:	26 fd       	sbrc	r18, 6
    48f6:	10 c0       	rjmp	.+32     	; 0x4918 <ungetc+0x2c>
    48f8:	8f 3f       	cpi	r24, 0xFF	; 255
    48fa:	3f ef       	ldi	r19, 0xFF	; 255
    48fc:	93 07       	cpc	r25, r19
    48fe:	61 f0       	breq	.+24     	; 0x4918 <ungetc+0x2c>
    4900:	82 83       	std	Z+2, r24	; 0x02
    4902:	2f 7d       	andi	r18, 0xDF	; 223
    4904:	20 64       	ori	r18, 0x40	; 64
    4906:	23 83       	std	Z+3, r18	; 0x03
    4908:	26 81       	ldd	r18, Z+6	; 0x06
    490a:	37 81       	ldd	r19, Z+7	; 0x07
    490c:	21 50       	subi	r18, 0x01	; 1
    490e:	31 09       	sbc	r19, r1
    4910:	26 83       	std	Z+6, r18	; 0x06
    4912:	37 83       	std	Z+7, r19	; 0x07
    4914:	99 27       	eor	r25, r25
    4916:	08 95       	ret
    4918:	8f ef       	ldi	r24, 0xFF	; 255
    491a:	9f ef       	ldi	r25, 0xFF	; 255
    491c:	08 95       	ret

0000491e <__ultoa_invert>:
    491e:	fa 01       	movw	r30, r20
    4920:	aa 27       	eor	r26, r26
    4922:	28 30       	cpi	r18, 0x08	; 8
    4924:	51 f1       	breq	.+84     	; 0x497a <__ultoa_invert+0x5c>
    4926:	20 31       	cpi	r18, 0x10	; 16
    4928:	81 f1       	breq	.+96     	; 0x498a <__ultoa_invert+0x6c>
    492a:	e8 94       	clt
    492c:	6f 93       	push	r22
    492e:	6e 7f       	andi	r22, 0xFE	; 254
    4930:	6e 5f       	subi	r22, 0xFE	; 254
    4932:	7f 4f       	sbci	r23, 0xFF	; 255
    4934:	8f 4f       	sbci	r24, 0xFF	; 255
    4936:	9f 4f       	sbci	r25, 0xFF	; 255
    4938:	af 4f       	sbci	r26, 0xFF	; 255
    493a:	b1 e0       	ldi	r27, 0x01	; 1
    493c:	3e d0       	rcall	.+124    	; 0x49ba <__ultoa_invert+0x9c>
    493e:	b4 e0       	ldi	r27, 0x04	; 4
    4940:	3c d0       	rcall	.+120    	; 0x49ba <__ultoa_invert+0x9c>
    4942:	67 0f       	add	r22, r23
    4944:	78 1f       	adc	r23, r24
    4946:	89 1f       	adc	r24, r25
    4948:	9a 1f       	adc	r25, r26
    494a:	a1 1d       	adc	r26, r1
    494c:	68 0f       	add	r22, r24
    494e:	79 1f       	adc	r23, r25
    4950:	8a 1f       	adc	r24, r26
    4952:	91 1d       	adc	r25, r1
    4954:	a1 1d       	adc	r26, r1
    4956:	6a 0f       	add	r22, r26
    4958:	71 1d       	adc	r23, r1
    495a:	81 1d       	adc	r24, r1
    495c:	91 1d       	adc	r25, r1
    495e:	a1 1d       	adc	r26, r1
    4960:	20 d0       	rcall	.+64     	; 0x49a2 <__ultoa_invert+0x84>
    4962:	09 f4       	brne	.+2      	; 0x4966 <__ultoa_invert+0x48>
    4964:	68 94       	set
    4966:	3f 91       	pop	r19
    4968:	2a e0       	ldi	r18, 0x0A	; 10
    496a:	26 9f       	mul	r18, r22
    496c:	11 24       	eor	r1, r1
    496e:	30 19       	sub	r19, r0
    4970:	30 5d       	subi	r19, 0xD0	; 208
    4972:	31 93       	st	Z+, r19
    4974:	de f6       	brtc	.-74     	; 0x492c <__ultoa_invert+0xe>
    4976:	cf 01       	movw	r24, r30
    4978:	08 95       	ret
    497a:	46 2f       	mov	r20, r22
    497c:	47 70       	andi	r20, 0x07	; 7
    497e:	40 5d       	subi	r20, 0xD0	; 208
    4980:	41 93       	st	Z+, r20
    4982:	b3 e0       	ldi	r27, 0x03	; 3
    4984:	0f d0       	rcall	.+30     	; 0x49a4 <__ultoa_invert+0x86>
    4986:	c9 f7       	brne	.-14     	; 0x497a <__ultoa_invert+0x5c>
    4988:	f6 cf       	rjmp	.-20     	; 0x4976 <__ultoa_invert+0x58>
    498a:	46 2f       	mov	r20, r22
    498c:	4f 70       	andi	r20, 0x0F	; 15
    498e:	40 5d       	subi	r20, 0xD0	; 208
    4990:	4a 33       	cpi	r20, 0x3A	; 58
    4992:	18 f0       	brcs	.+6      	; 0x499a <__ultoa_invert+0x7c>
    4994:	49 5d       	subi	r20, 0xD9	; 217
    4996:	31 fd       	sbrc	r19, 1
    4998:	40 52       	subi	r20, 0x20	; 32
    499a:	41 93       	st	Z+, r20
    499c:	02 d0       	rcall	.+4      	; 0x49a2 <__ultoa_invert+0x84>
    499e:	a9 f7       	brne	.-22     	; 0x498a <__ultoa_invert+0x6c>
    49a0:	ea cf       	rjmp	.-44     	; 0x4976 <__ultoa_invert+0x58>
    49a2:	b4 e0       	ldi	r27, 0x04	; 4
    49a4:	a6 95       	lsr	r26
    49a6:	97 95       	ror	r25
    49a8:	87 95       	ror	r24
    49aa:	77 95       	ror	r23
    49ac:	67 95       	ror	r22
    49ae:	ba 95       	dec	r27
    49b0:	c9 f7       	brne	.-14     	; 0x49a4 <__ultoa_invert+0x86>
    49b2:	00 97       	sbiw	r24, 0x00	; 0
    49b4:	61 05       	cpc	r22, r1
    49b6:	71 05       	cpc	r23, r1
    49b8:	08 95       	ret
    49ba:	9b 01       	movw	r18, r22
    49bc:	ac 01       	movw	r20, r24
    49be:	0a 2e       	mov	r0, r26
    49c0:	06 94       	lsr	r0
    49c2:	57 95       	ror	r21
    49c4:	47 95       	ror	r20
    49c6:	37 95       	ror	r19
    49c8:	27 95       	ror	r18
    49ca:	ba 95       	dec	r27
    49cc:	c9 f7       	brne	.-14     	; 0x49c0 <__ultoa_invert+0xa2>
    49ce:	62 0f       	add	r22, r18
    49d0:	73 1f       	adc	r23, r19
    49d2:	84 1f       	adc	r24, r20
    49d4:	95 1f       	adc	r25, r21
    49d6:	a0 1d       	adc	r26, r0
    49d8:	08 95       	ret

000049da <__ctype_isfalse>:
    49da:	99 27       	eor	r25, r25
    49dc:	88 27       	eor	r24, r24

000049de <__ctype_istrue>:
    49de:	08 95       	ret

000049e0 <_exit>:
    49e0:	f8 94       	cli

000049e2 <__stop_program>:
    49e2:	ff cf       	rjmp	.-2      	; 0x49e2 <__stop_program>
